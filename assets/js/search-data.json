{
  
    
        "post0": {
            "title": "7) FUNCIONES DESARROLLADAS PARA EL PROYECTO",
            "content": "FUNCIONES GENERALES . import pandas as pd import numpy as np import matplotlib.pyplot as plt . import re . def rename_columns(DF,List): &#39;&#39;&#39; Cambia nombre de columnas de un Dataframe Arguments: DF: DataFrame List: Lista con nombres de columnas &#39;&#39;&#39; d=dict(zip(list(DF.columns),List)) DF.rename(columns=d, inplace=True) return . def check_NaNs(D): &#39;&#39;&#39; Verifica los missing values en un Dataframe Arguments: D: Dataframe &#39;&#39;&#39; l=len(D) t=0 for c in D.columns: n=D[c].isna().sum() t=t+n if(n&gt;0): print(c,&#39; Nulls: {} / {} - {}%&#39;.format(n,l,np.round(100*n/l,2))) if(t&gt;0): print(&#39; ntotal missing values: {}&#39;.format(t)) else: print(&#39;No hay missing values en el dataset :)&#39;) return . def Print_features(DF): &#39;&#39;&#39; Imprime por pantalla los Features del dataset FMP, hasta el nootebook 4 Arguments: DF: Dataframe &#39;&#39;&#39; print(&#39;Today Features n&#39;) for c in DF.columns: if ( not(bool(re.search(r&#39; d&#39;, c)))): print(c) print(&#39; n nHistoric Features n&#39;) for c in DF.columns: if ( (&#39;1&#39; in c) and (not(&#39;0&#39; in c)) and (&#39;home&#39; in c) and (not(&#39;away&#39; in c)) ): print(&#39;home/away&#39;+c[4:-1]+&#39;i&#39;) return . def Print_features_data_set_modelos(DF): &#39;&#39;&#39; Imprime por pantalla los Features del dataset FMP, para el nootebook 5 Arguments: DF: Dataframe &#39;&#39;&#39; print(&#39;Today Features n&#39;) for c in DF.columns: if ( not(bool(re.search(r&#39; d&#39;, c)))): print(c) print(&#39; n nHistoric Features n&#39;) for c in DF.columns: if ( (&#39;1&#39; in c) and (not(&#39;0&#39; in c)) and (&#39;Equipo_A&#39; in c) and (not(&#39;Equipo_B&#39; in c)) ): print(&#39;Equipo_(A/B)&#39;+c[8:-1]+&#39;i&#39;) return . VISULAIZACI&#211;N Y EXPLORACI&#211;N DEL DATASET . Distribuciones de probabilidad e histogramas . from scipy.stats import skellam, norm . def Poisson_distribution(x,l): &#39;&#39;&#39; Forma analítica de la distribución de Poisson Arguments: l: Lambda Returns: array transformado &#39;&#39;&#39; fact=np.vectorize(np.math.factorial, otypes=&#39;O&#39;) return (l**x)*np.exp(-l)/fact(x) . def Log_normal(x,m,s): &#39;&#39;&#39; Forma analítica de la distribución de Log-normal Arguments: m: media s: desviación estandar Returns: array transformado &#39;&#39;&#39; return (1.0/(x*s*np.math.sqrt(2*np.pi)))*np.exp(-((np.log(x)-m)**2)/(2*(s**2))) . def Plot_distributions(DS,columns,rows,Features,Type,n_bin,Dist,x_label,y_label,alig): &#39;&#39;&#39; Grafica histogramas de features de un DataFrame. Calcula: media, std, std error, skewness, entre otros. Si se propone una distribución entre las disponibles (Log-norm, Poisson, Normal, Skellam), la grafica tomando los valores del histograma. Arguments: DS: DataFrame columns: numero de columnas de la figura rows: numerod de filas de la figura Features: Lista de Features a analizar Type: tipo de dato &#39;historic&#39; or &#39;match&#39; n_bin: Lista con numero de bines del histograma Dist: Lista con Distribución a graficar. x_label: Lista con nombre del x label de cada subplot y_label: Lista con nombre del y label de cada subplot alig: alineacion de las barras del histograma &#39;mid&#39; &#39;left&#39; or &#39;right&#39; &#39;&#39;&#39; fig, a = plt.subplots(nrows=rows, ncols=columns) if(columns*rows==1): a=[a] for ax,f,t,b,d,xl,yl,al in zip(a,Features,Type,n_bin,Dist,x_label,y_label,alig): if(t==&#39;historic&#39;): C=[t+&#39;_&#39;+f+&#39;_&#39;+str(i) for t in [&#39;home&#39;,&#39;away&#39;] for i in range(1,11)] elif(t==&#39;match&#39;): C=[f] X=DS[C].to_numpy() X=np.reshape(X, (np.size(X),1)) m=np.nanmean(X) std=np.nanstd(X) me=np.nanmedian(X) sk=3*(m-me)/std mx=np.nanmax(X) mn=np.nanmin(X) n=np.sum(~np.isnan(X)) H =ax.hist(X, bins=b,density=True,align=al, alpha=0.9) if(Dist==&#39;Unknown&#39;): textstr = &#39; n&#39;.join(( r&#39;$ mu=%.3f$&#39; % (m, ), r&#39;max$=%.2f$&#39; % (mx, ), r&#39;min$=%.2f$&#39; % (mn, ), r&#39;$ mathrm{median}=%.2f$&#39; % (me, ), r&#39;$ sigma=%.2f$&#39; % (std, ), r&#39;pearson skewness$=%.2f$&#39; % (sk, ), r&#39;n$=%.0f$&#39; % (n, ), r&#39;std error$=%.3f$&#39; % (std/np.math.sqrt(n), ))) else: textstr = &#39; n&#39;.join(( r&#39;$ mu=%.3f$&#39; % (m, ), r&#39;max$=%.2f$&#39; % (mx, ), r&#39;min$=%.2f$&#39; % (mn, ), r&#39;$ mathrm{median}=%.2f$&#39; % (me, ), r&#39;$ sigma=%.2f$&#39; % (std, ), r&#39;pearson skewness$=%.2f$&#39; % (sk, ), r&#39;n$=%.0f$&#39; % (n, ), r&#39;std error$=%.3f$&#39; % (std/np.math.sqrt(n), ), r&#39;pdf utilizada$:$ &#39;+d)) props = dict(boxstyle=&#39;round&#39;, facecolor=&#39;wheat&#39;, alpha=0.5) ax.text(0.65, 0.95, textstr, transform=ax.transAxes, fontsize=16,verticalalignment=&#39;top&#39;, bbox=props) if (d!=&#39;Unknown&#39;): if(d==&#39;Poisson&#39;): B=np.arange(mn,mx+1) ax.plot(B,Poisson_distribution(B,m),color=&#39;orange&#39;,lw=2) elif(d==&#39;Log-norm&#39;): B=np.linspace(mn,mx,1000) m_l=np.math.log(m**2/(np.math.sqrt(m**2+std*2))) std_l=np.math.sqrt(np.math.log(1+((std**2)/(m**2)))) ax.plot(B,Log_normal(B,m_l,std_l),color=&#39;orange&#39;,lw=2) elif(Dist==&#39;Skellam&#39;): mu1=(std*2+m)/2 mu2=(std*2-m)/2 B=np.arange(mn,mx+1) ax.plot(B,skellam.pmf(B,mu1,mu2),color=&#39;orange&#39;,lw=2) elif(Dist==&#39;Normal&#39;): B=np.linspace(mn,mx,1000) ax.plot(B,norm.pdf(B, m, std),color=&#39;orange&#39;,lw=2) ax.set_ylabel(yl,fontsize=20) ax.set_xlabel(xl,fontsize=20) ax.tick_params(axis=&#39;both&#39;, which=&#39;major&#39;, labelsize=15) fig.set_size_inches(20,5) plt.tight_layout() plt.show() return . def Plot_one_distribution(DS,Features,Type,n_bin,Dist,x_label,y_label,al,text_x_pos=0.65,xlim=(None,None)): &#39;&#39;&#39; Grafica el histograma para una featuree de un DataFrame. Calcula: media, std, std error, skewness, entre otros. Si se propone una distribución entre las disponibles (Log-norm, Poisson, Normal, Skellam), la grafica tomando los valores del histograma. Arguments: DS: DataFrame Feature: Feature a analizar Type: tipo de dato &#39;historic&#39; or &#39;match&#39; n_bin: Lista con numero de bines del histograma Dist: Lista con Distribución a graficar. x_label: Lista con nombre del x label de cada subplot y_label: Lista con nombre del y label de cada subplot al: alineacion de las barras del histograma &#39;mid&#39; &#39;left&#39; or &#39;right&#39; text_box_pos: posicion [x,y] del cuadro de texto xlim: rango en x &#39;&#39;&#39; fig, ax = plt.subplots() C=[] for f,t in zip(Features,Type): if(t==&#39;historic&#39;): C=C+[t+&#39;_&#39;+f+&#39;_&#39;+str(i) for t in [&#39;home&#39;,&#39;away&#39;] for i in range(1,11)] elif(t==&#39;match&#39;): C=C+[f] X=DS[C].to_numpy() X=np.reshape(X, (np.size(X),1)) m=np.nanmean(X) std=np.nanstd(X) me=np.nanmedian(X) sk=3*(m-me)/std mx=np.nanmax(X) mn=np.nanmin(X) n=np.sum(~np.isnan(X)) H =ax.hist(X, bins=n_bin,density=True,align=al, alpha=0.9) if (Dist==&#39;Unknown&#39;): textstr = &#39; n&#39;.join(( r&#39;$ mu=%.3f$&#39; % (m, ), r&#39;max$=%.2f$&#39; % (mx, ), r&#39;min$=%.2f$&#39; % (mn, ), r&#39;$ mathrm{median}=%.2f$&#39; % (me, ), r&#39;$ sigma=%.2f$&#39; % (std, ), r&#39;pearson skewness$=%.2f$&#39; % (sk, ), r&#39;n$=%.0f$&#39; % (n, ), r&#39;std error$=%.3f$&#39; % (std/np.math.sqrt(n), ))) else: textstr = &#39; n&#39;.join(( r&#39;$ mu=%.3f$&#39; % (m, ), r&#39;max$=%.2f$&#39; % (mx, ), r&#39;min$=%.2f$&#39; % (mn, ), r&#39;$ mathrm{median}=%.2f$&#39; % (me, ), r&#39;$ sigma=%.2f$&#39; % (std, ), r&#39;pearson skewness$=%.2f$&#39; % (sk, ), r&#39;n$=%.0f$&#39; % (n, ), r&#39;std error$=%.3f$&#39; % (std/np.math.sqrt(n), ), r&#39;pdf utilizada$:$ &#39;+Dist)) props = dict(boxstyle=&#39;round&#39;, facecolor=&#39;wheat&#39;, alpha=0.5) ax.text(text_x_pos, 0.95, textstr, transform=ax.transAxes, fontsize=11,verticalalignment=&#39;top&#39;, bbox=props) if (Dist!=&#39;Unknown&#39;): if(Dist==&#39;Poisson&#39;): B=np.arange(mn,mx+1) ax.plot(B,Poisson_distribution(B,m),color=&#39;orange&#39;,lw=2) elif(Dist==&#39;Log-norm&#39;): B=np.linspace(mn,mx,1000) m_l=np.math.log(m**2/(np.math.sqrt(m**2+std*2))) std_l=np.math.sqrt(np.math.log(1+((std**2)/(m**2)))) ax.plot(B,Log_normal(B,m_l,std_l),color=&#39;orange&#39;,lw=2) elif(Dist==&#39;Skellam&#39;): mu1=(std*2+m)/2 mu2=(std*2-m)/2 B=np.arange(mn,mx+1) ax.plot(B,skellam.pmf(B,mu1,mu2),color=&#39;orange&#39;,lw=2) elif(Dist==&#39;Normal&#39;): B=np.linspace(mn,mx,1000) ax.plot(B,norm.pdf(B, m, std),color=&#39;orange&#39;,lw=2) ax.set_ylabel(y_label,fontsize=16) ax.set_xlabel(x_label,fontsize=16) plt.xticks(fontsize=13) plt.yticks(fontsize=13) if(xlim[0]!=None): ax.set_xlim(xlim) fig.set_size_inches(12,5) plt.show() return . def Plot_distribution_por_Condicion_team_and_opp(DS,Features_Team,Features_Opponent,Condition,Cond_Labels,n_bin,Dist,x_label,y_label,al,Text_box_pos=[0.4,0.7]): &#39;&#39;&#39; Grafica dos histogramas de una feature en función de una condicion donde sumamos datos historicos de equipos y oponentes. Calcula: media, std, std error, skewness, entre otros. Si se propone una distribución entre las disponibles (Log-norm, Poisson, Normal, Skellam), la grafica tomando los valores del histograma. Arguments: DS: DataFrame Features_team: Feature a analizar (team) Features_Opponent: Feature a analizar (historic opponent) Condition: Condicion (variable true or False) que separa los datos Condition_Labels: Que representa True y False Type: tipo de dato &#39;historic&#39; or &#39;match&#39; n_bin: Lista con numero de bines del histograma Dist: Lista con Distribución a graficar. x_label: Lista con nombre del x label de cada subplot y_label: Lista con nombre del y label de cada subplot al: alineacion de las barras del histograma &#39;mid&#39; &#39;left&#39; or &#39;right&#39; text_box_pos: posicion [x,y] del cuadro de texto xlim: rango en x &#39;&#39;&#39; fig, ax = plt.subplots() Local=np.array([]) Visitante=np.array([]) for t in [&#39;home&#39;,&#39;away&#39;]: C=[t+&#39;_&#39;+Condition+&#39;_&#39;+str(i) for i in range(1,11)] fil=DS[C].to_numpy() fil=np.reshape(fil, (np.size(fil),1)).astype(&#39;bool&#39;) F=[t+&#39;_&#39;+Features_Team+&#39;_&#39;+str(i) for i in range(1,11)] G=DS[F].to_numpy() G=np.reshape(G, (np.size(G),1)) Local=np.concatenate((Local,G[fil])) Visitante=np.concatenate((Visitante,G[~fil])) for t in [&#39;home&#39;,&#39;away&#39;]: C=[t+&#39;_&#39;+Condition+&#39;_&#39;+str(i) for i in range(1,11)] fil=DS[C].to_numpy() fil=np.reshape(fil, (np.size(fil),1)).astype(&#39;bool&#39;) F=[t+&#39;_&#39;+Features_Opponent+&#39;_&#39;+str(i) for i in range(1,11)] G=DS[F].to_numpy() G=np.reshape(G, (np.size(G),1)) Local=np.concatenate((Local,G[~fil])) Visitante=np.concatenate((Visitante,G[fil])) for X,n,p,b,c in zip([Local,Visitante],Cond_Labels,Text_box_pos,n_bin,[&#39;k&#39;,&#39;r&#39;]): m=np.nanmean(X) std=np.nanstd(X) me=np.nanmedian(X) sk=3*(m-me)/std mx=np.nanmax(X) mn=np.nanmin(X) nn=np.sum(~np.isnan(X)) H =ax.hist(X, bins=b,density=True,align=al,alpha=0.5,color=c) if (Dist==&#39;Unknown&#39;): textstr = &#39; n&#39;.join(( n, r&#39;$ mu=%.3f$&#39; % (m, ), r&#39;max$=%.2f$&#39; % (mx, ), r&#39;min$=%.2f$&#39; % (mn, ), r&#39;$ mathrm{median}=%.2f$&#39; % (me, ), r&#39;$ sigma=%.2f$&#39; % (std, ), r&#39;pearson skewness$=%.2f$&#39; % (sk, ), r&#39;n$=%.0f$&#39; % (nn, ), r&#39;std error$=%.3f$&#39; % (std/np.math.sqrt(nn), ))) else: textstr = &#39; n&#39;.join(( n, r&#39;$ mu=%.3f$&#39; % (m, ), r&#39;max$=%.2f$&#39; % (mx, ), r&#39;min$=%.2f$&#39; % (mn, ), r&#39;$ mathrm{median}=%.2f$&#39; % (me, ), r&#39;$ sigma=%.2f$&#39; % (std, ), r&#39;pearson skewness$=%.2f$&#39; % (sk, ), r&#39;n$=%.0f$&#39; % (nn, ), r&#39;std error$=%.3f$&#39; % (std/np.math.sqrt(nn), ), r&#39;pdf utilizada$:$ &#39;+Dist)) props = dict(boxstyle=&#39;round&#39;, facecolor=&#39;wheat&#39;, alpha=0.5) ax.text(p, 0.95, textstr, transform=ax.transAxes, fontsize=11,verticalalignment=&#39;top&#39;, bbox=props,color=c) if (Dist!=&#39;Unknown&#39;): if(Dist==&#39;Poisson&#39;): B=np.arange(mn,mx+1) ax.plot(B,Poisson_distribution(B,m),color=c,lw=2) elif(Dist==&#39;Log-norm&#39;): B=np.linspace(mn,mx,1000) m_l=np.math.log(m**2/(np.math.sqrt(m**2+std*2))) std_l=np.math.sqrt(np.math.log(1+((std**2)/(m**2)))) ax.plot(B,Log_normal(B,m_l,std_l),color=c,lw=2) elif(Dist==&#39;Skellam&#39;): mu1=(std*2+m)/2 mu2=(std*2-m)/2 B=np.arange(mn,mx+1) ax.plot(B,skellam.pmf(B,mu1,mu2),color=c,lw=2) elif(Dist==&#39;Normal&#39;): B=np.linspace(mn,mx,1000) ax.plot(B,norm.pdf(B, m, std),color=&#39;orange&#39;,lw=2) ax.set_ylabel(y_label,fontsize=16) ax.set_xlabel(x_label,fontsize=16) plt.xticks(fontsize=13) plt.yticks(fontsize=13) fig.set_size_inches(12,5) plt.show() return . def Plot_distribution_por_Condicion(DS,Feature,Condition,Cond_Labels,n_bin,Dist,x_label,y_label,al,Text_box_pos=[0.4,0.7]): &#39;&#39;&#39; Grafica dos histogramas de una feature en función de una condicion. Calcula: media, std, std error, skewness, entre otros. Si se propone una distribución entre las disponibles (Log-norm, Poisson, Normal, Skellam), la grafica tomando los valores del histograma. Arguments: DS: DataFrame Features: Feature a analizar Condition: Condicion (variable true or False) que separa los datos Condition_Labels: Que representa True y False Type: tipo de dato &#39;historic&#39; or &#39;match&#39; n_bin: Lista con numero de bines del histograma Dist: Lista con Distribución a graficar. x_label: Lista con nombre del x label de cada subplot y_label: Lista con nombre del y label de cada subplot al: alineacion de las barras del histograma &#39;mid&#39; &#39;left&#39; or &#39;right&#39; text_box_pos: posicion [x,y] del cuadro de texto xlim: rango en x &#39;&#39;&#39; fig, ax = plt.subplots() Local=np.array([]) Visitante=np.array([]) for t in [&#39;home&#39;,&#39;away&#39;]: C=[t+&#39;_&#39;+Condition+&#39;_&#39;+str(i) for i in range(1,11)] fil=DS[C].to_numpy() fil=np.reshape(fil, (np.size(fil),1)).astype(&#39;bool&#39;) F=[t+&#39;_&#39;+Feature+&#39;_&#39;+str(i) for i in range(1,11)] G=DS[F].to_numpy() G=np.reshape(G, (np.size(G),1)) Local=np.concatenate((Local,G[fil])) Visitante=np.concatenate((Visitante,G[~fil])) for X,n,p,b,c in zip([Local,Visitante],Cond_Labels,Text_box_pos,n_bin,[&#39;k&#39;,&#39;r&#39;]): m=np.nanmean(X) std=np.nanstd(X) me=np.nanmedian(X) sk=3*(m-me)/std mx=np.nanmax(X) mn=np.nanmin(X) nn=np.sum(~np.isnan(X)) H =ax.hist(X, bins=b,density=True,align=al,alpha=0.5,color=c) if (Dist==&#39;Unknown&#39;): textstr = &#39; n&#39;.join(( n, r&#39;$ mu=%.3f$&#39; % (m, ), r&#39;max$=%.2f$&#39; % (mx, ), r&#39;min$=%.2f$&#39; % (mn, ), r&#39;$ mathrm{median}=%.2f$&#39; % (me, ), r&#39;$ sigma=%.2f$&#39; % (std, ), r&#39;pearson skewness$=%.2f$&#39; % (sk, ), r&#39;n$=%.0f$&#39; % (nn, ), r&#39;std error$=%.3f$&#39; % (std/np.math.sqrt(nn), ))) else: textstr = &#39; n&#39;.join(( n, r&#39;$ mu=%.3f$&#39; % (m, ), r&#39;max$=%.2f$&#39; % (mx, ), r&#39;min$=%.2f$&#39; % (mn, ), r&#39;$ mathrm{median}=%.2f$&#39; % (me, ), r&#39;$ sigma=%.2f$&#39; % (std, ), r&#39;pearson skewness$=%.2f$&#39; % (sk, ), r&#39;n$=%.0f$&#39; % (nn, ), r&#39;std error$=%.3f$&#39; % (std/np.math.sqrt(nn), ), r&#39;pdf utilizada$:$ &#39;+Dist)) props = dict(boxstyle=&#39;round&#39;, facecolor=&#39;wheat&#39;, alpha=0.5) ax.text(p, 0.95, textstr, transform=ax.transAxes, fontsize=11,verticalalignment=&#39;top&#39;, bbox=props,color=c) if (Dist!=&#39;Unknown&#39;): if(Dist==&#39;Poisson&#39;): B=np.arange(mn,mx+1) ax.plot(B,Poisson_distribution(B,m),color=c,lw=2) elif(Dist==&#39;Log-norm&#39;): B=np.linspace(mn,mx,1000) m_l=np.math.log(m**2/(np.math.sqrt(m**2+std*2))) std_l=np.math.sqrt(np.math.log(1+((std**2)/(m**2)))) ax.plot(B,Log_normal(B,m_l,std_l),color=c,lw=2) elif(Dist==&#39;Skellam&#39;): mu1=(std*2+m)/2 mu2=(std*2-m)/2 B=np.arange(mn,mx+1) ax.plot(B,skellam.pmf(B,mu1,mu2),color=c,lw=2) elif(Dist==&#39;Normal&#39;): B=np.linspace(mn,mx,1000) ax.plot(B,norm.pdf(B, m, std),color=&#39;orange&#39;,lw=2) ax.set_ylabel(y_label,fontsize=16) ax.set_xlabel(x_label,fontsize=16) plt.xticks(fontsize=13) plt.yticks(fontsize=13) fig.set_size_inches(12,5) plt.show() return . def Histograma_condicional_numerica(DF,variable,variable_condicional,tipo_de_condición,condicion_numerica,x_label,legend_pos=&#39;best&#39;): &#39;&#39;&#39; Grafica histograma de la variable, en funcion de la condicion dada. Arguments: DF: DataFrame variable: Feature para hacer el histograma variable_condicional: feature que servirá para separar los datos tipo_de_condición: &#39;bool&#39; o &#39;&gt;&lt;_value&#39; condicion_numerica: Condición sobre ese feature X_label: Nombre del feature del histograma &#39;&#39;&#39; fig = plt.figure(figsize=(8,5)) ax = fig.add_subplot(111) ind = np.arange(3) width = 0.2 if(tipo_de_condición==&#39;&gt;&lt;_value&#39;): ax.bar(ind-width, DF[variable].value_counts(normalize=True) , width, label=&#39;General N=&#39;+str(len(DF)), alpha=0.7, color=&#39;red&#39;) ax.bar(ind, DF[variable][DF[variable_condicional]&gt;condicion_numerica].value_counts(normalize=True).reindex(DF[variable].value_counts(normalize=True).index) , width, label=variable_condicional+&#39; &gt; &#39;+str(condicion_numerica)+&#39; N=&#39;+str(np.sum(DF[variable_condicional]&gt;condicion_numerica)), alpha=0.7, color=&#39;navy&#39;) ax.bar(ind+width, DF[variable][DF[variable_condicional]&lt;-condicion_numerica].value_counts(normalize=True).reindex(DF[variable].value_counts(normalize=True).index), width, label=variable_condicional+&#39; &lt; &#39;+str(-condicion_numerica)+&#39; N=&#39;+str(np.sum(DF[variable_condicional]&lt;-condicion_numerica)), alpha=0.7, color=&#39;orange&#39;) elif(tipo_de_condición==&#39;bool&#39;): ax.bar(ind-width, DF[variable].value_counts(normalize=True) , width, label=&#39;General N=&#39;+str(len(DF)), alpha=0.7, color=&#39;red&#39;) ax.bar(ind, DF[variable][DF[variable_condicional]==1].value_counts(normalize=True).reindex(DF[variable].value_counts(normalize=True).index) , width, label=variable_condicional+&#39; = True &#39;+&#39; N=&#39;+str(np.sum(DF[variable_condicional]==1)), alpha=0.7, color=&#39;navy&#39;) ax.bar(ind+width, DF[variable][DF[variable_condicional]==0].value_counts(normalize=True).reindex(DF[variable].value_counts(normalize=True).index), width, label=variable_condicional+&#39; = False &#39;+&#39; N=&#39;+str(np.sum(DF[variable_condicional]==0)), alpha=0.7, color=&#39;orange&#39;) ax.set_xlabel(x_label,fontsize=17) ax.set_ylabel(&#39;Distribución de Resultados&#39;,fontsize=17) ax.tick_params(axis=&#39;x&#39;,labelsize=15,labelrotation=0) ax.tick_params(axis=&#39;y&#39;,labelsize=14) plt.legend(fontsize=12,loc=legend_pos,framealpha=0.9) ax.set_xticks(ind) ax.set_xticklabels( (DF[variable].value_counts(normalize=True).index) ) plt.show() . def Histograma_VAR_categorica(DF,variable,x_label): &#39;&#39;&#39; Grafica histograma de la variable categorica Arguments: DF: DataFrame variable: Feature para hacer el histograma X_label: Nombre del feature del histograma &#39;&#39;&#39; ax=DF[variable].value_counts(normalize=True).plot(kind=&#39;bar&#39;,alpha=0.7, color=&#39;blue&#39;,figsize=(8,5)) ax.set_xlabel(x_label,fontsize=17) ax.set_ylabel(&#39;Distribución de Resultados&#39;,fontsize=17) ax.tick_params(axis=&#39;x&#39;,labelsize=15,labelrotation=0) ax.tick_params(axis=&#39;y&#39;,labelsize=14) #plt.legend(fontsize=14) plt.show() . def Histograma_historic_condition_n_times(DF,variable,variable_condicional,n,x_label,legend_pos=&#39;best&#39;): &#39;&#39;&#39; Grafica histograma de la variable, en funcion de la condicion dada. Arguments: DF: DataFrame variable: Feature para hacer el histograma variable_condicional: feature que servirá para separar los datos n: numero de veces X_label: Nombre del feature del histograma &#39;&#39;&#39; aux=pd.Series(np.zeros(len(DF)),index=DF.index) for i in range(1,11): l=variable_condicional+&#39;_{}&#39;.format(i) aux=aux+DF[l].astype(&#39;int&#39;) fig = plt.figure(figsize=(8,5)) ax = fig.add_subplot(111) ind = np.arange(3) width = 0.3 ax.bar(ind, DF[variable].value_counts(normalize=True) , width, label=&#39;General N=&#39;+str(len(DF)), alpha=0.7, color=&#39;red&#39;) ax.bar(ind+width, DF[variable][ aux==n ].value_counts(normalize=True).reindex(DF[variable].value_counts(normalize=True).index) , width, label=variable_condicional+&#39; is True &#39;+str(n)+&#39; veces. N=&#39;+str(np.sum(aux==n)), alpha=0.7, color=&#39;navy&#39;) ax.set_xlabel(x_label,fontsize=17) ax.set_ylabel(&#39;Distribución de Resultados&#39;,fontsize=17) ax.tick_params(axis=&#39;x&#39;,labelsize=15,labelrotation=0) ax.tick_params(axis=&#39;y&#39;,labelsize=14) plt.legend(fontsize=12,loc=legend_pos,framealpha=0.9) ax.set_xticks(ind+width/2) ax.set_xticklabels( (DF[variable].value_counts(normalize=True).index) ) plt.show() . def Histograma_historic_2_condition_n_times(DF,variable,tipo,variable_condicional_1,n1,variable_condicional_2,n2,x_label,legend_pos=&#39;best&#39;): &#39;&#39;&#39; Grafica histograma de la variable, en funcion de la condicion dada. Arguments: DF: DataFrame variable: Feature para hacer el histograma tipo: tipo de condición &#39;both =&#39;, &#39;both &gt;=&#39;, &#39;1 &gt;= 2 &lt;=&#39; variable_condicional_1: feature que servirá para separar los datos n1: numero de veces variable_condicional_2: feature que servirá para separar los datos n2: numero de veces X_label: Nombre del feature del histograma &#39;&#39;&#39; aux1=pd.Series(np.zeros(len(DF)),index=DF.index) for i in range(1,11): l=variable_condicional_1+&#39;_{}&#39;.format(i) aux1=aux1+DF[l].astype(&#39;int&#39;) aux2=pd.Series(np.zeros(len(DF)),index=DF.index) for i in range(1,11): l=variable_condicional_2+&#39;_{}&#39;.format(i) aux2=aux2+DF[l].astype(&#39;int&#39;) fig = plt.figure(figsize=(8,5)) ax = fig.add_subplot(111) ind = np.arange(3) width = 0.3 ax.bar(ind, DF[variable].value_counts(normalize=True) , width, label=&#39;General N=&#39;+str(len(DF)), alpha=0.7, color=&#39;red&#39;) if(tipo==&#39;both =&#39;): ax.bar(ind+width, DF[variable][ (aux1==n1) &amp; (aux2==n2) ].value_counts(normalize=True).reindex(DF[variable].value_counts(normalize=True).index) , width, label=variable_condicional_1+&#39; is True &#39;+str(n1)+&#39; veces n&#39;+variable_condicional_2+&#39; is True &#39;+str(n2)+&#39; veces n&#39;+ &#39;N=&#39;+str(np.sum((aux1==n1)&amp;(aux2==n2))), alpha=0.7, color=&#39;navy&#39;) elif(tipo==&#39;both &gt;=&#39;): ax.bar(ind+width, DF[variable][ (aux1&gt;=n1) &amp; (aux2&gt;=n2) ].value_counts(normalize=True).reindex(DF[variable].value_counts(normalize=True).index) , width, label=variable_condicional_1+&#39; is True &#39;+str(n1)+&#39; veces al menos n&#39;+variable_condicional_2+&#39; is True &#39;+str(n2)+&#39; veces al menos n&#39;+ &#39;N=&#39;+str(np.sum((aux1&gt;=n1)&amp;(aux2&gt;=n2))), alpha=0.7, color=&#39;navy&#39;) elif(tipo==&#39;1 &gt;= 2 &lt;=&#39;): ax.bar(ind+width, DF[variable][ (aux1&gt;=n1) &amp; (aux2&lt;=n2) ].value_counts(normalize=True).reindex(DF[variable].value_counts(normalize=True).index) , width, label=variable_condicional_1+&#39; is True &#39;+str(n1)+&#39; veces al menos n&#39;+variable_condicional_2+&#39; is True &#39;+str(n2)+&#39; veces al menos n&#39;+ &#39;N=&#39;+str(np.sum((aux1&gt;=n1)&amp;(aux2&lt;=n2))), alpha=0.7, color=&#39;navy&#39;) ax.set_xlabel(x_label,fontsize=17) ax.set_ylabel(&#39;Distribución de Resultados&#39;,fontsize=17) ax.tick_params(axis=&#39;x&#39;,labelsize=15,labelrotation=0) ax.tick_params(axis=&#39;y&#39;,labelsize=14) plt.legend(fontsize=12,loc=legend_pos,framealpha=0.9) ax.set_xticks(ind+width/2) ax.set_xticklabels( (DF[variable].value_counts(normalize=True).index) ) plt.show() . Matrices de correlaci&#243;n . import seaborn as sns . def Matrices_de_correlacion_All_Features_a_la_vez(DS): &#39;&#39;&#39; Genera matrices de correlacion para todas las features del dataset. Las referentes al partido a modelar, las agrupa en un solo subplot. Para las históricas, se genera un subplot para cada una. Arguments: DS: DataFrame &#39;&#39;&#39; n_DS= pd.get_dummies(DS, columns=[&#39;target&#39;]) Lista=list(n_DS.columns)[:-3]+[&#39;Victoria visitante&#39;,&#39;Empate&#39;,&#39;Victoria local&#39;] rename_columns(n_DS,Lista) Match_day_features=[] for c in n_DS.columns: if ( (c!=&#39;id&#39;) and not(bool(re.search(r&#39; d&#39;, c)))): Match_day_features.append(c) corrMatrix_matchday =n_DS[Match_day_features].corr() M={} Features=[&#39;goal_diff&#39;,&#39;rating_diff&#39;,&#39;coach_continuity&#39;,&#39;team_history_is_play_home&#39;,&#39;team_history_is_cup&#39;] for f in Features: Col=[] for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(1,11): c=t+&#39;_&#39;+f+&#39;_{}&#39;.format(i) Col.append(c) Col=Col+[&#39;Victoria visitante&#39;,&#39;Empate&#39;,&#39;Victoria local&#39;] M[f]=n_DS[Col].corr() fig, axes = plt.subplots(3, 2, figsize=(25,30)) axes=np.reshape(axes,(6,)) axes[0].set_title(r&#39;$sign(M) , sqrt{abs(M)}$&#39;+&#39;, siendo M la matriz de correlacion para las variables del partido n&#39;, fontsize=14) sns.heatmap(np.sign(corrMatrix_matchday)*np.sqrt(np.abs(corrMatrix_matchday)), annot=True,ax=axes[0], cmap=&quot;vlag&quot;) for a,f in zip(axes[1:],Features): a.set_title(r&#39;$sign(M) , sqrt{abs(M)}$&#39;+&#39;, siendo M la matriz de correlacion para las variables &quot;{}&quot; n&#39;.format(f.replace(&#39;_&#39;, &#39; &#39;)), fontsize=14) sns.heatmap(np.sign(M[f])*np.sqrt(np.abs(M[f])), annot=True,ax=a , cmap=&quot;vlag&quot;) plt.tight_layout() plt.show() return . def Matrices_de_correlacion_All_Features(DS,tipo,historic_feature=None): &#39;&#39;&#39; Genera una matriz de correlacion para las features seleccionadas. Arguments: DS: DataFrame tipo: &#39;Match_day_Features&#39; para las del partido a modelar, o &#39;Historicas&#39; para una feature historica historic_feature: nombre de la feature cuando es de categoria &#39;Historicas&#39; &#39;&#39;&#39; n_DS= pd.get_dummies(DS, columns=[&#39;target&#39;]) Lista=list(n_DS.columns)[:-3]+[&#39;Victoria visitante&#39;,&#39;Empate&#39;,&#39;Victoria local&#39;] rename_columns(n_DS,Lista) if(tipo==&#39;Match_day_Features&#39;): Col=[] for c in n_DS.columns: if ( (c!=&#39;id&#39;) and not(bool(re.search(r&#39; d&#39;, c)))): Col.append(c) elif(tipo==&#39;Historicas&#39;): if(historic_feature==None): print(&#39;Historic feature needs to be specify as an additional argument&#39;) return f=historic_feature Col=[] for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(1,11): c=t+&#39;_&#39;+f+&#39;_{}&#39;.format(i) Col.append(c) Col=Col+[&#39;Victoria visitante&#39;,&#39;Empate&#39;,&#39;Victoria local&#39;] M=n_DS[Col].corr() fig, axes = plt.subplots(1, 1, figsize=(18,8)) if(tipo==&#39;Match_day_Features&#39;): label=&#39;del partido&#39; elif(tipo==&#39;Historicas&#39;): label=&#39;historicas de &#39;+historic_feature.replace(&#39;_&#39;, &#39; &#39;) axes.set_title(r&#39;$sign(M) , sqrt{abs(M)}$&#39;+&#39;, siendo M la matriz de correlacion para las variables &quot;{}&quot; n&#39;.format(label), fontsize=18) sns.heatmap(np.sign(M)*np.sqrt(np.abs(M)), annot=True,ax=axes, cmap=&#39;vlag&#39; ) plt.tight_layout() plt.show() return . Otros . def Best_rating_teams(DS,N,league=[-1,&#39;None&#39;]): &#39;&#39;&#39; Genera una tabla (DataFrame) con los mejores N equipos de una liga, o en su defecto del dataset. Arguments: DS: DataFrame N: numero de equipos en la lista league: [id,nombre] &#39;&#39;&#39; f=&#39;team_history_rating&#39; c_h=[t+&#39;_&#39;+f+&#39;_&#39;+str(i) for t in [&#39;home&#39;] for i in range(1,11)] C_home=[&#39;home_team_name&#39;]+c_h c_a=[t+&#39;_&#39;+f+&#39;_&#39;+str(i) for t in [&#39;away&#39;] for i in range(1,11)] C_away=[&#39;away_team_name&#39;]+c_a idd=league[0] if(idd==-1): print(&#39;Todas las Ligas del Dataset n&#39;) DS_2=DS elif(idd in DS.league_id.unique()): print(&#39;Liga: &#39;+league[1]) DS_2=DS[DS.league_id==idd] X_home=DS_2[C_home] X_home[&#39;Rank&#39;]=X_home[c_h].mean(axis=1) X_home=X_home.drop(columns=c_h) X_away=DS_2[C_away] X_away[&#39;Rank&#39;]=X_away[c_a].mean(axis=1) X_away=X_away.drop(columns=c_a) rename_columns(X_home,[&#39;Equipo&#39;,&#39;Rating&#39;]) rename_columns(X_away,[&#39;Equipo&#39;,&#39;Rating&#39;]) X = pd.concat([X_home,X_away]) X=X.groupby(&#39;Equipo&#39;).mean() X=X.sort_values(&#39;Rating&#39;,ascending=False) display(X.head(N)) return . def Correlacion_X_vs_Y_his(DS,X_label,Y_label,Plot_labels,alpha=1,text_x_pos=0.7): &#39;&#39;&#39; Grafica el scatter plot de dos features y calcula su correlación. Arguments: DS: DataFrame X_label: Feature X Y_label: Feature Y Plot_labels= nombre de los labels [x,y] alpha: nivel de trasparencia de los puntos x_pos: posicion x del cuadro de texto donde aparece el valor de correlacion &#39;&#39;&#39; X_c=[] for xl in X_label: X_c=X_c+[t+&#39;_&#39;+xl+&#39;_&#39;+str(i) for t in [&#39;home&#39;,&#39;away&#39;] for i in range(1,11)] X=DS[X_c].to_numpy() X=np.reshape(X, (np.size(X),)) Y_c=[] for yl in Y_label: Y_c=Y_c+[t+&#39;_&#39;+yl+&#39;_&#39;+str(i) for t in [&#39;home&#39;,&#39;away&#39;] for i in range(1,11)] Y=DS[Y_c].to_numpy() Y=np.reshape(Y, (np.size(Y),)) corr=np.ma.corrcoef(np.ma.masked_invalid(X), np.ma.masked_invalid(Y)) fig, ax = plt.subplots() ax.set_xlabel(Plot_labels[0],fontsize=17) ax.set_ylabel(Plot_labels[1],fontsize=17) ax.tick_params(axis=&#39;both&#39;, which=&#39;major&#39;, labelsize=17) ax.scatter(X,Y,alpha=alpha) textstr = r&#39;$Correlation , ,Value=%.3f$&#39; % (corr[0,1], ) props = dict(boxstyle=&#39;round&#39;, facecolor=&#39;wheat&#39;, alpha=0.5) ax.text(text_x_pos, 0.95, textstr, transform=ax.transAxes, fontsize=16,verticalalignment=&#39;top&#39;, bbox=props,color=&#39;k&#39;) fig.set_size_inches(20,5) plt.tight_layout() plt.show() return . def Plot_Outcome_para_copa_y_liga(DS): &#39;&#39;&#39; Realiza un grafico de barras con los porcentages de Victoria, Empate y Derrota para partidos de: Copa, Liga y General. Arguments: DS: DataFrame &#39;&#39;&#39; Total=DS.target.value_counts()/len(DS.target) Copa=DS[DS.is_cup==True].target.value_counts()/len(DS[DS.is_cup==True]) Liga=DS[DS.is_cup==False].target.value_counts()/len(DS[DS.is_cup==False]) X=np.arange(3) fig, ax = plt.subplots() ax.set_ylabel(&#39;Distribución de Resultados&#39;,fontsize=17) ax.set_xlabel(&#39;Resultado&#39;,fontsize=17) ax.bar(X-0.11,Total.values,width=0.1,label=&#39;General&#39;) ax.bar(X,Liga.values,width=0.1,label=&#39;Liga&#39;) ax.bar(X+0.11,Copa.values,width=0.1,label=&#39;Copa&#39;) xt=[item.get_text() for item in ax.get_xticklabels()] xt[1]=Total.index[0] xt[3]=Total.index[1] xt[5]=Total.index[2] ax.set_xticklabels(xt) ax.tick_params(axis=&#39;both&#39;, which=&#39;major&#39;, labelsize=17) plt.legend() fig.set_size_inches(10,5) plt.show() return . def Match_dates_histograms(DS): &#39;&#39;&#39; Genera un histograma con las fechas de los partidos, separando partidos a modelar de los hitoricos del input. Arguments: DS: DataFrame &#39;&#39;&#39; fig, ax = plt.subplots() Feature=&#39;team_history_match_date&#39; C=[t+&#39;_&#39;+Feature+&#39;_&#39;+str(i) for t in [&#39;home&#39;,&#39;away&#39;] for i in range(1,11)] X=DS[C].to_numpy() X=np.reshape(X, (np.size(X),1)) H=pd.DataFrame(X).dropna() rename_columns(H,[&#39;Date&#39;]) H.Date=H.Date.astype(&quot;datetime64&quot;) H[&#39;Year&#39;]= H.Date.dt.year H[&#39;Month&#39;]=H.Date.dt.month Values_Historic=H.groupby([&#39;Year&#39;,&#39;Month&#39;]).count() Values_Historic=100*Values_Historic/Values_Historic.Date.sum() X1=np.arange(len(Values_Historic)) Y1=Values_Historic.values[:,0] ax.bar(X1,Y1,color=&#39;black&#39;,alpha=0.3,label=&#39;Partidos Historial&#39;) T = DS.match_date.astype(&quot;datetime64&quot;) T=pd.DataFrame(T) rename_columns(T,[&#39;Date&#39;]) T[&#39;Year&#39;]=T.Date.dt.year T[&#39;Month&#39;]=T.Date.dt.month Values_Match_day=T.groupby([&#39;Year&#39;,&#39;Month&#39;]).count() Values_Match_day=100*Values_Match_day/Values_Match_day.Date.sum() X2=np.arange(len(Values_Match_day))+11 Y2=Values_Match_day.values[:,0] ax.bar(X2,Y2,color=&#39;red&#39;,alpha=0.3,label=&#39;Partidos a Modelar&#39;) ax.set_ylabel(&#39;Porcentage de Partidos (%)&#39;,fontsize=17) ax.set_xlabel(&#39;Fecha&#39;,fontsize=17) plt.legend() ax.set_xticks(np.arange(min(X1), max(X2)+1, 1.0)) xt=[item.get_text() for item in ax.get_xticklabels()] xt=list(Values_Historic.index) xt.append((Values_Match_day.index)[-1]) ax.set_xticklabels(xt,rotation=90) ax.tick_params(axis=&#39;both&#39;, which=&#39;major&#39;, labelsize=15) fig.set_size_inches(10,5) plt.show() return . def Trainer_effect_on_the_outcome(DS,dias_ventana): &#39;&#39;&#39; Analiza el efecto de cambios de entrenadores en termino de porcentage de victorias, derrotas y empates, y el tiempo transcurrido desde dicho evento. Realiza un grafico y una tabla donde se muestran los resultados. Arguments: DS: DataFrame dias_ventana: número de dias a analizar alrrededor del cambio de entrenador &#39;&#39;&#39; K=list(np.arange(-dias_ventana,dias_ventana+1))#[-3,-2,-1,0,1,2,3] Victorias=[] Derrotas=[] Empates=[] Muestras=[] Local=[] for k in K: C=np.array([]) D=np.array([]) V=np.array([]) L=np.array([]) for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(max(1,1-k),min(10,10-k)): c=t+&#39;_coach_continuity_{}&#39;.format(i) d=t+&#39;_outcome_V_{}&#39;.format(i+k) v=t+&#39;_outcome_D_{}&#39;.format(i+k) l=t+&#39;_team_history_is_play_home_{}&#39;.format(i) C=np.concatenate((C,DS[c].to_numpy())) D=np.concatenate((D,DS[d].to_numpy())) V=np.concatenate((V,DS[v].to_numpy())) L=np.concatenate((L,DS[l].to_numpy())) n=len(C[C==0]) p_v=np.sum(V[C==0])/n p_d=np.sum(D[C==0])/n p_e=1-p_d-p_v p_l=np.sum(L[C==0])/n Victorias.append(p_v) Empates.append(p_e) Derrotas.append(p_d) Muestras.append(n) Local.append(p_l) if(k==0): n=len(C) p_v=np.sum(V)/n p_d=np.sum(D)/n p_e=1-p_d-p_v p_l=np.sum(L)/n Victorias=[p_v]+Victorias Empates=[p_e]+Empates Derrotas=[p_d]+Derrotas Muestras=[n]+Muestras Local=[p_l]+Local LABEL=[&#39;General&#39;] for k in K: if(k&lt;0): LABEL=LABEL+[&#39;{} partidos antes de un cambio de entrenador&#39;.format(abs(k))] elif(k&gt;0): LABEL=LABEL+[&#39;{} partidos después de un cambio de entrenador&#39;.format(abs(k))] elif(k==0): LABEL=LABEL+[&#39;En el partido de un cambio de entrenador&#39;.format(abs(k))] df={&#39;Condición&#39;:LABEL, &#39;Muestras&#39;: Muestras, &#39;% Local&#39;: np.round(100*np.array(Local),2), &#39;% Victorias&#39;:np.round(100*np.array(Victorias),2), &#39;% Empates:&#39;:np.round(100*np.array(Empates),2), &#39;% Derrotas&#39;:np.round(100*np.array(Derrotas),2)} df=pd.DataFrame(df) display(df) fig, ax = plt.subplots() ax.set_xlabel(&#39;Partidos hasta cambio de Entrenador&#39;,fontsize=16) ax.set_ylabel(&#39;Distribución de Resultados&#39;,fontsize=16) ax.plot(K,Victorias[1:],&#39;-o&#39;,label=&#39;% Victorias&#39;) ax.plot(K,Empates[1:],&#39;-o&#39;,label=&#39;% Empates&#39;) ax.plot(K,Derrotas[1:],&#39;-o&#39;,label=&#39;% Derrotas&#39;) ax.axvline(0,ls=&#39;--&#39;,lw=2,c=&#39;darkgrey&#39;) ax.axhline(Victorias[0],ls=&#39;--&#39;,lw=1,c=&#39;b&#39;) ax.axhline(Empates[0],ls=&#39;--&#39;,lw=1,c=&#39;orange&#39;) ax.axhline(Derrotas[0],ls=&#39;--&#39;,lw=1,c=&#39;green&#39;) textstr = &#39;Las líneas punteadas indican nlos valores en el data set completo&#39; props = dict(boxstyle=&#39;round&#39;, facecolor=&#39;wheat&#39;, alpha=0.5) ax.text(0.01, 0.98, textstr, transform=ax.transAxes, fontsize=13,verticalalignment=&#39;top&#39;, bbox=props,color=&#39;k&#39;) plt.xticks(fontsize=13) plt.yticks(fontsize=13) plt.legend(loc=(0.01, 0.3), prop={&#39;size&#39;: 14}) fig.set_size_inches(12,5) plt.tight_layout() plt.show() return . TRANSFORMACI&#211;N DEL DATASET PARA LOS MODELOS . Balance de targets . def Classes_counts(DS): &#39;&#39;&#39; Imprime por pantalla las clases en el Dataframe de target y su ocurrencia/frecuencia. Arguments: DS: DataFrame &#39;&#39;&#39; v,q=np.unique(DS.target,return_counts=True) n=np.sum(q) ddict=dict(zip(v,q)) print(&#39;CLASES n&#39;) for k in ddict.keys(): print(k,&#39;: &#39;,ddict[k],&#39; &#39;,round(100*ddict[k]/n,2),&#39;%&#39;) return . def data_balancing_Victorias_y_Derrotas(DS): &#39;&#39;&#39; Balancea las clases &quot;away&quot; y &quot;home&quot; a través de intercambiar visitantes y locales. Ahora pasan a llamarse Equipo 1 y Equipo 2, y la información de localía queda condensada en la variable &quot;EqA_Local&quot;. También realiza un mezclado de las muestras. Devuelve el Dataframe resultante. Arguments: DS: DataFrame Returns: DS_2: Dataframe resultante &#39;&#39;&#39; #This function swaps 0.5 of the home and away, and oversamples draws ################################################################### DS_2=DS.copy(deep=True) DS_2[&#39;EqA_Local&#39;]=np.ones(len(DS_2)).astype(&#39;int&#39;) DS_2[&#39;swap&#39;]=np.random.randint(0,2,len(DS_2)) t=&#39;target&#39; DS_2[t+&#39;_2&#39;]=(DS_2[t]==&#39;away&#39;).astype(&#39;int&#39;)*(-1)+(DS_2[t]==&#39;home&#39;).astype(&#39;int&#39;) c=&#39;swap&#39; #times -1 Features=[&#39;Rating_diff&#39;,&#39;diff_num_partidos_tres_semanas&#39;,&#39;diff_num_partidos_diez_dias&#39;,&#39;diff_num_partidos_cuatro_dias&#39;,&#39;target_2&#39;] for f in Features: DS_2[f]=DS_2[f]*(DS_2[c]==0).astype(&#39;int&#39;)+DS_2[f]*(DS_2[c]==1).astype(&#39;int&#39;)*(-1) #1 to 0 and 0 to 1 Features=[&#39;EqA_Local&#39;] for f in Features: DS_2[f]=DS_2[f]*(DS_2[c]==0).astype(&#39;int&#39;)+np.abs(DS_2[f]-1)*(DS_2[c]==1).astype(&#39;int&#39;) #intercambio away/home Features=[&#39;coach_continuity&#39;,&#39;partidos_tres_semanas&#39;,&#39;partidos_diez_dias&#39;,&#39;partidos_cuatro_dias&#39;] for f in Features: h_cc=&#39;home_&#39;+f a_cc=&#39;away_&#39;+f aux_h=&#39;aux&#39; DS_2[aux_h]=DS_2[h_cc] DS_2[h_cc]=DS_2[h_cc]*(DS_2[c]==0).astype(&#39;int&#39;)+(DS_2[c]==1).astype(&#39;int&#39;)*DS_2[a_cc] DS_2[a_cc]=DS_2[a_cc]*(DS_2[c]==0).astype(&#39;int&#39;)+(DS_2[c]==1).astype(&#39;int&#39;)*DS_2[aux_h] DS_2=DS_2.drop(columns=[aux_h]) #intercambio away/home historic_feature=[&#39;goal_diff&#39;,&#39;rating_diff&#39;,&#39;result_ponderado&#39;,&#39;coach_continuity&#39;,&#39;team_history_is_play_home&#39;,&#39;team_history_is_cup&#39;,&#39;outcome_V&#39;,&#39;outcome_D&#39;,&#39;relevance&#39;] h=&#39;home&#39; a=&#39;away&#39; for f in historic_feature: for i in range(1,11): l=&#39;_&#39;+f+&#39;_{}&#39;.format(i) aux_h=h+l+&#39;_aux&#39; DS_2[aux_h]=DS_2[h+l] DS_2[h+l]=DS_2[h+l]*(DS_2[c]==0).astype(&#39;int&#39;)+(DS_2[c]==1).astype(&#39;int&#39;)*DS_2[a+l] DS_2[a+l]=DS_2[a+l]*(DS_2[c]==0).astype(&#39;int&#39;)+(DS_2[c]==1).astype(&#39;int&#39;)*DS_2[aux_h] DS_2=DS_2.drop(columns=[aux_h]) #mapear targets t=&#39;target&#39; map_dic={-1:&#39;EqA_Derrota&#39;,0:&#39;EqA_Empate&#39;,1:&#39;EqA_Victoria&#39;} DS_2[t]=DS_2[t+&#39;_2&#39;].map(map_dic) #cambiar nombres a eq1 y eq2 Names={} for c in DS_2.columns: c2=c.replace(&#39;home&#39;,&#39;Equipo_A&#39;) c3=c2.replace(&#39;away&#39;,&#39;Equipo_B&#39;) if( &#39;team_history_is_play&#39; in c3 ): c3=c3.replace(&#39;team_history_is_play_Equipo_A&#39;,&#39;play_home&#39;) elif( &#39;team_history_is_cup&#39; in c3 ): c3=c3.replace(&#39;team_history_is_cup&#39;,&#39;is_cup&#39;) Names[c]=c3 DS_2=DS_2.rename(columns=Names) #Shufle and Reset index DS_2 = DS_2.sample(frac=1).reset_index(drop=True) #Drop columnas DS_2=DS_2.drop(columns=[&#39;swap&#39;,&#39;target_2&#39;]) #print display(DS_2) return DS_2 . def Balance_de_empates_por_under_and_over_sampling(DS): &#39;&#39;&#39; Balancea las clases &quot;Empate&quot; con Derrota y Victoria a través de realizar un oversampling de los empates y un undersampling de las derrotas y victorias. Todas las clases son afectadas porcentualmente de la misma manera. Devuelve el Dataframe resultante. Arguments: DS: DataFrame Returns: DS_2: Dataframe &#39;&#39;&#39; DS_2=DS.copy(deep=True) # oversampling de Empate v,q=np.unique(DS_2.target,return_counts=True) ddict=dict(zip(v,q)) ratio=((ddict[&#39;EqA_Derrota&#39;]+ddict[&#39;EqA_Victoria&#39;])/2)/ddict[&#39;EqA_Empate&#39;] x=(ratio-1)/(ratio+1)#proporcion a aumentar(reducir) la clase empates (victoria/derrota) para alcanzar un balance print(&#39;Ratio Victorias(Derrotas)/Empates= &#39;,round(ratio,2)) print(&#39;Proporcion a cambiar clases= &#39;,round(100*x,2),&#39;%&#39;) #Random selection DS_2[&#39;resamp_idx&#39;]=(np.random.rand(len(DS_2))&gt;(1-x)).astype(&#39;int&#39;) #Oversampling DS_2=DS_2.loc[DS_2.index.repeat(1 + DS_2.resamp_idx*(DS_2.target==&#39;EqA_Empate&#39;).astype(&#39;int&#39;))] #Undersampling DS_2 = DS_2[(DS_2.target==&#39;EqA_Empate&#39;) | (DS_2.resamp_idx==0)] #droping of auciliar feature DS_2=DS_2.drop(columns=[&#39;resamp_idx&#39;]) return DS_2 . Separaci&#243;n del Dataset en train y test . from sklearn.model_selection import StratifiedShuffleSplit . def dist_of_categories(y_train,y_test): &#39;&#39;&#39; Genera e imprime por pantalla un report del output para el trainset y el testset, mostrando las ocurrencias y distribución de clases Arguments: y_train: target train y_test: target test &#39;&#39;&#39; Tabla={} Tabla[&#39;train&#39;]=y_train.sum() Tabla[&#39;train %&#39;]=y_train.sum()/len(y_train) Tabla[&#39;test&#39;]=y_test.sum() Tabla[&#39;test %&#39;]=y_test.sum()/len(y_test) Tabla=pd.DataFrame(Tabla) display(Tabla) return . def Training_Test_separation(DF,print_report=True,test_size=0.2): &#39;&#39;&#39; Separa el dataframe en test y train Arguments: DS: DataFrame print_report: si es &quot;True&quot; imprime un reporte de ambos datasets size: tamaño del testset Returns: TRAIN: train dataset TEST: test dataset &#39;&#39;&#39; X=DF.drop(columns=[&#39;target&#39;]) y=DF.target sss = StratifiedShuffleSplit(n_splits=1, test_size=test_size, random_state=42) sss.get_n_splits(X, y) for train_index, test_index in sss.split(X, y): print(&quot;TRAIN:&quot;, len(train_index), &quot;TEST:&quot;, len(test_index)) TRAIN=DF.iloc[train_index] TEST=DF.iloc[test_index] if(print_report): dist_of_categories(pd.get_dummies(y[train_index]),pd.get_dummies(y[test_index])) return TRAIN,TEST . def Split_input_and_OHE_output(DS_train,DS_test,print_report=True): &#39;&#39;&#39; Separa los train y test datasets en input y output, realizando un one-hot encoding en el segundo Arguments: DS_train: Dataset train DS_test: Dataset test print_report: si es &quot;True&quot; imprime un reporte sobre los outputs Returns: X_train: train dataset input y_train: target train X_test: test dataset input y_test: target test &#39;&#39;&#39; X_train=DS_train.drop(columns=[&#39;target&#39;]) y_train=DS_train.target X_test=DS_test.drop(columns=[&#39;target&#39;]) y_test=DS_test.target y_train=pd.get_dummies(y_train) y_test=pd.get_dummies(y_test) if(print_report): dist_of_categories(y_train,y_test) return X_train,y_train,X_test,y_test . Transformaci&#243;n y estandarizaci&#243;n para cada modelo . def Prepara_DF_para_Random_Forest(DF_train,DF_test,Features_His,Features_Match,Features_His_to_std,Features_Match_to_std): &#39;&#39;&#39; Prepara y estandariza un Dataframe para modelarlo por Random Forest Arguments: DF: DataFrame train DF: DataFrame test Features_His: Features partidos anteriores Features_Match: Features partido a modelar Features_His_to_std: Features historicas a estandarizar Features_Match_to_std: Features del partido a estandarizar: Returns: X : train input y:: train input X : test input y:: test input &#39;&#39;&#39; y=DF_train.target X=DF_train.drop(columns=[&#39;target&#39;,&#39;id&#39;]) y_t=DF_test.target X_t=DF_test.drop(columns=[&#39;target&#39;,&#39;id&#39;]) C=[] for f in Features_His: for i in range(1,11): if((i!=10 )|(f!=&#39;coach_continuity&#39;)): C=C+[t+&#39;_&#39;+f+&#39;_&#39;+str(i) for t in [&#39;Equipo_A&#39;,&#39;Equipo_B&#39;]] C=C+Features_Match X=X[C] X_t=X_t[C] Std_FMP=Standarizador_normal() Cs=[] for f in Features_His_to_std: Cs=Cs+[t+&#39;_&#39;+f+&#39;_&#39;+str(i) for t in [&#39;Equipo_A&#39;,&#39;Equipo_B&#39;] for i in range(1,11)] Cs=Cs+Features_Match_to_std for c in C: Std_FMP.fit(X,c) Std_FMP.transform(X,c) Std_FMP.transform(X_t,c) print(&#39;train&#39;) check_NaNs(X) print(&#39;test&#39;) check_NaNs(X_t) return X,y,X_t,y_t . def generate_input_for_NN(X_train,X_test,H_Features,N_Features,oldest_match=10,standarize=True): &#39;&#39;&#39; Da forma a un dataframe para servir de input de una red neuronal densa. Permite estandarizar las variables. Para las variables históricas, la standarización se hace sobre las 10 columnas de los 10 partidos todo al mismo tiempo. Arguments: X_train: train input X_test: test input H_Features: Features historicas a considerar N_Features: Features del partido a considerar oldest_match: Numero de partidos historicos a considerar standarize: estandarizacion Returns: X_train_out : train input X_test_out: test input &#39;&#39;&#39; C=[] for f in N_Features: C=C+[f] for f in H_Features: C=C+[t+&#39;_&#39;+f+&#39;_&#39;+str(i) for t in [&#39;Equipo_A&#39;,&#39;Equipo_B&#39;] for i in range(1,oldest_match+1)] X_train_out=X_train[C] X_test_out=X_test[C] if (standarize==True): S=Standarizador() for f in H_Features: C=[t+&#39;_&#39;+f+&#39;_&#39;+str(i) for t in [&#39;Equipo_A&#39;,&#39;Equipo_B&#39;] for i in range(1,oldest_match+1)] S.fit(X_train_out[C],f) X_train_out[C]=S.transform(X_train_out[C],f) X_test_out[C]=S.transform(X_test_out[C],f) for f in N_Features: S.fit(X_train_out[f],f) X_train_out[f]=S.transform(X_train_out[f],f) X_test_out[f]=S.transform(X_test_out[f],f) X_train_out=X_train_out.to_numpy() X_test_out=X_test_out.to_numpy() print(&#39;Train shape:&#39;, np.shape(X_train_out)) print(&#39;Test shape:&#39;, np.shape(X_test_out)) return X_train_out,X_test_out . def generate_input_for_RNN(X_train,X_test,Features,Equipos,oldest_match=10,standarize=True): &#39;&#39;&#39; Da forma a un dataframe para servir de input de una red neuronal recurrente. Permite estandarizar las variables. La standarización se hace sobre todas la columnas de los partidos todo al mismo tiempo. Arguments: X_train: train input X_test: test input Features: Features historicas a considerar Equipos: Equipos a considerar (A, B, o AyB), lista oldest_match: Numero de partidos historicos a considerar standarize: estandarizacion Returns: M : train input M_t: test input &#39;&#39;&#39; X={} X_t={} for f in Features: C=[t+&#39;_&#39;+f+&#39;_&#39;+str(i) for t in Equipos for i in range(1,oldest_match+1)] X[f]=X_train[C] X_t[f]=X_test[C] if (standarize==True): S=Standarizador() for f in Features: S.fit(X[f],f) X[f]=S.transform(X[f],f) X_t[f]=S.transform(X_t[f],f) M=[] M_t=[] for i in range(oldest_match,0,-1): L=[] L_t=[] for t in Equipos: for f in Features: c=t+&#39;_&#39;+f+&#39;_&#39;+str(i) L.append(X[f][c]) L_t.append(X_t[f][c]) M.append(L) M_t.append(L_t) M=np.array(M) M_t=np.array(M_t) M=M.transpose((2,0,1)) M_t=M_t.transpose((2,0,1)) print(&#39;Train shape:&#39;, np.shape(M)) print(&#39;Test shape:&#39;, np.shape(M_t)) return M, M_t . Principal component analysis . def PCA_analisis(X,X_t,Action=&#39;Fit&#39;,umbral=100): &#39;&#39;&#39; Hace un Principal component analysis (PCA) del dataframe. Y reduce la dimensionalidad dependiendo el umbral dado Arguments: X: DF input Action: Fit o Fit_Transform umbral: umbral para los autovalores conservados al hacer transform Returns: X_train_out : train input X_test_out: test input &#39;&#39;&#39; if(Action==&#39;Fit&#39;): nf = X.shape[1] pca = PCA(n_components=nf) pca.fit(X) print(pca.singular_values_) if(Action==&#39;Fit_Transform&#39;): nf = X.shape[1] pca = PCA(n_components=nf) pca.fit(X) n=np.sum(pca.singular_values_&gt;umbral) pca = PCA(n_components=n) pca.fit(X) X_new=pca.transform(X) X_t_new=pca.transform(X_t) return X_new,X_t_new . Others . class Standarizador_normal: &#39;&#39;&#39; Standarizador estandar. &#39;&#39;&#39; def __init__(self): self.std = {} self.mean = {} def fit(self,X,name): &#39;&#39;&#39; Calcula media y desviación standar de una feature Arguments: X: DataFrame input name: feature name &#39;&#39;&#39; self.mean[name]=np.mean(X[name]) self.std[name]=np.std(X[name]) def transform(self,X,name): &#39;&#39;&#39; transforma una feature Arguments: X: DataFrame input name: feature name Return: transformed output &#39;&#39;&#39; X[name]=(X[name]- self.mean[name])/self.std[name] return . class Standarizador: &#39;&#39;&#39; Standarizador especial para operar sobre todas las columnas históricas de un tipo, al mismo tiempo. &#39;&#39;&#39; def __init__(self): self.std = {} self.mean = {} def fit(self,X,name): &#39;&#39;&#39; Calcula media y desviación standar de una feature Arguments: X: input name: feature name &#39;&#39;&#39; self.mean[name]=np.mean(X.values) self.std[name]=np.std(X.values) def transform(self,X,name): &#39;&#39;&#39; transforma una feature Arguments: X: input name: feature name Return: transformed output &#39;&#39;&#39; return (X- self.mean[name])/self.std[name] . MODELOS . . from tensorflow.keras.models import Sequential from tensorflow.keras.layers import Dense, SimpleRNN, Dropout ,concatenate,LSTM, Reshape from tensorflow.keras import metrics, Input, Model from tensorflow.keras import losses, optimizers from tensorflow.keras.callbacks import EarlyStopping from tensorflow.keras.backend import clear_session from sklearn.model_selection import GridSearchCV from sklearn.ensemble import RandomForestClassifier from sklearn.decomposition import PCA . def clean_all_models(): &#39;&#39;&#39; Borra todos los modelos de la memoria &#39;&#39;&#39; clear_session() return . Random Forest . def Cross_Validation_RandomForest(Grid,X,y,k=7): &#39;&#39;&#39; Hace un cross validation para un Random Forest Arguments: Grid= grid de parametros para probar X= Train input y= Train output k= orden del K-fold cross validation (numeor de splits) Returns: Hiper-parametros optimos &#39;&#39;&#39; forest_clas = RandomForestClassifier(random_state=42,n_jobs=4) grid_search = GridSearchCV(forest_clas, Grid, cv=k,scoring=&#39;accuracy&#39;,return_train_score=True,verbose=4) grid_search.fit(X, y) print(&quot;Scorer&quot;) print(grid_search.scorer_) print(&quot;Best Score&quot;) print(grid_search.best_score_) print(&quot;the best trained model:&quot;) print(grid_search.best_estimator_) return grid_search.best_estimator_ . Red Neuronal Densa . def create_NN(output_units,hidden_units,activation,drop_out,input_shape,met): &#39;&#39;&#39; Crea una red neuronal densa Arguments: output_units: output shape hidden_units: numero de nodos en cada layer activation: lista con las funciones de activacion de las layers drop_out: lista con los dropout de las layers input_shape: tamaño del input (numero de features o columnas) met: metricas Returns: model: modelo &#39;&#39;&#39; model = Sequential() N=np.arange(len(hidden_units)) for h,a,d,i in zip(hidden_units,activation,drop_out,N): if(i==0): model.add(Dense(h, activation=a, input_shape=(input_shape,))) else: model.add(Dense(h, activation=a)) if(d&gt;0): model.add(Dropout(d)) model.add(Dense(output_units, activation=&#39;softmax&#39;)) model.summary() adam = optimizers.Adam(learning_rate=2*10**-4) model.compile(loss=&#39;categorical_crossentropy&#39;, optimizer= adam, metrics=met) return model . Modelo Red Recurrente Simple . def create_RNN(hidden_units_RNN,hidden_units_dense_extra, activation_dense_extra,drop_out, output_units, input_shape,met): &#39;&#39;&#39; Crea una red neuronal recurrente simple Arguments: hidden_units_RNN: layers recurrentes hidden_units_dense_extra: layers densas activation_dense_extra: lista con las funciones de activación de las layers densas drop_out: lista con los dropout de las layers densas output_units: dimensiones del output input_shape: (time_steps,predictors) met: metricas Returns: model: modelo &#39;&#39;&#39; model = Sequential() model.add(SimpleRNN(hidden_units_RNN, input_shape=input_shape, dropout=0.1, recurrent_dropout=0.1)) #,activation=activation[0] for h,a,d in zip(hidden_units_dense_extra,activation_dense_extra,drop_out): model.add(Dense(h, activation=a)) if(d&gt;0): model.add(Dropout(d)) model.add(Dense(units=output_units, activation=&quot;softmax&quot;)) model.summary() adam = optimizers.Adam(learning_rate=2*10**-4) model.compile(loss=&#39;categorical_crossentropy&#39;, optimizer=adam,metrics=met) return model . Modelo Red Recurrente Long short-term memory (LSTM) . def create_LSTM(hidden_units_RNN,hidden_units_dense_extra, activation_dense_extra,drop_out, output_units, input_shape,met): &#39;&#39;&#39; Crea una red neuronal recurrente Long short-term memory Arguments: hidden_units_RNN: layers recurrentes hidden_units_dense_extra: layers densas activation_dense_extra: lista con las funciones de activación de las layers densas drop_out: lista con los dropout de las layers densas output_units: dimensiones del output input_shape: (time_steps,predictors) met: metricas Returns: model: modelo &#39;&#39;&#39; model = Sequential() model.add(LSTM(hidden_units_RNN, input_shape=input_shape, dropout=0.1, recurrent_dropout=0.1)) #,activation=activation[0] for h,a,d in zip(hidden_units_dense_extra,activation_dense_extra,drop_out): model.add(Dense(h, activation=a)) if(d&gt;0): model.add(Dropout(d)) model.add(Dense(units=output_units, activation=&quot;softmax&quot;)) model.summary() adam = optimizers.Adam(learning_rate=2*10**-4) model.compile(loss=&#39;categorical_crossentropy&#39;, optimizer=adam,metrics=met) return model . Modelo Mixto (RNN + Denso) . def Create_Mix_Model(tipo_RNN ,recurrent_units, dense_units,dense_drop_out, out_shape, input_shape_history,input_shape_now,met): &#39;&#39;&#39; Crea una red mixta que consta de dos capas recurrentes para tratar los datos temporales de cada equipo y una capa densa donde se ingresan los outputs de esas capas recurrentes + se agregan datos referentes al partido a modelar. Arguments: tipo_RNN: Tipo de red recurrente LSTM o Simple recurrent_units: layers de la capa recurrente dense_units: lista de numero de nodos de la capa densa dense_drop_out: porcentage de drop out para regularizar out_shape: shape del output (target) input_shape_history: shape de los inputs de las capas recurrentes (time_steps,predictors) input_shape_now: shape de los inputs de la capa densa met: metricas a evaluar Returns: model: modelo &#39;&#39;&#39; # define two sets of inputs a = Input(shape=input_shape_history) b = Input(shape=input_shape_history) c = Input(shape=(input_shape_now,)) # the first branch operates on the first input if(tipo_RNN==&#39;Simple&#39;): m1 = SimpleRNN(recurrent_units, input_shape=input_shape_history, dropout=0.1, recurrent_dropout=0,use_bias=False,unroll=False,return_sequences=True,return_state=False)(a) m2 = SimpleRNN(recurrent_units, input_shape=input_shape_history, dropout=0.1, recurrent_dropout=0,use_bias=False,unroll=False,return_sequences=True,return_state=False)(b) elif(tipo_RNN==&#39;LSTM&#39;): m1 = LSTM(recurrent_units, input_shape=input_shape_history, dropout=0.1, recurrent_dropout=0,use_bias=False,unroll=True,return_sequences=True,return_state=False)(a) m2 = LSTM(recurrent_units, input_shape=input_shape_history, dropout=0.1, recurrent_dropout=0,use_bias=False,unroll=True,return_sequences=True,return_state=False)(b) M1=Reshape((input_shape_history[0]*recurrent_units,), input_shape=input_shape_history)(m1) M2=Reshape((input_shape_history[0]*recurrent_units,), input_shape=input_shape_history)(m2) # combine the output of the three branches M = concatenate([M1,M2,c]) z = Dense(units=dense_units[0], activation=&#39;relu&#39;)(M) z = Dropout(dense_drop_out)(z) z = Dense(units=dense_units[1], activation=&#39;relu&#39;)(z) z = Dropout(dense_drop_out)(z) z = Dense(units=dense_units[2], activation=&#39;relu&#39;)(z) z = Dropout(dense_drop_out)(z) z = Dense(units=dense_units[3], activation=&#39;relu&#39;)(z) z = Dropout(dense_drop_out)(z) z = Dense(units=dense_units[4], activation=&#39;relu&#39;)(z) z = Dense(units=out_shape, activation=&quot;softmax&quot;)(z) # our model will accept the inputs of the two branches and # then output a single value model = Model(inputs=[a, b, c], outputs=z,name=&#39;Modelo_IFA&#39;) model.summary() adam = optimizers.Adam(learning_rate=1*10**-4) model.compile(loss=&#39;categorical_crossentropy&#39;, optimizer=adam,metrics=met) return model . ANALISIS DE LOS RESULTADOS DE LOS MODELOS . from sklearn import metrics . M&#233;tricas . def compare_to_vect(y_l,y_p): &#39;&#39;&#39; Compara target con predicción Devuelve un diccionario con el &quot;accuracy&quot; y otra metrica más Arguments: y_1: target y_p: output de probabilidades Return: R: diccionario con resultados &#39;&#39;&#39; R={} y2=from_prob_to_outcome(y_p) y11=np.array(y_l) y22=np.array(y2) y33=np.array(y_p) s=0 l=len(y11) for i in range(l): s=s+np.sum(np.abs(y11[i]-y22[i]))/2 R[&#39;Acc&#39;]=(l-s,(l-s)/l) s=0 for i in range(l): s=s+np.sum(np.abs(y11[i]-y33[i])) #s=s+np.sqrt(np.sum((y11[i]-y33[i])**2)) R[&#39;Abs_mean_distance&#39;]=s/l return R . def Accuracy(y,y_p,y_t,y_t_p): &#39;&#39;&#39; Calcula accuracy y otra metrica para el train y test, y lo imprime por pantalla Arguments: y: target train y_p: predicciones train y_t: target test y_t_p: predicciones test &#39;&#39;&#39; print(&#39;ACCURACY n&#39;) print(&#39;Train:&#39;) print(compare_to_vect(y,y_p)) print(&#39;Test:&#39;) print(compare_to_vect(y_t,y_t_p)) return . def draw_confusion(y,y_p,y_t,y_t_p): &#39;&#39;&#39; Imprime matrix de confusion Arguments: y: target train y_p: predicciones train y_t: target test y_t_p: predicciones test &#39;&#39;&#39; labels=labels_confusion_matrix(y) fig, axs = plt.subplots(nrows = 1,ncols = 2) for title,yy,yy_p,a in zip([&#39;Train&#39;,&#39;Test&#39;],[y,y_t],[y_p,y_t_p],axs): y_hat = from_prob_to_outcome(yy_p) y_hat_class = np.argmax(y_hat, axis = 1) y_class = np.argmax(np.array(yy), axis = 1) cm = metrics.confusion_matrix(y_class, y_hat_class) a.matshow(cm) a.set_title(&#39;Confusion Matrix &#39;+title,size=15) a.set_xticklabels([&#39;&#39;] + labels, size=15) a.set_yticklabels([&#39;&#39;] + labels, size=15) a.set_ylabel(&#39;Predicted&#39;,size=15) a.set_xlabel(&#39;True&#39;,size=15) for i in range(3): for j in range(3): a.text(i, j, cm[i,j], va=&#39;center&#39;, ha=&#39;center&#39;,color=&#39;white&#39;,size=20) fig.set_size_inches(10,10) plt.subplots_adjust(wspace=0.5) plt.show() . def Plot_metric_Model(history): &#39;&#39;&#39; Plotea loss y accuracy en funcion del epoch Arguments: history: return del fit de modelo &#39;&#39;&#39; fig, ax = plt.subplots(1, 2, figsize=(20,4)) metric=[&#39;loss&#39;,&#39;accuracy&#39;] pos=[&quot;upper right&quot;,&quot;upper left&quot;] for a,m,p in zip(ax,metric,pos): a.plot(history.history[m], &#39;-o&#39;,label=&#39;Training data&#39;) a.plot(history.history[&#39;val_&#39;+m],&#39;-o&#39;, label=&#39;Validation data&#39;) a.set_title(&#39;Training Evolution - &#39;+m,fontsize=16) a.set_ylabel(&#39;Value&#39;,fontsize=14) a.set_xlabel(&#39;No. epoch&#39;,fontsize=14) a.legend(loc=p) plt.show() return . Tablas de Reporte . def Report_RF_results(model,model_name,X,y,X_t,y_t,Rep): &#39;&#39;&#39; Realiza un reporte del RF Arguments: model: RF trained model model_name: nombre especifico de ese modelo X: train input y: train target X_t: test input y_t: test target Rep: Dict donde llenar el reporte Returns: Rep: Dict de reporte &#39;&#39;&#39; y_p=model.predict(X) Rep[&#39;Nombre&#39;].append(model_name+&#39; Train&#39;) Rep[&#39;Accuracy&#39;].append(model.score(X,y)) Rep[&#39;F1_macro&#39;].append(metrics.f1_score(y,y_p,average=&#39;macro&#39;)) #Rep[&#39;AUC&#39;].append(metrics.roc_auc_score(y,y_p)) y_p=model.predict(X_t) Rep[&#39;Nombre&#39;].append(model_name+&#39; Test&#39;) Rep[&#39;Accuracy&#39;].append(model.score(X_t,y_t)) Rep[&#39;F1_macro&#39;].append(metrics.f1_score(y_t,y_p,average=&#39;macro&#39;)) #Rep[&#39;AUC&#39;].append(metrics.roc_auc_score(y,y_p)) display(pd.DataFrame(Rep)) return Rep . def Print_Report(y, y_pred,y_t, y_t_pred): &#39;&#39;&#39; Imprime reporte de metricas para el train y test Arguments: y: target train y_pred: predicciones train y_t: target test y_t_pred: predicciones test &#39;&#39;&#39; ll=labels_confusion_matrix(y) l_train=[l+&#39;_train&#39; for l in ll] y_hat = from_prob_to_outcome(y_pred) Tr=metrics.classification_report(y,y_hat, output_dict=True,target_names=l_train) Tr=pd.DataFrame(Tr) l_test=[l+&#39;_test&#39; for l in ll] y_hat = from_prob_to_outcome(y_t_pred) Te=metrics.classification_report(y_t,y_hat, output_dict=True,target_names=l_test) Te=pd.DataFrame(Te) display(Tr) display(Te) return . def Append_line_to_report_table(DF,diccionario,name,RNN,partidos,N_Features_h,N_Features_m): &#39;&#39;&#39; Agrega una linea al reporte de resultados Arguments: DF: DataFrame de reporte diccionario: diccionario con resultados de un modelo name: nombre del modelo al que corresponden los resultados RNN: tipo de red neuronal recurrente utilizada partidos: número de partidos considerados N_Features_h: número de variables por partido del historial consideradas N_Features_m: número de variables referentes al partido a modelar consideradas. Returns: DF: Reporte con la linea nueva anexada &#39;&#39;&#39; diccionario[&#39;Partidos Considerados&#39;]=partidos diccionario[&#39;RNN&#39;]=RNN diccionario[&#39;N_Features_m&#39;]=N_Features_m diccionario[&#39;N_Features_h&#39;]=N_Features_h new_line=pd.DataFrame(diccionario, index=[name,]) DF=DF.append(new_line) display(DF) return DF . def Append_line_to_report_table_2(DF,diccionario,name,RNN,partidos,N_Features_h,N_Features_m,batch_size): &#39;&#39;&#39; Agrega una linea al reporte de resultados Arguments: DF: DataFrame de reporte diccionario: diccionario con resultados de un modelo name: nombre del modelo al que corresponden los resultados RNN: tipo de red neuronal recurrente utilizada partidos: número de partidos considerados N_Features_h: número de variables por partido del historial consideradas N_Features_m: número de variables referentes al partido a modelar consideradas. batch_size: Número de muestras que se pasan al modelo por iteración de aprendizaje Returns: DF: Reporte con la linea nueva anexada &#39;&#39;&#39; diccionario[&#39;Partidos Considerados&#39;]=partidos diccionario[&#39;RNN&#39;]=RNN diccionario[&#39;N_Features_m&#39;]=N_Features_m diccionario[&#39;N_Features_h&#39;]=N_Features_h diccionario[&#39;Batch_size&#39;]=batch_size new_line=pd.DataFrame(diccionario, index=[name,]) DF=DF.append(new_line) display(DF) return DF . def plot_report_table(DF,columna,Y_label,RNN,N_h,N_m): &#39;&#39;&#39; Realiza un grafico de una columna del dataframe vs un X pasado por variable Arguments: DF: DataFrame de reporte columna: Y del plot Y_label: nombre de Y RNN: lista de tipos de RNN a graficar N_h: lista de numero de parámetros históricos a considerar N_m: lista de numero de parámetros del partido a considerar &#39;&#39;&#39; plt.figure(figsize=(8, 6), dpi=100) for r in RNN: for h in N_h: for m in N_m: lab=&#39;Tipo de RNN: &#39;+r+r&#39;, # V x $P_h$: &#39;+str(h)+r&#39;, # V x $P_m$: &#39;+str(m) if(r==&#39;Simple&#39;): mark=&#39;-s&#39; elif(r==&#39;LSTM&#39;): mark=&#39;-o&#39; plt.plot(DF[&#39;Partidos Considerados&#39;][(DF[&#39;RNN&#39;]==r) &amp; ((DF[&#39;N_Features_h&#39;]==h) &amp; (DF[&#39;N_Features_m&#39;]==m))],DF[columna][(DF[&#39;RNN&#39;]==r) &amp; ((DF[&#39;N_Features_h&#39;]==h) &amp; (DF[&#39;N_Features_m&#39;]==m))],mark, label= lab) plt.xlabel(&#39;Numero de partidos considerados&#39;,fontsize=14) plt.ylabel(Y_label,fontsize=14) plt.legend(loc=&#39;center left&#39;, bbox_to_anchor=(1, 0.5)) plt.show() . Otros . from tensorflow.keras.callbacks import EarlyStopping def Full_train_and_Report(model,X_train,y_train,X_test,y_test,batch_size,epochs,validation_split,num_classes=3,history_plot=True,confusion_matrix=True,Report_print=True): &#39;&#39;&#39; Entrena un modelo y reporta el resultado Arguments: model: Modelo X_train: train input y_train: train target X_test: test input y_test: test target batch_size: batch size epochs: epochs validation_split: tamaño set de validacion num_classes: numero de clases en el target history_plot: bool , graficar evolucion del training confusion_matrix: bool, graficar matrix de confusion Report_print: bool, imprimir reporte de test y train Returns: y_prediction_train: train prediction y_prediction_test: test prediction D: Diccionario con un reporte de resutados &#39;&#39;&#39; cb=[EarlyStopping(monitor=&#39;val_loss&#39;, patience=3, min_delta=0.0001)] history = model.fit(X_train, y_train, epochs = epochs , shuffle=True , batch_size = batch_size, verbose=1, validation_split=validation_split, callbacks=cb) if(history_plot): Plot_metric_Model(history) y_prediction_train=model.predict(X_train) y_prediction_test=model.predict(X_test) if(confusion_matrix): draw_confusion(y_train,y_prediction_train,y_test,y_prediction_test) if(Report_print): Print_Report(y_train,y_prediction_train,y_test,y_prediction_test) D={} for m in model.metrics: name=m.name D[name+&#39; train&#39;]=m(y_train,y_prediction_train).numpy() D[name+&#39; test&#39;]=m(y_test,y_prediction_test).numpy() return y_prediction_train, y_prediction_test,D . Auxiliar . def labels_confusion_matrix(y): &#39;&#39;&#39; Genera lista de las clases del target ordenadas Arguments: y: target train Returns: labels: lista de labels &#39;&#39;&#39; labels=[] D={&#39;EqA_Derrota&#39;:&#39;Eq_B_win&#39;,&#39;EqA_Empate&#39;:&#39;Empate&#39;,&#39;EqA_Victoria&#39;:&#39;Eq_A_win&#39;} for l in list(y.columns): labels.append(D[l]) return labels . def from_prob_to_outcome(y_p): &#39;&#39;&#39; transforma output de probabilidades en output de outcomes Arguments: y_p: output de probabilidades Return: y_outcome: output de outcomes &#39;&#39;&#39; y_outcome=(y_p-np.max(y_p,axis=1).reshape(len(y_p),1)==0)*1 return y_outcome .",
            "url": "https://faegru.github.io/FMP_UB_final_project_2022/2022/06/30/7_Functions_for_FMP.html",
            "relUrl": "/2022/06/30/7_Functions_for_FMP.html",
            "date": " • Jun 30, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "6) ANALISIS DEL DATASET A MODELAR",
            "content": "La mayoria de las funciones utilizadas en este projecto están en el modulo: . import Functions_for_FMP as fffmp . CARGA DE DATOS . Empezamos, como siempre, cargando los datos. Pero, en esta oportunidad, cargaremos tres datasets para compararlos: . 1) &#39;FMP_final&#39; (FMP_org): El dataset generado en el bloque 3. Con las variables finales. . 2) &#39;FMP_Balance_V_vs_D&#39; (FMP_bal_VvsD): El dataset donde balanceamos victorias y derrotas a través de agregar una variable de localía e intercambiar locales y visitantes. . 3) &#39;FMP_training_bal_tot&#39; (FMP_bal_tot): El dataset utilizado en el modelo, donde balanceamos todos las clases a través de un undersampling y oversampling . data=&#39;FMP_final&#39; FMP_org = pd.read_pickle(data) . data=&#39;FMP_Balance_V_vs_D&#39; FMP_bal_VvsD = pd.read_pickle(data) . data=&#39;FMP_training_bal_tot&#39; FMP_bal_tot = pd.read_pickle(data) . COMPARACIONES . La idea principal de este último bloque fue mirar como lucía nuestro set de datos después del proceso de balanceo de las clases de targets. Para ello analizaremos brevemente la distribución de resultados bajo algunas condiciones para los tres Dataframes. . 1) Distribuci&#243;n de Resultados . Empecemos por lo más básico, la distribución de resultados para cada uno: . Original: . variable=&#39;target&#39; x_label=&#39;Resultado&#39; fffmp.Histograma_VAR_categorica(FMP_org,variable,x_label) . . Balance Derrotas-Victorias: . variable=&#39;target&#39; x_label=&#39;Resultado&#39; fffmp.Histograma_VAR_categorica(FMP_bal_VvsD,variable,x_label) . . Balance Total: . variable=&#39;target&#39; x_label=&#39;Resultado&#39; fffmp.Histograma_VAR_categorica(FMP_bal_tot,variable,x_label) . . Efectivamente, cumplimos nuestro objetivo de balancear los posibles resultados. . 2) Local&#237;a . Tal como se explicó en el bloque 5), el balanceo de victorias y derrotas no implicaba una alteración de la información del dataset, solo un reordenamiento de la misma. Luego, deberíamos recuperar la información al tener en cuenta el feature de localía: . Original: . variable=&#39;target&#39; x_label=&#39;Resultado&#39; fffmp.Histograma_VAR_categorica(FMP_org,variable,x_label) . . Balance Derrotas-Victorias: . variable=&#39;target&#39; variable_condicional=&#39;EqA_Local&#39; condicion_numerica=0 x_label=&#39;Resultado&#39; tipo_de_condición=&#39;bool&#39; fffmp.Histograma_condicional_numerica(FMP_bal_VvsD,variable,variable_condicional,tipo_de_condición,condicion_numerica,x_label,&#39;lower right&#39;) . . Tal como vemos,una vez considerada la localía, recuperamos la misma distribución: . Local $ approx43 %$ de probabilidades de ganar | Visitante $ approx32 %$ de probabilidades de ganar | Empate $ approx25 %$ de probabilidades de ganar | . Esto obviamente se ve alterado en el último paso, tal como se ve aqui abajo: . Balance Total: . variable=&#39;target&#39; variable_condicional=&#39;EqA_Local&#39; condicion_numerica=0 x_label=&#39;Resultado&#39; tipo_de_condición=&#39;bool&#39; fffmp.Histograma_condicional_numerica(FMP_bal_tot,variable,variable_condicional,tipo_de_condición,condicion_numerica,x_label,&#39;lower right&#39;) . . ¿Quiere esto decir que alteramos la información de nuestro set de datos? En realidad no, solamente cambiamos la distribución de ocurrencias de los resultados en nuestro dataset. Y aquí es donde se ve claramente que estos valores no son (al menos necesariamente) probabilidades reales. . Si miramos a como se altera esta distribución en función de la localía, veremos que la misma información esta allí: . En los datasets anteriores la cantidad de victorias locales era de $ approx43 %$ contra un $ approx32 %$ de los visitantes. Lo que implica que una victoria local es $ approx 1.35$ veces más probable. | En este dataset la cantidad de victorias locales es de $ approx38 %$ contra un $ approx28 %$ de los visitantes. Lo que implica que, nuevamente, una victoria local es $ approx 1.35$ veces más probable. | . Esto muestra que no estamos perdiendo (al menos a este nivel), ninguna información al transformar y balancear nuestro set de datos. Más aún. permite ver esa sutil diferencia entre la distribución de outcomes y la probabilidad. Por esa razon, a la hora de analizar el problema, creo que siempre es más seguro mirar como se altera la distribución de outcomes en función de los distintos parámetros en juego, en lugar de los valores absolutos de esa distribución. . CURIOSIDADES . Aprovechemos entonces para ver unas curiosidades con el dataset final (totalmente balanceado). . 1) &#191;Deber&#237;a apostar por un equipo que gan&#243; sus &#250;ltimos 10 partidos? . variable=&#39;target&#39; variable_condicional=&#39;Equipo_A_outcome_V&#39; x_label=&#39;Resultado&#39; n=10 fffmp.Histograma_historic_condition_n_times(FMP_bal_tot,variable,variable_condicional,n,x_label,legend_pos=&#39;lower right&#39;) . . Sí. Las probabilidades de que gane van a ser cerca de dos veces mayores que la media. . 2) &#191;Que pasa si su oponente gano al menos 7 de sus &#250;ltimos 10? . variable=&#39;target&#39; variable_condicional_1=&#39;Equipo_A_outcome_V&#39; n1=10 variable_condicional_2=&#39;Equipo_B_outcome_V&#39; n2=7 x_label=&#39;Resultado&#39; tipo=&#39;both &gt;=&#39; fffmp.Histograma_historic_2_condition_n_times(FMP_bal_tot,variable,tipo,variable_condicional_1,n1,variable_condicional_2,n2,x_label,legend_pos=&#39;best&#39;) . . Bueno, no tenemos muchos casos, pero las chances de que gane son $1.5$ veces mayores. . 3) &#191;Y si el rival gan&#243; como m&#225;ximo 3 de sus &#250;ltimos 10? . variable=&#39;target&#39; variable_condicional_1=&#39;Equipo_A_outcome_V&#39; n1=10 variable_condicional_2=&#39;Equipo_B_outcome_V&#39; n2=3 x_label=&#39;Resultado&#39; tipo=&#39;1 &gt;= 2 &lt;=&#39; fffmp.Histograma_historic_2_condition_n_times(FMP_bal_tot,variable,tipo,variable_condicional_1,n1,variable_condicional_2,n2,x_label,legend_pos=&#39;best&#39;) . . Definitivamente hazlo, tus chances se incrementan en un $ approx 2.25$! . Lo dejaremos aquí por ahora. .",
            "url": "https://faegru.github.io/FMP_UB_final_project_2022/2022/06/30/6_Analisis_Data_Frame_Modelo.html",
            "relUrl": "/2022/06/30/6_Analisis_Data_Frame_Modelo.html",
            "date": " • Jun 30, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "5) GENERACION DEL MODELO PREDICTIVO",
            "content": "La mayoria de las funciones utilizadas en este projecto están en el modulo: . import Functions_for_FMP as fffmp . CARGA DE DATOS . Empezamos, como siempre, cargando los datos. En este caso el dataset generado en el bloque 2). . data=&#39;FMP_final&#39; FMP = pd.read_pickle(data) . display(FMP) . id target is_cup home_team_history_is_play_home_1 home_team_history_is_play_home_2 home_team_history_is_play_home_3 home_team_history_is_play_home_4 home_team_history_is_play_home_5 home_team_history_is_play_home_6 home_team_history_is_play_home_7 home_team_history_is_play_home_8 home_team_history_is_play_home_9 home_team_history_is_play_home_10 home_team_history_is_cup_1 home_team_history_is_cup_2 home_team_history_is_cup_3 home_team_history_is_cup_4 home_team_history_is_cup_5 home_team_history_is_cup_6 home_team_history_is_cup_7 home_team_history_is_cup_8 home_team_history_is_cup_9 home_team_history_is_cup_10 away_team_history_is_play_home_1 away_team_history_is_play_home_2 away_team_history_is_play_home_3 away_team_history_is_play_home_4 away_team_history_is_play_home_5 away_team_history_is_play_home_6 away_team_history_is_play_home_7 away_team_history_is_play_home_8 away_team_history_is_play_home_9 away_team_history_is_play_home_10 away_team_history_is_cup_1 away_team_history_is_cup_2 away_team_history_is_cup_3 away_team_history_is_cup_4 away_team_history_is_cup_5 away_team_history_is_cup_6 away_team_history_is_cup_7 away_team_history_is_cup_8 away_team_history_is_cup_9 away_team_history_is_cup_10 home_rating_diff_1 home_rating_diff_2 home_rating_diff_3 home_rating_diff_4 home_rating_diff_5 home_rating_diff_6 home_rating_diff_7 home_rating_diff_8 home_rating_diff_9 home_rating_diff_10 away_rating_diff_1 away_rating_diff_2 away_rating_diff_3 away_rating_diff_4 away_rating_diff_5 away_rating_diff_6 away_rating_diff_7 away_rating_diff_8 away_rating_diff_9 away_rating_diff_10 Rating_diff home_goal_diff_1 home_goal_diff_2 home_goal_diff_3 home_goal_diff_4 home_goal_diff_5 home_goal_diff_6 home_goal_diff_7 home_goal_diff_8 home_goal_diff_9 home_goal_diff_10 away_goal_diff_1 away_goal_diff_2 away_goal_diff_3 away_goal_diff_4 away_goal_diff_5 away_goal_diff_6 away_goal_diff_7 away_goal_diff_8 away_goal_diff_9 away_goal_diff_10 home_coach_continuity_1 home_coach_continuity_2 home_coach_continuity_3 home_coach_continuity_4 home_coach_continuity_5 home_coach_continuity_6 home_coach_continuity_7 home_coach_continuity_8 home_coach_continuity_9 home_coach_continuity home_coach_continuity_10 away_coach_continuity_1 away_coach_continuity_2 away_coach_continuity_3 away_coach_continuity_4 away_coach_continuity_5 away_coach_continuity_6 away_coach_continuity_7 away_coach_continuity_8 away_coach_continuity_9 away_coach_continuity away_coach_continuity_10 home_partidos_tres_semanas home_partidos_diez_dias home_partidos_cuatro_dias away_partidos_tres_semanas away_partidos_diez_dias away_partidos_cuatro_dias diff_num_partidos_tres_semanas diff_num_partidos_diez_dias diff_num_partidos_cuatro_dias home_relevance_1 home_relevance_2 home_relevance_3 home_relevance_4 home_relevance_5 home_relevance_6 home_relevance_7 home_relevance_8 home_relevance_9 home_relevance_10 away_relevance_1 away_relevance_2 away_relevance_3 away_relevance_4 away_relevance_5 away_relevance_6 away_relevance_7 away_relevance_8 away_relevance_9 away_relevance_10 home_outcome_V_1 home_outcome_D_1 home_outcome_V_2 home_outcome_D_2 home_outcome_V_3 home_outcome_D_3 home_outcome_V_4 home_outcome_D_4 home_outcome_V_5 home_outcome_D_5 home_outcome_V_6 home_outcome_D_6 home_outcome_V_7 home_outcome_D_7 home_outcome_V_8 home_outcome_D_8 home_outcome_V_9 home_outcome_D_9 home_outcome_V_10 home_outcome_D_10 away_outcome_V_1 away_outcome_D_1 away_outcome_V_2 away_outcome_D_2 away_outcome_V_3 away_outcome_D_3 away_outcome_V_4 away_outcome_D_4 away_outcome_V_5 away_outcome_D_5 away_outcome_V_6 away_outcome_D_6 away_outcome_V_7 away_outcome_D_7 away_outcome_V_8 away_outcome_D_8 away_outcome_V_9 away_outcome_D_9 away_outcome_V_10 away_outcome_D_10 home_is_friendly_1 home_is_friendly_2 home_is_friendly_3 home_is_friendly_4 home_is_friendly_5 home_is_friendly_6 home_is_friendly_7 home_is_friendly_8 home_is_friendly_9 home_is_friendly_10 away_is_friendly_1 away_is_friendly_2 away_is_friendly_3 away_is_friendly_4 away_is_friendly_5 away_is_friendly_6 away_is_friendly_7 away_is_friendly_8 away_is_friendly_9 away_is_friendly_10 is_friendly home_result_ponderado_1 home_result_ponderado_2 home_result_ponderado_3 home_result_ponderado_4 home_result_ponderado_5 home_result_ponderado_6 home_result_ponderado_7 home_result_ponderado_8 home_result_ponderado_9 home_result_ponderado_10 away_result_ponderado_1 away_result_ponderado_2 away_result_ponderado_3 away_result_ponderado_4 away_result_ponderado_5 away_result_ponderado_6 away_result_ponderado_7 away_result_ponderado_8 away_result_ponderado_9 away_result_ponderado_10 . 0 11906497 | away | 0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | -1.342980 | 2.030337 | -0.796066 | 3.485692 | 1.398131 | 1.959759 | -4.030432 | 5.093217 | -0.487941 | 3.651948 | -0.655225 | 9.005604 | 6.260047 | 4.982057 | 8.195400 | -1.206981 | 1.859646 | 9.929757 | 7.913075 | 1.239743 | -3.218928 | -1.0 | 2.0 | -1.0 | -4.0 | 2.0 | 0.0 | 0.0 | 2.0 | 0.0 | 3.0 | -1.0 | 2.0 | -1.0 | 1.0 | 1.0 | -1.0 | 0.0 | 2.0 | 2.0 | 2.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 2.0 | 1.0 | 0.0 | 3.0 | 1.0 | 0.0 | -1.0 | 0.0 | 0.0 | 5 | 20 | 27 | 32 | 42 | 57 | 63 | 69 | 76 | 90 | 7 | 16 | 20 | 28 | 32 | 39 | 43 | 50 | 55 | 60 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.183486 | 0.458626 | -0.114532 | -1.657239 | 0.307454 | -0.008029 | -0.018004 | 1.191019 | -0.002609 | 1.277268 | -0.096775 | 2.126546 | -0.775091 | 0.571638 | 0.948841 | -0.166340 | -0.007594 | 2.347528 | 1.865301 | 0.269580 | . 1 11984383 | home | 0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 9.997190 | -0.153606 | 5.810161 | -0.033087 | 3.685993 | 2.520600 | 0.976328 | 9.513444 | 2.707193 | 3.916450 | -0.881175 | -2.148550 | -4.238788 | 0.145350 | 4.425333 | -0.976328 | -1.943804 | -0.007279 | -3.834623 | -5.890736 | 2.893940 | -2.0 | -2.0 | 4.0 | -1.0 | -1.0 | 1.0 | -1.0 | 2.0 | -1.0 | 0.0 | 1.0 | -1.0 | -4.0 | 0.0 | -1.0 | 1.0 | -4.0 | 0.0 | -1.0 | 3.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 3.0 | 2.0 | 1.0 | 3.0 | 2.0 | 1.0 | 0.0 | 0.0 | 0.0 | 3 | 7 | 21 | 28 | 35 | 38 | 41 | 44 | 56 | 62 | 3 | 7 | 21 | 28 | 34 | 41 | 45 | 63 | 71 | 77 | 0 | 1 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 1 | 1 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -2.449570 | -0.065908 | 2.749671 | -0.018337 | -0.450559 | 0.282696 | -0.108928 | 2.247980 | -0.327153 | -0.016532 | 0.116627 | -0.285051 | -2.137610 | -0.000143 | -0.543773 | 0.127797 | -1.010141 | -0.000520 | -0.497628 | 2.166224 | . 2 11983301 | draw | 0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | -1.088475 | 5.692117 | 0.391980 | 2.249836 | -3.912490 | 3.762830 | -2.639839 | 9.112116 | -2.128075 | 1.532352 | 2.892081 | -2.847612 | 4.490550 | 1.803989 | 1.790383 | 3.918600 | 2.639839 | 2.319737 | 1.151759 | 6.159063 | -1.936780 | 2.0 | 2.0 | -1.0 | 1.0 | -1.0 | 0.0 | 0.0 | 1.0 | -2.0 | 0.0 | 2.0 | -1.0 | 0.0 | 2.0 | 1.0 | 1.0 | 0.0 | 1.0 | 4.0 | 0.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 2.0 | 2.0 | 1.0 | 2.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 2 | 9 | 27 | 35 | 41 | 45 | 56 | 63 | 69 | 73 | 9 | 20 | 35 | 41 | 45 | 49 | 56 | 63 | 69 | 73 | 1 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0.287141 | 1.334228 | -0.035255 | 0.250912 | -0.507446 | -0.015865 | -0.011961 | 1.056451 | -0.555203 | -0.006171 | 0.664686 | -0.373188 | -0.019027 | 0.404502 | 0.196978 | 0.446802 | -0.010984 | 0.259117 | 0.501601 | -0.026278 | . 3 11983471 | away | 0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.000000 | -0.163546 | 3.748775 | 3.382067 | 0.296500 | 3.746475 | -0.026269 | 8.459475 | 1.716836 | 3.508762 | 0.000000 | -1.646854 | 3.836917 | -3.382067 | 2.604050 | -0.296250 | -3.497111 | 0.928375 | -2.725695 | -2.332587 | 1.948494 | 0.0 | 1.0 | 4.0 | 0.0 | -1.0 | 1.0 | 1.0 | 0.0 | -1.0 | 0.0 | 0.0 | -2.0 | 1.0 | 0.0 | 5.0 | 0.0 | 1.0 | -1.0 | 1.0 | -1.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 3.0 | 2.0 | 1.0 | 2.0 | 2.0 | 1.0 | 1.0 | 0.0 | 0.0 | 3 | 7 | 20 | 26 | 29 | 35 | 41 | 56 | 64 | 66 | 3 | 7 | 22 | 26 | 30 | 36 | 42 | 56 | 59 | 65 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.000488 | 0.032387 | 1.754879 | -0.014210 | -0.023217 | 0.426597 | 0.016272 | -0.036276 | -0.202291 | -0.014760 | -0.000488 | -0.435951 | 0.437214 | -0.015186 | 1.505773 | -0.001776 | 0.423703 | -0.102883 | 0.333149 | -0.308254 | . 4 11883005 | home | 0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.760229 | 2.777133 | -0.958567 | 3.247532 | -2.595750 | 7.854948 | -0.296412 | 2.539583 | -0.512550 | 6.050450 | 0.774210 | -0.007142 | 0.361725 | 3.602960 | -4.391750 | 3.172159 | -5.302729 | 0.526319 | 3.559067 | -2.741227 | 0.456468 | -1.0 | 1.0 | 1.0 | 2.0 | 0.0 | 1.0 | 1.0 | 0.0 | -1.0 | 0.0 | 3.0 | -1.0 | 0.0 | 1.0 | 0.0 | 2.0 | -2.0 | 1.0 | 4.0 | 0.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 1 | 1 | 3.0 | 2.0 | 1.0 | 3.0 | 2.0 | 1.0 | 0.0 | 0.0 | 0.0 | 3 | 7 | 20 | 28 | 34 | 38 | 41 | 55 | 59 | 63 | 3 | 6 | 20 | 28 | 35 | 38 | 41 | 56 | 59 | 62 | 0 | 1 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.081683 | 0.312809 | 0.125712 | 0.749681 | -0.011769 | 0.908877 | 0.047984 | -0.010548 | -0.078787 | -0.025806 | 0.238832 | -0.015066 | -0.001084 | 0.409750 | -0.019574 | 0.731658 | -1.341916 | 0.048594 | 1.663329 | -0.012401 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 110933 18030016 | draw | 0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 4.314395 | 3.097305 | -1.018100 | 2.500928 | 4.521543 | 4.543730 | -1.999606 | 0.715786 | 0.236309 | 0.972825 | -2.231214 | -6.059825 | -3.341627 | -1.723150 | -0.445700 | -3.777150 | -0.336883 | 0.480100 | 1.219725 | 4.648450 | 0.000000 | 4.0 | 0.0 | -2.0 | 0.0 | -1.0 | 3.0 | 3.0 | 1.0 | -2.0 | 2.0 | 2.0 | -1.0 | 0.0 | 1.0 | -1.0 | 1.0 | 1.0 | 0.0 | -1.0 | 1.0 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 2.0 | 1.0 | 0.0 | 2.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 7 | 12 | 141 | 142 | 148 | 151 | 155 | 158 | 161 | 166 | 8 | 15 | 61 | 64 | 141 | 143 | 147 | 152 | 154 | 157 | 1 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 2.027838 | -0.012972 | -0.280139 | -0.010381 | -0.555903 | 1.599069 | 0.762104 | 0.070835 | -0.030718 | 0.205755 | 0.560392 | -0.778178 | -0.015011 | 0.215463 | -0.070359 | 0.456576 | 0.052734 | -0.001598 | -0.139616 | 0.532477 | . 110934 18030096 | away | 0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | -1.531022 | 5.721350 | 8.418071 | 6.470581 | 1.865955 | -7.140900 | -1.218767 | 1.557886 | -12.441148 | 10.097321 | -1.250494 | -3.458150 | 0.664461 | -0.759332 | -11.728517 | -12.716384 | 5.605381 | 6.632644 | -7.996775 | -1.669872 | 1.758697 | -1.0 | 1.0 | 3.0 | 2.0 | 8.0 | 0.0 | -3.0 | 3.0 | -1.0 | 0.0 | 0.0 | -1.0 | 2.0 | -1.0 | -3.0 | -3.0 | -1.0 | 1.0 | 0.0 | 2.0 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 2.0 | 1.0 | 0.0 | 2.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 6 | 21 | 27 | 46 | 50 | 57 | 64 | 120 | 122 | 124 | 6 | 20 | 26 | 41 | 47 | 120 | 122 | 124 | 127 | 129 | 0 | 1 | 1 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 1 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.207194 | 0.658421 | 2.997131 | 1.520373 | 1.700141 | -0.031522 | -0.491907 | 0.521623 | -1.582725 | -0.043394 | -0.005923 | -0.450163 | 0.132019 | -0.109901 | -4.375715 | -4.740775 | -0.692552 | 0.765395 | -0.035241 | 0.426164 | . 110935 17715497 | draw | 0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 2.019156 | -1.600320 | 4.409308 | -1.214033 | 3.572422 | -0.831350 | 3.157175 | 2.964567 | -1.796125 | 0.782550 | 3.839781 | 5.507413 | 5.618307 | -1.072485 | 5.490396 | -0.282014 | 4.877673 | 2.145550 | -3.490375 | -0.990867 | -0.967183 | 0.0 | -1.0 | 2.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | -3.0 | 0.0 | 0.0 | 1.0 | 2.0 | 0.0 | 1.0 | 3.0 | 1.0 | 2.0 | 1.0 | -1.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 1 | 4.0 | 4.0 | 1.0 | 4.0 | 4.0 | 1.0 | 0.0 | 0.0 | 0.0 | 2 | 5 | 8 | 9 | 47 | 51 | 55 | 61 | 135 | 139 | 2 | 6 | 8 | 9 | 47 | 51 | 55 | 62 | 142 | 145 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.008287 | -0.215931 | 1.027484 | -0.005764 | 0.406166 | -0.004101 | -0.013232 | -0.012395 | -0.705266 | -0.002913 | -0.016199 | 0.633308 | 1.316578 | -0.005149 | 0.631310 | 0.142308 | 0.559385 | 0.486176 | 0.422912 | -0.139092 | . 110936 17944153 | away | 0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.685053 | 0.483100 | -0.914850 | -1.181650 | 1.605083 | 1.526717 | 1.056593 | -0.252250 | -4.249755 | 2.833663 | -0.721922 | -1.544379 | -0.983140 | 0.661400 | -1.600300 | 1.017229 | -1.910996 | -2.063026 | 0.873972 | -2.219119 | 0.981163 | 0.0 | -2.0 | 0.0 | 1.0 | 0.0 | 1.0 | -3.0 | -2.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 2.0 | -1.0 | -2.0 | 0.0 | -1.0 | 2.0 | 0.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 3.0 | 1.0 | 0.0 | 3.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 7 | 12 | 18 | 28 | 34 | 75 | 78 | 83 | 101 | 106 | 6 | 13 | 19 | 26 | 31 | 75 | 79 | 84 | 96 | 102 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.002489 | -0.091875 | -0.004464 | 0.151899 | -0.006487 | 0.166027 | -0.348937 | -0.090353 | -0.018957 | 0.319445 | -0.003626 | -0.007200 | -0.004761 | 0.131287 | -0.215929 | -0.224238 | -0.008793 | -0.274268 | 0.182118 | -0.010132 | . 110937 17786297 | home | 0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.176178 | 3.723710 | -3.523262 | 2.112239 | 1.595383 | 1.261392 | 1.785570 | -1.355685 | 2.002817 | -1.703872 | 0.247417 | -2.152850 | -4.360537 | -1.550680 | 0.018106 | -5.484850 | -1.279433 | 0.290300 | -1.478107 | -0.511200 | 1.250977 | -1.0 | 0.0 | -1.0 | 0.0 | 2.0 | 0.0 | -1.0 | 2.0 | 1.0 | 3.0 | 0.0 | 1.0 | -1.0 | 1.0 | 1.0 | 0.0 | -1.0 | 0.0 | -1.0 | -5.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 3.0 | 1.0 | 0.0 | 5.0 | 3.0 | 1.0 | -2.0 | -2.0 | -1.0 | 5 | 12 | 19 | 26 | 34 | 40 | 44 | 47 | 55 | 62 | 2 | 5 | 8 | 12 | 19 | 27 | 34 | 39 | 46 | 54 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.008047 | -0.015695 | -0.458373 | -0.008691 | 0.354621 | -0.004994 | -0.210956 | 0.351036 | 0.221915 | 0.655388 | -0.000587 | 0.265905 | -0.563935 | 0.195218 | 0.011063 | -0.024325 | -0.175474 | -0.000773 | -0.200523 | -0.382244 | . 102912 rows × 216 columns . . BALANCE DE CLASES . Un aspecto importante a la hora de trabjar con clasificadores es tener clases de targets (nuestros tipos de resultados) balanceadas. Como ya sabemos esto es algo que no ocurre en nuestro dataset: . fffmp.Classes_counts(FMP) . . CLASES away : 32530 31.61 % draw : 25859 25.13 % home : 44523 43.26 % . Como podemos ver, el dataset presenta un desbalance entre las distintas categorías a predecir (esto es: home, draw y away). Esto puede ser un reflejo de la realidad, o simplemente un sesgo del dataset (yo creo, y lo usaré de esa manera, que en este caso la razón es la primera). De cualquiera de las dos maneras, dejarlo así podría producir (y de hecho pude comprobar que lo hace) un sesgo en el modelo. Al una categoria ser más &quot;frequente&quot;, el modelo puede adquirir un bías en el proceso de apendizaje. Esto lo vamos a corregir con dos estrategias distintas. . 1) Balance de derrotas y victorias . En primer lugar, es interesante notar que, de cierta forma, en realidad hay dos tipos fundamentales de resultados en un partido de futbol: un equipo gana, o hay un empate. Dicho esto, a priori uno no esperararía un desbalance entre dos categorías que son &quot;Victoria Equipo A&quot; y &quot;Victoria Equipo B&quot;; sin más información, los equipos A y B son indistinguibles. Pero, ¿por qué si hay diferencia entre &quot;away&quot; y &quot;home&quot;? ¿Es un artifact o estamos escondiendo un parámetro en la denominación de los equipos? Tiene sentido en este caso ir por la segunda suposición: estamos codificando la localía en el orden del dataset. Una forma de borrar ese sesgo es generar una variable que sea &quot;localía&quot;. Luego podemos reconvertir nuestras variables de forma que refieran a &quot;Equipo A&quot; y &quot;Equipo B&quot;, y enviar (aleatoriamente) mitad de los locales y visitantes a cada una. Esto automáticamente nos da un balance de las victorias y las derrotas. Veamos como queda: . FMP2=fffmp.data_balancing_Victorias_y_Derrotas(FMP) . id target is_cup Equipo_A_play_home_1 Equipo_A_play_home_2 Equipo_A_play_home_3 Equipo_A_play_home_4 Equipo_A_play_home_5 Equipo_A_play_home_6 Equipo_A_play_home_7 Equipo_A_play_home_8 Equipo_A_play_home_9 Equipo_A_play_home_10 Equipo_A_is_cup_1 Equipo_A_is_cup_2 Equipo_A_is_cup_3 Equipo_A_is_cup_4 Equipo_A_is_cup_5 Equipo_A_is_cup_6 Equipo_A_is_cup_7 Equipo_A_is_cup_8 Equipo_A_is_cup_9 Equipo_A_is_cup_10 Equipo_B_play_home_1 Equipo_B_play_home_2 Equipo_B_play_home_3 Equipo_B_play_home_4 Equipo_B_play_home_5 Equipo_B_play_home_6 Equipo_B_play_home_7 Equipo_B_play_home_8 Equipo_B_play_home_9 Equipo_B_play_home_10 Equipo_B_is_cup_1 Equipo_B_is_cup_2 Equipo_B_is_cup_3 Equipo_B_is_cup_4 Equipo_B_is_cup_5 Equipo_B_is_cup_6 Equipo_B_is_cup_7 Equipo_B_is_cup_8 Equipo_B_is_cup_9 Equipo_B_is_cup_10 Equipo_A_rating_diff_1 Equipo_A_rating_diff_2 Equipo_A_rating_diff_3 Equipo_A_rating_diff_4 Equipo_A_rating_diff_5 Equipo_A_rating_diff_6 Equipo_A_rating_diff_7 Equipo_A_rating_diff_8 Equipo_A_rating_diff_9 Equipo_A_rating_diff_10 Equipo_B_rating_diff_1 Equipo_B_rating_diff_2 Equipo_B_rating_diff_3 Equipo_B_rating_diff_4 Equipo_B_rating_diff_5 Equipo_B_rating_diff_6 Equipo_B_rating_diff_7 Equipo_B_rating_diff_8 Equipo_B_rating_diff_9 Equipo_B_rating_diff_10 Rating_diff Equipo_A_goal_diff_1 Equipo_A_goal_diff_2 Equipo_A_goal_diff_3 Equipo_A_goal_diff_4 Equipo_A_goal_diff_5 Equipo_A_goal_diff_6 Equipo_A_goal_diff_7 Equipo_A_goal_diff_8 Equipo_A_goal_diff_9 Equipo_A_goal_diff_10 Equipo_B_goal_diff_1 Equipo_B_goal_diff_2 Equipo_B_goal_diff_3 Equipo_B_goal_diff_4 Equipo_B_goal_diff_5 Equipo_B_goal_diff_6 Equipo_B_goal_diff_7 Equipo_B_goal_diff_8 Equipo_B_goal_diff_9 Equipo_B_goal_diff_10 Equipo_A_coach_continuity_1 Equipo_A_coach_continuity_2 Equipo_A_coach_continuity_3 Equipo_A_coach_continuity_4 Equipo_A_coach_continuity_5 Equipo_A_coach_continuity_6 Equipo_A_coach_continuity_7 Equipo_A_coach_continuity_8 Equipo_A_coach_continuity_9 Equipo_A_coach_continuity Equipo_A_coach_continuity_10 Equipo_B_coach_continuity_1 Equipo_B_coach_continuity_2 Equipo_B_coach_continuity_3 Equipo_B_coach_continuity_4 Equipo_B_coach_continuity_5 Equipo_B_coach_continuity_6 Equipo_B_coach_continuity_7 Equipo_B_coach_continuity_8 Equipo_B_coach_continuity_9 Equipo_B_coach_continuity Equipo_B_coach_continuity_10 Equipo_A_partidos_tres_semanas Equipo_A_partidos_diez_dias Equipo_A_partidos_cuatro_dias Equipo_B_partidos_tres_semanas Equipo_B_partidos_diez_dias Equipo_B_partidos_cuatro_dias diff_num_partidos_tres_semanas diff_num_partidos_diez_dias diff_num_partidos_cuatro_dias Equipo_A_relevance_1 Equipo_A_relevance_2 Equipo_A_relevance_3 Equipo_A_relevance_4 Equipo_A_relevance_5 Equipo_A_relevance_6 Equipo_A_relevance_7 Equipo_A_relevance_8 Equipo_A_relevance_9 Equipo_A_relevance_10 Equipo_B_relevance_1 Equipo_B_relevance_2 Equipo_B_relevance_3 Equipo_B_relevance_4 Equipo_B_relevance_5 Equipo_B_relevance_6 Equipo_B_relevance_7 Equipo_B_relevance_8 Equipo_B_relevance_9 Equipo_B_relevance_10 Equipo_A_outcome_V_1 Equipo_A_outcome_D_1 Equipo_A_outcome_V_2 Equipo_A_outcome_D_2 Equipo_A_outcome_V_3 Equipo_A_outcome_D_3 Equipo_A_outcome_V_4 Equipo_A_outcome_D_4 Equipo_A_outcome_V_5 Equipo_A_outcome_D_5 Equipo_A_outcome_V_6 Equipo_A_outcome_D_6 Equipo_A_outcome_V_7 Equipo_A_outcome_D_7 Equipo_A_outcome_V_8 Equipo_A_outcome_D_8 Equipo_A_outcome_V_9 Equipo_A_outcome_D_9 Equipo_A_outcome_V_10 Equipo_A_outcome_D_10 Equipo_B_outcome_V_1 Equipo_B_outcome_D_1 Equipo_B_outcome_V_2 Equipo_B_outcome_D_2 Equipo_B_outcome_V_3 Equipo_B_outcome_D_3 Equipo_B_outcome_V_4 Equipo_B_outcome_D_4 Equipo_B_outcome_V_5 Equipo_B_outcome_D_5 Equipo_B_outcome_V_6 Equipo_B_outcome_D_6 Equipo_B_outcome_V_7 Equipo_B_outcome_D_7 Equipo_B_outcome_V_8 Equipo_B_outcome_D_8 Equipo_B_outcome_V_9 Equipo_B_outcome_D_9 Equipo_B_outcome_V_10 Equipo_B_outcome_D_10 Equipo_A_is_friendly_1 Equipo_A_is_friendly_2 Equipo_A_is_friendly_3 Equipo_A_is_friendly_4 Equipo_A_is_friendly_5 Equipo_A_is_friendly_6 Equipo_A_is_friendly_7 Equipo_A_is_friendly_8 Equipo_A_is_friendly_9 Equipo_A_is_friendly_10 Equipo_B_is_friendly_1 Equipo_B_is_friendly_2 Equipo_B_is_friendly_3 Equipo_B_is_friendly_4 Equipo_B_is_friendly_5 Equipo_B_is_friendly_6 Equipo_B_is_friendly_7 Equipo_B_is_friendly_8 Equipo_B_is_friendly_9 Equipo_B_is_friendly_10 is_friendly Equipo_A_result_ponderado_1 Equipo_A_result_ponderado_2 Equipo_A_result_ponderado_3 Equipo_A_result_ponderado_4 Equipo_A_result_ponderado_5 Equipo_A_result_ponderado_6 Equipo_A_result_ponderado_7 Equipo_A_result_ponderado_8 Equipo_A_result_ponderado_9 Equipo_A_result_ponderado_10 Equipo_B_result_ponderado_1 Equipo_B_result_ponderado_2 Equipo_B_result_ponderado_3 Equipo_B_result_ponderado_4 Equipo_B_result_ponderado_5 Equipo_B_result_ponderado_6 Equipo_B_result_ponderado_7 Equipo_B_result_ponderado_8 Equipo_B_result_ponderado_9 Equipo_B_result_ponderado_10 EqA_Local . 0 16839679 | EqA_Empate | 0 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.227273 | 1.492695 | -0.159562 | -3.586300 | 0.533050 | 0.930450 | 3.465388 | 2.033775 | 2.844950 | -9.100417 | -1.291129 | -2.322800 | -1.103103 | -1.050675 | 1.592775 | -9.355625 | 2.446275 | -6.429625 | 4.093375 | 0.671250 | 1.126130 | -2.0 | 3.0 | -1.0 | -3.0 | -2.0 | 0.0 | -2.0 | -1.0 | 3.0 | -1.0 | -1.0 | -1.0 | 1.0 | -1.0 | -2.0 | 0.0 | 0.0 | 1.0 | 1.0 | -2.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 2.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 2.0 | 1.0 | 0.0 | 7 | 11 | 23 | 27 | 32 | 35 | 40 | 49 | 56 | 68 | 23 | 27 | 31 | 34 | 41 | 47 | 55 | 70 | 101 | 104 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 1 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.028478 | 0.498098 | -0.034283 | -1.366813 | -0.104253 | -0.003555 | -0.830918 | -0.242250 | 0.986062 | -1.161531 | -0.176949 | -0.307020 | 0.142678 | -0.146633 | -0.366864 | -0.041147 | -0.010143 | 0.767941 | 0.467318 | -0.138501 | 1 | . 1 12021423 | EqA_Empate | 0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.250250 | 0.500009 | 2.607200 | 4.354869 | -4.083405 | 1.681650 | 1.729845 | -0.619958 | 0.764650 | 0.277088 | 1.653675 | -2.587142 | 0.943600 | -1.254788 | -0.867925 | -0.024456 | -0.136037 | 3.561950 | 2.789087 | 3.810900 | -0.187742 | 0.0 | 3.0 | 3.0 | 1.0 | 1.0 | 0.0 | -1.0 | 1.0 | -1.0 | 0.0 | 0.0 | 0.0 | -3.0 | 0.0 | 0.0 | 0.0 | -2.0 | 0.0 | -2.0 | 3.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 3.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 2.0 | 0.0 | 0.0 | 10 | 15 | 20 | 28 | 35 | 39 | 53 | 56 | 64 | 71 | 10 | 23 | 28 | 35 | 42 | 49 | 54 | 59 | 71 | 251 | 0 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.000599 | 0.139886 | 0.900269 | 0.498014 | 0.492526 | -0.006820 | -0.203931 | 0.085964 | -0.082240 | -0.000716 | -0.006698 | -0.011732 | -0.307182 | -0.005941 | -0.004260 | -0.000595 | -0.061554 | -0.014992 | -0.663324 | 1.334626 | 0 | . 2 11940784 | EqA_Victoria | 0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | -2.147600 | -3.848700 | 2.143658 | -0.316183 | 1.120410 | -1.339575 | -2.243313 | 2.679490 | -3.791425 | 1.982828 | -3.120700 | -6.364683 | -2.610340 | 0.594840 | -6.372400 | -4.592233 | 3.685750 | -0.777687 | -0.158750 | -2.679490 | 0.431840 | -1.0 | -2.0 | 0.0 | 2.0 | -1.0 | -2.0 | -3.0 | 0.0 | -4.0 | -3.0 | -3.0 | -3.0 | 0.0 | 0.0 | -2.0 | 1.0 | -1.0 | -2.0 | -1.0 | 0.0 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 1 | 1.0 | 0.0 | 0.0 | 2.0 | 1.0 | 0.0 | -1.0 | -1.0 | 0.0 | 13 | 24 | 41 | 55 | 90 | 97 | 112 | 132 | 152 | 185 | 6 | 20 | 24 | 55 | 62 | 90 | 97 | 104 | 125 | 132 | 0 | 1 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.284931 | -0.981592 | -0.008828 | 0.102471 | -0.127094 | -0.359804 | -0.870521 | -0.011157 | -1.917832 | -0.691221 | -1.194753 | -2.393546 | -0.011833 | -0.002097 | -1.606992 | 0.552255 | -0.450528 | -0.220562 | -0.034180 | -0.012133 | 0 | . 3 11927019 | EqA_Derrota | 0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | -0.675180 | 4.412433 | -5.385517 | 0.737725 | -0.454567 | 2.722759 | 0.162283 | 2.728475 | 0.411706 | 1.334997 | 3.061683 | -1.936575 | 3.159650 | -0.882525 | 3.996617 | 1.404617 | -3.303375 | 3.133475 | -3.420250 | 1.386297 | -0.429687 | -3.0 | 0.0 | 1.0 | -2.0 | 0.0 | 0.0 | 0.0 | -1.0 | 0.0 | 1.0 | 0.0 | -1.0 | 0.0 | 0.0 | 1.0 | -3.0 | 3.0 | 1.0 | -2.0 | 1.0 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 1 | 2.0 | 1.0 | 0.0 | 3.0 | 1.0 | 0.0 | -1.0 | 0.0 | 0.0 | 7 | 14 | 35 | 43 | 49 | 57 | 63 | 70 | 76 | 83 | 7 | 14 | 21 | 28 | 35 | 42 | 56 | 70 | 91 | 98 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.291028 | -0.018688 | 0.645376 | -0.154974 | -0.002464 | -0.011345 | -0.000217 | -0.329836 | -0.001301 | 0.143522 | -0.012817 | -0.258326 | -0.013243 | -0.004324 | 0.455960 | -0.477547 | 1.232571 | 0.354639 | -0.875418 | 0.149544 | 1 | . 4 12070651 | EqA_Derrota | 0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | -0.385609 | -1.608497 | -3.122686 | 2.287922 | -1.623197 | 3.110983 | 0.616144 | 4.011375 | 10.922178 | -3.091981 | 2.094376 | 3.841724 | 0.933463 | 3.697159 | 5.551204 | 2.143917 | 3.715547 | 1.391611 | 6.902513 | 2.545350 | -1.764230 | -1.0 | -6.0 | -3.0 | -1.0 | 1.0 | 1.0 | -2.0 | 1.0 | 3.0 | -1.0 | 3.0 | 1.0 | 4.0 | 0.0 | 0.0 | 1.0 | 4.0 | 0.0 | 1.0 | -3.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 4.0 | 2.0 | 1.0 | 4.0 | 2.0 | 1.0 | 0.0 | 0.0 | 0.0 | 3 | 6 | 14 | 20 | 28 | 34 | 41 | 122 | 144 | 160 | 4 | 7 | 14 | 21 | 27 | 34 | 42 | 129 | 154 | 202 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 1 | 1 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | -0.062782 | -1.264379 | -1.195487 | -0.274292 | 0.203730 | 0.351999 | -0.124845 | 0.457693 | 3.900742 | -0.403997 | 0.715216 | 0.437778 | 0.396254 | -0.015579 | -0.023637 | 0.238478 | 1.738843 | -0.005560 | 0.797074 | -0.899098 | 1 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 102907 17680446 | EqA_Derrota | 0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | -2.449655 | -6.801235 | -1.374567 | -3.357715 | -5.657720 | -7.385085 | 0.455519 | -1.723700 | 0.662587 | -1.607044 | 1.291365 | -0.066643 | 6.459935 | 4.542846 | 7.037018 | 4.310293 | 5.892379 | 3.601024 | 5.542900 | 4.959433 | -4.157078 | 0.0 | -2.0 | -3.0 | 0.0 | -1.0 | -2.0 | -1.0 | -1.0 | -1.0 | 0.0 | -2.0 | -1.0 | 2.0 | 0.0 | 1.0 | 2.0 | 2.0 | -1.0 | -1.0 | 0.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 2.0 | 1.0 | 0.0 | 4.0 | 2.0 | 0.0 | -2.0 | -1.0 | 0.0 | 7 | 13 | 23 | 28 | 32 | 36 | 42 | 50 | 57 | 70 | 6 | 9 | 14 | 20 | 31 | 33 | 41 | 49 | 53 | 57 | 0 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 1 | 1 | 0 | 0 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.011134 | -1.713262 | -0.549482 | -0.015081 | -0.727482 | -1.857947 | -0.043266 | -0.231487 | -0.069372 | -0.007472 | -0.292172 | -0.022568 | 1.517828 | -0.019254 | 0.812863 | 1.003807 | 1.382114 | -0.439846 | -0.684674 | -0.021065 | 0 | . 102908 13973450 | EqA_Derrota | 0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | -6.037900 | -2.249000 | -2.825450 | 2.955731 | 11.284325 | 5.646480 | 4.107761 | -2.118160 | -2.789100 | 0.258211 | -4.017425 | 1.909288 | -4.650607 | 2.140950 | -9.699517 | -6.361954 | 6.072812 | 5.668042 | 0.351962 | -1.905050 | 0.000000 | -1.0 | 0.0 | -4.0 | -3.0 | 3.0 | 0.0 | 2.0 | -4.0 | 0.0 | -1.0 | 1.0 | 1.0 | 0.0 | -1.0 | -2.0 | 1.0 | 5.0 | 2.0 | -1.0 | 0.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 4.0 | 2.0 | 1.0 | 5.0 | 3.0 | 1.0 | -1.0 | -1.0 | 0.0 | 3 | 10 | 14 | 17 | 117 | 128 | 131 | 139 | 145 | 159 | 4 | 6 | 10 | 14 | 17 | 117 | 122 | 131 | 145 | 242 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 1 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 0 | 1 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | -0.775414 | -0.010262 | -1.443272 | -1.050751 | 4.031423 | -0.024051 | 0.955378 | -1.095797 | -0.012609 | -0.018389 | 0.484781 | 0.210936 | -0.020699 | -0.255762 | -2.431488 | 0.759997 | 3.602004 | 1.328471 | -0.030209 | -0.008767 | 1 | . 102909 17639407 | EqA_Empate | 0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | -1.268515 | 1.196983 | -0.654343 | 3.142433 | -2.539479 | 1.927360 | -4.602917 | -0.744920 | -0.141034 | 1.475750 | -0.326533 | -2.833663 | 0.725700 | -2.869942 | -0.224250 | -2.834929 | -3.448488 | 0.594516 | -1.139558 | -0.862852 | 0.304534 | 2.0 | 0.0 | 2.0 | 0.0 | 1.0 | 0.0 | 1.0 | -1.0 | 3.0 | 1.0 | -2.0 | -1.0 | 2.0 | 1.0 | 0.0 | 0.0 | -1.0 | 3.0 | -2.0 | -2.0 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 3.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 2.0 | 1.0 | 0.0 | 6 | 17 | 21 | 25 | 30 | 35 | 38 | 41 | 47 | 59 | 18 | 22 | 25 | 29 | 32 | 40 | 48 | 51 | 55 | 58 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 0 | 1 | 0 | 1 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0.330192 | -0.004714 | 0.183332 | -0.013168 | 0.311290 | -0.007888 | 0.553509 | -0.108084 | 0.091435 | 0.160044 | -0.108761 | -0.371429 | 0.146663 | 0.350082 | -0.001463 | -0.012809 | -0.448945 | 0.173989 | -0.310237 | -0.241667 | 1 | . 102910 11987098 | EqA_Derrota | 0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.778017 | 2.395232 | 3.405850 | 1.236388 | 2.173467 | -1.702931 | 3.026175 | 1.737887 | -6.380690 | -4.681675 | -7.302900 | -7.145125 | -4.906037 | 6.203850 | -1.444350 | -4.814425 | -3.026175 | 5.304275 | -1.196555 | 0.909658 | 1.989225 | 1.0 | 1.0 | 0.0 | 0.0 | 2.0 | -2.0 | 0.0 | 3.0 | 0.0 | -4.0 | 0.0 | -3.0 | -1.0 | 0.0 | -2.0 | -2.0 | 0.0 | 4.0 | 0.0 | 0.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 2.0 | 2.0 | 1.0 | 2.0 | 2.0 | 1.0 | 0.0 | 0.0 | 0.0 | 3 | 10 | 312 | 318 | 321 | 328 | 335 | 347 | 391 | 397 | 3 | 10 | 318 | 321 | 326 | 330 | 335 | 346 | 353 | 360 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0.195526 | 0.267979 | -0.014313 | -0.004885 | 0.492851 | -0.449847 | -0.012663 | 0.586576 | -0.028218 | -2.355190 | -0.032226 | -2.681953 | -0.632711 | -0.026473 | -0.385768 | -1.220909 | -0.013640 | 2.505538 | -0.005688 | -0.003465 | 1 | . 102911 17012205 | EqA_Derrota | 0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | -0.211667 | 1.606796 | -2.285403 | 1.622922 | 1.168667 | 0.119013 | -0.626957 | -5.730332 | 1.923965 | -4.398405 | 4.584513 | 2.291772 | 2.535528 | -1.727919 | 2.352086 | -1.097665 | 1.316322 | 6.272992 | 1.779469 | -1.756280 | -0.723624 | 3.0 | 2.0 | -1.0 | 1.0 | -1.0 | -3.0 | 0.0 | -1.0 | -1.0 | 1.0 | 3.0 | 3.0 | 5.0 | 1.0 | -2.0 | 1.0 | -4.0 | 5.0 | -2.0 | -1.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 15 | 22 | 29 | 36 | 39 | 43 | 49 | 56 | 64 | 72 | 17 | 22 | 29 | 36 | 41 | 45 | 51 | 58 | 63 | 71 | 1 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 1 | 1 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0.116923 | 0.357350 | -0.302305 | 0.177320 | -0.133178 | -0.002461 | -0.003213 | -0.736636 | -0.228405 | 0.529503 | 1.613785 | 0.786447 | 1.464364 | 0.216023 | -0.555030 | 0.142040 | -0.591481 | 3.722976 | -0.413129 | -0.235594 | 1 | . 102912 rows × 217 columns . . Podemos ver como ahora tenemos nuevos targets y las features han cambiado su nombre. El resultado, como se ve abajo, muestra un balance entre &quot;EqA_Derrota&quot; (equivalente a &quot;EqB_Victoria&quot;) y &quot;EqA_Victoria&quot;. . fffmp.Classes_counts(FMP2) . CLASES EqA_Derrota : 38460 37.37 % EqA_Empate : 25859 25.13 % EqA_Victoria : 38593 37.5 % . Guardaremos este dataset para hacer un pequeño análisis en un bloque posterior. . data_clean=&#39;FMP_Balance_V_vs_D&#39; FMP2.to_pickle(data_clean) . 2) Balance de los empates . En segundo lugar tenemos el problema de los empates, y aquí ya no nos quedrá otra opción que hacer un re-sampling. Dado que las derrotas y las victorias son clases con $1.5$ veces la cantidad de ocurrrencias que los empates, lo que haremos será hacer un poco de oversampling de los empates, y un poco de undersampling de las otras dos clases. En este sentido, creo que antes de realizar estos procesos lo mejor es separar el dataset en Train y Test. Porque, sí, quiero que aprenda con un conjunto balanceado; sin embargo, la realidad probablemente no lo es, asique a la hora de testear quiero un conjunto que refleje ello. Por otro lado, utilizar oversampling va a generar casos duplicados que podrían acabar uno en el trainset y otro en el testset, incrementando de forma artificial el test accuracy. . Separaci&#243;n de los datos en Train y Test . Separaremos entonces el dataset, de forma de mantener la proporcion de clases para ambos grupos (test y training) . FMP_train,FMP_test=fffmp.Training_Test_separation(FMP2,True,0.1) . TRAIN: 92620 TEST: 10292 . train train % test test % . EqA_Derrota 34614 | 0.373721 | 3846 | 0.373688 | . EqA_Empate 23273 | 0.251274 | 2586 | 0.251263 | . EqA_Victoria 34733 | 0.375005 | 3860 | 0.375049 | . Y ahora si, procederemos a hacer el balance de los datos en el dataset de entrenamiento. Para ello modificaremos en la misma proporcion los datos de las tres clases: . Incrementamos los empates en $ approx 20 %$. | Redcimos las victorias y las derrotas en $ approx 20 %$. | . Nota: Ambas estrategias tienen sus problemas. El oversampling puede generar un mayor overfitting, una reducción en la performance del modelo, y un aumento de los costos computacionales. Por su lado, el underfitting nos genera pérdida de información. Cuando hice este paso pensé que lo mejor era hacer ambos procesos en igual proporción, pero ahora creo que quizas debería haber apostado a un mayor overfitting dadas las resultados obtenidos para los modelos. . fffmp.Classes_counts(FMP_train) . . CLASES EqA_Derrota : 34614 37.37 % EqA_Empate : 23273 25.13 % EqA_Victoria : 34733 37.5 % . FMP_train_2=fffmp.Balance_de_empates_por_under_and_over_sampling(FMP_train) . Ratio Victorias(Derrotas)/Empates= 1.49 Proporcion a cambiar clases= 19.67 % . fffmp.Classes_counts(FMP_train_2) . . CLASES EqA_Derrota : 27784 33.31 % EqA_Empate : 27886 33.44 % EqA_Victoria : 27729 33.25 % . Efectivamente conseguimos lo que estabamos buscando, terminando con aproximadamente $33 %$ de cada clase! . Guardaremos este dataset para hacer un pequeño análisis en un bloque posterior. . data_clean=&#39;FMP_training_bal_tot&#39; FMP_train_2.to_pickle(data_clean) . NOTA: Para ganar un mayor entendimiento de los procesos realizados en el dataset se agregó un bloque adicional al proyecto (el número 6) donde se comparan el dataset generado con el original. . Como ultima cosa recordemos las features con las que contamos luego de las transformaciones realizadas: . fffmp.Print_features_data_set_modelos(FMP_train_2) . Today Features id target is_cup Rating_diff Equipo_A_coach_continuity Equipo_B_coach_continuity Equipo_A_partidos_tres_semanas Equipo_A_partidos_diez_dias Equipo_A_partidos_cuatro_dias Equipo_B_partidos_tres_semanas Equipo_B_partidos_diez_dias Equipo_B_partidos_cuatro_dias diff_num_partidos_tres_semanas diff_num_partidos_diez_dias diff_num_partidos_cuatro_dias is_friendly EqA_Local Historic Features Equipo_(A/B)_play_home_i Equipo_(A/B)_is_cup_i Equipo_(A/B)_rating_diff_i Equipo_(A/B)_goal_diff_i Equipo_(A/B)_coach_continuity_i Equipo_(A/B)_relevance_i Equipo_(A/B)_outcome_V_i Equipo_(A/B)_outcome_D_i Equipo_(A/B)_is_friendly_i Equipo_(A/B)_result_ponderado_i . . MODELADO . Finalmente llegamos a la última etapa de este proyecto: la generación de un modelo predictivo que pueda aprender a modelar los resultados de los partidos en función de las variables generadas, permitiendonos inferir información sobre futuro partidos. En particular, el objetivo que nos habíamos propuesto (que es el que figuraba en eñ desafío de Kaggle de &quot;Football Match Probability Prediction&quot;) era poder predecir la probabilidad de cada uno de los tres posibles resultados. Esto la haremos hacia el final de este notebook, sin embargo, empezaremos por un modelo más sencillo que simplemente buscará predecir el resultado sin darnos la probabilidad. . 1) Random Forest . Empezaremos considerando un Random Forest. Si bien hay clasificadores más simples (como una regresión logística o SVM), dado que tenemos un modelo multiclases preferí comenzar con este clasificador para el cual la implementación era fácil y estaba familiarizado de trabajos anteriores. . Para llevar un registro de la performance del modelo, generamos un diccionario (Report_RF) para ir guardando el resultado de los distinto modelos de Random Forest. En el mismo registraremos las métricas &quot;Accuracy&quot; y &quot;F1_macro&quot; tanto en el train dataset como en el Test dataset. . Report1_RF={&#39;Nombre&#39;:[],&#39;Accuracy&#39;:[],&#39;F1_macro&#39;:[]} . A) RF con todas las variables . En una primera instancia trabajaré con todas las features exceptuando el &quot;resultado ponderado&quot; (el cual terminé por ver que no aportaba ningún valor) y &quot;diff_num_partidos_cuatro_dias&quot; (el cual no aportaba informacion adicional a las variables calculadas a 10 y 21 días). Es verdad que, como vimos en el bloque 4, muchas de las variables (sobetodo las correspondientes a un mismo aspectos para cada partido historial) estan quizás bastante correlacionadas. Esto es algo que trataré de forma más cuidadosa en modelos posteriores, pero por el momento veremos que tal funciona directamente así. . Comenzamos por separar ambos datasets en su input y output. Aprovechamos al mismo tiempo para normalizar todas la variables (si bien para las One-Hot Encoded no es fundamental, tampoco afecta). Verificaremos al acabar que no tenemos valores extraños, como puede pasar cuando la desviación estandar es $0$. . F_h=[&#39;play_home&#39;,&#39;is_cup&#39;,&#39;rating_diff&#39;,&#39;goal_diff&#39;,&#39;coach_continuity&#39;,&#39;relevance&#39;,&#39;is_friendly&#39;] F_m=[&#39;Rating_diff&#39;,&#39;EqA_Local&#39;,&#39;is_cup&#39;,&#39;Equipo_A_coach_continuity&#39;,&#39;Equipo_B_coach_continuity&#39;,&#39;diff_num_partidos_diez_dias&#39;,&#39;diff_num_partidos_tres_semanas&#39;,&#39;is_friendly&#39;] F_h_to_std=F_h F_m_to_std=F_m X,y,X_t,y_t=fffmp.Prepara_DF_para_Random_Forest(FMP_train_2,FMP_test,F_h,F_m,F_h_to_std,F_m_to_std) . . train No hay missing values en el dataset :) test No hay missing values en el dataset :) . Selección de los hiperparámetros . Para hacer la selección de los hiperparámetros, utilizamos una K-fold cross validation. Esto nos ayuda a evitar overfitting, lo que sucede bastante facilmente con los modelos de Random Forest en mi (breve) experiencia. Aquí abajo solo mantengo el último grid de parámetros utilizados. . Nota: El número de estimadores (es decir el número de árboles) lo dejo bajo para estas pruebas para reducir los tiempo de computo. Para el training final siempre lo subo ya que no puede hacer más que mejorar el resultado. . param_grid = [ {&#39;n_estimators&#39;: [10], &#39;max_features&#39;: [None], &#39;max_depth&#39;:[10],&#39;min_samples_leaf&#39; : [1], &#39;class_weight&#39;:[None],&#39;bootstrap&#39;: [True]}, ] fffmp.Cross_Validation_RandomForest(param_grid,X,y) . Fitting 7 folds for each of 1 candidates, totalling 7 fits [CV 1/7] END bootstrap=True, class_weight=None, max_depth=10, max_features=None, min_samples_leaf=1, n_estimators=10; total time= 20.1s [CV 2/7] END bootstrap=True, class_weight=None, max_depth=10, max_features=None, min_samples_leaf=1, n_estimators=10; total time= 13.9s [CV 3/7] END bootstrap=True, class_weight=None, max_depth=10, max_features=None, min_samples_leaf=1, n_estimators=10; total time= 14.6s [CV 4/7] END bootstrap=True, class_weight=None, max_depth=10, max_features=None, min_samples_leaf=1, n_estimators=10; total time= 14.3s [CV 5/7] END bootstrap=True, class_weight=None, max_depth=10, max_features=None, min_samples_leaf=1, n_estimators=10; total time= 14.4s [CV 6/7] END bootstrap=True, class_weight=None, max_depth=10, max_features=None, min_samples_leaf=1, n_estimators=10; total time= 14.0s [CV 7/7] END bootstrap=True, class_weight=None, max_depth=10, max_features=None, min_samples_leaf=1, n_estimators=10; total time= 15.6s Scorer make_scorer(accuracy_score) Best Score 0.4329787633264904 the best trained model: RandomForestClassifier(max_depth=10, max_features=None, n_estimators=10, n_jobs=4, random_state=42) . RandomForestClassifier(max_depth=10, max_features=None, n_estimators=10, n_jobs=4, random_state=42) . . Entrenamiento del modelo . Una vez seleccionados los hiperparámetros procedemos a entrenar el modelo. . forest_reg = RandomForestClassifier(bootstrap=True, class_weight= None, max_depth= 10, max_features=None, min_samples_leaf= 1, n_estimators= 50,n_jobs=4) forest_reg.fit(X, y) . RandomForestClassifier(max_depth=10, max_features=None, n_estimators=50, n_jobs=4) . . Resultado . Miremos entonces que tal funciona este modelo: . model_name=&#39;RF completo&#39; Report1_RF=fffmp.Report_RF_results(forest_reg,model_name,X,y,X_t,y_t,Report1_RF) . . Nombre Accuracy F1_macro . 0 RF completo Train | 0.564323 | 0.563954 | . 1 RF completo Test | 0.467256 | 0.454680 | . A la hora de analizar la performance del modelo es siempre útil tener en mente una referencia. Dado que hemos balanceado nuestros targets, sabemos que tenemos $ approx33 %$ de cada categoría, luego un clasificador aleatorio nos daría esa precision (0.33). Este deberá ser nuestro piso, un modelo que tenga una performance mejor ya podremos decir que esta aprendiendo algo. Es un objetivo bastante poco ambicioso, pero veremos que no es tán facil el problema. . Dicho esto, efectivamente podemos decir que nuestro modelo tiene cierto poder predictivo, sin embargo es claro (o al menos esa era mi expectativa) que deberíamos poder mejorar nuestro poder predictivo. . B) PCA y RF . Una forma de mejorar el resultado obtenido pasa por hacer una selección de variables o features. Para hacer esto, en lugar de ir probando distintas combinaciones, decidí intentar aplicar el metodo de Principal Component Analysis (PCA). Esta técnica permite transformar nuestro dataset a una base vectorial nueva base vectorial con variables no correlacionadas, lo que nos soluciona un primer problema. Pero lo mejor aun es que estas variables quedan ordenadas por la cantidad de varianza que decriben, lo que está codificado en los autovalores. De esta forma, mirando a los autovalores podemos seleccionar las variables que deberían tener una mayor importancia. . Decidí entonces considerar en este caso todas las variables del dataset ya que la multicolinearidad original no debería ser un problema al utilizar PCA. Luego, nuevamente preparamos y normalizamos los datos: . F_h=[&#39;play_home&#39;,&#39;is_cup&#39;,&#39;rating_diff&#39;,&#39;goal_diff&#39;,&#39;coach_continuity&#39;,&#39;relevance&#39;,&#39;is_friendly&#39;,&#39;result_ponderado&#39;] F_m=[&#39;Rating_diff&#39;,&#39;EqA_Local&#39;,&#39;is_cup&#39;,&#39;Equipo_A_coach_continuity&#39;,&#39;Equipo_B_coach_continuity&#39;,&#39;diff_num_partidos_diez_dias&#39;,&#39;diff_num_partidos_tres_semanas&#39;,&#39;diff_num_partidos_cuatro_dias&#39;,&#39;is_friendly&#39;] F_h_to_std=F_h F_m_to_std=F_m X,y,X_t,y_t=fffmp.Prepara_DF_para_Random_Forest(FMP_train_2,FMP_test,F_h,F_m,F_h_to_std,F_m_to_std) . . train No hay missing values en el dataset :) test No hay missing values en el dataset :) . PCA . Aplicamos entonces PCA para ver los autovalores de la transformación: . fffmp.PCA_analisis(X,X_t,Action=&#39;Fit&#39;) . [1056.1739394 807.96171312 753.66794049 628.42023238 591.27775932 515.02889343 490.04746795 482.52275821 454.1742522 453.64978963 452.82754626 432.83850214 418.16116484 416.31818982 404.57505498 401.18584814 400.33061564 398.12251238 392.39832499 387.09088544 386.56925738 385.27216034 383.01572586 380.89921633 378.94618226 376.9887087 375.87541731 369.39209423 345.57649742 344.49797834 338.87460261 337.75459298 332.53610435 325.18162231 320.15963613 318.2957323 313.00213268 308.94519621 306.30238777 303.76183913 302.91205679 302.33023283 299.47071691 298.79971346 295.4341473 294.3680493 291.3710512 288.0788367 287.39477909 285.79443611 284.84864226 284.08018509 282.79943749 282.32693659 281.48563651 281.35338659 280.19507932 277.34008654 277.07918728 276.32109161 274.99544928 274.3810467 273.07276934 270.9509744 270.49776048 268.85894847 268.68314006 264.49816597 262.8302743 262.21643616 261.64810068 260.16689545 258.456953 257.00963917 255.07523905 252.60551983 251.47233064 249.70182872 244.16869221 243.51070442 241.85984168 239.01318194 237.87253313 237.01931473 232.70860474 232.5873407 231.10751289 227.59224697 225.94738229 224.44516122 223.58149311 216.57302534 215.7415944 214.62380553 212.54079381 210.17934297 209.93912476 206.59873175 203.72622804 200.09006121 195.7802494 193.80191349 193.25056921 193.08557451 192.03673637 191.27257869 191.17653325 190.21552967 190.10094763 189.68686704 188.92691611 188.7173538 188.7073066 187.85899142 186.94963811 186.14589353 185.42720143 185.14190397 184.37114792 183.73150039 182.71114539 182.3535036 181.28338561 179.92818212 177.90276095 176.93237394 173.66770908 171.8602939 171.78052959 171.02205687 165.34381939 165.27411789 161.47060142 158.62626678 150.23578794 137.07277973 135.27658302 134.31499465 132.78040857 132.19527532 132.04627094 131.82628088 131.25635713 130.91698377 130.22925411 129.90438683 129.48461439 129.31571133 129.22452473 128.79099185 128.35587461 127.93377419 127.45330077 126.90731911 126.31113872 121.28540515 104.27363594 99.80412756 85.81580248 84.38506303 72.76822779 71.76189234 61.90764481 60.17994899 53.09944599 49.06577033 44.51217705] . . Desgraciadamente no había una clara línea para trazar que permitiera separar los relevantes de los que no lo son. Por esa razón, optamos por probar con distintos umbrales arbitrarios: $0$, $100$, $200$, $300$, y $400$. . Transformamos entonces nuestro dataset: . X_2,X_t_2=fffmp.PCA_analisis(X,X_t,Action=&#39;Fit_Transform&#39;,umbral=400) . Selección de los hiperparámetros . Nuevamente, para hacer la selección de los hiperparámetros utilizamos una K-fold cross validation. . Nota: El número de estimadores (es decir el número de árboles) lo dejo bajo para estas pruebas para reducir los tiempo de computo. Para el training final siempre lo subo ya que no puede hacer más que mejorar el resultado. . param_grid = [ {&#39;n_estimators&#39;: [10], &#39;max_features&#39;: [None], &#39;max_depth&#39;:[6,7],&#39;min_samples_leaf&#39; : [1], &#39;class_weight&#39;:[None],&#39;bootstrap&#39;: [True]}, ] fffmp.Cross_Validation_RandomForest(param_grid,X_2,y) . Fitting 7 folds for each of 2 candidates, totalling 14 fits [CV 1/7] END bootstrap=True, class_weight=None, max_depth=6, max_features=None, min_samples_leaf=1, n_estimators=10; total time= 3.7s [CV 2/7] END bootstrap=True, class_weight=None, max_depth=6, max_features=None, min_samples_leaf=1, n_estimators=10; total time= 3.7s [CV 3/7] END bootstrap=True, class_weight=None, max_depth=6, max_features=None, min_samples_leaf=1, n_estimators=10; total time= 3.6s [CV 4/7] END bootstrap=True, class_weight=None, max_depth=6, max_features=None, min_samples_leaf=1, n_estimators=10; total time= 3.8s [CV 5/7] END bootstrap=True, class_weight=None, max_depth=6, max_features=None, min_samples_leaf=1, n_estimators=10; total time= 3.7s [CV 6/7] END bootstrap=True, class_weight=None, max_depth=6, max_features=None, min_samples_leaf=1, n_estimators=10; total time= 3.7s [CV 7/7] END bootstrap=True, class_weight=None, max_depth=6, max_features=None, min_samples_leaf=1, n_estimators=10; total time= 3.7s [CV 1/7] END bootstrap=True, class_weight=None, max_depth=7, max_features=None, min_samples_leaf=1, n_estimators=10; total time= 4.3s [CV 2/7] END bootstrap=True, class_weight=None, max_depth=7, max_features=None, min_samples_leaf=1, n_estimators=10; total time= 6.0s [CV 3/7] END bootstrap=True, class_weight=None, max_depth=7, max_features=None, min_samples_leaf=1, n_estimators=10; total time= 5.7s [CV 4/7] END bootstrap=True, class_weight=None, max_depth=7, max_features=None, min_samples_leaf=1, n_estimators=10; total time= 5.2s [CV 5/7] END bootstrap=True, class_weight=None, max_depth=7, max_features=None, min_samples_leaf=1, n_estimators=10; total time= 5.5s [CV 6/7] END bootstrap=True, class_weight=None, max_depth=7, max_features=None, min_samples_leaf=1, n_estimators=10; total time= 4.7s [CV 7/7] END bootstrap=True, class_weight=None, max_depth=7, max_features=None, min_samples_leaf=1, n_estimators=10; total time= 4.6s Scorer make_scorer(accuracy_score) Best Score 0.43546078088137136 the best trained model: RandomForestClassifier(max_depth=6, max_features=None, n_estimators=10, n_jobs=4, random_state=42) . RandomForestClassifier(max_depth=6, max_features=None, n_estimators=10, n_jobs=4, random_state=42) . . Entrenamiento del modelo . Una vez seleccionados los hiperparámetros procedemos a entrenar el modelo. . forest_reg = RandomForestClassifier(bootstrap=True, class_weight= None, max_depth= 6, max_features=None, min_samples_leaf= 1, n_estimators= 50,n_jobs=4) forest_reg.fit(X_2, y) . RandomForestClassifier(max_depth=6, max_features=None, n_estimators=50, n_jobs=4) . . Resultado . Miremos entonces que tal funciona este segundo modelo: . model_name=&#39;RF PCA all th=400&#39; Report1_RF=fffmp.Report_RF_results(forest_reg,model_name,X_2,y,X_t_2,y_t,Report1_RF) . . Nombre Accuracy F1_macro . 0 RF completo Train | 0.564323 | 0.563954 | . 1 RF completo Test | 0.467256 | 0.454680 | . 2 RF PCA all features Train | 0.454214 | 0.454808 | . 3 RF PCA all features Test | 0.445103 | 0.439398 | . 4 RF PCA all th=100 Train | 0.453243 | 0.453759 | . 5 RF PCA all th=100 Test | 0.447143 | 0.440709 | . 6 RF PCA all th=200 Train | 0.453830 | 0.454605 | . 7 RF PCA all th=200 Test | 0.447435 | 0.442002 | . 8 RF PCA all th=300 Train | 0.442104 | 0.443010 | . 9 RF PCA all th=300 Test | 0.443937 | 0.438920 | . 10 RF PCA all th=400 Train | 0.448806 | 0.449645 | . 11 RF PCA all th=400 Test | 0.449281 | 0.444494 | . Lo primero que salta a la vista es que para todos los umbrales probados la performance fue ligeramente peor que para el primer modelo sin PCA. Donde sí se vió una mejora fue en la varianza del modelo (es decir, un el overfitting) que en todos los casos se redujo sensiblemente. Esto era algo esperado para umbrales mayores a cero, dado que estamos reduciendo el numero de features. Sin embargo, lo interesante es que lo pudimos hacer sin una mayor perdida de precisión. . Hasta este punto llegaremos con los modelos de Random Forest. Si bien creo que todavía habría lugar para seguir optimizando este modelo, decidí invertir mi tiempo en un tipo de modelo distinto donde podía optar por una predicción probabilística. . 2) Red Neuronal . Como vimos en la sección anterior, los resultados obtenidos con modelos de Random Forest no fueron los mejores. Por otro lado, este tipo de modelos tampoco nos permitía obtener las probabilidades de cada output, que era uno de nuestros objetios. Por esta razón, decidimos probar con un tipo de modelo distinto: una red neuronal. Dado que el objetivo del problema es predecir probabilidades de un problema multiclase, la idea fue utilizar una red con: . Función de costo: Categorical crossentropy | Funcion de activación de ultima layer: Softmax | . tal como se recomienda para este tipo de problemas. . Lo primer que probé en algunos test preliminares era utilizar simplemente una red densa. Sin embargo los resultados no fueron mejores a los obtenidos con los modelos de Random Forest. Por otro lado, había algo que me hacía ruido de este tipo de modelo: ¿por qué inputs como la localía o el tipo de competencia de un partido podrían influir en el peso de las variables de otro partido? Aún peor, ¿por qué mezclar directamente los datos de lo ocurrido para el equipo local y visitante 9 partidos atrás? Esto no me convencía, sin embargo una red densa permitía esas interconexiones (claro esta que los pesos podrían ir a cero durante el entrenamiento de la red). . Además de ello, había otro aspecto a tener en cuenta para mí. Como sabemos, nuestro dataset contiene información de una serie de partidos. Estos partidos tienen un orden temporal. ¿Sería lo mismo ganar 7 partidos y perder los tres inmediatamente anteriores al partido a modelar que el caso inverso? Más aún, ¿el resultado de los partidos presentaría correlaciones temporales que afectarían en un orden deteriminado? Si bien no tengo claro hasta que punto puede &quot;aprender&quot; una red densa (quizás puede llegar a &quot;descubrir&quot; ese orden), me parecía que cambiar a una arquitectura que contemplara todas estas cuestiones podría ayudar. . La solución que encontré pasó por armar una red mixta, combinando redes recurrentes (para tratar la información con orden temporal) con redes densas (donde mezclar el output de las redes recurrentes con las variables referentes al partido que se busca modelar). El esquema es el que se presenta en la figura siguiente: . . Tendríamos una red recurrente (RNN) para tratar los datos históricos de cada equipo. Cada RNN sacaría un output de $n$ componentes, donde $n$ es el número de partidos considerados. Dentro de ella los partidos estarían interconectados del más antíguo ($i=10$) al más reciente ($i=1$). Los $2n$ outputs se combinarían con el input referente al partido que se desea modelar con dimension $m$. En total un vector con $2n+m$ componentes se usaría como input de la una capa densa. El output de esta última sería un vector de tres componentes con las probabilidades de cada uno de los posibles resultados: Victoria Equipo A, Derrota Equipo A y Empate Equipo A. . Esta nueva arquitectura permitiría que los partidos históricos de cada equipo se procesarían de forma independiente y teniendo en cuenta correlaciones temporales. Lo único que me quedaba pensar son la profundidad de la red y el numero de nodos en cada capa. Dado que no encontré una receta para decidir estos hiperparámetros, lo único que me quedó fue ir probando. Esto es algo que podría haber hecho de una forma más sistemática con un grid de forma similar a un k-fold cross validation, realmente no se me ocurrió en su momento. Terminé por ir probando algunos valores, quedándome con los que funcionaban masomenos mejor: . Para la RNN use 100 unidades, con drop out de 0.1 y recurrent drop out de 0 (manteniendo los partidos siempre conectados). | Para la capa densa 5 capas con 500, 200, 80, 20 y 10 nodos, con drop out de 0.1. | . Adicionalmente a ello, se consideraron dos tipos de RNN: Simple y de las llamadas long short-term memory (LSTM). Esta segunda opción está pensada para evitar un problema llamado gradient vanishing problem. En la práctica esto ocurre cuando, durante el proceso de backpropagation, el gradiente se va haciendo cada vez más pequeño, impidiendo cambiar eficazmente los parámetros de la red (el caso opuesto también existe y es llamado gradient exploding. En los casos más patológicos, este fenómeno puede impedir directamente que la red neuronal continúe su entrenamiento. Esto es un fenómeno más comun cuando se consideran un mayor número de inputs temporales (los partidos en nuestro caso), sin embargo valía la pena probarlo. Como contrapartida, estos modelos tienen un número mayor de parámetros por unidad, lo que incrementa el tiempo de entrenamiento. . Veamos como nos fue con este acercamiento. . Separación de los datos en input y target . Como primer paso, empezamos por separar nuestros dataset de train y test en sus respectivos inputs y targets. Dado que queríamos modelar el resultado como un vector de tres componentes, adicionalmente es necesario hacer un One-Hot Encoding OHE del target. Esto lo hacemos todo junto en un solo paso: . X_train,y_train,X_test,y_test=fffmp.Split_input_and_OHE_output(FMP_train_2,FMP_test) . train train % test test % . EqA_Derrota 27784 | 0.333145 | 3846 | 0.373688 | . EqA_Empate 27886 | 0.334369 | 2586 | 0.251263 | . EqA_Victoria 27729 | 0.332486 | 3860 | 0.375049 | . Selección de metricas . El siguiente paso es decidir las métricas que utilizaremos para ir evaluando el rendimiento de nuestras redes. En particular, yo elegí las siguintes: . Accuracy: Para ver la precisión general. | F1 (macro): Para ver el rendimiento medio por clases. | Area under the ROC Curve (AUC): Para ver cuan bien separa la clases. | . F1=tfa.metrics.F1Score(num_classes=3, threshold=None,average=&#39;macro&#39;) metrics=[&#39;accuracy&#39;,&#39;AUC&#39;,F1] . El resultado obtenido por cada modelo para cada una de ellas lo iremos guardando en un dataframe: . Report=pd.DataFrame() . Entrenamiento de los modelos . Queda entonces por definir una serie de cosas: . Las features a utilizar. | El tipo de red recurrente | El número de partidos a considerar | . Determinaremos estas características a traves de evaluar distintos modelos. Para ello utilizamos una serie de for loops anidados. Para las features consideramos tres conjuntos distintos tanto para las históricas como para las del partido a modelar. Traté de partir de las features que yo consideraba más fundamentales, para ir luego agregando otras adicionales. Se podría ir agregando de a una, pero ya el esquema propuesto tomó bastanate tiempo (9hs aproximadamente) por lo que no quería hacerlo más largo. . En total se entrenaron 180 redes neuronales: . F_h_1=[&#39;outcome_V&#39;,&#39;outcome_D&#39;,&#39;play_home&#39;] F_h_2=[&#39;play_home&#39;,&#39;goal_diff&#39;] F_h_3=[&#39;play_home&#39;,&#39;is_cup&#39;,&#39;rating_diff&#39;,&#39;goal_diff&#39;,&#39;coach_continuity&#39;,&#39;relevance&#39;,&#39;is_friendly&#39;] N_Features_1=[&#39;EqA_Local&#39;,&#39;is_cup&#39;] N_Features_2=[&#39;Rating_diff&#39;,&#39;EqA_Local&#39;,&#39;is_cup&#39;,&#39;diff_num_partidos_diez_dias&#39;,&#39;is_friendly&#39;] N_Features_3=[&#39;Rating_diff&#39;,&#39;EqA_Local&#39;,&#39;is_cup&#39;,&#39;Equipo_A_coach_continuity&#39;,&#39;Equipo_B_coach_continuity&#39;,&#39;diff_num_partidos_diez_dias&#39;,&#39;diff_num_partidos_tres_semanas&#39;,&#39;is_friendly&#39;] index=0 for F_h in [F_h_1,F_h_2,F_h_3]: for N_Features in [N_Features_1,N_Features_2,N_Features_3]: for tipo_de_RNN in [&#39;LSTM&#39;,&#39;Simple&#39;]: for n_partidos in range(1,11): M_A,M_A_test=fffmp.generate_input_for_RNN(X_train,X_test,F_h,[&#39;Equipo_A&#39;],n_partidos,standarize=True) M_B,M_B_test=fffmp.generate_input_for_RNN(X_train,X_test,F_h,[&#39;Equipo_B&#39;],n_partidos,standarize=True) H_Features=[] A_train,A_test=fffmp.generate_input_for_NN(X_train,X_test,H_Features,N_Features,standarize=True) fffmp.clean_all_models() time_steps=n_partidos predictors=len(F_h) tipo_RNN=tipo_de_RNN recurrent_units=100 dense_units=[500,200,80,20,10] dense_drop_out=0.1 out_shape=3 input_shape_history=(time_steps,predictors) input_shape_now=A_train.shape[1] metrics=[&#39;accuracy&#39;,&#39;AUC&#39;,F1] IFA=fffmp.Create_Mix_Model(tipo_RNN ,recurrent_units, dense_units,dense_drop_out, out_shape, input_shape_history,input_shape_now,metrics) batch_size = 400 epochs = 50 validation_split=0.1 y_train_pred,y_test_pred,Results=fffmp.Full_train_and_Report(IFA,[M_A,M_B,A_train],y_train,[M_A_test,M_B_test,A_test],y_test,batch_size,epochs,validation_split,num_classes=3,history_plot=False,confusion_matrix=False,Report_print=False) index=index+1 name=str(index) Report=fffmp.Append_line_to_report_table(Report,Results,name,tipo_de_RNN,n_partidos,len(F_h),len(N_Features)) . Train shape: (83399, 1, 3) Test shape: (10292, 1, 3) Train shape: (83399, 1, 3) Test shape: (10292, 1, 3) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 1, 3)] 0 [] input_2 (InputLayer) [(None, 1, 3)] 0 [] lstm (LSTM) (None, 1, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 1, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 100) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 100) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 202) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 101500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 302,043 Trainable params: 302,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 7s 31ms/step - loss: 1.0920 - accuracy: 0.3736 - auc: 0.5488 - f1_score: 0.3505 - val_loss: 1.0870 - val_accuracy: 0.3891 - val_auc: 0.5672 - val_f1_score: 0.3104 Epoch 2/50 188/188 [==============================] - 5s 28ms/step - loss: 1.0871 - accuracy: 0.3856 - auc: 0.5630 - f1_score: 0.3135 - val_loss: 1.0845 - val_accuracy: 0.3902 - val_auc: 0.5693 - val_f1_score: 0.3115 Epoch 3/50 188/188 [==============================] - 5s 28ms/step - loss: 1.0861 - accuracy: 0.3885 - auc: 0.5654 - f1_score: 0.3327 - val_loss: 1.0846 - val_accuracy: 0.3896 - val_auc: 0.5697 - val_f1_score: 0.3561 Epoch 4/50 188/188 [==============================] - 5s 28ms/step - loss: 1.0859 - accuracy: 0.3871 - auc: 0.5657 - f1_score: 0.3382 - val_loss: 1.0846 - val_accuracy: 0.3874 - val_auc: 0.5696 - val_f1_score: 0.3429 Epoch 5/50 188/188 [==============================] - 6s 29ms/step - loss: 1.0854 - accuracy: 0.3887 - auc: 0.5672 - f1_score: 0.3402 - val_loss: 1.0848 - val_accuracy: 0.3902 - val_auc: 0.5701 - val_f1_score: 0.3551 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . Train shape: (83399, 2, 3) Test shape: (10292, 2, 3) Train shape: (83399, 2, 3) Test shape: (10292, 2, 3) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 2, 3)] 0 [] input_2 (InputLayer) [(None, 2, 3)] 0 [] lstm (LSTM) (None, 2, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 2, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 200) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 200) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 402) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 201500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 402,043 Trainable params: 402,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 11s 46ms/step - loss: 1.0898 - accuracy: 0.3776 - auc: 0.5540 - f1_score: 0.3380 - val_loss: 1.0848 - val_accuracy: 0.3923 - val_auc: 0.5731 - val_f1_score: 0.3332 Epoch 2/50 188/188 [==============================] - 8s 43ms/step - loss: 1.0823 - accuracy: 0.3970 - auc: 0.5753 - f1_score: 0.3396 - val_loss: 1.0824 - val_accuracy: 0.3964 - val_auc: 0.5746 - val_f1_score: 0.3495 Epoch 3/50 188/188 [==============================] - 8s 42ms/step - loss: 1.0813 - accuracy: 0.3976 - auc: 0.5772 - f1_score: 0.3623 - val_loss: 1.0817 - val_accuracy: 0.3970 - val_auc: 0.5768 - val_f1_score: 0.3607 Epoch 4/50 188/188 [==============================] - 9s 46ms/step - loss: 1.0809 - accuracy: 0.3994 - auc: 0.5781 - f1_score: 0.3733 - val_loss: 1.0815 - val_accuracy: 0.3981 - val_auc: 0.5770 - val_f1_score: 0.3711 Epoch 5/50 188/188 [==============================] - 9s 49ms/step - loss: 1.0809 - accuracy: 0.3979 - auc: 0.5783 - f1_score: 0.3727 - val_loss: 1.0819 - val_accuracy: 0.3958 - val_auc: 0.5769 - val_f1_score: 0.3767 Epoch 6/50 188/188 [==============================] - 8s 40ms/step - loss: 1.0806 - accuracy: 0.3991 - auc: 0.5793 - f1_score: 0.3769 - val_loss: 1.0817 - val_accuracy: 0.3974 - val_auc: 0.5772 - val_f1_score: 0.3687 Epoch 7/50 188/188 [==============================] - 7s 38ms/step - loss: 1.0802 - accuracy: 0.4001 - auc: 0.5794 - f1_score: 0.3783 - val_loss: 1.0819 - val_accuracy: 0.3947 - val_auc: 0.5767 - val_f1_score: 0.3600 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . Train shape: (83399, 3, 3) Test shape: (10292, 3, 3) Train shape: (83399, 3, 3) Test shape: (10292, 3, 3) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 3, 3)] 0 [] input_2 (InputLayer) [(None, 3, 3)] 0 [] lstm (LSTM) (None, 3, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 3, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 300) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 300) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 602) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 301500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 502,043 Trainable params: 502,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 14s 60ms/step - loss: 1.0878 - accuracy: 0.3762 - auc: 0.5619 - f1_score: 0.3878 - val_loss: 1.0792 - val_accuracy: 0.3980 - val_auc: 0.5803 - val_f1_score: 0.3376 Epoch 2/50 188/188 [==============================] - 12s 64ms/step - loss: 1.0784 - accuracy: 0.4013 - auc: 0.5824 - f1_score: 0.3709 - val_loss: 1.0784 - val_accuracy: 0.4036 - val_auc: 0.5819 - val_f1_score: 0.3551 Epoch 3/50 188/188 [==============================] - 12s 62ms/step - loss: 1.0775 - accuracy: 0.4040 - auc: 0.5841 - f1_score: 0.3672 - val_loss: 1.0777 - val_accuracy: 0.4019 - val_auc: 0.5828 - val_f1_score: 0.3678 Epoch 4/50 188/188 [==============================] - 11s 61ms/step - loss: 1.0768 - accuracy: 0.4031 - auc: 0.5857 - f1_score: 0.3716 - val_loss: 1.0786 - val_accuracy: 0.4007 - val_auc: 0.5820 - val_f1_score: 0.3619 Epoch 5/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0767 - accuracy: 0.4055 - auc: 0.5863 - f1_score: 0.3737 - val_loss: 1.0783 - val_accuracy: 0.3998 - val_auc: 0.5828 - val_f1_score: 0.3603 Epoch 6/50 188/188 [==============================] - 9s 49ms/step - loss: 1.0763 - accuracy: 0.4062 - auc: 0.5869 - f1_score: 0.3806 - val_loss: 1.0779 - val_accuracy: 0.4046 - val_auc: 0.5848 - val_f1_score: 0.3797 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . Train shape: (83399, 4, 3) Test shape: (10292, 4, 3) Train shape: (83399, 4, 3) Test shape: (10292, 4, 3) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 4, 3)] 0 [] input_2 (InputLayer) [(None, 4, 3)] 0 [] lstm (LSTM) (None, 4, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 4, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 400) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 400) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 802) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 401500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 602,043 Trainable params: 602,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 17s 74ms/step - loss: 1.0813 - accuracy: 0.4002 - auc: 0.5763 - f1_score: 0.3697 - val_loss: 1.0738 - val_accuracy: 0.4120 - val_auc: 0.5933 - val_f1_score: 0.3755 Epoch 2/50 188/188 [==============================] - 12s 65ms/step - loss: 1.0735 - accuracy: 0.4108 - auc: 0.5913 - f1_score: 0.3881 - val_loss: 1.0734 - val_accuracy: 0.4085 - val_auc: 0.5932 - val_f1_score: 0.3912 Epoch 3/50 188/188 [==============================] - 13s 69ms/step - loss: 1.0728 - accuracy: 0.4127 - auc: 0.5934 - f1_score: 0.3984 - val_loss: 1.0734 - val_accuracy: 0.4091 - val_auc: 0.5929 - val_f1_score: 0.3989 Epoch 4/50 188/188 [==============================] - 13s 68ms/step - loss: 1.0721 - accuracy: 0.4137 - auc: 0.5946 - f1_score: 0.4008 - val_loss: 1.0734 - val_accuracy: 0.4110 - val_auc: 0.5937 - val_f1_score: 0.4035 Epoch 5/50 188/188 [==============================] - 12s 66ms/step - loss: 1.0712 - accuracy: 0.4119 - auc: 0.5954 - f1_score: 0.4014 - val_loss: 1.0731 - val_accuracy: 0.4150 - val_auc: 0.5948 - val_f1_score: 0.4028 Epoch 6/50 188/188 [==============================] - 14s 72ms/step - loss: 1.0712 - accuracy: 0.4140 - auc: 0.5965 - f1_score: 0.4030 - val_loss: 1.0736 - val_accuracy: 0.4092 - val_auc: 0.5929 - val_f1_score: 0.4013 Epoch 7/50 188/188 [==============================] - 14s 74ms/step - loss: 1.0713 - accuracy: 0.4140 - auc: 0.5962 - f1_score: 0.4056 - val_loss: 1.0739 - val_accuracy: 0.4083 - val_auc: 0.5929 - val_f1_score: 0.3936 Epoch 8/50 188/188 [==============================] - 12s 66ms/step - loss: 1.0708 - accuracy: 0.4157 - auc: 0.5973 - f1_score: 0.4048 - val_loss: 1.0737 - val_accuracy: 0.4118 - val_auc: 0.5933 - val_f1_score: 0.3999 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . Train shape: (83399, 5, 3) Test shape: (10292, 5, 3) Train shape: (83399, 5, 3) Test shape: (10292, 5, 3) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 5, 3)] 0 [] input_2 (InputLayer) [(None, 5, 3)] 0 [] lstm (LSTM) (None, 5, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 5, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 500) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 500) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1002) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 501500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 702,043 Trainable params: 702,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 17s 77ms/step - loss: 1.0797 - accuracy: 0.4032 - auc: 0.5797 - f1_score: 0.3941 - val_loss: 1.0726 - val_accuracy: 0.4090 - val_auc: 0.5914 - val_f1_score: 0.3909 Epoch 2/50 188/188 [==============================] - 14s 77ms/step - loss: 1.0707 - accuracy: 0.4126 - auc: 0.5958 - f1_score: 0.4001 - val_loss: 1.0719 - val_accuracy: 0.4097 - val_auc: 0.5933 - val_f1_score: 0.3998 Epoch 3/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0698 - accuracy: 0.4146 - auc: 0.5979 - f1_score: 0.4047 - val_loss: 1.0722 - val_accuracy: 0.4046 - val_auc: 0.5926 - val_f1_score: 0.3897 Epoch 4/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0691 - accuracy: 0.4143 - auc: 0.5990 - f1_score: 0.4030 - val_loss: 1.0723 - val_accuracy: 0.4083 - val_auc: 0.5925 - val_f1_score: 0.3929 Epoch 5/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0685 - accuracy: 0.4172 - auc: 0.6006 - f1_score: 0.4054 - val_loss: 1.0721 - val_accuracy: 0.4073 - val_auc: 0.5935 - val_f1_score: 0.3913 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . Train shape: (83399, 6, 3) Test shape: (10292, 6, 3) Train shape: (83399, 6, 3) Test shape: (10292, 6, 3) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 6, 3)] 0 [] input_2 (InputLayer) [(None, 6, 3)] 0 [] lstm (LSTM) (None, 6, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 6, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 600) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 600) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1202) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 601500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 802,043 Trainable params: 802,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 21s 96ms/step - loss: 1.0780 - accuracy: 0.4069 - auc: 0.5827 - f1_score: 0.3936 - val_loss: 1.0739 - val_accuracy: 0.4085 - val_auc: 0.5885 - val_f1_score: 0.3553 Epoch 2/50 188/188 [==============================] - 17s 92ms/step - loss: 1.0697 - accuracy: 0.4141 - auc: 0.5972 - f1_score: 0.3629 - val_loss: 1.0711 - val_accuracy: 0.4082 - val_auc: 0.5951 - val_f1_score: 0.3633 Epoch 3/50 188/188 [==============================] - 16s 87ms/step - loss: 1.0678 - accuracy: 0.4175 - auc: 0.6013 - f1_score: 0.3759 - val_loss: 1.0705 - val_accuracy: 0.4091 - val_auc: 0.5969 - val_f1_score: 0.3767 Epoch 4/50 188/188 [==============================] - 17s 92ms/step - loss: 1.0665 - accuracy: 0.4177 - auc: 0.6033 - f1_score: 0.3896 - val_loss: 1.0708 - val_accuracy: 0.4091 - val_auc: 0.5960 - val_f1_score: 0.3839 Epoch 5/50 188/188 [==============================] - 16s 86ms/step - loss: 1.0660 - accuracy: 0.4202 - auc: 0.6045 - f1_score: 0.3916 - val_loss: 1.0706 - val_accuracy: 0.4048 - val_auc: 0.5963 - val_f1_score: 0.3737 Epoch 6/50 188/188 [==============================] - 16s 87ms/step - loss: 1.0656 - accuracy: 0.4209 - auc: 0.6053 - f1_score: 0.3954 - val_loss: 1.0704 - val_accuracy: 0.4097 - val_auc: 0.5975 - val_f1_score: 0.3877 Epoch 7/50 188/188 [==============================] - 16s 88ms/step - loss: 1.0651 - accuracy: 0.4198 - auc: 0.6059 - f1_score: 0.3958 - val_loss: 1.0707 - val_accuracy: 0.4080 - val_auc: 0.5962 - val_f1_score: 0.3856 Epoch 8/50 188/188 [==============================] - 18s 94ms/step - loss: 1.0651 - accuracy: 0.4210 - auc: 0.6066 - f1_score: 0.3967 - val_loss: 1.0706 - val_accuracy: 0.4067 - val_auc: 0.5973 - val_f1_score: 0.3811 Epoch 9/50 188/188 [==============================] - 18s 96ms/step - loss: 1.0646 - accuracy: 0.4229 - auc: 0.6072 - f1_score: 0.3980 - val_loss: 1.0708 - val_accuracy: 0.4101 - val_auc: 0.5963 - val_f1_score: 0.3877 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . Train shape: (83399, 7, 3) Test shape: (10292, 7, 3) Train shape: (83399, 7, 3) Test shape: (10292, 7, 3) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 7, 3)] 0 [] input_2 (InputLayer) [(None, 7, 3)] 0 [] lstm (LSTM) (None, 7, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 7, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 700) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 700) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1402) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 701500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 902,043 Trainable params: 902,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 28s 122ms/step - loss: 1.0814 - accuracy: 0.3984 - auc: 0.5792 - f1_score: 0.4003 - val_loss: 1.0707 - val_accuracy: 0.4113 - val_auc: 0.5957 - val_f1_score: 0.3743 Epoch 2/50 188/188 [==============================] - 19s 104ms/step - loss: 1.0674 - accuracy: 0.4195 - auc: 0.6024 - f1_score: 0.4061 - val_loss: 1.0688 - val_accuracy: 0.4118 - val_auc: 0.5986 - val_f1_score: 0.4013 Epoch 3/50 188/188 [==============================] - 19s 102ms/step - loss: 1.0659 - accuracy: 0.4211 - auc: 0.6050 - f1_score: 0.4108 - val_loss: 1.0685 - val_accuracy: 0.4137 - val_auc: 0.5997 - val_f1_score: 0.4048 Epoch 4/50 188/188 [==============================] - 19s 99ms/step - loss: 1.0646 - accuracy: 0.4245 - auc: 0.6073 - f1_score: 0.4157 - val_loss: 1.0688 - val_accuracy: 0.4114 - val_auc: 0.5990 - val_f1_score: 0.3987 Epoch 5/50 188/188 [==============================] - 19s 101ms/step - loss: 1.0642 - accuracy: 0.4241 - auc: 0.6080 - f1_score: 0.4130 - val_loss: 1.0689 - val_accuracy: 0.4143 - val_auc: 0.5988 - val_f1_score: 0.4042 Epoch 6/50 188/188 [==============================] - 19s 101ms/step - loss: 1.0630 - accuracy: 0.4260 - auc: 0.6100 - f1_score: 0.4163 - val_loss: 1.0688 - val_accuracy: 0.4144 - val_auc: 0.5996 - val_f1_score: 0.3994 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . Train shape: (83399, 8, 3) Test shape: (10292, 8, 3) Train shape: (83399, 8, 3) Test shape: (10292, 8, 3) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 8, 3)] 0 [] input_2 (InputLayer) [(None, 8, 3)] 0 [] lstm (LSTM) (None, 8, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 8, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 800) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 800) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1602) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 801500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,002,043 Trainable params: 1,002,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 27s 117ms/step - loss: 1.0764 - accuracy: 0.4044 - auc: 0.5837 - f1_score: 0.3921 - val_loss: 1.0708 - val_accuracy: 0.4024 - val_auc: 0.5910 - val_f1_score: 0.3413 Epoch 2/50 188/188 [==============================] - 21s 110ms/step - loss: 1.0652 - accuracy: 0.4213 - auc: 0.6046 - f1_score: 0.3849 - val_loss: 1.0699 - val_accuracy: 0.4079 - val_auc: 0.5943 - val_f1_score: 0.3640 Epoch 3/50 188/188 [==============================] - 21s 109ms/step - loss: 1.0644 - accuracy: 0.4228 - auc: 0.6069 - f1_score: 0.3970 - val_loss: 1.0691 - val_accuracy: 0.4091 - val_auc: 0.5963 - val_f1_score: 0.3850 Epoch 4/50 188/188 [==============================] - 21s 110ms/step - loss: 1.0632 - accuracy: 0.4268 - auc: 0.6100 - f1_score: 0.4035 - val_loss: 1.0684 - val_accuracy: 0.4118 - val_auc: 0.5986 - val_f1_score: 0.3903 Epoch 5/50 188/188 [==============================] - 22s 115ms/step - loss: 1.0625 - accuracy: 0.4273 - auc: 0.6108 - f1_score: 0.4109 - val_loss: 1.0693 - val_accuracy: 0.4104 - val_auc: 0.5969 - val_f1_score: 0.3973 Epoch 6/50 188/188 [==============================] - 22s 115ms/step - loss: 1.0610 - accuracy: 0.4293 - auc: 0.6130 - f1_score: 0.4131 - val_loss: 1.0690 - val_accuracy: 0.4141 - val_auc: 0.5982 - val_f1_score: 0.3954 Epoch 7/50 188/188 [==============================] - 21s 110ms/step - loss: 1.0606 - accuracy: 0.4314 - auc: 0.6139 - f1_score: 0.4135 - val_loss: 1.0703 - val_accuracy: 0.4124 - val_auc: 0.5955 - val_f1_score: 0.3963 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . Train shape: (83399, 9, 3) Test shape: (10292, 9, 3) Train shape: (83399, 9, 3) Test shape: (10292, 9, 3) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 9, 3)] 0 [] input_2 (InputLayer) [(None, 9, 3)] 0 [] lstm (LSTM) (None, 9, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 9, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 900) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 900) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1802) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 901500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,102,043 Trainable params: 1,102,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 27s 126ms/step - loss: 1.0803 - accuracy: 0.4081 - auc: 0.5791 - f1_score: 0.3999 - val_loss: 1.0703 - val_accuracy: 0.4088 - val_auc: 0.5972 - val_f1_score: 0.3905 Epoch 2/50 188/188 [==============================] - 25s 131ms/step - loss: 1.0645 - accuracy: 0.4238 - auc: 0.6074 - f1_score: 0.4149 - val_loss: 1.0688 - val_accuracy: 0.4094 - val_auc: 0.5988 - val_f1_score: 0.3923 Epoch 3/50 188/188 [==============================] - 23s 124ms/step - loss: 1.0622 - accuracy: 0.4266 - auc: 0.6109 - f1_score: 0.4185 - val_loss: 1.0680 - val_accuracy: 0.4101 - val_auc: 0.5998 - val_f1_score: 0.4016 Epoch 4/50 188/188 [==============================] - 24s 125ms/step - loss: 1.0618 - accuracy: 0.4278 - auc: 0.6119 - f1_score: 0.4180 - val_loss: 1.0685 - val_accuracy: 0.4116 - val_auc: 0.5985 - val_f1_score: 0.4038 Epoch 5/50 188/188 [==============================] - 25s 132ms/step - loss: 1.0607 - accuracy: 0.4280 - auc: 0.6132 - f1_score: 0.4199 - val_loss: 1.0680 - val_accuracy: 0.4092 - val_auc: 0.5996 - val_f1_score: 0.3917 Epoch 6/50 188/188 [==============================] - 23s 125ms/step - loss: 1.0596 - accuracy: 0.4306 - auc: 0.6153 - f1_score: 0.4237 - val_loss: 1.0689 - val_accuracy: 0.4091 - val_auc: 0.5985 - val_f1_score: 0.3963 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . Train shape: (83399, 10, 3) Test shape: (10292, 10, 3) Train shape: (83399, 10, 3) Test shape: (10292, 10, 3) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 3)] 0 [] input_2 (InputLayer) [(None, 10, 3)] 0 [] lstm (LSTM) (None, 10, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 10, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 2002) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1001500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,202,043 Trainable params: 1,202,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 34s 158ms/step - loss: 1.0812 - accuracy: 0.3919 - auc: 0.5749 - f1_score: 0.4024 - val_loss: 1.0688 - val_accuracy: 0.4098 - val_auc: 0.5988 - val_f1_score: 0.3753 Epoch 2/50 188/188 [==============================] - 29s 153ms/step - loss: 1.0641 - accuracy: 0.4235 - auc: 0.6070 - f1_score: 0.3973 - val_loss: 1.0665 - val_accuracy: 0.4129 - val_auc: 0.6031 - val_f1_score: 0.3918 Epoch 3/50 188/188 [==============================] - 30s 158ms/step - loss: 1.0619 - accuracy: 0.4265 - auc: 0.6109 - f1_score: 0.4135 - val_loss: 1.0666 - val_accuracy: 0.4127 - val_auc: 0.6028 - val_f1_score: 0.3935 Epoch 4/50 188/188 [==============================] - 31s 164ms/step - loss: 1.0609 - accuracy: 0.4296 - auc: 0.6129 - f1_score: 0.4190 - val_loss: 1.0666 - val_accuracy: 0.4140 - val_auc: 0.6029 - val_f1_score: 0.4013 Epoch 5/50 188/188 [==============================] - 29s 154ms/step - loss: 1.0592 - accuracy: 0.4315 - auc: 0.6159 - f1_score: 0.4219 - val_loss: 1.0671 - val_accuracy: 0.4125 - val_auc: 0.6017 - val_f1_score: 0.3992 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . Train shape: (83399, 1, 3) Test shape: (10292, 1, 3) Train shape: (83399, 1, 3) Test shape: (10292, 1, 3) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 1, 3)] 0 [] input_2 (InputLayer) [(None, 1, 3)] 0 [] simple_rnn (SimpleRNN) (None, 1, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 1, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 100) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 100) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 202) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 101500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 240,243 Trainable params: 240,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 7s 27ms/step - loss: 1.0916 - accuracy: 0.3711 - auc: 0.5473 - f1_score: 0.3883 - val_loss: 1.0859 - val_accuracy: 0.3869 - val_auc: 0.5672 - val_f1_score: 0.3579 Epoch 2/50 188/188 [==============================] - 4s 24ms/step - loss: 1.0875 - accuracy: 0.3866 - auc: 0.5621 - f1_score: 0.3572 - val_loss: 1.0851 - val_accuracy: 0.3861 - val_auc: 0.5684 - val_f1_score: 0.3659 Epoch 3/50 188/188 [==============================] - 5s 24ms/step - loss: 1.0865 - accuracy: 0.3877 - auc: 0.5650 - f1_score: 0.3561 - val_loss: 1.0849 - val_accuracy: 0.3865 - val_auc: 0.5698 - val_f1_score: 0.3464 Epoch 4/50 188/188 [==============================] - 4s 24ms/step - loss: 1.0863 - accuracy: 0.3873 - auc: 0.5654 - f1_score: 0.3563 - val_loss: 1.0843 - val_accuracy: 0.3903 - val_auc: 0.5720 - val_f1_score: 0.3680 Epoch 5/50 188/188 [==============================] - 4s 24ms/step - loss: 1.0861 - accuracy: 0.3882 - auc: 0.5659 - f1_score: 0.3593 - val_loss: 1.0842 - val_accuracy: 0.3917 - val_auc: 0.5717 - val_f1_score: 0.3586 Epoch 6/50 188/188 [==============================] - 5s 24ms/step - loss: 1.0860 - accuracy: 0.3870 - auc: 0.5658 - f1_score: 0.3629 - val_loss: 1.0846 - val_accuracy: 0.3904 - val_auc: 0.5718 - val_f1_score: 0.3618 Epoch 7/50 188/188 [==============================] - 4s 24ms/step - loss: 1.0857 - accuracy: 0.3881 - auc: 0.5664 - f1_score: 0.3666 - val_loss: 1.0842 - val_accuracy: 0.3897 - val_auc: 0.5727 - val_f1_score: 0.3604 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . Train shape: (83399, 2, 3) Test shape: (10292, 2, 3) Train shape: (83399, 2, 3) Test shape: (10292, 2, 3) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 2, 3)] 0 [] input_2 (InputLayer) [(None, 2, 3)] 0 [] simple_rnn (SimpleRNN) (None, 2, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 2, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 200) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 200) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 402) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 201500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 340,243 Trainable params: 340,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 9s 35ms/step - loss: 1.0911 - accuracy: 0.3706 - auc: 0.5490 - f1_score: 0.3688 - val_loss: 1.0861 - val_accuracy: 0.3890 - val_auc: 0.5660 - val_f1_score: 0.3286 Epoch 2/50 188/188 [==============================] - 6s 33ms/step - loss: 1.0850 - accuracy: 0.3901 - auc: 0.5682 - f1_score: 0.3529 - val_loss: 1.0838 - val_accuracy: 0.3912 - val_auc: 0.5718 - val_f1_score: 0.3325 Epoch 3/50 188/188 [==============================] - 6s 32ms/step - loss: 1.0824 - accuracy: 0.3940 - auc: 0.5737 - f1_score: 0.3570 - val_loss: 1.0835 - val_accuracy: 0.3909 - val_auc: 0.5739 - val_f1_score: 0.3227 Epoch 4/50 188/188 [==============================] - 6s 32ms/step - loss: 1.0820 - accuracy: 0.3962 - auc: 0.5755 - f1_score: 0.3611 - val_loss: 1.0824 - val_accuracy: 0.3916 - val_auc: 0.5754 - val_f1_score: 0.3391 Epoch 5/50 188/188 [==============================] - 6s 32ms/step - loss: 1.0810 - accuracy: 0.3987 - auc: 0.5777 - f1_score: 0.3658 - val_loss: 1.0829 - val_accuracy: 0.3923 - val_auc: 0.5745 - val_f1_score: 0.3439 Epoch 6/50 188/188 [==============================] - 6s 32ms/step - loss: 1.0806 - accuracy: 0.3989 - auc: 0.5788 - f1_score: 0.3676 - val_loss: 1.0824 - val_accuracy: 0.3918 - val_auc: 0.5749 - val_f1_score: 0.3378 Epoch 7/50 188/188 [==============================] - 6s 32ms/step - loss: 1.0801 - accuracy: 0.3991 - auc: 0.5797 - f1_score: 0.3702 - val_loss: 1.0830 - val_accuracy: 0.3924 - val_auc: 0.5746 - val_f1_score: 0.3398 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . Train shape: (83399, 3, 3) Test shape: (10292, 3, 3) Train shape: (83399, 3, 3) Test shape: (10292, 3, 3) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 3, 3)] 0 [] input_2 (InputLayer) [(None, 3, 3)] 0 [] simple_rnn (SimpleRNN) (None, 3, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 3, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 300) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 300) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 602) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 301500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 440,243 Trainable params: 440,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 10s 41ms/step - loss: 1.0894 - accuracy: 0.3819 - auc: 0.5540 - f1_score: 0.3368 - val_loss: 1.0846 - val_accuracy: 0.3886 - val_auc: 0.5693 - val_f1_score: 0.3431 Epoch 2/50 188/188 [==============================] - 7s 38ms/step - loss: 1.0814 - accuracy: 0.3976 - auc: 0.5755 - f1_score: 0.3604 - val_loss: 1.0813 - val_accuracy: 0.4005 - val_auc: 0.5759 - val_f1_score: 0.3843 Epoch 3/50 188/188 [==============================] - 7s 37ms/step - loss: 1.0797 - accuracy: 0.4000 - auc: 0.5793 - f1_score: 0.3768 - val_loss: 1.0803 - val_accuracy: 0.4001 - val_auc: 0.5774 - val_f1_score: 0.3908 Epoch 4/50 188/188 [==============================] - 7s 37ms/step - loss: 1.0784 - accuracy: 0.4019 - auc: 0.5826 - f1_score: 0.3856 - val_loss: 1.0802 - val_accuracy: 0.3958 - val_auc: 0.5778 - val_f1_score: 0.3793 Epoch 5/50 188/188 [==============================] - 7s 38ms/step - loss: 1.0774 - accuracy: 0.4063 - auc: 0.5849 - f1_score: 0.3878 - val_loss: 1.0796 - val_accuracy: 0.4013 - val_auc: 0.5801 - val_f1_score: 0.3935 Epoch 6/50 188/188 [==============================] - 7s 39ms/step - loss: 1.0771 - accuracy: 0.4047 - auc: 0.5850 - f1_score: 0.3883 - val_loss: 1.0787 - val_accuracy: 0.4020 - val_auc: 0.5808 - val_f1_score: 0.3866 Epoch 7/50 188/188 [==============================] - 7s 37ms/step - loss: 1.0767 - accuracy: 0.4059 - auc: 0.5859 - f1_score: 0.3916 - val_loss: 1.0788 - val_accuracy: 0.4001 - val_auc: 0.5811 - val_f1_score: 0.3876 Epoch 8/50 188/188 [==============================] - 7s 37ms/step - loss: 1.0758 - accuracy: 0.4049 - auc: 0.5871 - f1_score: 0.3891 - val_loss: 1.0792 - val_accuracy: 0.4014 - val_auc: 0.5815 - val_f1_score: 0.3881 Epoch 9/50 188/188 [==============================] - 7s 37ms/step - loss: 1.0752 - accuracy: 0.4063 - auc: 0.5887 - f1_score: 0.3915 - val_loss: 1.0787 - val_accuracy: 0.4025 - val_auc: 0.5828 - val_f1_score: 0.3946 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . Train shape: (83399, 4, 3) Test shape: (10292, 4, 3) Train shape: (83399, 4, 3) Test shape: (10292, 4, 3) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 4, 3)] 0 [] input_2 (InputLayer) [(None, 4, 3)] 0 [] simple_rnn (SimpleRNN) (None, 4, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 4, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 400) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 400) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 802) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 401500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 540,243 Trainable params: 540,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 11s 45ms/step - loss: 1.0870 - accuracy: 0.3834 - auc: 0.5602 - f1_score: 0.3777 - val_loss: 1.0802 - val_accuracy: 0.3982 - val_auc: 0.5788 - val_f1_score: 0.3645 Epoch 2/50 188/188 [==============================] - 8s 42ms/step - loss: 1.0780 - accuracy: 0.4013 - auc: 0.5827 - f1_score: 0.3652 - val_loss: 1.0779 - val_accuracy: 0.4028 - val_auc: 0.5831 - val_f1_score: 0.3825 Epoch 3/50 188/188 [==============================] - 8s 42ms/step - loss: 1.0753 - accuracy: 0.4068 - auc: 0.5877 - f1_score: 0.3811 - val_loss: 1.0769 - val_accuracy: 0.4055 - val_auc: 0.5862 - val_f1_score: 0.3931 Epoch 4/50 188/188 [==============================] - 8s 42ms/step - loss: 1.0740 - accuracy: 0.4089 - auc: 0.5905 - f1_score: 0.3926 - val_loss: 1.0765 - val_accuracy: 0.4054 - val_auc: 0.5872 - val_f1_score: 0.3947 Epoch 5/50 188/188 [==============================] - 8s 42ms/step - loss: 1.0732 - accuracy: 0.4091 - auc: 0.5916 - f1_score: 0.3911 - val_loss: 1.0763 - val_accuracy: 0.4072 - val_auc: 0.5873 - val_f1_score: 0.3866 Epoch 6/50 188/188 [==============================] - 8s 43ms/step - loss: 1.0730 - accuracy: 0.4105 - auc: 0.5927 - f1_score: 0.3948 - val_loss: 1.0762 - val_accuracy: 0.4029 - val_auc: 0.5868 - val_f1_score: 0.3895 Epoch 7/50 188/188 [==============================] - 8s 42ms/step - loss: 1.0717 - accuracy: 0.4134 - auc: 0.5950 - f1_score: 0.3972 - val_loss: 1.0749 - val_accuracy: 0.4041 - val_auc: 0.5901 - val_f1_score: 0.3885 Epoch 8/50 188/188 [==============================] - 8s 42ms/step - loss: 1.0710 - accuracy: 0.4151 - auc: 0.5960 - f1_score: 0.3992 - val_loss: 1.0766 - val_accuracy: 0.4047 - val_auc: 0.5868 - val_f1_score: 0.3888 Epoch 9/50 188/188 [==============================] - 8s 42ms/step - loss: 1.0704 - accuracy: 0.4136 - auc: 0.5971 - f1_score: 0.4006 - val_loss: 1.0758 - val_accuracy: 0.4047 - val_auc: 0.5881 - val_f1_score: 0.3929 Epoch 10/50 188/188 [==============================] - 8s 42ms/step - loss: 1.0708 - accuracy: 0.4133 - auc: 0.5961 - f1_score: 0.4027 - val_loss: 1.0758 - val_accuracy: 0.4070 - val_auc: 0.5888 - val_f1_score: 0.3960 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . Train shape: (83399, 5, 3) Test shape: (10292, 5, 3) Train shape: (83399, 5, 3) Test shape: (10292, 5, 3) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 5, 3)] 0 [] input_2 (InputLayer) [(None, 5, 3)] 0 [] simple_rnn (SimpleRNN) (None, 5, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 5, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 500) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 500) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1002) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 501500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 640,243 Trainable params: 640,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 12s 52ms/step - loss: 1.0889 - accuracy: 0.3732 - auc: 0.5533 - f1_score: 0.3943 - val_loss: 1.0826 - val_accuracy: 0.3946 - val_auc: 0.5737 - val_f1_score: 0.3745 Epoch 2/50 188/188 [==============================] - 9s 49ms/step - loss: 1.0772 - accuracy: 0.4039 - auc: 0.5846 - f1_score: 0.3954 - val_loss: 1.0772 - val_accuracy: 0.3990 - val_auc: 0.5838 - val_f1_score: 0.3905 Epoch 3/50 188/188 [==============================] - 9s 50ms/step - loss: 1.0733 - accuracy: 0.4111 - auc: 0.5918 - f1_score: 0.4034 - val_loss: 1.0751 - val_accuracy: 0.4064 - val_auc: 0.5875 - val_f1_score: 0.3964 Epoch 4/50 188/188 [==============================] - 9s 49ms/step - loss: 1.0717 - accuracy: 0.4120 - auc: 0.5948 - f1_score: 0.4048 - val_loss: 1.0752 - val_accuracy: 0.4066 - val_auc: 0.5869 - val_f1_score: 0.3909 Epoch 5/50 188/188 [==============================] - 9s 50ms/step - loss: 1.0704 - accuracy: 0.4140 - auc: 0.5964 - f1_score: 0.4017 - val_loss: 1.0749 - val_accuracy: 0.4084 - val_auc: 0.5879 - val_f1_score: 0.3981 Epoch 6/50 188/188 [==============================] - 9s 49ms/step - loss: 1.0695 - accuracy: 0.4157 - auc: 0.5986 - f1_score: 0.4068 - val_loss: 1.0745 - val_accuracy: 0.4038 - val_auc: 0.5894 - val_f1_score: 0.3902 Epoch 7/50 188/188 [==============================] - 9s 49ms/step - loss: 1.0684 - accuracy: 0.4160 - auc: 0.6003 - f1_score: 0.4076 - val_loss: 1.0744 - val_accuracy: 0.4102 - val_auc: 0.5890 - val_f1_score: 0.3886 Epoch 8/50 188/188 [==============================] - 10s 52ms/step - loss: 1.0684 - accuracy: 0.4182 - auc: 0.6002 - f1_score: 0.4068 - val_loss: 1.0738 - val_accuracy: 0.4076 - val_auc: 0.5902 - val_f1_score: 0.3918 Epoch 9/50 188/188 [==============================] - 10s 54ms/step - loss: 1.0670 - accuracy: 0.4200 - auc: 0.6029 - f1_score: 0.4093 - val_loss: 1.0739 - val_accuracy: 0.4071 - val_auc: 0.5907 - val_f1_score: 0.3968 Epoch 10/50 188/188 [==============================] - 10s 51ms/step - loss: 1.0666 - accuracy: 0.4218 - auc: 0.6042 - f1_score: 0.4125 - val_loss: 1.0737 - val_accuracy: 0.4046 - val_auc: 0.5909 - val_f1_score: 0.3899 Epoch 11/50 188/188 [==============================] - 9s 49ms/step - loss: 1.0659 - accuracy: 0.4224 - auc: 0.6048 - f1_score: 0.4114 - val_loss: 1.0732 - val_accuracy: 0.4070 - val_auc: 0.5926 - val_f1_score: 0.3883 Epoch 12/50 188/188 [==============================] - 9s 50ms/step - loss: 1.0646 - accuracy: 0.4247 - auc: 0.6078 - f1_score: 0.4157 - val_loss: 1.0737 - val_accuracy: 0.4065 - val_auc: 0.5917 - val_f1_score: 0.3909 Epoch 13/50 188/188 [==============================] - 9s 49ms/step - loss: 1.0649 - accuracy: 0.4211 - auc: 0.6065 - f1_score: 0.4114 - val_loss: 1.0741 - val_accuracy: 0.4050 - val_auc: 0.5902 - val_f1_score: 0.3945 Epoch 14/50 188/188 [==============================] - 9s 50ms/step - loss: 1.0641 - accuracy: 0.4238 - auc: 0.6081 - f1_score: 0.4159 - val_loss: 1.0724 - val_accuracy: 0.4108 - val_auc: 0.5933 - val_f1_score: 0.4023 Epoch 15/50 188/188 [==============================] - 10s 51ms/step - loss: 1.0634 - accuracy: 0.4241 - auc: 0.6089 - f1_score: 0.4160 - val_loss: 1.0740 - val_accuracy: 0.4078 - val_auc: 0.5919 - val_f1_score: 0.3956 Epoch 16/50 188/188 [==============================] - 10s 52ms/step - loss: 1.0639 - accuracy: 0.4253 - auc: 0.6081 - f1_score: 0.4173 - val_loss: 1.0742 - val_accuracy: 0.4085 - val_auc: 0.5909 - val_f1_score: 0.3951 Epoch 17/50 188/188 [==============================] - 9s 50ms/step - loss: 1.0624 - accuracy: 0.4275 - auc: 0.6103 - f1_score: 0.4206 - val_loss: 1.0730 - val_accuracy: 0.4135 - val_auc: 0.5928 - val_f1_score: 0.3987 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . Train shape: (83399, 6, 3) Test shape: (10292, 6, 3) Train shape: (83399, 6, 3) Test shape: (10292, 6, 3) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 6, 3)] 0 [] input_2 (InputLayer) [(None, 6, 3)] 0 [] simple_rnn (SimpleRNN) (None, 6, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 6, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 600) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 600) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1202) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 601500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 740,243 Trainable params: 740,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 13s 61ms/step - loss: 1.0839 - accuracy: 0.3900 - auc: 0.5675 - f1_score: 0.3991 - val_loss: 1.0769 - val_accuracy: 0.3990 - val_auc: 0.5846 - val_f1_score: 0.3790 Epoch 2/50 188/188 [==============================] - 11s 58ms/step - loss: 1.0726 - accuracy: 0.4100 - auc: 0.5930 - f1_score: 0.3951 - val_loss: 1.0746 - val_accuracy: 0.4073 - val_auc: 0.5883 - val_f1_score: 0.3975 Epoch 3/50 188/188 [==============================] - 11s 57ms/step - loss: 1.0700 - accuracy: 0.4141 - auc: 0.5970 - f1_score: 0.4023 - val_loss: 1.0750 - val_accuracy: 0.4019 - val_auc: 0.5887 - val_f1_score: 0.3893 Epoch 4/50 188/188 [==============================] - 11s 57ms/step - loss: 1.0689 - accuracy: 0.4159 - auc: 0.5989 - f1_score: 0.4057 - val_loss: 1.0728 - val_accuracy: 0.4083 - val_auc: 0.5922 - val_f1_score: 0.3999 Epoch 5/50 188/188 [==============================] - 11s 60ms/step - loss: 1.0669 - accuracy: 0.4173 - auc: 0.6019 - f1_score: 0.4073 - val_loss: 1.0722 - val_accuracy: 0.4134 - val_auc: 0.5929 - val_f1_score: 0.4087 Epoch 6/50 188/188 [==============================] - 11s 61ms/step - loss: 1.0652 - accuracy: 0.4208 - auc: 0.6059 - f1_score: 0.4113 - val_loss: 1.0727 - val_accuracy: 0.4106 - val_auc: 0.5930 - val_f1_score: 0.4042 Epoch 7/50 188/188 [==============================] - 11s 59ms/step - loss: 1.0650 - accuracy: 0.4197 - auc: 0.6058 - f1_score: 0.4082 - val_loss: 1.0735 - val_accuracy: 0.4101 - val_auc: 0.5914 - val_f1_score: 0.3946 Epoch 8/50 188/188 [==============================] - 11s 58ms/step - loss: 1.0637 - accuracy: 0.4241 - auc: 0.6082 - f1_score: 0.4132 - val_loss: 1.0735 - val_accuracy: 0.4088 - val_auc: 0.5910 - val_f1_score: 0.4047 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . Train shape: (83399, 7, 3) Test shape: (10292, 7, 3) Train shape: (83399, 7, 3) Test shape: (10292, 7, 3) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 7, 3)] 0 [] input_2 (InputLayer) [(None, 7, 3)] 0 [] simple_rnn (SimpleRNN) (None, 7, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 7, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 700) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 700) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1402) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 701500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 840,243 Trainable params: 840,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 15s 68ms/step - loss: 1.0902 - accuracy: 0.3604 - auc: 0.5494 - f1_score: 0.4032 - val_loss: 1.0813 - val_accuracy: 0.3963 - val_auc: 0.5730 - val_f1_score: 0.3513 Epoch 2/50 188/188 [==============================] - 12s 65ms/step - loss: 1.0758 - accuracy: 0.4023 - auc: 0.5851 - f1_score: 0.3932 - val_loss: 1.0760 - val_accuracy: 0.4018 - val_auc: 0.5852 - val_f1_score: 0.3617 Epoch 3/50 188/188 [==============================] - 12s 64ms/step - loss: 1.0712 - accuracy: 0.4105 - auc: 0.5938 - f1_score: 0.3990 - val_loss: 1.0747 - val_accuracy: 0.4038 - val_auc: 0.5885 - val_f1_score: 0.3824 Epoch 4/50 188/188 [==============================] - 12s 66ms/step - loss: 1.0679 - accuracy: 0.4170 - auc: 0.6009 - f1_score: 0.4112 - val_loss: 1.0728 - val_accuracy: 0.4052 - val_auc: 0.5928 - val_f1_score: 0.3833 Epoch 5/50 188/188 [==============================] - 13s 71ms/step - loss: 1.0662 - accuracy: 0.4215 - auc: 0.6043 - f1_score: 0.4155 - val_loss: 1.0733 - val_accuracy: 0.4085 - val_auc: 0.5912 - val_f1_score: 0.3836 Epoch 6/50 188/188 [==============================] - 12s 64ms/step - loss: 1.0648 - accuracy: 0.4207 - auc: 0.6059 - f1_score: 0.4136 - val_loss: 1.0732 - val_accuracy: 0.4047 - val_auc: 0.5918 - val_f1_score: 0.3893 Epoch 7/50 188/188 [==============================] - 12s 64ms/step - loss: 1.0633 - accuracy: 0.4269 - auc: 0.6098 - f1_score: 0.4195 - val_loss: 1.0721 - val_accuracy: 0.4112 - val_auc: 0.5932 - val_f1_score: 0.3981 Epoch 8/50 188/188 [==============================] - 12s 64ms/step - loss: 1.0619 - accuracy: 0.4283 - auc: 0.6111 - f1_score: 0.4218 - val_loss: 1.0735 - val_accuracy: 0.4080 - val_auc: 0.5916 - val_f1_score: 0.3838 Epoch 9/50 188/188 [==============================] - 12s 64ms/step - loss: 1.0612 - accuracy: 0.4291 - auc: 0.6125 - f1_score: 0.4220 - val_loss: 1.0733 - val_accuracy: 0.4066 - val_auc: 0.5918 - val_f1_score: 0.3893 Epoch 10/50 188/188 [==============================] - 12s 64ms/step - loss: 1.0597 - accuracy: 0.4301 - auc: 0.6154 - f1_score: 0.4226 - val_loss: 1.0723 - val_accuracy: 0.4083 - val_auc: 0.5931 - val_f1_score: 0.3976 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . Train shape: (83399, 8, 3) Test shape: (10292, 8, 3) Train shape: (83399, 8, 3) Test shape: (10292, 8, 3) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 8, 3)] 0 [] input_2 (InputLayer) [(None, 8, 3)] 0 [] simple_rnn (SimpleRNN) (None, 8, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 8, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 800) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 800) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1602) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 801500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 940,243 Trainable params: 940,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 16s 75ms/step - loss: 1.0829 - accuracy: 0.3919 - auc: 0.5687 - f1_score: 0.3991 - val_loss: 1.0767 - val_accuracy: 0.4020 - val_auc: 0.5835 - val_f1_score: 0.3637 Epoch 2/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0706 - accuracy: 0.4100 - auc: 0.5949 - f1_score: 0.3764 - val_loss: 1.0748 - val_accuracy: 0.4006 - val_auc: 0.5869 - val_f1_score: 0.3757 Epoch 3/50 188/188 [==============================] - 14s 74ms/step - loss: 1.0674 - accuracy: 0.4173 - auc: 0.6008 - f1_score: 0.3931 - val_loss: 1.0743 - val_accuracy: 0.4008 - val_auc: 0.5866 - val_f1_score: 0.3790 Epoch 4/50 188/188 [==============================] - 14s 75ms/step - loss: 1.0650 - accuracy: 0.4207 - auc: 0.6054 - f1_score: 0.3992 - val_loss: 1.0731 - val_accuracy: 0.4096 - val_auc: 0.5905 - val_f1_score: 0.3905 Epoch 5/50 188/188 [==============================] - 14s 72ms/step - loss: 1.0637 - accuracy: 0.4227 - auc: 0.6071 - f1_score: 0.4029 - val_loss: 1.0727 - val_accuracy: 0.4059 - val_auc: 0.5908 - val_f1_score: 0.3876 Epoch 6/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0619 - accuracy: 0.4263 - auc: 0.6108 - f1_score: 0.4071 - val_loss: 1.0724 - val_accuracy: 0.4077 - val_auc: 0.5911 - val_f1_score: 0.3824 Epoch 7/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0606 - accuracy: 0.4267 - auc: 0.6126 - f1_score: 0.4071 - val_loss: 1.0729 - val_accuracy: 0.4079 - val_auc: 0.5910 - val_f1_score: 0.3929 Epoch 8/50 188/188 [==============================] - 14s 72ms/step - loss: 1.0588 - accuracy: 0.4306 - auc: 0.6153 - f1_score: 0.4143 - val_loss: 1.0721 - val_accuracy: 0.4090 - val_auc: 0.5920 - val_f1_score: 0.3886 Epoch 9/50 188/188 [==============================] - 13s 68ms/step - loss: 1.0583 - accuracy: 0.4308 - auc: 0.6163 - f1_score: 0.4130 - val_loss: 1.0735 - val_accuracy: 0.4064 - val_auc: 0.5914 - val_f1_score: 0.3907 Epoch 10/50 188/188 [==============================] - 12s 62ms/step - loss: 1.0572 - accuracy: 0.4310 - auc: 0.6173 - f1_score: 0.4141 - val_loss: 1.0733 - val_accuracy: 0.4071 - val_auc: 0.5905 - val_f1_score: 0.3855 Epoch 11/50 188/188 [==============================] - 12s 62ms/step - loss: 1.0555 - accuracy: 0.4330 - auc: 0.6200 - f1_score: 0.4169 - val_loss: 1.0730 - val_accuracy: 0.4055 - val_auc: 0.5907 - val_f1_score: 0.3888 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . Train shape: (83399, 9, 3) Test shape: (10292, 9, 3) Train shape: (83399, 9, 3) Test shape: (10292, 9, 3) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 9, 3)] 0 [] input_2 (InputLayer) [(None, 9, 3)] 0 [] simple_rnn (SimpleRNN) (None, 9, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 9, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 900) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 900) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1802) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 901500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,040,243 Trainable params: 1,040,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 15s 70ms/step - loss: 1.0839 - accuracy: 0.3898 - auc: 0.5687 - f1_score: 0.4083 - val_loss: 1.0781 - val_accuracy: 0.3975 - val_auc: 0.5816 - val_f1_score: 0.3835 Epoch 2/50 188/188 [==============================] - 13s 67ms/step - loss: 1.0718 - accuracy: 0.4106 - auc: 0.5943 - f1_score: 0.4035 - val_loss: 1.0771 - val_accuracy: 0.3964 - val_auc: 0.5823 - val_f1_score: 0.3853 Epoch 3/50 188/188 [==============================] - 13s 67ms/step - loss: 1.0680 - accuracy: 0.4185 - auc: 0.6007 - f1_score: 0.4144 - val_loss: 1.0737 - val_accuracy: 0.4088 - val_auc: 0.5898 - val_f1_score: 0.4009 Epoch 4/50 188/188 [==============================] - 13s 67ms/step - loss: 1.0645 - accuracy: 0.4221 - auc: 0.6068 - f1_score: 0.4174 - val_loss: 1.0746 - val_accuracy: 0.4074 - val_auc: 0.5888 - val_f1_score: 0.3994 Epoch 5/50 188/188 [==============================] - 12s 66ms/step - loss: 1.0624 - accuracy: 0.4254 - auc: 0.6102 - f1_score: 0.4216 - val_loss: 1.0752 - val_accuracy: 0.4023 - val_auc: 0.5891 - val_f1_score: 0.3909 Epoch 6/50 188/188 [==============================] - 12s 66ms/step - loss: 1.0607 - accuracy: 0.4285 - auc: 0.6130 - f1_score: 0.4230 - val_loss: 1.0734 - val_accuracy: 0.4031 - val_auc: 0.5902 - val_f1_score: 0.4005 Epoch 7/50 188/188 [==============================] - 13s 69ms/step - loss: 1.0589 - accuracy: 0.4298 - auc: 0.6156 - f1_score: 0.4261 - val_loss: 1.0750 - val_accuracy: 0.4013 - val_auc: 0.5893 - val_f1_score: 0.3942 Epoch 8/50 188/188 [==============================] - 15s 79ms/step - loss: 1.0576 - accuracy: 0.4314 - auc: 0.6178 - f1_score: 0.4267 - val_loss: 1.0732 - val_accuracy: 0.4098 - val_auc: 0.5911 - val_f1_score: 0.4048 Epoch 9/50 188/188 [==============================] - 15s 80ms/step - loss: 1.0550 - accuracy: 0.4353 - auc: 0.6212 - f1_score: 0.4306 - val_loss: 1.0728 - val_accuracy: 0.4055 - val_auc: 0.5919 - val_f1_score: 0.4003 Epoch 10/50 188/188 [==============================] - 17s 89ms/step - loss: 1.0540 - accuracy: 0.4375 - auc: 0.6229 - f1_score: 0.4334 - val_loss: 1.0747 - val_accuracy: 0.4080 - val_auc: 0.5910 - val_f1_score: 0.3997 Epoch 11/50 188/188 [==============================] - 16s 87ms/step - loss: 1.0527 - accuracy: 0.4390 - auc: 0.6249 - f1_score: 0.4351 - val_loss: 1.0745 - val_accuracy: 0.4076 - val_auc: 0.5926 - val_f1_score: 0.4032 Epoch 12/50 188/188 [==============================] - 16s 87ms/step - loss: 1.0517 - accuracy: 0.4418 - auc: 0.6270 - f1_score: 0.4382 - val_loss: 1.0748 - val_accuracy: 0.4017 - val_auc: 0.5904 - val_f1_score: 0.3935 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . Train shape: (83399, 10, 3) Test shape: (10292, 10, 3) Train shape: (83399, 10, 3) Test shape: (10292, 10, 3) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 3)] 0 [] input_2 (InputLayer) [(None, 10, 3)] 0 [] simple_rnn (SimpleRNN) (None, 10, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 10, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 2002) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1001500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,140,243 Trainable params: 1,140,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 19s 88ms/step - loss: 1.0872 - accuracy: 0.3731 - auc: 0.5557 - f1_score: 0.4170 - val_loss: 1.0811 - val_accuracy: 0.3966 - val_auc: 0.5763 - val_f1_score: 0.3592 Epoch 2/50 188/188 [==============================] - 16s 84ms/step - loss: 1.0722 - accuracy: 0.4113 - auc: 0.5923 - f1_score: 0.3883 - val_loss: 1.0761 - val_accuracy: 0.4076 - val_auc: 0.5882 - val_f1_score: 0.3486 Epoch 3/50 188/188 [==============================] - 16s 83ms/step - loss: 1.0671 - accuracy: 0.4136 - auc: 0.5998 - f1_score: 0.3723 - val_loss: 1.0742 - val_accuracy: 0.4080 - val_auc: 0.5910 - val_f1_score: 0.3498 Epoch 4/50 188/188 [==============================] - 16s 84ms/step - loss: 1.0649 - accuracy: 0.4174 - auc: 0.6045 - f1_score: 0.3793 - val_loss: 1.0740 - val_accuracy: 0.4032 - val_auc: 0.5919 - val_f1_score: 0.3504 Epoch 5/50 188/188 [==============================] - 16s 84ms/step - loss: 1.0622 - accuracy: 0.4216 - auc: 0.6089 - f1_score: 0.3832 - val_loss: 1.0738 - val_accuracy: 0.4109 - val_auc: 0.5948 - val_f1_score: 0.3689 Epoch 6/50 188/188 [==============================] - 16s 86ms/step - loss: 1.0595 - accuracy: 0.4275 - auc: 0.6137 - f1_score: 0.4006 - val_loss: 1.0723 - val_accuracy: 0.4072 - val_auc: 0.5957 - val_f1_score: 0.3678 Epoch 7/50 188/188 [==============================] - 17s 90ms/step - loss: 1.0590 - accuracy: 0.4268 - auc: 0.6143 - f1_score: 0.3996 - val_loss: 1.0714 - val_accuracy: 0.4088 - val_auc: 0.5959 - val_f1_score: 0.3769 Epoch 8/50 188/188 [==============================] - 16s 87ms/step - loss: 1.0561 - accuracy: 0.4311 - auc: 0.6184 - f1_score: 0.4095 - val_loss: 1.0719 - val_accuracy: 0.4082 - val_auc: 0.5939 - val_f1_score: 0.3819 Epoch 9/50 188/188 [==============================] - 16s 84ms/step - loss: 1.0552 - accuracy: 0.4337 - auc: 0.6211 - f1_score: 0.4136 - val_loss: 1.0735 - val_accuracy: 0.4086 - val_auc: 0.5947 - val_f1_score: 0.3786 Epoch 10/50 188/188 [==============================] - 16s 86ms/step - loss: 1.0536 - accuracy: 0.4341 - auc: 0.6222 - f1_score: 0.4153 - val_loss: 1.0737 - val_accuracy: 0.4096 - val_auc: 0.5948 - val_f1_score: 0.3883 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . Train shape: (83399, 1, 3) Test shape: (10292, 1, 3) Train shape: (83399, 1, 3) Test shape: (10292, 1, 3) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 1, 3)] 0 [] input_2 (InputLayer) [(None, 1, 3)] 0 [] lstm (LSTM) (None, 1, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 1, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 100) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 100) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 205) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 103000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 303,543 Trainable params: 303,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 7s 29ms/step - loss: 1.0732 - accuracy: 0.3960 - auc: 0.5901 - f1_score: 0.4172 - val_loss: 1.0606 - val_accuracy: 0.4301 - val_auc: 0.6145 - val_f1_score: 0.4004 Epoch 2/50 188/188 [==============================] - 5s 27ms/step - loss: 1.0570 - accuracy: 0.4270 - auc: 0.6163 - f1_score: 0.4090 - val_loss: 1.0551 - val_accuracy: 0.4321 - val_auc: 0.6206 - val_f1_score: 0.4124 Epoch 3/50 188/188 [==============================] - 5s 27ms/step - loss: 1.0541 - accuracy: 0.4294 - auc: 0.6187 - f1_score: 0.4154 - val_loss: 1.0548 - val_accuracy: 0.4321 - val_auc: 0.6216 - val_f1_score: 0.4162 Epoch 4/50 188/188 [==============================] - 5s 27ms/step - loss: 1.0532 - accuracy: 0.4328 - auc: 0.6206 - f1_score: 0.4183 - val_loss: 1.0554 - val_accuracy: 0.4323 - val_auc: 0.6204 - val_f1_score: 0.4223 Epoch 5/50 188/188 [==============================] - 5s 27ms/step - loss: 1.0524 - accuracy: 0.4334 - auc: 0.6213 - f1_score: 0.4224 - val_loss: 1.0558 - val_accuracy: 0.4342 - val_auc: 0.6200 - val_f1_score: 0.4170 Epoch 6/50 188/188 [==============================] - 5s 27ms/step - loss: 1.0521 - accuracy: 0.4332 - auc: 0.6220 - f1_score: 0.4224 - val_loss: 1.0552 - val_accuracy: 0.4369 - val_auc: 0.6213 - val_f1_score: 0.4259 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . Train shape: (83399, 2, 3) Test shape: (10292, 2, 3) Train shape: (83399, 2, 3) Test shape: (10292, 2, 3) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 2, 3)] 0 [] input_2 (InputLayer) [(None, 2, 3)] 0 [] lstm (LSTM) (None, 2, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 2, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 200) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 200) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 405) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 203000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 403,543 Trainable params: 403,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 10s 42ms/step - loss: 1.0682 - accuracy: 0.4160 - auc: 0.6004 - f1_score: 0.4152 - val_loss: 1.0556 - val_accuracy: 0.4318 - val_auc: 0.6191 - val_f1_score: 0.4135 Epoch 2/50 188/188 [==============================] - 7s 39ms/step - loss: 1.0530 - accuracy: 0.4339 - auc: 0.6214 - f1_score: 0.4174 - val_loss: 1.0544 - val_accuracy: 0.4347 - val_auc: 0.6213 - val_f1_score: 0.4231 Epoch 3/50 188/188 [==============================] - 7s 39ms/step - loss: 1.0512 - accuracy: 0.4345 - auc: 0.6238 - f1_score: 0.4226 - val_loss: 1.0545 - val_accuracy: 0.4353 - val_auc: 0.6216 - val_f1_score: 0.4188 Epoch 4/50 188/188 [==============================] - 7s 39ms/step - loss: 1.0501 - accuracy: 0.4357 - auc: 0.6255 - f1_score: 0.4251 - val_loss: 1.0543 - val_accuracy: 0.4366 - val_auc: 0.6223 - val_f1_score: 0.4222 Epoch 5/50 188/188 [==============================] - 8s 40ms/step - loss: 1.0494 - accuracy: 0.4382 - auc: 0.6265 - f1_score: 0.4282 - val_loss: 1.0546 - val_accuracy: 0.4345 - val_auc: 0.6214 - val_f1_score: 0.4274 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . Train shape: (83399, 3, 3) Test shape: (10292, 3, 3) Train shape: (83399, 3, 3) Test shape: (10292, 3, 3) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 3, 3)] 0 [] input_2 (InputLayer) [(None, 3, 3)] 0 [] lstm (LSTM) (None, 3, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 3, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 300) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 300) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 605) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 303000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 503,543 Trainable params: 503,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 13s 57ms/step - loss: 1.0683 - accuracy: 0.4180 - auc: 0.5983 - f1_score: 0.4235 - val_loss: 1.0573 - val_accuracy: 0.4267 - val_auc: 0.6157 - val_f1_score: 0.3630 Epoch 2/50 188/188 [==============================] - 10s 54ms/step - loss: 1.0532 - accuracy: 0.4330 - auc: 0.6210 - f1_score: 0.3931 - val_loss: 1.0551 - val_accuracy: 0.4264 - val_auc: 0.6194 - val_f1_score: 0.3823 Epoch 3/50 188/188 [==============================] - 10s 56ms/step - loss: 1.0511 - accuracy: 0.4352 - auc: 0.6239 - f1_score: 0.4076 - val_loss: 1.0553 - val_accuracy: 0.4240 - val_auc: 0.6197 - val_f1_score: 0.3904 Epoch 4/50 188/188 [==============================] - 10s 55ms/step - loss: 1.0495 - accuracy: 0.4375 - auc: 0.6258 - f1_score: 0.4174 - val_loss: 1.0541 - val_accuracy: 0.4287 - val_auc: 0.6214 - val_f1_score: 0.4120 Epoch 5/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0491 - accuracy: 0.4370 - auc: 0.6266 - f1_score: 0.4237 - val_loss: 1.0537 - val_accuracy: 0.4312 - val_auc: 0.6217 - val_f1_score: 0.4137 Epoch 6/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0482 - accuracy: 0.4383 - auc: 0.6278 - f1_score: 0.4272 - val_loss: 1.0536 - val_accuracy: 0.4287 - val_auc: 0.6223 - val_f1_score: 0.4138 Epoch 7/50 188/188 [==============================] - 11s 59ms/step - loss: 1.0486 - accuracy: 0.4393 - auc: 0.6274 - f1_score: 0.4288 - val_loss: 1.0533 - val_accuracy: 0.4302 - val_auc: 0.6224 - val_f1_score: 0.4206 Epoch 8/50 188/188 [==============================] - 10s 55ms/step - loss: 1.0480 - accuracy: 0.4390 - auc: 0.6284 - f1_score: 0.4288 - val_loss: 1.0537 - val_accuracy: 0.4294 - val_auc: 0.6221 - val_f1_score: 0.4159 Epoch 9/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0477 - accuracy: 0.4399 - auc: 0.6290 - f1_score: 0.4306 - val_loss: 1.0534 - val_accuracy: 0.4331 - val_auc: 0.6227 - val_f1_score: 0.4251 Epoch 10/50 188/188 [==============================] - 11s 57ms/step - loss: 1.0469 - accuracy: 0.4405 - auc: 0.6297 - f1_score: 0.4300 - val_loss: 1.0541 - val_accuracy: 0.4323 - val_auc: 0.6218 - val_f1_score: 0.4190 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . Train shape: (83399, 4, 3) Test shape: (10292, 4, 3) Train shape: (83399, 4, 3) Test shape: (10292, 4, 3) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 4, 3)] 0 [] input_2 (InputLayer) [(None, 4, 3)] 0 [] lstm (LSTM) (None, 4, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 4, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 400) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 400) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 805) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 403000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 603,543 Trainable params: 603,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 18s 77ms/step - loss: 1.0660 - accuracy: 0.4241 - auc: 0.6029 - f1_score: 0.4111 - val_loss: 1.0545 - val_accuracy: 0.4290 - val_auc: 0.6207 - val_f1_score: 0.4033 Epoch 2/50 188/188 [==============================] - 14s 74ms/step - loss: 1.0502 - accuracy: 0.4370 - auc: 0.6252 - f1_score: 0.4267 - val_loss: 1.0527 - val_accuracy: 0.4318 - val_auc: 0.6241 - val_f1_score: 0.4216 Epoch 3/50 188/188 [==============================] - 14s 76ms/step - loss: 1.0486 - accuracy: 0.4388 - auc: 0.6274 - f1_score: 0.4313 - val_loss: 1.0529 - val_accuracy: 0.4338 - val_auc: 0.6238 - val_f1_score: 0.4285 Epoch 4/50 188/188 [==============================] - 14s 74ms/step - loss: 1.0473 - accuracy: 0.4412 - auc: 0.6292 - f1_score: 0.4361 - val_loss: 1.0529 - val_accuracy: 0.4354 - val_auc: 0.6238 - val_f1_score: 0.4314 Epoch 5/50 188/188 [==============================] - 13s 71ms/step - loss: 1.0473 - accuracy: 0.4417 - auc: 0.6297 - f1_score: 0.4363 - val_loss: 1.0531 - val_accuracy: 0.4371 - val_auc: 0.6236 - val_f1_score: 0.4319 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . Train shape: (83399, 5, 3) Test shape: (10292, 5, 3) Train shape: (83399, 5, 3) Test shape: (10292, 5, 3) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 5, 3)] 0 [] input_2 (InputLayer) [(None, 5, 3)] 0 [] lstm (LSTM) (None, 5, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 5, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 500) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 500) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1005) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 503000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 703,543 Trainable params: 703,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 17s 77ms/step - loss: 1.0911 - accuracy: 0.3348 - auc: 0.5557 - f1_score: 0.3933 - val_loss: 1.0799 - val_accuracy: 0.3435 - val_auc: 0.5789 - val_f1_score: 0.2291 Epoch 2/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0685 - accuracy: 0.3883 - auc: 0.5967 - f1_score: 0.3874 - val_loss: 1.0608 - val_accuracy: 0.4255 - val_auc: 0.6098 - val_f1_score: 0.3471 Epoch 3/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0558 - accuracy: 0.4290 - auc: 0.6165 - f1_score: 0.3812 - val_loss: 1.0563 - val_accuracy: 0.4281 - val_auc: 0.6154 - val_f1_score: 0.3586 Epoch 4/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0518 - accuracy: 0.4340 - auc: 0.6226 - f1_score: 0.3946 - val_loss: 1.0544 - val_accuracy: 0.4290 - val_auc: 0.6193 - val_f1_score: 0.3772 Epoch 5/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0492 - accuracy: 0.4404 - auc: 0.6267 - f1_score: 0.4109 - val_loss: 1.0534 - val_accuracy: 0.4273 - val_auc: 0.6217 - val_f1_score: 0.4032 Epoch 6/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0482 - accuracy: 0.4397 - auc: 0.6279 - f1_score: 0.4195 - val_loss: 1.0534 - val_accuracy: 0.4305 - val_auc: 0.6222 - val_f1_score: 0.4025 Epoch 7/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0468 - accuracy: 0.4414 - auc: 0.6300 - f1_score: 0.4259 - val_loss: 1.0529 - val_accuracy: 0.4315 - val_auc: 0.6227 - val_f1_score: 0.4156 Epoch 8/50 188/188 [==============================] - 14s 75ms/step - loss: 1.0464 - accuracy: 0.4425 - auc: 0.6305 - f1_score: 0.4272 - val_loss: 1.0526 - val_accuracy: 0.4306 - val_auc: 0.6231 - val_f1_score: 0.4123 Epoch 9/50 188/188 [==============================] - 14s 77ms/step - loss: 1.0454 - accuracy: 0.4432 - auc: 0.6321 - f1_score: 0.4302 - val_loss: 1.0528 - val_accuracy: 0.4302 - val_auc: 0.6227 - val_f1_score: 0.4091 Epoch 10/50 188/188 [==============================] - 14s 75ms/step - loss: 1.0451 - accuracy: 0.4427 - auc: 0.6326 - f1_score: 0.4296 - val_loss: 1.0527 - val_accuracy: 0.4302 - val_auc: 0.6231 - val_f1_score: 0.4194 Epoch 11/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0447 - accuracy: 0.4446 - auc: 0.6332 - f1_score: 0.4317 - val_loss: 1.0528 - val_accuracy: 0.4311 - val_auc: 0.6227 - val_f1_score: 0.4217 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . Train shape: (83399, 6, 3) Test shape: (10292, 6, 3) Train shape: (83399, 6, 3) Test shape: (10292, 6, 3) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 6, 3)] 0 [] input_2 (InputLayer) [(None, 6, 3)] 0 [] lstm (LSTM) (None, 6, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 6, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 600) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 600) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1205) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 603000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 803,543 Trainable params: 803,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 23s 103ms/step - loss: 1.0684 - accuracy: 0.4136 - auc: 0.5985 - f1_score: 0.4165 - val_loss: 1.0543 - val_accuracy: 0.4276 - val_auc: 0.6196 - val_f1_score: 0.3955 Epoch 2/50 188/188 [==============================] - 24s 127ms/step - loss: 1.0500 - accuracy: 0.4354 - auc: 0.6245 - f1_score: 0.4167 - val_loss: 1.0537 - val_accuracy: 0.4341 - val_auc: 0.6218 - val_f1_score: 0.4178 Epoch 3/50 188/188 [==============================] - 17s 90ms/step - loss: 1.0485 - accuracy: 0.4386 - auc: 0.6276 - f1_score: 0.4293 - val_loss: 1.0526 - val_accuracy: 0.4325 - val_auc: 0.6237 - val_f1_score: 0.4205 Epoch 4/50 188/188 [==============================] - 17s 93ms/step - loss: 1.0469 - accuracy: 0.4395 - auc: 0.6294 - f1_score: 0.4326 - val_loss: 1.0527 - val_accuracy: 0.4311 - val_auc: 0.6237 - val_f1_score: 0.4222 Epoch 5/50 188/188 [==============================] - 20s 106ms/step - loss: 1.0462 - accuracy: 0.4429 - auc: 0.6313 - f1_score: 0.4354 - val_loss: 1.0531 - val_accuracy: 0.4326 - val_auc: 0.6233 - val_f1_score: 0.4217 Epoch 6/50 188/188 [==============================] - 20s 108ms/step - loss: 1.0463 - accuracy: 0.4418 - auc: 0.6314 - f1_score: 0.4354 - val_loss: 1.0525 - val_accuracy: 0.4336 - val_auc: 0.6237 - val_f1_score: 0.4267 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . 26 0.431356 | 0.425425 | 0.445732 | 0.447746 | 0.636244 | 0.636658 | 0.438326 | 0.439369 | 6 | LSTM | 5 | 3 | . Train shape: (83399, 7, 3) Test shape: (10292, 7, 3) Train shape: (83399, 7, 3) Test shape: (10292, 7, 3) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 7, 3)] 0 [] input_2 (InputLayer) [(None, 7, 3)] 0 [] lstm (LSTM) (None, 7, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 7, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 700) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 700) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1405) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 703000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 903,543 Trainable params: 903,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 26s 116ms/step - loss: 1.0711 - accuracy: 0.4197 - auc: 0.5981 - f1_score: 0.4209 - val_loss: 1.0562 - val_accuracy: 0.4279 - val_auc: 0.6195 - val_f1_score: 0.4007 Epoch 2/50 188/188 [==============================] - 21s 110ms/step - loss: 1.0498 - accuracy: 0.4370 - auc: 0.6264 - f1_score: 0.4224 - val_loss: 1.0534 - val_accuracy: 0.4272 - val_auc: 0.6212 - val_f1_score: 0.4113 Epoch 3/50 188/188 [==============================] - 20s 107ms/step - loss: 1.0469 - accuracy: 0.4435 - auc: 0.6302 - f1_score: 0.4343 - val_loss: 1.0529 - val_accuracy: 0.4313 - val_auc: 0.6227 - val_f1_score: 0.4192 Epoch 4/50 188/188 [==============================] - 21s 109ms/step - loss: 1.0450 - accuracy: 0.4430 - auc: 0.6324 - f1_score: 0.4352 - val_loss: 1.0528 - val_accuracy: 0.4324 - val_auc: 0.6227 - val_f1_score: 0.4288 Epoch 5/50 188/188 [==============================] - 20s 105ms/step - loss: 1.0443 - accuracy: 0.4456 - auc: 0.6340 - f1_score: 0.4381 - val_loss: 1.0529 - val_accuracy: 0.4271 - val_auc: 0.6222 - val_f1_score: 0.4182 Epoch 6/50 188/188 [==============================] - 20s 105ms/step - loss: 1.0434 - accuracy: 0.4463 - auc: 0.6350 - f1_score: 0.4388 - val_loss: 1.0529 - val_accuracy: 0.4320 - val_auc: 0.6229 - val_f1_score: 0.4204 Epoch 7/50 188/188 [==============================] - 20s 105ms/step - loss: 1.0426 - accuracy: 0.4497 - auc: 0.6366 - f1_score: 0.4429 - val_loss: 1.0536 - val_accuracy: 0.4311 - val_auc: 0.6219 - val_f1_score: 0.4188 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . 26 0.431356 | 0.425425 | 0.445732 | 0.447746 | 0.636244 | 0.636658 | 0.438326 | 0.439369 | 6 | LSTM | 5 | 3 | . 27 0.434613 | 0.428611 | 0.451324 | 0.452921 | 0.639785 | 0.639764 | 0.439711 | 0.440177 | 7 | LSTM | 5 | 3 | . Train shape: (83399, 8, 3) Test shape: (10292, 8, 3) Train shape: (83399, 8, 3) Test shape: (10292, 8, 3) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 8, 3)] 0 [] input_2 (InputLayer) [(None, 8, 3)] 0 [] lstm (LSTM) (None, 8, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 8, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 800) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 800) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1605) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 803000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,003,543 Trainable params: 1,003,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 27s 126ms/step - loss: 1.0794 - accuracy: 0.4086 - auc: 0.5825 - f1_score: 0.4181 - val_loss: 1.0646 - val_accuracy: 0.4213 - val_auc: 0.6047 - val_f1_score: 0.3375 Epoch 2/50 188/188 [==============================] - 23s 122ms/step - loss: 1.0574 - accuracy: 0.4354 - auc: 0.6169 - f1_score: 0.3979 - val_loss: 1.0579 - val_accuracy: 0.4306 - val_auc: 0.6157 - val_f1_score: 0.4180 Epoch 3/50 188/188 [==============================] - 23s 121ms/step - loss: 1.0494 - accuracy: 0.4407 - auc: 0.6272 - f1_score: 0.4361 - val_loss: 1.0534 - val_accuracy: 0.4295 - val_auc: 0.6218 - val_f1_score: 0.4192 Epoch 4/50 188/188 [==============================] - 22s 117ms/step - loss: 1.0463 - accuracy: 0.4428 - auc: 0.6309 - f1_score: 0.4342 - val_loss: 1.0529 - val_accuracy: 0.4314 - val_auc: 0.6225 - val_f1_score: 0.4167 Epoch 5/50 188/188 [==============================] - 22s 118ms/step - loss: 1.0452 - accuracy: 0.4434 - auc: 0.6326 - f1_score: 0.4324 - val_loss: 1.0527 - val_accuracy: 0.4312 - val_auc: 0.6221 - val_f1_score: 0.4205 Epoch 6/50 188/188 [==============================] - 23s 123ms/step - loss: 1.0438 - accuracy: 0.4476 - auc: 0.6351 - f1_score: 0.4401 - val_loss: 1.0533 - val_accuracy: 0.4287 - val_auc: 0.6217 - val_f1_score: 0.4218 Epoch 7/50 188/188 [==============================] - 22s 117ms/step - loss: 1.0433 - accuracy: 0.4468 - auc: 0.6350 - f1_score: 0.4398 - val_loss: 1.0536 - val_accuracy: 0.4307 - val_auc: 0.6214 - val_f1_score: 0.4203 Epoch 8/50 188/188 [==============================] - 22s 118ms/step - loss: 1.0423 - accuracy: 0.4503 - auc: 0.6372 - f1_score: 0.4423 - val_loss: 1.0538 - val_accuracy: 0.4291 - val_auc: 0.6214 - val_f1_score: 0.4190 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . 26 0.431356 | 0.425425 | 0.445732 | 0.447746 | 0.636244 | 0.636658 | 0.438326 | 0.439369 | 6 | LSTM | 5 | 3 | . 27 0.434613 | 0.428611 | 0.451324 | 0.452921 | 0.639785 | 0.639764 | 0.439711 | 0.440177 | 7 | LSTM | 5 | 3 | . 28 0.434162 | 0.428099 | 0.452436 | 0.453568 | 0.641190 | 0.640821 | 0.442947 | 0.443066 | 8 | LSTM | 5 | 3 | . Train shape: (83399, 9, 3) Test shape: (10292, 9, 3) Train shape: (83399, 9, 3) Test shape: (10292, 9, 3) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 9, 3)] 0 [] input_2 (InputLayer) [(None, 9, 3)] 0 [] lstm (LSTM) (None, 9, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 9, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 900) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 900) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1805) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 903000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,103,543 Trainable params: 1,103,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 32s 147ms/step - loss: 1.0748 - accuracy: 0.4243 - auc: 0.5895 - f1_score: 0.4266 - val_loss: 1.0609 - val_accuracy: 0.4319 - val_auc: 0.6132 - val_f1_score: 0.4286 Epoch 2/50 188/188 [==============================] - 26s 140ms/step - loss: 1.0546 - accuracy: 0.4377 - auc: 0.6215 - f1_score: 0.4345 - val_loss: 1.0540 - val_accuracy: 0.4319 - val_auc: 0.6217 - val_f1_score: 0.4264 Epoch 3/50 188/188 [==============================] - 26s 140ms/step - loss: 1.0492 - accuracy: 0.4409 - auc: 0.6285 - f1_score: 0.4359 - val_loss: 1.0528 - val_accuracy: 0.4307 - val_auc: 0.6227 - val_f1_score: 0.4285 Epoch 4/50 188/188 [==============================] - 26s 141ms/step - loss: 1.0460 - accuracy: 0.4432 - auc: 0.6319 - f1_score: 0.4372 - val_loss: 1.0527 - val_accuracy: 0.4341 - val_auc: 0.6228 - val_f1_score: 0.4311 Epoch 5/50 188/188 [==============================] - 27s 141ms/step - loss: 1.0442 - accuracy: 0.4453 - auc: 0.6342 - f1_score: 0.4398 - val_loss: 1.0532 - val_accuracy: 0.4303 - val_auc: 0.6226 - val_f1_score: 0.4245 Epoch 6/50 188/188 [==============================] - 27s 142ms/step - loss: 1.0435 - accuracy: 0.4485 - auc: 0.6359 - f1_score: 0.4436 - val_loss: 1.0530 - val_accuracy: 0.4273 - val_auc: 0.6220 - val_f1_score: 0.4222 Epoch 7/50 188/188 [==============================] - 27s 144ms/step - loss: 1.0422 - accuracy: 0.4498 - auc: 0.6376 - f1_score: 0.4457 - val_loss: 1.0529 - val_accuracy: 0.4297 - val_auc: 0.6229 - val_f1_score: 0.4200 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . 26 0.431356 | 0.425425 | 0.445732 | 0.447746 | 0.636244 | 0.636658 | 0.438326 | 0.439369 | 6 | LSTM | 5 | 3 | . 27 0.434613 | 0.428611 | 0.451324 | 0.452921 | 0.639785 | 0.639764 | 0.439711 | 0.440177 | 7 | LSTM | 5 | 3 | . 28 0.434162 | 0.428099 | 0.452436 | 0.453568 | 0.641190 | 0.640821 | 0.442947 | 0.443066 | 8 | LSTM | 5 | 3 | . 29 0.434577 | 0.428493 | 0.453809 | 0.455117 | 0.643228 | 0.642921 | 0.443746 | 0.443928 | 9 | LSTM | 5 | 3 | . Train shape: (83399, 10, 3) Test shape: (10292, 10, 3) Train shape: (83399, 10, 3) Test shape: (10292, 10, 3) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 3)] 0 [] input_2 (InputLayer) [(None, 10, 3)] 0 [] lstm (LSTM) (None, 10, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 10, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 2005) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1003000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,203,543 Trainable params: 1,203,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 32s 152ms/step - loss: 1.0746 - accuracy: 0.4000 - auc: 0.5892 - f1_score: 0.4287 - val_loss: 1.0554 - val_accuracy: 0.4293 - val_auc: 0.6196 - val_f1_score: 0.4068 Epoch 2/50 188/188 [==============================] - 28s 150ms/step - loss: 1.0501 - accuracy: 0.4367 - auc: 0.6252 - f1_score: 0.4250 - val_loss: 1.0524 - val_accuracy: 0.4297 - val_auc: 0.6225 - val_f1_score: 0.4023 Epoch 3/50 188/188 [==============================] - 30s 159ms/step - loss: 1.0462 - accuracy: 0.4416 - auc: 0.6308 - f1_score: 0.4328 - val_loss: 1.0520 - val_accuracy: 0.4357 - val_auc: 0.6239 - val_f1_score: 0.4215 Epoch 4/50 188/188 [==============================] - 29s 155ms/step - loss: 1.0446 - accuracy: 0.4460 - auc: 0.6336 - f1_score: 0.4391 - val_loss: 1.0518 - val_accuracy: 0.4351 - val_auc: 0.6237 - val_f1_score: 0.4253 Epoch 5/50 188/188 [==============================] - 30s 157ms/step - loss: 1.0440 - accuracy: 0.4455 - auc: 0.6348 - f1_score: 0.4405 - val_loss: 1.0525 - val_accuracy: 0.4324 - val_auc: 0.6231 - val_f1_score: 0.4169 Epoch 6/50 188/188 [==============================] - 29s 156ms/step - loss: 1.0415 - accuracy: 0.4522 - auc: 0.6384 - f1_score: 0.4476 - val_loss: 1.0530 - val_accuracy: 0.4332 - val_auc: 0.6223 - val_f1_score: 0.4264 Epoch 7/50 188/188 [==============================] - 26s 138ms/step - loss: 1.0407 - accuracy: 0.4514 - auc: 0.6397 - f1_score: 0.4469 - val_loss: 1.0532 - val_accuracy: 0.4321 - val_auc: 0.6222 - val_f1_score: 0.4201 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . 26 0.431356 | 0.425425 | 0.445732 | 0.447746 | 0.636244 | 0.636658 | 0.438326 | 0.439369 | 6 | LSTM | 5 | 3 | . 27 0.434613 | 0.428611 | 0.451324 | 0.452921 | 0.639785 | 0.639764 | 0.439711 | 0.440177 | 7 | LSTM | 5 | 3 | . 28 0.434162 | 0.428099 | 0.452436 | 0.453568 | 0.641190 | 0.640821 | 0.442947 | 0.443066 | 8 | LSTM | 5 | 3 | . 29 0.434577 | 0.428493 | 0.453809 | 0.455117 | 0.643228 | 0.642921 | 0.443746 | 0.443928 | 9 | LSTM | 5 | 3 | . 30 0.435557 | 0.429423 | 0.457134 | 0.458292 | 0.646171 | 0.645533 | 0.444971 | 0.444904 | 10 | LSTM | 5 | 3 | . Train shape: (83399, 1, 3) Test shape: (10292, 1, 3) Train shape: (83399, 1, 3) Test shape: (10292, 1, 3) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 1, 3)] 0 [] input_2 (InputLayer) [(None, 1, 3)] 0 [] simple_rnn (SimpleRNN) (None, 1, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 1, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 100) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 100) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 205) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 103000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 241,743 Trainable params: 241,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 7s 25ms/step - loss: 1.0756 - accuracy: 0.3931 - auc: 0.5823 - f1_score: 0.4263 - val_loss: 1.0568 - val_accuracy: 0.4297 - val_auc: 0.6196 - val_f1_score: 0.3977 Epoch 2/50 188/188 [==============================] - 4s 22ms/step - loss: 1.0577 - accuracy: 0.4264 - auc: 0.6139 - f1_score: 0.4154 - val_loss: 1.0560 - val_accuracy: 0.4293 - val_auc: 0.6188 - val_f1_score: 0.4027 Epoch 3/50 188/188 [==============================] - 4s 22ms/step - loss: 1.0550 - accuracy: 0.4299 - auc: 0.6180 - f1_score: 0.4177 - val_loss: 1.0556 - val_accuracy: 0.4281 - val_auc: 0.6205 - val_f1_score: 0.4188 Epoch 4/50 188/188 [==============================] - 4s 22ms/step - loss: 1.0542 - accuracy: 0.4301 - auc: 0.6186 - f1_score: 0.4213 - val_loss: 1.0551 - val_accuracy: 0.4335 - val_auc: 0.6217 - val_f1_score: 0.4158 Epoch 5/50 188/188 [==============================] - 4s 22ms/step - loss: 1.0538 - accuracy: 0.4305 - auc: 0.6193 - f1_score: 0.4206 - val_loss: 1.0554 - val_accuracy: 0.4326 - val_auc: 0.6218 - val_f1_score: 0.4200 Epoch 6/50 188/188 [==============================] - 4s 22ms/step - loss: 1.0531 - accuracy: 0.4315 - auc: 0.6207 - f1_score: 0.4196 - val_loss: 1.0555 - val_accuracy: 0.4335 - val_auc: 0.6212 - val_f1_score: 0.4123 Epoch 7/50 188/188 [==============================] - 4s 22ms/step - loss: 1.0529 - accuracy: 0.4320 - auc: 0.6212 - f1_score: 0.4216 - val_loss: 1.0553 - val_accuracy: 0.4345 - val_auc: 0.6216 - val_f1_score: 0.4150 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . 26 0.431356 | 0.425425 | 0.445732 | 0.447746 | 0.636244 | 0.636658 | 0.438326 | 0.439369 | 6 | LSTM | 5 | 3 | . 27 0.434613 | 0.428611 | 0.451324 | 0.452921 | 0.639785 | 0.639764 | 0.439711 | 0.440177 | 7 | LSTM | 5 | 3 | . 28 0.434162 | 0.428099 | 0.452436 | 0.453568 | 0.641190 | 0.640821 | 0.442947 | 0.443066 | 8 | LSTM | 5 | 3 | . 29 0.434577 | 0.428493 | 0.453809 | 0.455117 | 0.643228 | 0.642921 | 0.443746 | 0.443928 | 9 | LSTM | 5 | 3 | . 30 0.435557 | 0.429423 | 0.457134 | 0.458292 | 0.646171 | 0.645533 | 0.444971 | 0.444904 | 10 | LSTM | 5 | 3 | . 31 0.428895 | 0.422991 | 0.436248 | 0.439141 | 0.626643 | 0.627428 | 0.416025 | 0.417477 | 1 | Simple | 5 | 3 | . Train shape: (83399, 2, 3) Test shape: (10292, 2, 3) Train shape: (83399, 2, 3) Test shape: (10292, 2, 3) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 2, 3)] 0 [] input_2 (InputLayer) [(None, 2, 3)] 0 [] simple_rnn (SimpleRNN) (None, 2, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 2, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 200) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 200) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 405) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 203000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 341,743 Trainable params: 341,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 8s 32ms/step - loss: 1.0927 - accuracy: 0.3612 - auc: 0.5348 - f1_score: 0.4052 - val_loss: 1.0833 - val_accuracy: 0.4008 - val_auc: 0.5690 - val_f1_score: 0.3984 Epoch 2/50 188/188 [==============================] - 5s 28ms/step - loss: 1.0718 - accuracy: 0.4125 - auc: 0.5925 - f1_score: 0.4133 - val_loss: 1.0608 - val_accuracy: 0.4267 - val_auc: 0.6121 - val_f1_score: 0.4211 Epoch 3/50 188/188 [==============================] - 5s 29ms/step - loss: 1.0576 - accuracy: 0.4259 - auc: 0.6142 - f1_score: 0.4197 - val_loss: 1.0568 - val_accuracy: 0.4279 - val_auc: 0.6163 - val_f1_score: 0.4191 Epoch 4/50 188/188 [==============================] - 5s 28ms/step - loss: 1.0543 - accuracy: 0.4313 - auc: 0.6189 - f1_score: 0.4239 - val_loss: 1.0574 - val_accuracy: 0.4264 - val_auc: 0.6153 - val_f1_score: 0.4138 Epoch 5/50 188/188 [==============================] - 5s 29ms/step - loss: 1.0523 - accuracy: 0.4321 - auc: 0.6221 - f1_score: 0.4245 - val_loss: 1.0552 - val_accuracy: 0.4283 - val_auc: 0.6185 - val_f1_score: 0.4130 Epoch 6/50 188/188 [==============================] - 6s 32ms/step - loss: 1.0513 - accuracy: 0.4324 - auc: 0.6227 - f1_score: 0.4227 - val_loss: 1.0566 - val_accuracy: 0.4279 - val_auc: 0.6164 - val_f1_score: 0.4178 Epoch 7/50 188/188 [==============================] - 5s 28ms/step - loss: 1.0507 - accuracy: 0.4354 - auc: 0.6243 - f1_score: 0.4271 - val_loss: 1.0565 - val_accuracy: 0.4276 - val_auc: 0.6179 - val_f1_score: 0.4162 Epoch 8/50 188/188 [==============================] - 5s 28ms/step - loss: 1.0503 - accuracy: 0.4371 - auc: 0.6252 - f1_score: 0.4271 - val_loss: 1.0554 - val_accuracy: 0.4302 - val_auc: 0.6187 - val_f1_score: 0.4207 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . 26 0.431356 | 0.425425 | 0.445732 | 0.447746 | 0.636244 | 0.636658 | 0.438326 | 0.439369 | 6 | LSTM | 5 | 3 | . 27 0.434613 | 0.428611 | 0.451324 | 0.452921 | 0.639785 | 0.639764 | 0.439711 | 0.440177 | 7 | LSTM | 5 | 3 | . 28 0.434162 | 0.428099 | 0.452436 | 0.453568 | 0.641190 | 0.640821 | 0.442947 | 0.443066 | 8 | LSTM | 5 | 3 | . 29 0.434577 | 0.428493 | 0.453809 | 0.455117 | 0.643228 | 0.642921 | 0.443746 | 0.443928 | 9 | LSTM | 5 | 3 | . 30 0.435557 | 0.429423 | 0.457134 | 0.458292 | 0.646171 | 0.645533 | 0.444971 | 0.444904 | 10 | LSTM | 5 | 3 | . 31 0.428895 | 0.422991 | 0.436248 | 0.439141 | 0.626643 | 0.627428 | 0.416025 | 0.417477 | 1 | Simple | 5 | 3 | . 32 0.428810 | 0.422773 | 0.440609 | 0.441787 | 0.630732 | 0.630879 | 0.431680 | 0.431837 | 2 | Simple | 5 | 3 | . Train shape: (83399, 3, 3) Test shape: (10292, 3, 3) Train shape: (83399, 3, 3) Test shape: (10292, 3, 3) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 3, 3)] 0 [] input_2 (InputLayer) [(None, 3, 3)] 0 [] simple_rnn (SimpleRNN) (None, 3, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 3, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 300) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 300) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 605) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 303000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 441,743 Trainable params: 441,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 9s 39ms/step - loss: 1.0874 - accuracy: 0.3856 - auc: 0.5553 - f1_score: 0.3988 - val_loss: 1.0739 - val_accuracy: 0.4133 - val_auc: 0.5898 - val_f1_score: 0.3943 Epoch 2/50 188/188 [==============================] - 7s 35ms/step - loss: 1.0684 - accuracy: 0.4209 - auc: 0.5986 - f1_score: 0.4143 - val_loss: 1.0618 - val_accuracy: 0.4183 - val_auc: 0.6108 - val_f1_score: 0.4189 Epoch 3/50 188/188 [==============================] - 6s 34ms/step - loss: 1.0597 - accuracy: 0.4285 - auc: 0.6122 - f1_score: 0.4267 - val_loss: 1.0587 - val_accuracy: 0.4271 - val_auc: 0.6153 - val_f1_score: 0.4240 Epoch 4/50 188/188 [==============================] - 7s 35ms/step - loss: 1.0553 - accuracy: 0.4313 - auc: 0.6187 - f1_score: 0.4294 - val_loss: 1.0568 - val_accuracy: 0.4297 - val_auc: 0.6165 - val_f1_score: 0.4292 Epoch 5/50 188/188 [==============================] - 6s 34ms/step - loss: 1.0521 - accuracy: 0.4331 - auc: 0.6226 - f1_score: 0.4317 - val_loss: 1.0554 - val_accuracy: 0.4282 - val_auc: 0.6187 - val_f1_score: 0.4255 Epoch 6/50 188/188 [==============================] - 6s 34ms/step - loss: 1.0513 - accuracy: 0.4348 - auc: 0.6239 - f1_score: 0.4317 - val_loss: 1.0552 - val_accuracy: 0.4277 - val_auc: 0.6191 - val_f1_score: 0.4253 Epoch 7/50 188/188 [==============================] - 7s 35ms/step - loss: 1.0495 - accuracy: 0.4386 - auc: 0.6263 - f1_score: 0.4344 - val_loss: 1.0556 - val_accuracy: 0.4277 - val_auc: 0.6186 - val_f1_score: 0.4235 Epoch 8/50 188/188 [==============================] - 6s 35ms/step - loss: 1.0493 - accuracy: 0.4389 - auc: 0.6268 - f1_score: 0.4348 - val_loss: 1.0548 - val_accuracy: 0.4295 - val_auc: 0.6192 - val_f1_score: 0.4289 Epoch 9/50 188/188 [==============================] - 7s 37ms/step - loss: 1.0478 - accuracy: 0.4415 - auc: 0.6292 - f1_score: 0.4383 - val_loss: 1.0542 - val_accuracy: 0.4327 - val_auc: 0.6209 - val_f1_score: 0.4278 Epoch 10/50 188/188 [==============================] - 7s 36ms/step - loss: 1.0466 - accuracy: 0.4432 - auc: 0.6310 - f1_score: 0.4379 - val_loss: 1.0547 - val_accuracy: 0.4291 - val_auc: 0.6200 - val_f1_score: 0.4269 Epoch 11/50 188/188 [==============================] - 7s 39ms/step - loss: 1.0464 - accuracy: 0.4410 - auc: 0.6307 - f1_score: 0.4368 - val_loss: 1.0553 - val_accuracy: 0.4313 - val_auc: 0.6189 - val_f1_score: 0.4261 Epoch 12/50 188/188 [==============================] - 7s 35ms/step - loss: 1.0466 - accuracy: 0.4421 - auc: 0.6309 - f1_score: 0.4363 - val_loss: 1.0554 - val_accuracy: 0.4271 - val_auc: 0.6188 - val_f1_score: 0.4242 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . 26 0.431356 | 0.425425 | 0.445732 | 0.447746 | 0.636244 | 0.636658 | 0.438326 | 0.439369 | 6 | LSTM | 5 | 3 | . 27 0.434613 | 0.428611 | 0.451324 | 0.452921 | 0.639785 | 0.639764 | 0.439711 | 0.440177 | 7 | LSTM | 5 | 3 | . 28 0.434162 | 0.428099 | 0.452436 | 0.453568 | 0.641190 | 0.640821 | 0.442947 | 0.443066 | 8 | LSTM | 5 | 3 | . 29 0.434577 | 0.428493 | 0.453809 | 0.455117 | 0.643228 | 0.642921 | 0.443746 | 0.443928 | 9 | LSTM | 5 | 3 | . 30 0.435557 | 0.429423 | 0.457134 | 0.458292 | 0.646171 | 0.645533 | 0.444971 | 0.444904 | 10 | LSTM | 5 | 3 | . 31 0.428895 | 0.422991 | 0.436248 | 0.439141 | 0.626643 | 0.627428 | 0.416025 | 0.417477 | 1 | Simple | 5 | 3 | . 32 0.428810 | 0.422773 | 0.440609 | 0.441787 | 0.630732 | 0.630879 | 0.431680 | 0.431837 | 2 | Simple | 5 | 3 | . 33 0.431324 | 0.425110 | 0.450724 | 0.450951 | 0.639010 | 0.638336 | 0.447674 | 0.447127 | 3 | Simple | 5 | 3 | . Train shape: (83399, 4, 3) Test shape: (10292, 4, 3) Train shape: (83399, 4, 3) Test shape: (10292, 4, 3) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 4, 3)] 0 [] input_2 (InputLayer) [(None, 4, 3)] 0 [] simple_rnn (SimpleRNN) (None, 4, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 4, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 400) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 400) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 805) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 403000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 541,743 Trainable params: 541,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 12s 51ms/step - loss: 1.0804 - accuracy: 0.3906 - auc: 0.5737 - f1_score: 0.4182 - val_loss: 1.0682 - val_accuracy: 0.4169 - val_auc: 0.5997 - val_f1_score: 0.3672 Epoch 2/50 188/188 [==============================] - 10s 52ms/step - loss: 1.0622 - accuracy: 0.4203 - auc: 0.6066 - f1_score: 0.3861 - val_loss: 1.0582 - val_accuracy: 0.4225 - val_auc: 0.6128 - val_f1_score: 0.3629 Epoch 3/50 188/188 [==============================] - 9s 49ms/step - loss: 1.0549 - accuracy: 0.4283 - auc: 0.6175 - f1_score: 0.3954 - val_loss: 1.0582 - val_accuracy: 0.4146 - val_auc: 0.6118 - val_f1_score: 0.3735 Epoch 4/50 188/188 [==============================] - 9s 45ms/step - loss: 1.0517 - accuracy: 0.4328 - auc: 0.6216 - f1_score: 0.4040 - val_loss: 1.0563 - val_accuracy: 0.4246 - val_auc: 0.6158 - val_f1_score: 0.3950 Epoch 5/50 188/188 [==============================] - 8s 43ms/step - loss: 1.0495 - accuracy: 0.4346 - auc: 0.6251 - f1_score: 0.4118 - val_loss: 1.0554 - val_accuracy: 0.4203 - val_auc: 0.6167 - val_f1_score: 0.3821 Epoch 6/50 188/188 [==============================] - 8s 44ms/step - loss: 1.0482 - accuracy: 0.4373 - auc: 0.6267 - f1_score: 0.4152 - val_loss: 1.0557 - val_accuracy: 0.4186 - val_auc: 0.6165 - val_f1_score: 0.3836 Epoch 7/50 188/188 [==============================] - 9s 46ms/step - loss: 1.0478 - accuracy: 0.4393 - auc: 0.6277 - f1_score: 0.4187 - val_loss: 1.0553 - val_accuracy: 0.4189 - val_auc: 0.6169 - val_f1_score: 0.3842 Epoch 8/50 188/188 [==============================] - 8s 43ms/step - loss: 1.0472 - accuracy: 0.4379 - auc: 0.6287 - f1_score: 0.4191 - val_loss: 1.0548 - val_accuracy: 0.4277 - val_auc: 0.6201 - val_f1_score: 0.4136 Epoch 9/50 188/188 [==============================] - 9s 47ms/step - loss: 1.0462 - accuracy: 0.4389 - auc: 0.6297 - f1_score: 0.4251 - val_loss: 1.0562 - val_accuracy: 0.4239 - val_auc: 0.6169 - val_f1_score: 0.3965 Epoch 10/50 188/188 [==============================] - 8s 44ms/step - loss: 1.0458 - accuracy: 0.4386 - auc: 0.6304 - f1_score: 0.4227 - val_loss: 1.0559 - val_accuracy: 0.4237 - val_auc: 0.6179 - val_f1_score: 0.4064 Epoch 11/50 188/188 [==============================] - 9s 45ms/step - loss: 1.0453 - accuracy: 0.4423 - auc: 0.6317 - f1_score: 0.4286 - val_loss: 1.0562 - val_accuracy: 0.4260 - val_auc: 0.6186 - val_f1_score: 0.4065 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . 26 0.431356 | 0.425425 | 0.445732 | 0.447746 | 0.636244 | 0.636658 | 0.438326 | 0.439369 | 6 | LSTM | 5 | 3 | . 27 0.434613 | 0.428611 | 0.451324 | 0.452921 | 0.639785 | 0.639764 | 0.439711 | 0.440177 | 7 | LSTM | 5 | 3 | . 28 0.434162 | 0.428099 | 0.452436 | 0.453568 | 0.641190 | 0.640821 | 0.442947 | 0.443066 | 8 | LSTM | 5 | 3 | . 29 0.434577 | 0.428493 | 0.453809 | 0.455117 | 0.643228 | 0.642921 | 0.443746 | 0.443928 | 9 | LSTM | 5 | 3 | . 30 0.435557 | 0.429423 | 0.457134 | 0.458292 | 0.646171 | 0.645533 | 0.444971 | 0.444904 | 10 | LSTM | 5 | 3 | . 31 0.428895 | 0.422991 | 0.436248 | 0.439141 | 0.626643 | 0.627428 | 0.416025 | 0.417477 | 1 | Simple | 5 | 3 | . 32 0.428810 | 0.422773 | 0.440609 | 0.441787 | 0.630732 | 0.630879 | 0.431680 | 0.431837 | 2 | Simple | 5 | 3 | . 33 0.431324 | 0.425110 | 0.450724 | 0.450951 | 0.639010 | 0.638336 | 0.447674 | 0.447127 | 3 | Simple | 5 | 3 | . 34 0.434422 | 0.428246 | 0.448642 | 0.450481 | 0.639347 | 0.638959 | 0.428653 | 0.429060 | 4 | Simple | 5 | 3 | . Train shape: (83399, 5, 3) Test shape: (10292, 5, 3) Train shape: (83399, 5, 3) Test shape: (10292, 5, 3) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 5, 3)] 0 [] input_2 (InputLayer) [(None, 5, 3)] 0 [] simple_rnn (SimpleRNN) (None, 5, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 5, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 500) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 500) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1005) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 503000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 641,743 Trainable params: 641,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 12s 54ms/step - loss: 1.0838 - accuracy: 0.3866 - auc: 0.5673 - f1_score: 0.4140 - val_loss: 1.0724 - val_accuracy: 0.4086 - val_auc: 0.5923 - val_f1_score: 0.4045 Epoch 2/50 188/188 [==============================] - 9s 47ms/step - loss: 1.0666 - accuracy: 0.4144 - auc: 0.6007 - f1_score: 0.4108 - val_loss: 1.0638 - val_accuracy: 0.4180 - val_auc: 0.6053 - val_f1_score: 0.4133 Epoch 3/50 188/188 [==============================] - 10s 51ms/step - loss: 1.0585 - accuracy: 0.4239 - auc: 0.6124 - f1_score: 0.4220 - val_loss: 1.0597 - val_accuracy: 0.4223 - val_auc: 0.6108 - val_f1_score: 0.4190 Epoch 4/50 188/188 [==============================] - 9s 50ms/step - loss: 1.0538 - accuracy: 0.4310 - auc: 0.6200 - f1_score: 0.4290 - val_loss: 1.0581 - val_accuracy: 0.4249 - val_auc: 0.6132 - val_f1_score: 0.4148 Epoch 5/50 188/188 [==============================] - 9s 49ms/step - loss: 1.0519 - accuracy: 0.4320 - auc: 0.6228 - f1_score: 0.4291 - val_loss: 1.0564 - val_accuracy: 0.4331 - val_auc: 0.6166 - val_f1_score: 0.4291 Epoch 6/50 188/188 [==============================] - 9s 49ms/step - loss: 1.0493 - accuracy: 0.4370 - auc: 0.6265 - f1_score: 0.4335 - val_loss: 1.0565 - val_accuracy: 0.4327 - val_auc: 0.6170 - val_f1_score: 0.4278 Epoch 7/50 188/188 [==============================] - 10s 55ms/step - loss: 1.0467 - accuracy: 0.4415 - auc: 0.6297 - f1_score: 0.4378 - val_loss: 1.0557 - val_accuracy: 0.4305 - val_auc: 0.6176 - val_f1_score: 0.4260 Epoch 8/50 188/188 [==============================] - 10s 52ms/step - loss: 1.0460 - accuracy: 0.4422 - auc: 0.6307 - f1_score: 0.4371 - val_loss: 1.0558 - val_accuracy: 0.4296 - val_auc: 0.6169 - val_f1_score: 0.4245 Epoch 9/50 188/188 [==============================] - 9s 47ms/step - loss: 1.0453 - accuracy: 0.4441 - auc: 0.6322 - f1_score: 0.4399 - val_loss: 1.0569 - val_accuracy: 0.4308 - val_auc: 0.6164 - val_f1_score: 0.4246 Epoch 10/50 188/188 [==============================] - 9s 49ms/step - loss: 1.0445 - accuracy: 0.4434 - auc: 0.6326 - f1_score: 0.4407 - val_loss: 1.0559 - val_accuracy: 0.4317 - val_auc: 0.6174 - val_f1_score: 0.4274 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . 26 0.431356 | 0.425425 | 0.445732 | 0.447746 | 0.636244 | 0.636658 | 0.438326 | 0.439369 | 6 | LSTM | 5 | 3 | . 27 0.434613 | 0.428611 | 0.451324 | 0.452921 | 0.639785 | 0.639764 | 0.439711 | 0.440177 | 7 | LSTM | 5 | 3 | . 28 0.434162 | 0.428099 | 0.452436 | 0.453568 | 0.641190 | 0.640821 | 0.442947 | 0.443066 | 8 | LSTM | 5 | 3 | . 29 0.434577 | 0.428493 | 0.453809 | 0.455117 | 0.643228 | 0.642921 | 0.443746 | 0.443928 | 9 | LSTM | 5 | 3 | . 30 0.435557 | 0.429423 | 0.457134 | 0.458292 | 0.646171 | 0.645533 | 0.444971 | 0.444904 | 10 | LSTM | 5 | 3 | . 31 0.428895 | 0.422991 | 0.436248 | 0.439141 | 0.626643 | 0.627428 | 0.416025 | 0.417477 | 1 | Simple | 5 | 3 | . 32 0.428810 | 0.422773 | 0.440609 | 0.441787 | 0.630732 | 0.630879 | 0.431680 | 0.431837 | 2 | Simple | 5 | 3 | . 33 0.431324 | 0.425110 | 0.450724 | 0.450951 | 0.639010 | 0.638336 | 0.447674 | 0.447127 | 3 | Simple | 5 | 3 | . 34 0.434422 | 0.428246 | 0.448642 | 0.450481 | 0.639347 | 0.638959 | 0.428653 | 0.429060 | 4 | Simple | 5 | 3 | . 35 0.432307 | 0.425841 | 0.457646 | 0.457155 | 0.645373 | 0.643587 | 0.453725 | 0.452403 | 5 | Simple | 5 | 3 | . Train shape: (83399, 6, 3) Test shape: (10292, 6, 3) Train shape: (83399, 6, 3) Test shape: (10292, 6, 3) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 6, 3)] 0 [] input_2 (InputLayer) [(None, 6, 3)] 0 [] simple_rnn (SimpleRNN) (None, 6, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 6, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 600) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 600) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1205) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 603000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 741,743 Trainable params: 741,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 13s 60ms/step - loss: 1.0825 - accuracy: 0.3941 - auc: 0.5711 - f1_score: 0.4161 - val_loss: 1.0705 - val_accuracy: 0.4135 - val_auc: 0.5943 - val_f1_score: 0.3947 Epoch 2/50 188/188 [==============================] - 11s 59ms/step - loss: 1.0650 - accuracy: 0.4160 - auc: 0.6014 - f1_score: 0.4010 - val_loss: 1.0626 - val_accuracy: 0.4223 - val_auc: 0.6085 - val_f1_score: 0.4144 Epoch 3/50 188/188 [==============================] - 11s 57ms/step - loss: 1.0582 - accuracy: 0.4278 - auc: 0.6130 - f1_score: 0.4175 - val_loss: 1.0586 - val_accuracy: 0.4270 - val_auc: 0.6134 - val_f1_score: 0.4204 Epoch 4/50 188/188 [==============================] - 10s 55ms/step - loss: 1.0530 - accuracy: 0.4336 - auc: 0.6210 - f1_score: 0.4255 - val_loss: 1.0562 - val_accuracy: 0.4272 - val_auc: 0.6167 - val_f1_score: 0.4235 Epoch 5/50 188/188 [==============================] - 10s 55ms/step - loss: 1.0495 - accuracy: 0.4358 - auc: 0.6253 - f1_score: 0.4312 - val_loss: 1.0564 - val_accuracy: 0.4237 - val_auc: 0.6166 - val_f1_score: 0.4191 Epoch 6/50 188/188 [==============================] - 12s 63ms/step - loss: 1.0481 - accuracy: 0.4397 - auc: 0.6277 - f1_score: 0.4344 - val_loss: 1.0558 - val_accuracy: 0.4309 - val_auc: 0.6175 - val_f1_score: 0.4280 Epoch 7/50 188/188 [==============================] - 12s 63ms/step - loss: 1.0463 - accuracy: 0.4405 - auc: 0.6301 - f1_score: 0.4365 - val_loss: 1.0551 - val_accuracy: 0.4293 - val_auc: 0.6186 - val_f1_score: 0.4262 Epoch 8/50 188/188 [==============================] - 11s 60ms/step - loss: 1.0455 - accuracy: 0.4400 - auc: 0.6305 - f1_score: 0.4361 - val_loss: 1.0581 - val_accuracy: 0.4251 - val_auc: 0.6162 - val_f1_score: 0.4225 Epoch 9/50 188/188 [==============================] - 10s 55ms/step - loss: 1.0442 - accuracy: 0.4426 - auc: 0.6323 - f1_score: 0.4387 - val_loss: 1.0572 - val_accuracy: 0.4281 - val_auc: 0.6161 - val_f1_score: 0.4254 Epoch 10/50 188/188 [==============================] - 10s 55ms/step - loss: 1.0430 - accuracy: 0.4447 - auc: 0.6349 - f1_score: 0.4408 - val_loss: 1.0559 - val_accuracy: 0.4249 - val_auc: 0.6176 - val_f1_score: 0.4231 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . 26 0.431356 | 0.425425 | 0.445732 | 0.447746 | 0.636244 | 0.636658 | 0.438326 | 0.439369 | 6 | LSTM | 5 | 3 | . 27 0.434613 | 0.428611 | 0.451324 | 0.452921 | 0.639785 | 0.639764 | 0.439711 | 0.440177 | 7 | LSTM | 5 | 3 | . 28 0.434162 | 0.428099 | 0.452436 | 0.453568 | 0.641190 | 0.640821 | 0.442947 | 0.443066 | 8 | LSTM | 5 | 3 | . 29 0.434577 | 0.428493 | 0.453809 | 0.455117 | 0.643228 | 0.642921 | 0.443746 | 0.443928 | 9 | LSTM | 5 | 3 | . 30 0.435557 | 0.429423 | 0.457134 | 0.458292 | 0.646171 | 0.645533 | 0.444971 | 0.444904 | 10 | LSTM | 5 | 3 | . 31 0.428895 | 0.422991 | 0.436248 | 0.439141 | 0.626643 | 0.627428 | 0.416025 | 0.417477 | 1 | Simple | 5 | 3 | . 32 0.428810 | 0.422773 | 0.440609 | 0.441787 | 0.630732 | 0.630879 | 0.431680 | 0.431837 | 2 | Simple | 5 | 3 | . 33 0.431324 | 0.425110 | 0.450724 | 0.450951 | 0.639010 | 0.638336 | 0.447674 | 0.447127 | 3 | Simple | 5 | 3 | . 34 0.434422 | 0.428246 | 0.448642 | 0.450481 | 0.639347 | 0.638959 | 0.428653 | 0.429060 | 4 | Simple | 5 | 3 | . 35 0.432307 | 0.425841 | 0.457646 | 0.457155 | 0.645373 | 0.643587 | 0.453725 | 0.452403 | 5 | Simple | 5 | 3 | . 36 0.434807 | 0.428338 | 0.453591 | 0.452833 | 0.644805 | 0.642787 | 0.451708 | 0.450328 | 6 | Simple | 5 | 3 | . Train shape: (83399, 7, 3) Test shape: (10292, 7, 3) Train shape: (83399, 7, 3) Test shape: (10292, 7, 3) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 7, 3)] 0 [] input_2 (InputLayer) [(None, 7, 3)] 0 [] simple_rnn (SimpleRNN) (None, 7, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 7, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 700) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 700) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1405) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 703000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 841,743 Trainable params: 841,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 16s 72ms/step - loss: 1.0801 - accuracy: 0.3980 - auc: 0.5755 - f1_score: 0.4244 - val_loss: 1.0721 - val_accuracy: 0.4054 - val_auc: 0.5896 - val_f1_score: 0.3703 Epoch 2/50 188/188 [==============================] - 13s 69ms/step - loss: 1.0634 - accuracy: 0.4183 - auc: 0.6051 - f1_score: 0.4085 - val_loss: 1.0639 - val_accuracy: 0.4157 - val_auc: 0.6037 - val_f1_score: 0.3984 Epoch 3/50 188/188 [==============================] - 12s 64ms/step - loss: 1.0558 - accuracy: 0.4296 - auc: 0.6170 - f1_score: 0.4205 - val_loss: 1.0589 - val_accuracy: 0.4229 - val_auc: 0.6119 - val_f1_score: 0.4073 Epoch 4/50 188/188 [==============================] - 15s 78ms/step - loss: 1.0519 - accuracy: 0.4352 - auc: 0.6231 - f1_score: 0.4273 - val_loss: 1.0586 - val_accuracy: 0.4255 - val_auc: 0.6130 - val_f1_score: 0.4037 Epoch 5/50 188/188 [==============================] - 14s 76ms/step - loss: 1.0472 - accuracy: 0.4399 - auc: 0.6292 - f1_score: 0.4325 - val_loss: 1.0569 - val_accuracy: 0.4247 - val_auc: 0.6149 - val_f1_score: 0.4113 Epoch 6/50 188/188 [==============================] - 14s 72ms/step - loss: 1.0457 - accuracy: 0.4420 - auc: 0.6312 - f1_score: 0.4357 - val_loss: 1.0578 - val_accuracy: 0.4253 - val_auc: 0.6158 - val_f1_score: 0.4121 Epoch 7/50 188/188 [==============================] - 15s 78ms/step - loss: 1.0438 - accuracy: 0.4457 - auc: 0.6339 - f1_score: 0.4397 - val_loss: 1.0569 - val_accuracy: 0.4282 - val_auc: 0.6158 - val_f1_score: 0.4201 Epoch 8/50 188/188 [==============================] - 14s 72ms/step - loss: 1.0422 - accuracy: 0.4463 - auc: 0.6361 - f1_score: 0.4400 - val_loss: 1.0565 - val_accuracy: 0.4227 - val_auc: 0.6167 - val_f1_score: 0.4058 Epoch 9/50 188/188 [==============================] - 13s 71ms/step - loss: 1.0414 - accuracy: 0.4496 - auc: 0.6375 - f1_score: 0.4437 - val_loss: 1.0573 - val_accuracy: 0.4237 - val_auc: 0.6158 - val_f1_score: 0.4157 Epoch 10/50 188/188 [==============================] - 14s 75ms/step - loss: 1.0394 - accuracy: 0.4509 - auc: 0.6402 - f1_score: 0.4454 - val_loss: 1.0558 - val_accuracy: 0.4288 - val_auc: 0.6176 - val_f1_score: 0.4204 Epoch 11/50 188/188 [==============================] - 14s 74ms/step - loss: 1.0385 - accuracy: 0.4526 - auc: 0.6409 - f1_score: 0.4477 - val_loss: 1.0567 - val_accuracy: 0.4267 - val_auc: 0.6168 - val_f1_score: 0.4217 Epoch 12/50 188/188 [==============================] - 14s 75ms/step - loss: 1.0374 - accuracy: 0.4560 - auc: 0.6428 - f1_score: 0.4508 - val_loss: 1.0579 - val_accuracy: 0.4290 - val_auc: 0.6166 - val_f1_score: 0.4144 Epoch 13/50 188/188 [==============================] - 14s 75ms/step - loss: 1.0367 - accuracy: 0.4540 - auc: 0.6436 - f1_score: 0.4492 - val_loss: 1.0581 - val_accuracy: 0.4241 - val_auc: 0.6159 - val_f1_score: 0.4185 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . 26 0.431356 | 0.425425 | 0.445732 | 0.447746 | 0.636244 | 0.636658 | 0.438326 | 0.439369 | 6 | LSTM | 5 | 3 | . 27 0.434613 | 0.428611 | 0.451324 | 0.452921 | 0.639785 | 0.639764 | 0.439711 | 0.440177 | 7 | LSTM | 5 | 3 | . 28 0.434162 | 0.428099 | 0.452436 | 0.453568 | 0.641190 | 0.640821 | 0.442947 | 0.443066 | 8 | LSTM | 5 | 3 | . 29 0.434577 | 0.428493 | 0.453809 | 0.455117 | 0.643228 | 0.642921 | 0.443746 | 0.443928 | 9 | LSTM | 5 | 3 | . 30 0.435557 | 0.429423 | 0.457134 | 0.458292 | 0.646171 | 0.645533 | 0.444971 | 0.444904 | 10 | LSTM | 5 | 3 | . 31 0.428895 | 0.422991 | 0.436248 | 0.439141 | 0.626643 | 0.627428 | 0.416025 | 0.417477 | 1 | Simple | 5 | 3 | . 32 0.428810 | 0.422773 | 0.440609 | 0.441787 | 0.630732 | 0.630879 | 0.431680 | 0.431837 | 2 | Simple | 5 | 3 | . 33 0.431324 | 0.425110 | 0.450724 | 0.450951 | 0.639010 | 0.638336 | 0.447674 | 0.447127 | 3 | Simple | 5 | 3 | . 34 0.434422 | 0.428246 | 0.448642 | 0.450481 | 0.639347 | 0.638959 | 0.428653 | 0.429060 | 4 | Simple | 5 | 3 | . 35 0.432307 | 0.425841 | 0.457646 | 0.457155 | 0.645373 | 0.643587 | 0.453725 | 0.452403 | 5 | Simple | 5 | 3 | . 36 0.434807 | 0.428338 | 0.453591 | 0.452833 | 0.644805 | 0.642787 | 0.451708 | 0.450328 | 6 | Simple | 5 | 3 | . 37 0.438852 | 0.432030 | 0.470541 | 0.468397 | 0.659058 | 0.655686 | 0.465539 | 0.462539 | 7 | Simple | 5 | 3 | . Train shape: (83399, 8, 3) Test shape: (10292, 8, 3) Train shape: (83399, 8, 3) Test shape: (10292, 8, 3) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 8, 3)] 0 [] input_2 (InputLayer) [(None, 8, 3)] 0 [] simple_rnn (SimpleRNN) (None, 8, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 8, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 800) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 800) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1605) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 803000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 941,743 Trainable params: 941,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 15s 70ms/step - loss: 1.0843 - accuracy: 0.3914 - auc: 0.5661 - f1_score: 0.4294 - val_loss: 1.0750 - val_accuracy: 0.4090 - val_auc: 0.5876 - val_f1_score: 0.4044 Epoch 2/50 188/188 [==============================] - 13s 67ms/step - loss: 1.0675 - accuracy: 0.4159 - auc: 0.6003 - f1_score: 0.4120 - val_loss: 1.0672 - val_accuracy: 0.4185 - val_auc: 0.6008 - val_f1_score: 0.4115 Epoch 3/50 188/188 [==============================] - 13s 68ms/step - loss: 1.0587 - accuracy: 0.4252 - auc: 0.6130 - f1_score: 0.4209 - val_loss: 1.0636 - val_accuracy: 0.4219 - val_auc: 0.6046 - val_f1_score: 0.4101 Epoch 4/50 188/188 [==============================] - 13s 68ms/step - loss: 1.0534 - accuracy: 0.4333 - auc: 0.6208 - f1_score: 0.4290 - val_loss: 1.0613 - val_accuracy: 0.4259 - val_auc: 0.6094 - val_f1_score: 0.4145 Epoch 5/50 188/188 [==============================] - 13s 67ms/step - loss: 1.0492 - accuracy: 0.4368 - auc: 0.6262 - f1_score: 0.4313 - val_loss: 1.0582 - val_accuracy: 0.4289 - val_auc: 0.6141 - val_f1_score: 0.4227 Epoch 6/50 188/188 [==============================] - 13s 67ms/step - loss: 1.0454 - accuracy: 0.4436 - auc: 0.6319 - f1_score: 0.4392 - val_loss: 1.0570 - val_accuracy: 0.4288 - val_auc: 0.6158 - val_f1_score: 0.4248 Epoch 7/50 188/188 [==============================] - 13s 67ms/step - loss: 1.0435 - accuracy: 0.4450 - auc: 0.6343 - f1_score: 0.4413 - val_loss: 1.0581 - val_accuracy: 0.4277 - val_auc: 0.6141 - val_f1_score: 0.4196 Epoch 8/50 188/188 [==============================] - 13s 71ms/step - loss: 1.0419 - accuracy: 0.4470 - auc: 0.6368 - f1_score: 0.4433 - val_loss: 1.0580 - val_accuracy: 0.4267 - val_auc: 0.6145 - val_f1_score: 0.4244 Epoch 9/50 188/188 [==============================] - 13s 69ms/step - loss: 1.0401 - accuracy: 0.4516 - auc: 0.6386 - f1_score: 0.4484 - val_loss: 1.0582 - val_accuracy: 0.4255 - val_auc: 0.6152 - val_f1_score: 0.4154 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . 26 0.431356 | 0.425425 | 0.445732 | 0.447746 | 0.636244 | 0.636658 | 0.438326 | 0.439369 | 6 | LSTM | 5 | 3 | . 27 0.434613 | 0.428611 | 0.451324 | 0.452921 | 0.639785 | 0.639764 | 0.439711 | 0.440177 | 7 | LSTM | 5 | 3 | . 28 0.434162 | 0.428099 | 0.452436 | 0.453568 | 0.641190 | 0.640821 | 0.442947 | 0.443066 | 8 | LSTM | 5 | 3 | . 29 0.434577 | 0.428493 | 0.453809 | 0.455117 | 0.643228 | 0.642921 | 0.443746 | 0.443928 | 9 | LSTM | 5 | 3 | . 30 0.435557 | 0.429423 | 0.457134 | 0.458292 | 0.646171 | 0.645533 | 0.444971 | 0.444904 | 10 | LSTM | 5 | 3 | . 31 0.428895 | 0.422991 | 0.436248 | 0.439141 | 0.626643 | 0.627428 | 0.416025 | 0.417477 | 1 | Simple | 5 | 3 | . 32 0.428810 | 0.422773 | 0.440609 | 0.441787 | 0.630732 | 0.630879 | 0.431680 | 0.431837 | 2 | Simple | 5 | 3 | . 33 0.431324 | 0.425110 | 0.450724 | 0.450951 | 0.639010 | 0.638336 | 0.447674 | 0.447127 | 3 | Simple | 5 | 3 | . 34 0.434422 | 0.428246 | 0.448642 | 0.450481 | 0.639347 | 0.638959 | 0.428653 | 0.429060 | 4 | Simple | 5 | 3 | . 35 0.432307 | 0.425841 | 0.457646 | 0.457155 | 0.645373 | 0.643587 | 0.453725 | 0.452403 | 5 | Simple | 5 | 3 | . 36 0.434807 | 0.428338 | 0.453591 | 0.452833 | 0.644805 | 0.642787 | 0.451708 | 0.450328 | 6 | Simple | 5 | 3 | . 37 0.438852 | 0.432030 | 0.470541 | 0.468397 | 0.659058 | 0.655686 | 0.465539 | 0.462539 | 7 | Simple | 5 | 3 | . 38 0.438236 | 0.431633 | 0.464394 | 0.463712 | 0.654992 | 0.652658 | 0.455539 | 0.453898 | 8 | Simple | 5 | 3 | . Train shape: (83399, 9, 3) Test shape: (10292, 9, 3) Train shape: (83399, 9, 3) Test shape: (10292, 9, 3) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 9, 3)] 0 [] input_2 (InputLayer) [(None, 9, 3)] 0 [] simple_rnn (SimpleRNN) (None, 9, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 9, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 900) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 900) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1805) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 903000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,041,743 Trainable params: 1,041,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 17s 78ms/step - loss: 1.0791 - accuracy: 0.3970 - auc: 0.5777 - f1_score: 0.4293 - val_loss: 1.0735 - val_accuracy: 0.4034 - val_auc: 0.5882 - val_f1_score: 0.3773 Epoch 2/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0652 - accuracy: 0.4195 - auc: 0.6033 - f1_score: 0.4130 - val_loss: 1.0655 - val_accuracy: 0.4127 - val_auc: 0.6013 - val_f1_score: 0.3951 Epoch 3/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0575 - accuracy: 0.4292 - auc: 0.6150 - f1_score: 0.4247 - val_loss: 1.0612 - val_accuracy: 0.4251 - val_auc: 0.6092 - val_f1_score: 0.4145 Epoch 4/50 188/188 [==============================] - 14s 76ms/step - loss: 1.0521 - accuracy: 0.4360 - auc: 0.6232 - f1_score: 0.4305 - val_loss: 1.0608 - val_accuracy: 0.4225 - val_auc: 0.6098 - val_f1_score: 0.4088 Epoch 5/50 188/188 [==============================] - 14s 74ms/step - loss: 1.0479 - accuracy: 0.4414 - auc: 0.6285 - f1_score: 0.4358 - val_loss: 1.0586 - val_accuracy: 0.4257 - val_auc: 0.6130 - val_f1_score: 0.4162 Epoch 6/50 188/188 [==============================] - 14s 72ms/step - loss: 1.0452 - accuracy: 0.4444 - auc: 0.6323 - f1_score: 0.4388 - val_loss: 1.0581 - val_accuracy: 0.4229 - val_auc: 0.6139 - val_f1_score: 0.4174 Epoch 7/50 188/188 [==============================] - 14s 74ms/step - loss: 1.0432 - accuracy: 0.4461 - auc: 0.6356 - f1_score: 0.4412 - val_loss: 1.0580 - val_accuracy: 0.4225 - val_auc: 0.6155 - val_f1_score: 0.4159 Epoch 8/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0417 - accuracy: 0.4484 - auc: 0.6373 - f1_score: 0.4440 - val_loss: 1.0586 - val_accuracy: 0.4264 - val_auc: 0.6145 - val_f1_score: 0.4184 Epoch 9/50 188/188 [==============================] - 14s 72ms/step - loss: 1.0391 - accuracy: 0.4516 - auc: 0.6406 - f1_score: 0.4471 - val_loss: 1.0594 - val_accuracy: 0.4285 - val_auc: 0.6142 - val_f1_score: 0.4207 Epoch 10/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0375 - accuracy: 0.4558 - auc: 0.6430 - f1_score: 0.4516 - val_loss: 1.0601 - val_accuracy: 0.4231 - val_auc: 0.6135 - val_f1_score: 0.4137 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . 26 0.431356 | 0.425425 | 0.445732 | 0.447746 | 0.636244 | 0.636658 | 0.438326 | 0.439369 | 6 | LSTM | 5 | 3 | . 27 0.434613 | 0.428611 | 0.451324 | 0.452921 | 0.639785 | 0.639764 | 0.439711 | 0.440177 | 7 | LSTM | 5 | 3 | . 28 0.434162 | 0.428099 | 0.452436 | 0.453568 | 0.641190 | 0.640821 | 0.442947 | 0.443066 | 8 | LSTM | 5 | 3 | . 29 0.434577 | 0.428493 | 0.453809 | 0.455117 | 0.643228 | 0.642921 | 0.443746 | 0.443928 | 9 | LSTM | 5 | 3 | . 30 0.435557 | 0.429423 | 0.457134 | 0.458292 | 0.646171 | 0.645533 | 0.444971 | 0.444904 | 10 | LSTM | 5 | 3 | . 31 0.428895 | 0.422991 | 0.436248 | 0.439141 | 0.626643 | 0.627428 | 0.416025 | 0.417477 | 1 | Simple | 5 | 3 | . 32 0.428810 | 0.422773 | 0.440609 | 0.441787 | 0.630732 | 0.630879 | 0.431680 | 0.431837 | 2 | Simple | 5 | 3 | . 33 0.431324 | 0.425110 | 0.450724 | 0.450951 | 0.639010 | 0.638336 | 0.447674 | 0.447127 | 3 | Simple | 5 | 3 | . 34 0.434422 | 0.428246 | 0.448642 | 0.450481 | 0.639347 | 0.638959 | 0.428653 | 0.429060 | 4 | Simple | 5 | 3 | . 35 0.432307 | 0.425841 | 0.457646 | 0.457155 | 0.645373 | 0.643587 | 0.453725 | 0.452403 | 5 | Simple | 5 | 3 | . 36 0.434807 | 0.428338 | 0.453591 | 0.452833 | 0.644805 | 0.642787 | 0.451708 | 0.450328 | 6 | Simple | 5 | 3 | . 37 0.438852 | 0.432030 | 0.470541 | 0.468397 | 0.659058 | 0.655686 | 0.465539 | 0.462539 | 7 | Simple | 5 | 3 | . 38 0.438236 | 0.431633 | 0.464394 | 0.463712 | 0.654992 | 0.652658 | 0.455539 | 0.453898 | 8 | Simple | 5 | 3 | . 39 0.440875 | 0.434093 | 0.468340 | 0.467103 | 0.658120 | 0.655249 | 0.459234 | 0.456988 | 9 | Simple | 5 | 3 | . Train shape: (83399, 10, 3) Test shape: (10292, 10, 3) Train shape: (83399, 10, 3) Test shape: (10292, 10, 3) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 3)] 0 [] input_2 (InputLayer) [(None, 10, 3)] 0 [] simple_rnn (SimpleRNN) (None, 10, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 10, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 2005) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1003000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,141,743 Trainable params: 1,141,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 19s 89ms/step - loss: 1.0897 - accuracy: 0.3610 - auc: 0.5456 - f1_score: 0.4135 - val_loss: 1.0845 - val_accuracy: 0.3896 - val_auc: 0.5666 - val_f1_score: 0.3776 Epoch 2/50 188/188 [==============================] - 16s 86ms/step - loss: 1.0737 - accuracy: 0.4140 - auc: 0.5910 - f1_score: 0.4125 - val_loss: 1.0748 - val_accuracy: 0.4070 - val_auc: 0.5869 - val_f1_score: 0.3895 Epoch 3/50 188/188 [==============================] - 16s 85ms/step - loss: 1.0613 - accuracy: 0.4292 - auc: 0.6118 - f1_score: 0.4213 - val_loss: 1.0677 - val_accuracy: 0.4150 - val_auc: 0.5998 - val_f1_score: 0.4045 Epoch 4/50 188/188 [==============================] - 16s 85ms/step - loss: 1.0527 - accuracy: 0.4373 - auc: 0.6237 - f1_score: 0.4288 - val_loss: 1.0625 - val_accuracy: 0.4191 - val_auc: 0.6067 - val_f1_score: 0.4101 Epoch 5/50 188/188 [==============================] - 16s 85ms/step - loss: 1.0480 - accuracy: 0.4429 - auc: 0.6296 - f1_score: 0.4347 - val_loss: 1.0612 - val_accuracy: 0.4235 - val_auc: 0.6099 - val_f1_score: 0.4208 Epoch 6/50 188/188 [==============================] - 16s 86ms/step - loss: 1.0441 - accuracy: 0.4470 - auc: 0.6355 - f1_score: 0.4400 - val_loss: 1.0602 - val_accuracy: 0.4211 - val_auc: 0.6116 - val_f1_score: 0.4049 Epoch 7/50 188/188 [==============================] - 16s 86ms/step - loss: 1.0415 - accuracy: 0.4490 - auc: 0.6383 - f1_score: 0.4412 - val_loss: 1.0595 - val_accuracy: 0.4187 - val_auc: 0.6107 - val_f1_score: 0.4147 Epoch 8/50 188/188 [==============================] - 16s 85ms/step - loss: 1.0374 - accuracy: 0.4575 - auc: 0.6439 - f1_score: 0.4517 - val_loss: 1.0595 - val_accuracy: 0.4207 - val_auc: 0.6118 - val_f1_score: 0.4134 Epoch 9/50 188/188 [==============================] - 16s 85ms/step - loss: 1.0361 - accuracy: 0.4586 - auc: 0.6457 - f1_score: 0.4528 - val_loss: 1.0602 - val_accuracy: 0.4204 - val_auc: 0.6122 - val_f1_score: 0.4122 Epoch 10/50 188/188 [==============================] - 16s 85ms/step - loss: 1.0334 - accuracy: 0.4615 - auc: 0.6488 - f1_score: 0.4563 - val_loss: 1.0613 - val_accuracy: 0.4181 - val_auc: 0.6106 - val_f1_score: 0.4122 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . 26 0.431356 | 0.425425 | 0.445732 | 0.447746 | 0.636244 | 0.636658 | 0.438326 | 0.439369 | 6 | LSTM | 5 | 3 | . 27 0.434613 | 0.428611 | 0.451324 | 0.452921 | 0.639785 | 0.639764 | 0.439711 | 0.440177 | 7 | LSTM | 5 | 3 | . 28 0.434162 | 0.428099 | 0.452436 | 0.453568 | 0.641190 | 0.640821 | 0.442947 | 0.443066 | 8 | LSTM | 5 | 3 | . 29 0.434577 | 0.428493 | 0.453809 | 0.455117 | 0.643228 | 0.642921 | 0.443746 | 0.443928 | 9 | LSTM | 5 | 3 | . 30 0.435557 | 0.429423 | 0.457134 | 0.458292 | 0.646171 | 0.645533 | 0.444971 | 0.444904 | 10 | LSTM | 5 | 3 | . 31 0.428895 | 0.422991 | 0.436248 | 0.439141 | 0.626643 | 0.627428 | 0.416025 | 0.417477 | 1 | Simple | 5 | 3 | . 32 0.428810 | 0.422773 | 0.440609 | 0.441787 | 0.630732 | 0.630879 | 0.431680 | 0.431837 | 2 | Simple | 5 | 3 | . 33 0.431324 | 0.425110 | 0.450724 | 0.450951 | 0.639010 | 0.638336 | 0.447674 | 0.447127 | 3 | Simple | 5 | 3 | . 34 0.434422 | 0.428246 | 0.448642 | 0.450481 | 0.639347 | 0.638959 | 0.428653 | 0.429060 | 4 | Simple | 5 | 3 | . 35 0.432307 | 0.425841 | 0.457646 | 0.457155 | 0.645373 | 0.643587 | 0.453725 | 0.452403 | 5 | Simple | 5 | 3 | . 36 0.434807 | 0.428338 | 0.453591 | 0.452833 | 0.644805 | 0.642787 | 0.451708 | 0.450328 | 6 | Simple | 5 | 3 | . 37 0.438852 | 0.432030 | 0.470541 | 0.468397 | 0.659058 | 0.655686 | 0.465539 | 0.462539 | 7 | Simple | 5 | 3 | . 38 0.438236 | 0.431633 | 0.464394 | 0.463712 | 0.654992 | 0.652658 | 0.455539 | 0.453898 | 8 | Simple | 5 | 3 | . 39 0.440875 | 0.434093 | 0.468340 | 0.467103 | 0.658120 | 0.655249 | 0.459234 | 0.456988 | 9 | Simple | 5 | 3 | . 40 0.441212 | 0.434257 | 0.476319 | 0.473885 | 0.664433 | 0.660911 | 0.471451 | 0.468173 | 10 | Simple | 5 | 3 | . Train shape: (83399, 1, 3) Test shape: (10292, 1, 3) Train shape: (83399, 1, 3) Test shape: (10292, 1, 3) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 1, 3)] 0 [] input_2 (InputLayer) [(None, 1, 3)] 0 [] lstm (LSTM) (None, 1, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 1, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 100) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 100) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 208) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 104500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 305,043 Trainable params: 305,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 7s 31ms/step - loss: 1.0698 - accuracy: 0.4186 - auc: 0.5982 - f1_score: 0.4322 - val_loss: 1.0568 - val_accuracy: 0.4333 - val_auc: 0.6181 - val_f1_score: 0.3957 Epoch 2/50 188/188 [==============================] - 5s 26ms/step - loss: 1.0546 - accuracy: 0.4298 - auc: 0.6187 - f1_score: 0.4003 - val_loss: 1.0552 - val_accuracy: 0.4312 - val_auc: 0.6202 - val_f1_score: 0.4059 Epoch 3/50 188/188 [==============================] - 5s 27ms/step - loss: 1.0525 - accuracy: 0.4320 - auc: 0.6209 - f1_score: 0.4082 - val_loss: 1.0549 - val_accuracy: 0.4324 - val_auc: 0.6210 - val_f1_score: 0.4116 Epoch 4/50 188/188 [==============================] - 5s 27ms/step - loss: 1.0521 - accuracy: 0.4322 - auc: 0.6225 - f1_score: 0.4136 - val_loss: 1.0547 - val_accuracy: 0.4335 - val_auc: 0.6217 - val_f1_score: 0.4169 Epoch 5/50 188/188 [==============================] - 5s 27ms/step - loss: 1.0516 - accuracy: 0.4340 - auc: 0.6229 - f1_score: 0.4159 - val_loss: 1.0549 - val_accuracy: 0.4349 - val_auc: 0.6215 - val_f1_score: 0.4209 Epoch 6/50 188/188 [==============================] - 5s 26ms/step - loss: 1.0514 - accuracy: 0.4332 - auc: 0.6231 - f1_score: 0.4184 - val_loss: 1.0549 - val_accuracy: 0.4353 - val_auc: 0.6217 - val_f1_score: 0.4218 Epoch 7/50 188/188 [==============================] - 6s 30ms/step - loss: 1.0512 - accuracy: 0.4339 - auc: 0.6235 - f1_score: 0.4220 - val_loss: 1.0551 - val_accuracy: 0.4332 - val_auc: 0.6217 - val_f1_score: 0.4237 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . 26 0.431356 | 0.425425 | 0.445732 | 0.447746 | 0.636244 | 0.636658 | 0.438326 | 0.439369 | 6 | LSTM | 5 | 3 | . 27 0.434613 | 0.428611 | 0.451324 | 0.452921 | 0.639785 | 0.639764 | 0.439711 | 0.440177 | 7 | LSTM | 5 | 3 | . 28 0.434162 | 0.428099 | 0.452436 | 0.453568 | 0.641190 | 0.640821 | 0.442947 | 0.443066 | 8 | LSTM | 5 | 3 | . 29 0.434577 | 0.428493 | 0.453809 | 0.455117 | 0.643228 | 0.642921 | 0.443746 | 0.443928 | 9 | LSTM | 5 | 3 | . 30 0.435557 | 0.429423 | 0.457134 | 0.458292 | 0.646171 | 0.645533 | 0.444971 | 0.444904 | 10 | LSTM | 5 | 3 | . 31 0.428895 | 0.422991 | 0.436248 | 0.439141 | 0.626643 | 0.627428 | 0.416025 | 0.417477 | 1 | Simple | 5 | 3 | . 32 0.428810 | 0.422773 | 0.440609 | 0.441787 | 0.630732 | 0.630879 | 0.431680 | 0.431837 | 2 | Simple | 5 | 3 | . 33 0.431324 | 0.425110 | 0.450724 | 0.450951 | 0.639010 | 0.638336 | 0.447674 | 0.447127 | 3 | Simple | 5 | 3 | . 34 0.434422 | 0.428246 | 0.448642 | 0.450481 | 0.639347 | 0.638959 | 0.428653 | 0.429060 | 4 | Simple | 5 | 3 | . 35 0.432307 | 0.425841 | 0.457646 | 0.457155 | 0.645373 | 0.643587 | 0.453725 | 0.452403 | 5 | Simple | 5 | 3 | . 36 0.434807 | 0.428338 | 0.453591 | 0.452833 | 0.644805 | 0.642787 | 0.451708 | 0.450328 | 6 | Simple | 5 | 3 | . 37 0.438852 | 0.432030 | 0.470541 | 0.468397 | 0.659058 | 0.655686 | 0.465539 | 0.462539 | 7 | Simple | 5 | 3 | . 38 0.438236 | 0.431633 | 0.464394 | 0.463712 | 0.654992 | 0.652658 | 0.455539 | 0.453898 | 8 | Simple | 5 | 3 | . 39 0.440875 | 0.434093 | 0.468340 | 0.467103 | 0.658120 | 0.655249 | 0.459234 | 0.456988 | 9 | Simple | 5 | 3 | . 40 0.441212 | 0.434257 | 0.476319 | 0.473885 | 0.664433 | 0.660911 | 0.471451 | 0.468173 | 10 | Simple | 5 | 3 | . 41 0.427431 | 0.421428 | 0.437273 | 0.439268 | 0.626936 | 0.627383 | 0.426847 | 0.427606 | 1 | LSTM | 8 | 3 | . Train shape: (83399, 2, 3) Test shape: (10292, 2, 3) Train shape: (83399, 2, 3) Test shape: (10292, 2, 3) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 2, 3)] 0 [] input_2 (InputLayer) [(None, 2, 3)] 0 [] lstm (LSTM) (None, 2, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 2, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 200) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 200) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 408) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 204500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 405,043 Trainable params: 405,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 10s 43ms/step - loss: 1.0725 - accuracy: 0.4043 - auc: 0.5918 - f1_score: 0.4174 - val_loss: 1.0564 - val_accuracy: 0.4278 - val_auc: 0.6185 - val_f1_score: 0.3719 Epoch 2/50 188/188 [==============================] - 8s 40ms/step - loss: 1.0538 - accuracy: 0.4316 - auc: 0.6195 - f1_score: 0.4073 - val_loss: 1.0552 - val_accuracy: 0.4290 - val_auc: 0.6199 - val_f1_score: 0.3875 Epoch 3/50 188/188 [==============================] - 8s 40ms/step - loss: 1.0507 - accuracy: 0.4351 - auc: 0.6243 - f1_score: 0.4178 - val_loss: 1.0547 - val_accuracy: 0.4323 - val_auc: 0.6206 - val_f1_score: 0.4129 Epoch 4/50 188/188 [==============================] - 8s 40ms/step - loss: 1.0504 - accuracy: 0.4343 - auc: 0.6250 - f1_score: 0.4218 - val_loss: 1.0537 - val_accuracy: 0.4363 - val_auc: 0.6225 - val_f1_score: 0.4214 Epoch 5/50 188/188 [==============================] - 7s 40ms/step - loss: 1.0500 - accuracy: 0.4359 - auc: 0.6249 - f1_score: 0.4244 - val_loss: 1.0542 - val_accuracy: 0.4320 - val_auc: 0.6216 - val_f1_score: 0.4198 Epoch 6/50 188/188 [==============================] - 7s 40ms/step - loss: 1.0494 - accuracy: 0.4368 - auc: 0.6260 - f1_score: 0.4285 - val_loss: 1.0539 - val_accuracy: 0.4353 - val_auc: 0.6225 - val_f1_score: 0.4203 Epoch 7/50 188/188 [==============================] - 7s 40ms/step - loss: 1.0492 - accuracy: 0.4384 - auc: 0.6267 - f1_score: 0.4288 - val_loss: 1.0538 - val_accuracy: 0.4374 - val_auc: 0.6223 - val_f1_score: 0.4305 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . 26 0.431356 | 0.425425 | 0.445732 | 0.447746 | 0.636244 | 0.636658 | 0.438326 | 0.439369 | 6 | LSTM | 5 | 3 | . 27 0.434613 | 0.428611 | 0.451324 | 0.452921 | 0.639785 | 0.639764 | 0.439711 | 0.440177 | 7 | LSTM | 5 | 3 | . 28 0.434162 | 0.428099 | 0.452436 | 0.453568 | 0.641190 | 0.640821 | 0.442947 | 0.443066 | 8 | LSTM | 5 | 3 | . 29 0.434577 | 0.428493 | 0.453809 | 0.455117 | 0.643228 | 0.642921 | 0.443746 | 0.443928 | 9 | LSTM | 5 | 3 | . 30 0.435557 | 0.429423 | 0.457134 | 0.458292 | 0.646171 | 0.645533 | 0.444971 | 0.444904 | 10 | LSTM | 5 | 3 | . 31 0.428895 | 0.422991 | 0.436248 | 0.439141 | 0.626643 | 0.627428 | 0.416025 | 0.417477 | 1 | Simple | 5 | 3 | . 32 0.428810 | 0.422773 | 0.440609 | 0.441787 | 0.630732 | 0.630879 | 0.431680 | 0.431837 | 2 | Simple | 5 | 3 | . 33 0.431324 | 0.425110 | 0.450724 | 0.450951 | 0.639010 | 0.638336 | 0.447674 | 0.447127 | 3 | Simple | 5 | 3 | . 34 0.434422 | 0.428246 | 0.448642 | 0.450481 | 0.639347 | 0.638959 | 0.428653 | 0.429060 | 4 | Simple | 5 | 3 | . 35 0.432307 | 0.425841 | 0.457646 | 0.457155 | 0.645373 | 0.643587 | 0.453725 | 0.452403 | 5 | Simple | 5 | 3 | . 36 0.434807 | 0.428338 | 0.453591 | 0.452833 | 0.644805 | 0.642787 | 0.451708 | 0.450328 | 6 | Simple | 5 | 3 | . 37 0.438852 | 0.432030 | 0.470541 | 0.468397 | 0.659058 | 0.655686 | 0.465539 | 0.462539 | 7 | Simple | 5 | 3 | . 38 0.438236 | 0.431633 | 0.464394 | 0.463712 | 0.654992 | 0.652658 | 0.455539 | 0.453898 | 8 | Simple | 5 | 3 | . 39 0.440875 | 0.434093 | 0.468340 | 0.467103 | 0.658120 | 0.655249 | 0.459234 | 0.456988 | 9 | Simple | 5 | 3 | . 40 0.441212 | 0.434257 | 0.476319 | 0.473885 | 0.664433 | 0.660911 | 0.471451 | 0.468173 | 10 | Simple | 5 | 3 | . 41 0.427431 | 0.421428 | 0.437273 | 0.439268 | 0.626936 | 0.627383 | 0.426847 | 0.427606 | 1 | LSTM | 8 | 3 | . 42 0.428426 | 0.422414 | 0.441274 | 0.442826 | 0.630513 | 0.630709 | 0.434591 | 0.435120 | 2 | LSTM | 8 | 3 | . Train shape: (83399, 3, 3) Test shape: (10292, 3, 3) Train shape: (83399, 3, 3) Test shape: (10292, 3, 3) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 3, 3)] 0 [] input_2 (InputLayer) [(None, 3, 3)] 0 [] lstm (LSTM) (None, 3, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 3, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 300) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 300) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 608) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 304500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 505,043 Trainable params: 505,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 13s 59ms/step - loss: 1.0753 - accuracy: 0.4095 - auc: 0.5876 - f1_score: 0.4169 - val_loss: 1.0573 - val_accuracy: 0.4235 - val_auc: 0.6172 - val_f1_score: 0.3770 Epoch 2/50 188/188 [==============================] - 11s 57ms/step - loss: 1.0548 - accuracy: 0.4287 - auc: 0.6184 - f1_score: 0.4117 - val_loss: 1.0539 - val_accuracy: 0.4269 - val_auc: 0.6219 - val_f1_score: 0.3930 Epoch 3/50 188/188 [==============================] - 11s 57ms/step - loss: 1.0508 - accuracy: 0.4340 - auc: 0.6241 - f1_score: 0.4212 - val_loss: 1.0535 - val_accuracy: 0.4306 - val_auc: 0.6229 - val_f1_score: 0.4134 Epoch 4/50 188/188 [==============================] - 11s 57ms/step - loss: 1.0502 - accuracy: 0.4355 - auc: 0.6254 - f1_score: 0.4250 - val_loss: 1.0527 - val_accuracy: 0.4318 - val_auc: 0.6239 - val_f1_score: 0.4123 Epoch 5/50 188/188 [==============================] - 11s 57ms/step - loss: 1.0489 - accuracy: 0.4381 - auc: 0.6266 - f1_score: 0.4258 - val_loss: 1.0530 - val_accuracy: 0.4325 - val_auc: 0.6234 - val_f1_score: 0.4192 Epoch 6/50 188/188 [==============================] - 11s 61ms/step - loss: 1.0479 - accuracy: 0.4393 - auc: 0.6291 - f1_score: 0.4326 - val_loss: 1.0531 - val_accuracy: 0.4327 - val_auc: 0.6230 - val_f1_score: 0.4192 Epoch 7/50 188/188 [==============================] - 12s 62ms/step - loss: 1.0481 - accuracy: 0.4394 - auc: 0.6284 - f1_score: 0.4309 - val_loss: 1.0524 - val_accuracy: 0.4371 - val_auc: 0.6238 - val_f1_score: 0.4319 Epoch 8/50 188/188 [==============================] - 11s 60ms/step - loss: 1.0469 - accuracy: 0.4420 - auc: 0.6302 - f1_score: 0.4340 - val_loss: 1.0526 - val_accuracy: 0.4342 - val_auc: 0.6238 - val_f1_score: 0.4237 Epoch 9/50 188/188 [==============================] - 11s 60ms/step - loss: 1.0463 - accuracy: 0.4409 - auc: 0.6308 - f1_score: 0.4325 - val_loss: 1.0528 - val_accuracy: 0.4332 - val_auc: 0.6236 - val_f1_score: 0.4196 Epoch 10/50 188/188 [==============================] - 11s 60ms/step - loss: 1.0460 - accuracy: 0.4421 - auc: 0.6310 - f1_score: 0.4325 - val_loss: 1.0525 - val_accuracy: 0.4335 - val_auc: 0.6242 - val_f1_score: 0.4247 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . 26 0.431356 | 0.425425 | 0.445732 | 0.447746 | 0.636244 | 0.636658 | 0.438326 | 0.439369 | 6 | LSTM | 5 | 3 | . 27 0.434613 | 0.428611 | 0.451324 | 0.452921 | 0.639785 | 0.639764 | 0.439711 | 0.440177 | 7 | LSTM | 5 | 3 | . 28 0.434162 | 0.428099 | 0.452436 | 0.453568 | 0.641190 | 0.640821 | 0.442947 | 0.443066 | 8 | LSTM | 5 | 3 | . 29 0.434577 | 0.428493 | 0.453809 | 0.455117 | 0.643228 | 0.642921 | 0.443746 | 0.443928 | 9 | LSTM | 5 | 3 | . 30 0.435557 | 0.429423 | 0.457134 | 0.458292 | 0.646171 | 0.645533 | 0.444971 | 0.444904 | 10 | LSTM | 5 | 3 | . 31 0.428895 | 0.422991 | 0.436248 | 0.439141 | 0.626643 | 0.627428 | 0.416025 | 0.417477 | 1 | Simple | 5 | 3 | . 32 0.428810 | 0.422773 | 0.440609 | 0.441787 | 0.630732 | 0.630879 | 0.431680 | 0.431837 | 2 | Simple | 5 | 3 | . 33 0.431324 | 0.425110 | 0.450724 | 0.450951 | 0.639010 | 0.638336 | 0.447674 | 0.447127 | 3 | Simple | 5 | 3 | . 34 0.434422 | 0.428246 | 0.448642 | 0.450481 | 0.639347 | 0.638959 | 0.428653 | 0.429060 | 4 | Simple | 5 | 3 | . 35 0.432307 | 0.425841 | 0.457646 | 0.457155 | 0.645373 | 0.643587 | 0.453725 | 0.452403 | 5 | Simple | 5 | 3 | . 36 0.434807 | 0.428338 | 0.453591 | 0.452833 | 0.644805 | 0.642787 | 0.451708 | 0.450328 | 6 | Simple | 5 | 3 | . 37 0.438852 | 0.432030 | 0.470541 | 0.468397 | 0.659058 | 0.655686 | 0.465539 | 0.462539 | 7 | Simple | 5 | 3 | . 38 0.438236 | 0.431633 | 0.464394 | 0.463712 | 0.654992 | 0.652658 | 0.455539 | 0.453898 | 8 | Simple | 5 | 3 | . 39 0.440875 | 0.434093 | 0.468340 | 0.467103 | 0.658120 | 0.655249 | 0.459234 | 0.456988 | 9 | Simple | 5 | 3 | . 40 0.441212 | 0.434257 | 0.476319 | 0.473885 | 0.664433 | 0.660911 | 0.471451 | 0.468173 | 10 | Simple | 5 | 3 | . 41 0.427431 | 0.421428 | 0.437273 | 0.439268 | 0.626936 | 0.627383 | 0.426847 | 0.427606 | 1 | LSTM | 8 | 3 | . 42 0.428426 | 0.422414 | 0.441274 | 0.442826 | 0.630513 | 0.630709 | 0.434591 | 0.435120 | 2 | LSTM | 8 | 3 | . 43 0.431404 | 0.425487 | 0.444315 | 0.446443 | 0.635047 | 0.635598 | 0.436086 | 0.437079 | 3 | LSTM | 8 | 3 | . Train shape: (83399, 4, 3) Test shape: (10292, 4, 3) Train shape: (83399, 4, 3) Test shape: (10292, 4, 3) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 4, 3)] 0 [] input_2 (InputLayer) [(None, 4, 3)] 0 [] lstm (LSTM) (None, 4, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 4, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 400) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 400) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 808) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 404500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 605,043 Trainable params: 605,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 17s 77ms/step - loss: 1.0742 - accuracy: 0.4143 - auc: 0.5884 - f1_score: 0.4061 - val_loss: 1.0605 - val_accuracy: 0.4260 - val_auc: 0.6131 - val_f1_score: 0.3740 Epoch 2/50 188/188 [==============================] - 14s 72ms/step - loss: 1.0535 - accuracy: 0.4350 - auc: 0.6213 - f1_score: 0.4052 - val_loss: 1.0534 - val_accuracy: 0.4338 - val_auc: 0.6224 - val_f1_score: 0.4275 Epoch 3/50 188/188 [==============================] - 13s 71ms/step - loss: 1.0494 - accuracy: 0.4383 - auc: 0.6262 - f1_score: 0.4278 - val_loss: 1.0526 - val_accuracy: 0.4323 - val_auc: 0.6233 - val_f1_score: 0.4239 Epoch 4/50 188/188 [==============================] - 14s 72ms/step - loss: 1.0482 - accuracy: 0.4397 - auc: 0.6282 - f1_score: 0.4306 - val_loss: 1.0523 - val_accuracy: 0.4330 - val_auc: 0.6242 - val_f1_score: 0.4228 Epoch 5/50 188/188 [==============================] - 13s 71ms/step - loss: 1.0468 - accuracy: 0.4419 - auc: 0.6300 - f1_score: 0.4325 - val_loss: 1.0527 - val_accuracy: 0.4367 - val_auc: 0.6239 - val_f1_score: 0.4286 Epoch 6/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0465 - accuracy: 0.4438 - auc: 0.6306 - f1_score: 0.4365 - val_loss: 1.0520 - val_accuracy: 0.4355 - val_auc: 0.6244 - val_f1_score: 0.4280 Epoch 7/50 188/188 [==============================] - 14s 76ms/step - loss: 1.0457 - accuracy: 0.4416 - auc: 0.6314 - f1_score: 0.4337 - val_loss: 1.0528 - val_accuracy: 0.4362 - val_auc: 0.6242 - val_f1_score: 0.4283 Epoch 8/50 188/188 [==============================] - 15s 78ms/step - loss: 1.0454 - accuracy: 0.4431 - auc: 0.6314 - f1_score: 0.4362 - val_loss: 1.0523 - val_accuracy: 0.4345 - val_auc: 0.6242 - val_f1_score: 0.4258 Epoch 9/50 188/188 [==============================] - 15s 80ms/step - loss: 1.0448 - accuracy: 0.4440 - auc: 0.6326 - f1_score: 0.4362 - val_loss: 1.0521 - val_accuracy: 0.4350 - val_auc: 0.6243 - val_f1_score: 0.4308 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . 26 0.431356 | 0.425425 | 0.445732 | 0.447746 | 0.636244 | 0.636658 | 0.438326 | 0.439369 | 6 | LSTM | 5 | 3 | . 27 0.434613 | 0.428611 | 0.451324 | 0.452921 | 0.639785 | 0.639764 | 0.439711 | 0.440177 | 7 | LSTM | 5 | 3 | . 28 0.434162 | 0.428099 | 0.452436 | 0.453568 | 0.641190 | 0.640821 | 0.442947 | 0.443066 | 8 | LSTM | 5 | 3 | . 29 0.434577 | 0.428493 | 0.453809 | 0.455117 | 0.643228 | 0.642921 | 0.443746 | 0.443928 | 9 | LSTM | 5 | 3 | . 30 0.435557 | 0.429423 | 0.457134 | 0.458292 | 0.646171 | 0.645533 | 0.444971 | 0.444904 | 10 | LSTM | 5 | 3 | . 31 0.428895 | 0.422991 | 0.436248 | 0.439141 | 0.626643 | 0.627428 | 0.416025 | 0.417477 | 1 | Simple | 5 | 3 | . 32 0.428810 | 0.422773 | 0.440609 | 0.441787 | 0.630732 | 0.630879 | 0.431680 | 0.431837 | 2 | Simple | 5 | 3 | . 33 0.431324 | 0.425110 | 0.450724 | 0.450951 | 0.639010 | 0.638336 | 0.447674 | 0.447127 | 3 | Simple | 5 | 3 | . 34 0.434422 | 0.428246 | 0.448642 | 0.450481 | 0.639347 | 0.638959 | 0.428653 | 0.429060 | 4 | Simple | 5 | 3 | . 35 0.432307 | 0.425841 | 0.457646 | 0.457155 | 0.645373 | 0.643587 | 0.453725 | 0.452403 | 5 | Simple | 5 | 3 | . 36 0.434807 | 0.428338 | 0.453591 | 0.452833 | 0.644805 | 0.642787 | 0.451708 | 0.450328 | 6 | Simple | 5 | 3 | . 37 0.438852 | 0.432030 | 0.470541 | 0.468397 | 0.659058 | 0.655686 | 0.465539 | 0.462539 | 7 | Simple | 5 | 3 | . 38 0.438236 | 0.431633 | 0.464394 | 0.463712 | 0.654992 | 0.652658 | 0.455539 | 0.453898 | 8 | Simple | 5 | 3 | . 39 0.440875 | 0.434093 | 0.468340 | 0.467103 | 0.658120 | 0.655249 | 0.459234 | 0.456988 | 9 | Simple | 5 | 3 | . 40 0.441212 | 0.434257 | 0.476319 | 0.473885 | 0.664433 | 0.660911 | 0.471451 | 0.468173 | 10 | Simple | 5 | 3 | . 41 0.427431 | 0.421428 | 0.437273 | 0.439268 | 0.626936 | 0.627383 | 0.426847 | 0.427606 | 1 | LSTM | 8 | 3 | . 42 0.428426 | 0.422414 | 0.441274 | 0.442826 | 0.630513 | 0.630709 | 0.434591 | 0.435120 | 2 | LSTM | 8 | 3 | . 43 0.431404 | 0.425487 | 0.444315 | 0.446443 | 0.635047 | 0.635598 | 0.436086 | 0.437079 | 3 | LSTM | 8 | 3 | . 44 0.430015 | 0.423959 | 0.446179 | 0.447668 | 0.635884 | 0.635908 | 0.441845 | 0.442506 | 4 | LSTM | 8 | 3 | . Train shape: (83399, 5, 3) Test shape: (10292, 5, 3) Train shape: (83399, 5, 3) Test shape: (10292, 5, 3) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 5, 3)] 0 [] input_2 (InputLayer) [(None, 5, 3)] 0 [] lstm (LSTM) (None, 5, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 5, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 500) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 500) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1008) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 504500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 705,043 Trainable params: 705,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 23s 103ms/step - loss: 1.0756 - accuracy: 0.4240 - auc: 0.5854 - f1_score: 0.4185 - val_loss: 1.0644 - val_accuracy: 0.4241 - val_auc: 0.6053 - val_f1_score: 0.3923 Epoch 2/50 188/188 [==============================] - 18s 93ms/step - loss: 1.0579 - accuracy: 0.4367 - auc: 0.6178 - f1_score: 0.4211 - val_loss: 1.0549 - val_accuracy: 0.4306 - val_auc: 0.6208 - val_f1_score: 0.4153 Epoch 3/50 188/188 [==============================] - 17s 93ms/step - loss: 1.0497 - accuracy: 0.4372 - auc: 0.6263 - f1_score: 0.4245 - val_loss: 1.0518 - val_accuracy: 0.4350 - val_auc: 0.6233 - val_f1_score: 0.4197 Epoch 4/50 188/188 [==============================] - 18s 96ms/step - loss: 1.0475 - accuracy: 0.4397 - auc: 0.6287 - f1_score: 0.4268 - val_loss: 1.0520 - val_accuracy: 0.4348 - val_auc: 0.6239 - val_f1_score: 0.4243 Epoch 5/50 188/188 [==============================] - 17s 93ms/step - loss: 1.0461 - accuracy: 0.4416 - auc: 0.6305 - f1_score: 0.4322 - val_loss: 1.0513 - val_accuracy: 0.4312 - val_auc: 0.6245 - val_f1_score: 0.4228 Epoch 6/50 188/188 [==============================] - 17s 92ms/step - loss: 1.0452 - accuracy: 0.4446 - auc: 0.6322 - f1_score: 0.4365 - val_loss: 1.0517 - val_accuracy: 0.4343 - val_auc: 0.6246 - val_f1_score: 0.4266 Epoch 7/50 188/188 [==============================] - 17s 93ms/step - loss: 1.0446 - accuracy: 0.4444 - auc: 0.6327 - f1_score: 0.4353 - val_loss: 1.0516 - val_accuracy: 0.4337 - val_auc: 0.6241 - val_f1_score: 0.4282 Epoch 8/50 188/188 [==============================] - 17s 92ms/step - loss: 1.0438 - accuracy: 0.4456 - auc: 0.6345 - f1_score: 0.4375 - val_loss: 1.0513 - val_accuracy: 0.4327 - val_auc: 0.6252 - val_f1_score: 0.4260 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . 26 0.431356 | 0.425425 | 0.445732 | 0.447746 | 0.636244 | 0.636658 | 0.438326 | 0.439369 | 6 | LSTM | 5 | 3 | . 27 0.434613 | 0.428611 | 0.451324 | 0.452921 | 0.639785 | 0.639764 | 0.439711 | 0.440177 | 7 | LSTM | 5 | 3 | . 28 0.434162 | 0.428099 | 0.452436 | 0.453568 | 0.641190 | 0.640821 | 0.442947 | 0.443066 | 8 | LSTM | 5 | 3 | . 29 0.434577 | 0.428493 | 0.453809 | 0.455117 | 0.643228 | 0.642921 | 0.443746 | 0.443928 | 9 | LSTM | 5 | 3 | . 30 0.435557 | 0.429423 | 0.457134 | 0.458292 | 0.646171 | 0.645533 | 0.444971 | 0.444904 | 10 | LSTM | 5 | 3 | . 31 0.428895 | 0.422991 | 0.436248 | 0.439141 | 0.626643 | 0.627428 | 0.416025 | 0.417477 | 1 | Simple | 5 | 3 | . 32 0.428810 | 0.422773 | 0.440609 | 0.441787 | 0.630732 | 0.630879 | 0.431680 | 0.431837 | 2 | Simple | 5 | 3 | . 33 0.431324 | 0.425110 | 0.450724 | 0.450951 | 0.639010 | 0.638336 | 0.447674 | 0.447127 | 3 | Simple | 5 | 3 | . 34 0.434422 | 0.428246 | 0.448642 | 0.450481 | 0.639347 | 0.638959 | 0.428653 | 0.429060 | 4 | Simple | 5 | 3 | . 35 0.432307 | 0.425841 | 0.457646 | 0.457155 | 0.645373 | 0.643587 | 0.453725 | 0.452403 | 5 | Simple | 5 | 3 | . 36 0.434807 | 0.428338 | 0.453591 | 0.452833 | 0.644805 | 0.642787 | 0.451708 | 0.450328 | 6 | Simple | 5 | 3 | . 37 0.438852 | 0.432030 | 0.470541 | 0.468397 | 0.659058 | 0.655686 | 0.465539 | 0.462539 | 7 | Simple | 5 | 3 | . 38 0.438236 | 0.431633 | 0.464394 | 0.463712 | 0.654992 | 0.652658 | 0.455539 | 0.453898 | 8 | Simple | 5 | 3 | . 39 0.440875 | 0.434093 | 0.468340 | 0.467103 | 0.658120 | 0.655249 | 0.459234 | 0.456988 | 9 | Simple | 5 | 3 | . 40 0.441212 | 0.434257 | 0.476319 | 0.473885 | 0.664433 | 0.660911 | 0.471451 | 0.468173 | 10 | Simple | 5 | 3 | . 41 0.427431 | 0.421428 | 0.437273 | 0.439268 | 0.626936 | 0.627383 | 0.426847 | 0.427606 | 1 | LSTM | 8 | 3 | . 42 0.428426 | 0.422414 | 0.441274 | 0.442826 | 0.630513 | 0.630709 | 0.434591 | 0.435120 | 2 | LSTM | 8 | 3 | . 43 0.431404 | 0.425487 | 0.444315 | 0.446443 | 0.635047 | 0.635598 | 0.436086 | 0.437079 | 3 | LSTM | 8 | 3 | . 44 0.430015 | 0.423959 | 0.446179 | 0.447668 | 0.635884 | 0.635908 | 0.441845 | 0.442506 | 4 | LSTM | 8 | 3 | . 45 0.432404 | 0.426394 | 0.446887 | 0.448648 | 0.637872 | 0.637953 | 0.439653 | 0.440383 | 5 | LSTM | 8 | 3 | . Train shape: (83399, 6, 3) Test shape: (10292, 6, 3) Train shape: (83399, 6, 3) Test shape: (10292, 6, 3) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 6, 3)] 0 [] input_2 (InputLayer) [(None, 6, 3)] 0 [] lstm (LSTM) (None, 6, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 6, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 600) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 600) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1208) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 604500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 805,043 Trainable params: 805,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 25s 110ms/step - loss: 1.0715 - accuracy: 0.4131 - auc: 0.5951 - f1_score: 0.4254 - val_loss: 1.0549 - val_accuracy: 0.4320 - val_auc: 0.6208 - val_f1_score: 0.3806 Epoch 2/50 188/188 [==============================] - 20s 105ms/step - loss: 1.0504 - accuracy: 0.4362 - auc: 0.6253 - f1_score: 0.4152 - val_loss: 1.0527 - val_accuracy: 0.4343 - val_auc: 0.6231 - val_f1_score: 0.4026 Epoch 3/50 188/188 [==============================] - 20s 105ms/step - loss: 1.0475 - accuracy: 0.4411 - auc: 0.6291 - f1_score: 0.4290 - val_loss: 1.0519 - val_accuracy: 0.4300 - val_auc: 0.6243 - val_f1_score: 0.4207 Epoch 4/50 188/188 [==============================] - 21s 114ms/step - loss: 1.0459 - accuracy: 0.4431 - auc: 0.6317 - f1_score: 0.4352 - val_loss: 1.0516 - val_accuracy: 0.4294 - val_auc: 0.6248 - val_f1_score: 0.4162 Epoch 5/50 188/188 [==============================] - 21s 110ms/step - loss: 1.0449 - accuracy: 0.4459 - auc: 0.6332 - f1_score: 0.4381 - val_loss: 1.0522 - val_accuracy: 0.4300 - val_auc: 0.6240 - val_f1_score: 0.4136 Epoch 6/50 188/188 [==============================] - 22s 116ms/step - loss: 1.0442 - accuracy: 0.4461 - auc: 0.6341 - f1_score: 0.4378 - val_loss: 1.0525 - val_accuracy: 0.4291 - val_auc: 0.6234 - val_f1_score: 0.4108 Epoch 7/50 188/188 [==============================] - 23s 120ms/step - loss: 1.0435 - accuracy: 0.4460 - auc: 0.6352 - f1_score: 0.4380 - val_loss: 1.0519 - val_accuracy: 0.4302 - val_auc: 0.6247 - val_f1_score: 0.4180 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . 26 0.431356 | 0.425425 | 0.445732 | 0.447746 | 0.636244 | 0.636658 | 0.438326 | 0.439369 | 6 | LSTM | 5 | 3 | . 27 0.434613 | 0.428611 | 0.451324 | 0.452921 | 0.639785 | 0.639764 | 0.439711 | 0.440177 | 7 | LSTM | 5 | 3 | . 28 0.434162 | 0.428099 | 0.452436 | 0.453568 | 0.641190 | 0.640821 | 0.442947 | 0.443066 | 8 | LSTM | 5 | 3 | . 29 0.434577 | 0.428493 | 0.453809 | 0.455117 | 0.643228 | 0.642921 | 0.443746 | 0.443928 | 9 | LSTM | 5 | 3 | . 30 0.435557 | 0.429423 | 0.457134 | 0.458292 | 0.646171 | 0.645533 | 0.444971 | 0.444904 | 10 | LSTM | 5 | 3 | . 31 0.428895 | 0.422991 | 0.436248 | 0.439141 | 0.626643 | 0.627428 | 0.416025 | 0.417477 | 1 | Simple | 5 | 3 | . 32 0.428810 | 0.422773 | 0.440609 | 0.441787 | 0.630732 | 0.630879 | 0.431680 | 0.431837 | 2 | Simple | 5 | 3 | . 33 0.431324 | 0.425110 | 0.450724 | 0.450951 | 0.639010 | 0.638336 | 0.447674 | 0.447127 | 3 | Simple | 5 | 3 | . 34 0.434422 | 0.428246 | 0.448642 | 0.450481 | 0.639347 | 0.638959 | 0.428653 | 0.429060 | 4 | Simple | 5 | 3 | . 35 0.432307 | 0.425841 | 0.457646 | 0.457155 | 0.645373 | 0.643587 | 0.453725 | 0.452403 | 5 | Simple | 5 | 3 | . 36 0.434807 | 0.428338 | 0.453591 | 0.452833 | 0.644805 | 0.642787 | 0.451708 | 0.450328 | 6 | Simple | 5 | 3 | . 37 0.438852 | 0.432030 | 0.470541 | 0.468397 | 0.659058 | 0.655686 | 0.465539 | 0.462539 | 7 | Simple | 5 | 3 | . 38 0.438236 | 0.431633 | 0.464394 | 0.463712 | 0.654992 | 0.652658 | 0.455539 | 0.453898 | 8 | Simple | 5 | 3 | . 39 0.440875 | 0.434093 | 0.468340 | 0.467103 | 0.658120 | 0.655249 | 0.459234 | 0.456988 | 9 | Simple | 5 | 3 | . 40 0.441212 | 0.434257 | 0.476319 | 0.473885 | 0.664433 | 0.660911 | 0.471451 | 0.468173 | 10 | Simple | 5 | 3 | . 41 0.427431 | 0.421428 | 0.437273 | 0.439268 | 0.626936 | 0.627383 | 0.426847 | 0.427606 | 1 | LSTM | 8 | 3 | . 42 0.428426 | 0.422414 | 0.441274 | 0.442826 | 0.630513 | 0.630709 | 0.434591 | 0.435120 | 2 | LSTM | 8 | 3 | . 43 0.431404 | 0.425487 | 0.444315 | 0.446443 | 0.635047 | 0.635598 | 0.436086 | 0.437079 | 3 | LSTM | 8 | 3 | . 44 0.430015 | 0.423959 | 0.446179 | 0.447668 | 0.635884 | 0.635908 | 0.441845 | 0.442506 | 4 | LSTM | 8 | 3 | . 45 0.432404 | 0.426394 | 0.446887 | 0.448648 | 0.637872 | 0.637953 | 0.439653 | 0.440383 | 5 | LSTM | 8 | 3 | . 46 0.432681 | 0.426723 | 0.453308 | 0.454646 | 0.640547 | 0.640675 | 0.441138 | 0.441219 | 6 | LSTM | 8 | 3 | . Train shape: (83399, 7, 3) Test shape: (10292, 7, 3) Train shape: (83399, 7, 3) Test shape: (10292, 7, 3) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 7, 3)] 0 [] input_2 (InputLayer) [(None, 7, 3)] 0 [] lstm (LSTM) (None, 7, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 7, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 700) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 700) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1408) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 704500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 905,043 Trainable params: 905,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 28s 127ms/step - loss: 1.0660 - accuracy: 0.4207 - auc: 0.6031 - f1_score: 0.4288 - val_loss: 1.0537 - val_accuracy: 0.4294 - val_auc: 0.6214 - val_f1_score: 0.3940 Epoch 2/50 188/188 [==============================] - 22s 118ms/step - loss: 1.0489 - accuracy: 0.4393 - auc: 0.6274 - f1_score: 0.4213 - val_loss: 1.0523 - val_accuracy: 0.4306 - val_auc: 0.6230 - val_f1_score: 0.4107 Epoch 3/50 188/188 [==============================] - 22s 118ms/step - loss: 1.0464 - accuracy: 0.4439 - auc: 0.6311 - f1_score: 0.4295 - val_loss: 1.0516 - val_accuracy: 0.4301 - val_auc: 0.6231 - val_f1_score: 0.4138 Epoch 4/50 188/188 [==============================] - 21s 112ms/step - loss: 1.0450 - accuracy: 0.4450 - auc: 0.6327 - f1_score: 0.4332 - val_loss: 1.0517 - val_accuracy: 0.4335 - val_auc: 0.6240 - val_f1_score: 0.4144 Epoch 5/50 188/188 [==============================] - 22s 117ms/step - loss: 1.0435 - accuracy: 0.4460 - auc: 0.6352 - f1_score: 0.4360 - val_loss: 1.0522 - val_accuracy: 0.4287 - val_auc: 0.6233 - val_f1_score: 0.4126 Epoch 6/50 188/188 [==============================] - 22s 117ms/step - loss: 1.0428 - accuracy: 0.4490 - auc: 0.6369 - f1_score: 0.4378 - val_loss: 1.0520 - val_accuracy: 0.4332 - val_auc: 0.6236 - val_f1_score: 0.4216 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . 26 0.431356 | 0.425425 | 0.445732 | 0.447746 | 0.636244 | 0.636658 | 0.438326 | 0.439369 | 6 | LSTM | 5 | 3 | . 27 0.434613 | 0.428611 | 0.451324 | 0.452921 | 0.639785 | 0.639764 | 0.439711 | 0.440177 | 7 | LSTM | 5 | 3 | . 28 0.434162 | 0.428099 | 0.452436 | 0.453568 | 0.641190 | 0.640821 | 0.442947 | 0.443066 | 8 | LSTM | 5 | 3 | . 29 0.434577 | 0.428493 | 0.453809 | 0.455117 | 0.643228 | 0.642921 | 0.443746 | 0.443928 | 9 | LSTM | 5 | 3 | . 30 0.435557 | 0.429423 | 0.457134 | 0.458292 | 0.646171 | 0.645533 | 0.444971 | 0.444904 | 10 | LSTM | 5 | 3 | . 31 0.428895 | 0.422991 | 0.436248 | 0.439141 | 0.626643 | 0.627428 | 0.416025 | 0.417477 | 1 | Simple | 5 | 3 | . 32 0.428810 | 0.422773 | 0.440609 | 0.441787 | 0.630732 | 0.630879 | 0.431680 | 0.431837 | 2 | Simple | 5 | 3 | . 33 0.431324 | 0.425110 | 0.450724 | 0.450951 | 0.639010 | 0.638336 | 0.447674 | 0.447127 | 3 | Simple | 5 | 3 | . 34 0.434422 | 0.428246 | 0.448642 | 0.450481 | 0.639347 | 0.638959 | 0.428653 | 0.429060 | 4 | Simple | 5 | 3 | . 35 0.432307 | 0.425841 | 0.457646 | 0.457155 | 0.645373 | 0.643587 | 0.453725 | 0.452403 | 5 | Simple | 5 | 3 | . 36 0.434807 | 0.428338 | 0.453591 | 0.452833 | 0.644805 | 0.642787 | 0.451708 | 0.450328 | 6 | Simple | 5 | 3 | . 37 0.438852 | 0.432030 | 0.470541 | 0.468397 | 0.659058 | 0.655686 | 0.465539 | 0.462539 | 7 | Simple | 5 | 3 | . 38 0.438236 | 0.431633 | 0.464394 | 0.463712 | 0.654992 | 0.652658 | 0.455539 | 0.453898 | 8 | Simple | 5 | 3 | . 39 0.440875 | 0.434093 | 0.468340 | 0.467103 | 0.658120 | 0.655249 | 0.459234 | 0.456988 | 9 | Simple | 5 | 3 | . 40 0.441212 | 0.434257 | 0.476319 | 0.473885 | 0.664433 | 0.660911 | 0.471451 | 0.468173 | 10 | Simple | 5 | 3 | . 41 0.427431 | 0.421428 | 0.437273 | 0.439268 | 0.626936 | 0.627383 | 0.426847 | 0.427606 | 1 | LSTM | 8 | 3 | . 42 0.428426 | 0.422414 | 0.441274 | 0.442826 | 0.630513 | 0.630709 | 0.434591 | 0.435120 | 2 | LSTM | 8 | 3 | . 43 0.431404 | 0.425487 | 0.444315 | 0.446443 | 0.635047 | 0.635598 | 0.436086 | 0.437079 | 3 | LSTM | 8 | 3 | . 44 0.430015 | 0.423959 | 0.446179 | 0.447668 | 0.635884 | 0.635908 | 0.441845 | 0.442506 | 4 | LSTM | 8 | 3 | . 45 0.432404 | 0.426394 | 0.446887 | 0.448648 | 0.637872 | 0.637953 | 0.439653 | 0.440383 | 5 | LSTM | 8 | 3 | . 46 0.432681 | 0.426723 | 0.453308 | 0.454646 | 0.640547 | 0.640675 | 0.441138 | 0.441219 | 6 | LSTM | 8 | 3 | . 47 0.433996 | 0.428014 | 0.451814 | 0.453754 | 0.642006 | 0.642063 | 0.440296 | 0.441086 | 7 | LSTM | 8 | 3 | . Train shape: (83399, 8, 3) Test shape: (10292, 8, 3) Train shape: (83399, 8, 3) Test shape: (10292, 8, 3) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 8, 3)] 0 [] input_2 (InputLayer) [(None, 8, 3)] 0 [] lstm (LSTM) (None, 8, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 8, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 800) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 800) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1608) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 804500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,005,043 Trainable params: 1,005,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 32s 142ms/step - loss: 1.0656 - accuracy: 0.4225 - auc: 0.6037 - f1_score: 0.4233 - val_loss: 1.0530 - val_accuracy: 0.4308 - val_auc: 0.6216 - val_f1_score: 0.4169 Epoch 2/50 188/188 [==============================] - 26s 138ms/step - loss: 1.0479 - accuracy: 0.4410 - auc: 0.6283 - f1_score: 0.4300 - val_loss: 1.0517 - val_accuracy: 0.4336 - val_auc: 0.6237 - val_f1_score: 0.4234 Epoch 3/50 188/188 [==============================] - 26s 137ms/step - loss: 1.0456 - accuracy: 0.4430 - auc: 0.6314 - f1_score: 0.4358 - val_loss: 1.0516 - val_accuracy: 0.4323 - val_auc: 0.6244 - val_f1_score: 0.4240 Epoch 4/50 188/188 [==============================] - 27s 145ms/step - loss: 1.0445 - accuracy: 0.4449 - auc: 0.6334 - f1_score: 0.4388 - val_loss: 1.0514 - val_accuracy: 0.4329 - val_auc: 0.6248 - val_f1_score: 0.4189 Epoch 5/50 188/188 [==============================] - 25s 132ms/step - loss: 1.0436 - accuracy: 0.4489 - auc: 0.6352 - f1_score: 0.4412 - val_loss: 1.0514 - val_accuracy: 0.4360 - val_auc: 0.6247 - val_f1_score: 0.4293 Epoch 6/50 188/188 [==============================] - 26s 136ms/step - loss: 1.0429 - accuracy: 0.4475 - auc: 0.6360 - f1_score: 0.4419 - val_loss: 1.0514 - val_accuracy: 0.4312 - val_auc: 0.6244 - val_f1_score: 0.4207 Epoch 7/50 188/188 [==============================] - 25s 135ms/step - loss: 1.0411 - accuracy: 0.4504 - auc: 0.6381 - f1_score: 0.4429 - val_loss: 1.0520 - val_accuracy: 0.4337 - val_auc: 0.6237 - val_f1_score: 0.4302 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . 26 0.431356 | 0.425425 | 0.445732 | 0.447746 | 0.636244 | 0.636658 | 0.438326 | 0.439369 | 6 | LSTM | 5 | 3 | . 27 0.434613 | 0.428611 | 0.451324 | 0.452921 | 0.639785 | 0.639764 | 0.439711 | 0.440177 | 7 | LSTM | 5 | 3 | . 28 0.434162 | 0.428099 | 0.452436 | 0.453568 | 0.641190 | 0.640821 | 0.442947 | 0.443066 | 8 | LSTM | 5 | 3 | . 29 0.434577 | 0.428493 | 0.453809 | 0.455117 | 0.643228 | 0.642921 | 0.443746 | 0.443928 | 9 | LSTM | 5 | 3 | . 30 0.435557 | 0.429423 | 0.457134 | 0.458292 | 0.646171 | 0.645533 | 0.444971 | 0.444904 | 10 | LSTM | 5 | 3 | . 31 0.428895 | 0.422991 | 0.436248 | 0.439141 | 0.626643 | 0.627428 | 0.416025 | 0.417477 | 1 | Simple | 5 | 3 | . 32 0.428810 | 0.422773 | 0.440609 | 0.441787 | 0.630732 | 0.630879 | 0.431680 | 0.431837 | 2 | Simple | 5 | 3 | . 33 0.431324 | 0.425110 | 0.450724 | 0.450951 | 0.639010 | 0.638336 | 0.447674 | 0.447127 | 3 | Simple | 5 | 3 | . 34 0.434422 | 0.428246 | 0.448642 | 0.450481 | 0.639347 | 0.638959 | 0.428653 | 0.429060 | 4 | Simple | 5 | 3 | . 35 0.432307 | 0.425841 | 0.457646 | 0.457155 | 0.645373 | 0.643587 | 0.453725 | 0.452403 | 5 | Simple | 5 | 3 | . 36 0.434807 | 0.428338 | 0.453591 | 0.452833 | 0.644805 | 0.642787 | 0.451708 | 0.450328 | 6 | Simple | 5 | 3 | . 37 0.438852 | 0.432030 | 0.470541 | 0.468397 | 0.659058 | 0.655686 | 0.465539 | 0.462539 | 7 | Simple | 5 | 3 | . 38 0.438236 | 0.431633 | 0.464394 | 0.463712 | 0.654992 | 0.652658 | 0.455539 | 0.453898 | 8 | Simple | 5 | 3 | . 39 0.440875 | 0.434093 | 0.468340 | 0.467103 | 0.658120 | 0.655249 | 0.459234 | 0.456988 | 9 | Simple | 5 | 3 | . 40 0.441212 | 0.434257 | 0.476319 | 0.473885 | 0.664433 | 0.660911 | 0.471451 | 0.468173 | 10 | Simple | 5 | 3 | . 41 0.427431 | 0.421428 | 0.437273 | 0.439268 | 0.626936 | 0.627383 | 0.426847 | 0.427606 | 1 | LSTM | 8 | 3 | . 42 0.428426 | 0.422414 | 0.441274 | 0.442826 | 0.630513 | 0.630709 | 0.434591 | 0.435120 | 2 | LSTM | 8 | 3 | . 43 0.431404 | 0.425487 | 0.444315 | 0.446443 | 0.635047 | 0.635598 | 0.436086 | 0.437079 | 3 | LSTM | 8 | 3 | . 44 0.430015 | 0.423959 | 0.446179 | 0.447668 | 0.635884 | 0.635908 | 0.441845 | 0.442506 | 4 | LSTM | 8 | 3 | . 45 0.432404 | 0.426394 | 0.446887 | 0.448648 | 0.637872 | 0.637953 | 0.439653 | 0.440383 | 5 | LSTM | 8 | 3 | . 46 0.432681 | 0.426723 | 0.453308 | 0.454646 | 0.640547 | 0.640675 | 0.441138 | 0.441219 | 6 | LSTM | 8 | 3 | . 47 0.433996 | 0.428014 | 0.451814 | 0.453754 | 0.642006 | 0.642063 | 0.440296 | 0.441086 | 7 | LSTM | 8 | 3 | . 48 0.433360 | 0.427190 | 0.454387 | 0.454970 | 0.643039 | 0.642296 | 0.450757 | 0.450540 | 8 | LSTM | 8 | 3 | . Train shape: (83399, 9, 3) Test shape: (10292, 9, 3) Train shape: (83399, 9, 3) Test shape: (10292, 9, 3) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 9, 3)] 0 [] input_2 (InputLayer) [(None, 9, 3)] 0 [] lstm (LSTM) (None, 9, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 9, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 900) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 900) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1808) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 904500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,105,043 Trainable params: 1,105,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 33s 152ms/step - loss: 1.0775 - accuracy: 0.3823 - auc: 0.5835 - f1_score: 0.4241 - val_loss: 1.0633 - val_accuracy: 0.4308 - val_auc: 0.6108 - val_f1_score: 0.4072 Epoch 2/50 188/188 [==============================] - 26s 137ms/step - loss: 1.0545 - accuracy: 0.4320 - auc: 0.6196 - f1_score: 0.4118 - val_loss: 1.0548 - val_accuracy: 0.4275 - val_auc: 0.6191 - val_f1_score: 0.3902 Epoch 3/50 188/188 [==============================] - 27s 142ms/step - loss: 1.0489 - accuracy: 0.4381 - auc: 0.6275 - f1_score: 0.4173 - val_loss: 1.0534 - val_accuracy: 0.4329 - val_auc: 0.6214 - val_f1_score: 0.4088 Epoch 4/50 188/188 [==============================] - 27s 145ms/step - loss: 1.0459 - accuracy: 0.4418 - auc: 0.6311 - f1_score: 0.4295 - val_loss: 1.0529 - val_accuracy: 0.4313 - val_auc: 0.6226 - val_f1_score: 0.4072 Epoch 5/50 188/188 [==============================] - 28s 150ms/step - loss: 1.0459 - accuracy: 0.4438 - auc: 0.6318 - f1_score: 0.4309 - val_loss: 1.0532 - val_accuracy: 0.4301 - val_auc: 0.6222 - val_f1_score: 0.4127 Epoch 6/50 188/188 [==============================] - 31s 163ms/step - loss: 1.0433 - accuracy: 0.4477 - auc: 0.6354 - f1_score: 0.4372 - val_loss: 1.0530 - val_accuracy: 0.4303 - val_auc: 0.6225 - val_f1_score: 0.4121 Epoch 7/50 188/188 [==============================] - 31s 163ms/step - loss: 1.0421 - accuracy: 0.4490 - auc: 0.6369 - f1_score: 0.4397 - val_loss: 1.0528 - val_accuracy: 0.4326 - val_auc: 0.6228 - val_f1_score: 0.4147 Epoch 8/50 188/188 [==============================] - 26s 138ms/step - loss: 1.0408 - accuracy: 0.4509 - auc: 0.6392 - f1_score: 0.4429 - val_loss: 1.0528 - val_accuracy: 0.4307 - val_auc: 0.6223 - val_f1_score: 0.4141 Epoch 9/50 188/188 [==============================] - 25s 134ms/step - loss: 1.0395 - accuracy: 0.4548 - auc: 0.6412 - f1_score: 0.4471 - val_loss: 1.0540 - val_accuracy: 0.4313 - val_auc: 0.6220 - val_f1_score: 0.4208 Epoch 10/50 188/188 [==============================] - 25s 135ms/step - loss: 1.0384 - accuracy: 0.4542 - auc: 0.6425 - f1_score: 0.4469 - val_loss: 1.0542 - val_accuracy: 0.4283 - val_auc: 0.6214 - val_f1_score: 0.4092 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . 26 0.431356 | 0.425425 | 0.445732 | 0.447746 | 0.636244 | 0.636658 | 0.438326 | 0.439369 | 6 | LSTM | 5 | 3 | . 27 0.434613 | 0.428611 | 0.451324 | 0.452921 | 0.639785 | 0.639764 | 0.439711 | 0.440177 | 7 | LSTM | 5 | 3 | . 28 0.434162 | 0.428099 | 0.452436 | 0.453568 | 0.641190 | 0.640821 | 0.442947 | 0.443066 | 8 | LSTM | 5 | 3 | . 29 0.434577 | 0.428493 | 0.453809 | 0.455117 | 0.643228 | 0.642921 | 0.443746 | 0.443928 | 9 | LSTM | 5 | 3 | . 30 0.435557 | 0.429423 | 0.457134 | 0.458292 | 0.646171 | 0.645533 | 0.444971 | 0.444904 | 10 | LSTM | 5 | 3 | . 31 0.428895 | 0.422991 | 0.436248 | 0.439141 | 0.626643 | 0.627428 | 0.416025 | 0.417477 | 1 | Simple | 5 | 3 | . 32 0.428810 | 0.422773 | 0.440609 | 0.441787 | 0.630732 | 0.630879 | 0.431680 | 0.431837 | 2 | Simple | 5 | 3 | . 33 0.431324 | 0.425110 | 0.450724 | 0.450951 | 0.639010 | 0.638336 | 0.447674 | 0.447127 | 3 | Simple | 5 | 3 | . 34 0.434422 | 0.428246 | 0.448642 | 0.450481 | 0.639347 | 0.638959 | 0.428653 | 0.429060 | 4 | Simple | 5 | 3 | . 35 0.432307 | 0.425841 | 0.457646 | 0.457155 | 0.645373 | 0.643587 | 0.453725 | 0.452403 | 5 | Simple | 5 | 3 | . 36 0.434807 | 0.428338 | 0.453591 | 0.452833 | 0.644805 | 0.642787 | 0.451708 | 0.450328 | 6 | Simple | 5 | 3 | . 37 0.438852 | 0.432030 | 0.470541 | 0.468397 | 0.659058 | 0.655686 | 0.465539 | 0.462539 | 7 | Simple | 5 | 3 | . 38 0.438236 | 0.431633 | 0.464394 | 0.463712 | 0.654992 | 0.652658 | 0.455539 | 0.453898 | 8 | Simple | 5 | 3 | . 39 0.440875 | 0.434093 | 0.468340 | 0.467103 | 0.658120 | 0.655249 | 0.459234 | 0.456988 | 9 | Simple | 5 | 3 | . 40 0.441212 | 0.434257 | 0.476319 | 0.473885 | 0.664433 | 0.660911 | 0.471451 | 0.468173 | 10 | Simple | 5 | 3 | . 41 0.427431 | 0.421428 | 0.437273 | 0.439268 | 0.626936 | 0.627383 | 0.426847 | 0.427606 | 1 | LSTM | 8 | 3 | . 42 0.428426 | 0.422414 | 0.441274 | 0.442826 | 0.630513 | 0.630709 | 0.434591 | 0.435120 | 2 | LSTM | 8 | 3 | . 43 0.431404 | 0.425487 | 0.444315 | 0.446443 | 0.635047 | 0.635598 | 0.436086 | 0.437079 | 3 | LSTM | 8 | 3 | . 44 0.430015 | 0.423959 | 0.446179 | 0.447668 | 0.635884 | 0.635908 | 0.441845 | 0.442506 | 4 | LSTM | 8 | 3 | . 45 0.432404 | 0.426394 | 0.446887 | 0.448648 | 0.637872 | 0.637953 | 0.439653 | 0.440383 | 5 | LSTM | 8 | 3 | . 46 0.432681 | 0.426723 | 0.453308 | 0.454646 | 0.640547 | 0.640675 | 0.441138 | 0.441219 | 6 | LSTM | 8 | 3 | . 47 0.433996 | 0.428014 | 0.451814 | 0.453754 | 0.642006 | 0.642063 | 0.440296 | 0.441086 | 7 | LSTM | 8 | 3 | . 48 0.433360 | 0.427190 | 0.454387 | 0.454970 | 0.643039 | 0.642296 | 0.450757 | 0.450540 | 8 | LSTM | 8 | 3 | . 49 0.436816 | 0.430666 | 0.460371 | 0.461428 | 0.648606 | 0.647873 | 0.442060 | 0.441691 | 9 | LSTM | 8 | 3 | . Train shape: (83399, 10, 3) Test shape: (10292, 10, 3) Train shape: (83399, 10, 3) Test shape: (10292, 10, 3) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 3)] 0 [] input_2 (InputLayer) [(None, 10, 3)] 0 [] lstm (LSTM) (None, 10, 100) 41200 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 10, 100) 41200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 2008) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1004500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,205,043 Trainable params: 1,205,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 34s 154ms/step - loss: 1.0668 - accuracy: 0.4173 - auc: 0.6032 - f1_score: 0.4118 - val_loss: 1.0564 - val_accuracy: 0.4263 - val_auc: 0.6179 - val_f1_score: 0.3707 Epoch 2/50 188/188 [==============================] - 28s 150ms/step - loss: 1.0493 - accuracy: 0.4331 - auc: 0.6255 - f1_score: 0.3934 - val_loss: 1.0529 - val_accuracy: 0.4245 - val_auc: 0.6207 - val_f1_score: 0.3833 Epoch 3/50 188/188 [==============================] - 32s 172ms/step - loss: 1.0462 - accuracy: 0.4402 - auc: 0.6308 - f1_score: 0.4166 - val_loss: 1.0522 - val_accuracy: 0.4307 - val_auc: 0.6227 - val_f1_score: 0.4079 Epoch 4/50 188/188 [==============================] - 33s 173ms/step - loss: 1.0446 - accuracy: 0.4451 - auc: 0.6334 - f1_score: 0.4283 - val_loss: 1.0528 - val_accuracy: 0.4308 - val_auc: 0.6228 - val_f1_score: 0.4132 Epoch 5/50 188/188 [==============================] - 34s 182ms/step - loss: 1.0428 - accuracy: 0.4464 - auc: 0.6359 - f1_score: 0.4338 - val_loss: 1.0529 - val_accuracy: 0.4311 - val_auc: 0.6225 - val_f1_score: 0.4199 Epoch 6/50 188/188 [==============================] - 34s 178ms/step - loss: 1.0421 - accuracy: 0.4491 - auc: 0.6374 - f1_score: 0.4391 - val_loss: 1.0528 - val_accuracy: 0.4324 - val_auc: 0.6216 - val_f1_score: 0.4223 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . 6 0.420874 | 0.414307 | 0.425969 | 0.428311 | 0.612525 | 0.612039 | 0.401707 | 0.402642 | 6 | LSTM | 2 | 3 | . 7 0.423529 | 0.417128 | 0.431899 | 0.433721 | 0.615959 | 0.615889 | 0.416635 | 0.417222 | 7 | LSTM | 2 | 3 | . 8 0.422975 | 0.416422 | 0.433534 | 0.435172 | 0.618341 | 0.617855 | 0.415715 | 0.415966 | 8 | LSTM | 2 | 3 | . 9 0.425592 | 0.419126 | 0.435594 | 0.436612 | 0.621961 | 0.621458 | 0.423059 | 0.422832 | 9 | LSTM | 2 | 3 | . 10 0.423286 | 0.416875 | 0.434853 | 0.436573 | 0.622327 | 0.622197 | 0.421499 | 0.422001 | 10 | LSTM | 2 | 3 | . 11 0.409566 | 0.402786 | 0.391360 | 0.394488 | 0.571308 | 0.571356 | 0.361291 | 0.362827 | 1 | Simple | 2 | 3 | . 12 0.412860 | 0.406185 | 0.401803 | 0.404848 | 0.585563 | 0.585721 | 0.349418 | 0.350517 | 2 | Simple | 2 | 3 | . 13 0.414680 | 0.407978 | 0.412649 | 0.413874 | 0.595432 | 0.594923 | 0.404750 | 0.404876 | 3 | Simple | 2 | 3 | . 14 0.419501 | 0.412791 | 0.424476 | 0.425577 | 0.607537 | 0.606712 | 0.412870 | 0.412646 | 4 | Simple | 2 | 3 | . 15 0.423384 | 0.416488 | 0.437110 | 0.436828 | 0.622865 | 0.620647 | 0.422771 | 0.421295 | 5 | Simple | 2 | 3 | . 16 0.422466 | 0.415599 | 0.435093 | 0.434103 | 0.621498 | 0.619183 | 0.430489 | 0.428656 | 6 | Simple | 2 | 3 | . 17 0.425979 | 0.419065 | 0.443933 | 0.442601 | 0.629456 | 0.626906 | 0.434556 | 0.432162 | 7 | Simple | 2 | 3 | . 18 0.426935 | 0.419987 | 0.443704 | 0.443581 | 0.631292 | 0.628751 | 0.427411 | 0.426077 | 8 | Simple | 2 | 3 | . 19 0.432568 | 0.425299 | 0.457014 | 0.454431 | 0.643305 | 0.639364 | 0.450090 | 0.446546 | 9 | Simple | 2 | 3 | . 20 0.430086 | 0.423145 | 0.449296 | 0.449638 | 0.637246 | 0.634833 | 0.427514 | 0.426469 | 10 | Simple | 2 | 3 | . 21 0.428211 | 0.422287 | 0.435954 | 0.437828 | 0.625655 | 0.626347 | 0.423762 | 0.424380 | 1 | LSTM | 5 | 3 | . 22 0.429134 | 0.423162 | 0.440249 | 0.441866 | 0.629152 | 0.629532 | 0.432957 | 0.433552 | 2 | LSTM | 5 | 3 | . 23 0.431161 | 0.425275 | 0.443585 | 0.446159 | 0.632552 | 0.633345 | 0.429800 | 0.431007 | 3 | LSTM | 5 | 3 | . 24 0.430215 | 0.424288 | 0.444860 | 0.446600 | 0.633238 | 0.633691 | 0.439542 | 0.440396 | 4 | LSTM | 5 | 3 | . 25 0.431511 | 0.425465 | 0.447759 | 0.449687 | 0.637270 | 0.637300 | 0.438268 | 0.439050 | 5 | LSTM | 5 | 3 | . 26 0.431356 | 0.425425 | 0.445732 | 0.447746 | 0.636244 | 0.636658 | 0.438326 | 0.439369 | 6 | LSTM | 5 | 3 | . 27 0.434613 | 0.428611 | 0.451324 | 0.452921 | 0.639785 | 0.639764 | 0.439711 | 0.440177 | 7 | LSTM | 5 | 3 | . 28 0.434162 | 0.428099 | 0.452436 | 0.453568 | 0.641190 | 0.640821 | 0.442947 | 0.443066 | 8 | LSTM | 5 | 3 | . 29 0.434577 | 0.428493 | 0.453809 | 0.455117 | 0.643228 | 0.642921 | 0.443746 | 0.443928 | 9 | LSTM | 5 | 3 | . 30 0.435557 | 0.429423 | 0.457134 | 0.458292 | 0.646171 | 0.645533 | 0.444971 | 0.444904 | 10 | LSTM | 5 | 3 | . 31 0.428895 | 0.422991 | 0.436248 | 0.439141 | 0.626643 | 0.627428 | 0.416025 | 0.417477 | 1 | Simple | 5 | 3 | . 32 0.428810 | 0.422773 | 0.440609 | 0.441787 | 0.630732 | 0.630879 | 0.431680 | 0.431837 | 2 | Simple | 5 | 3 | . 33 0.431324 | 0.425110 | 0.450724 | 0.450951 | 0.639010 | 0.638336 | 0.447674 | 0.447127 | 3 | Simple | 5 | 3 | . 34 0.434422 | 0.428246 | 0.448642 | 0.450481 | 0.639347 | 0.638959 | 0.428653 | 0.429060 | 4 | Simple | 5 | 3 | . 35 0.432307 | 0.425841 | 0.457646 | 0.457155 | 0.645373 | 0.643587 | 0.453725 | 0.452403 | 5 | Simple | 5 | 3 | . 36 0.434807 | 0.428338 | 0.453591 | 0.452833 | 0.644805 | 0.642787 | 0.451708 | 0.450328 | 6 | Simple | 5 | 3 | . 37 0.438852 | 0.432030 | 0.470541 | 0.468397 | 0.659058 | 0.655686 | 0.465539 | 0.462539 | 7 | Simple | 5 | 3 | . 38 0.438236 | 0.431633 | 0.464394 | 0.463712 | 0.654992 | 0.652658 | 0.455539 | 0.453898 | 8 | Simple | 5 | 3 | . 39 0.440875 | 0.434093 | 0.468340 | 0.467103 | 0.658120 | 0.655249 | 0.459234 | 0.456988 | 9 | Simple | 5 | 3 | . 40 0.441212 | 0.434257 | 0.476319 | 0.473885 | 0.664433 | 0.660911 | 0.471451 | 0.468173 | 10 | Simple | 5 | 3 | . 41 0.427431 | 0.421428 | 0.437273 | 0.439268 | 0.626936 | 0.627383 | 0.426847 | 0.427606 | 1 | LSTM | 8 | 3 | . 42 0.428426 | 0.422414 | 0.441274 | 0.442826 | 0.630513 | 0.630709 | 0.434591 | 0.435120 | 2 | LSTM | 8 | 3 | . 43 0.431404 | 0.425487 | 0.444315 | 0.446443 | 0.635047 | 0.635598 | 0.436086 | 0.437079 | 3 | LSTM | 8 | 3 | . 44 0.430015 | 0.423959 | 0.446179 | 0.447668 | 0.635884 | 0.635908 | 0.441845 | 0.442506 | 4 | LSTM | 8 | 3 | . 45 0.432404 | 0.426394 | 0.446887 | 0.448648 | 0.637872 | 0.637953 | 0.439653 | 0.440383 | 5 | LSTM | 8 | 3 | . 46 0.432681 | 0.426723 | 0.453308 | 0.454646 | 0.640547 | 0.640675 | 0.441138 | 0.441219 | 6 | LSTM | 8 | 3 | . 47 0.433996 | 0.428014 | 0.451814 | 0.453754 | 0.642006 | 0.642063 | 0.440296 | 0.441086 | 7 | LSTM | 8 | 3 | . 48 0.433360 | 0.427190 | 0.454387 | 0.454970 | 0.643039 | 0.642296 | 0.450757 | 0.450540 | 8 | LSTM | 8 | 3 | . 49 0.436816 | 0.430666 | 0.460371 | 0.461428 | 0.648606 | 0.647873 | 0.442060 | 0.441691 | 9 | LSTM | 8 | 3 | . 50 0.433134 | 0.427003 | 0.453428 | 0.454529 | 0.643891 | 0.643565 | 0.442517 | 0.442524 | 10 | LSTM | 8 | 3 | . Train shape: (83399, 1, 3) Test shape: (10292, 1, 3) Train shape: (83399, 1, 3) Test shape: (10292, 1, 3) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 1, 3)] 0 [] input_2 (InputLayer) [(None, 1, 3)] 0 [] simple_rnn (SimpleRNN) (None, 1, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 1, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 100) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 100) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 208) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 104500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 243,243 Trainable params: 243,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 10s 31ms/step - loss: 1.0761 - accuracy: 0.4047 - auc: 0.5844 - f1_score: 0.4129 - val_loss: 1.0594 - val_accuracy: 0.4265 - val_auc: 0.6135 - val_f1_score: 0.3780 Epoch 2/50 188/188 [==============================] - 5s 26ms/step - loss: 1.0575 - accuracy: 0.4268 - auc: 0.6143 - f1_score: 0.3795 - val_loss: 1.0562 - val_accuracy: 0.4285 - val_auc: 0.6176 - val_f1_score: 0.3804 Epoch 3/50 188/188 [==============================] - 5s 27ms/step - loss: 1.0546 - accuracy: 0.4282 - auc: 0.6184 - f1_score: 0.3838 - val_loss: 1.0564 - val_accuracy: 0.4251 - val_auc: 0.6177 - val_f1_score: 0.3841 Epoch 4/50 188/188 [==============================] - 5s 28ms/step - loss: 1.0536 - accuracy: 0.4299 - auc: 0.6195 - f1_score: 0.4000 - val_loss: 1.0561 - val_accuracy: 0.4277 - val_auc: 0.6198 - val_f1_score: 0.3887 Epoch 5/50 188/188 [==============================] - 5s 26ms/step - loss: 1.0525 - accuracy: 0.4321 - auc: 0.6215 - f1_score: 0.4034 - val_loss: 1.0558 - val_accuracy: 0.4347 - val_auc: 0.6201 - val_f1_score: 0.4072 Epoch 6/50 188/188 [==============================] - 5s 26ms/step - loss: 1.0521 - accuracy: 0.4337 - auc: 0.6220 - f1_score: 0.4123 - val_loss: 1.0559 - val_accuracy: 0.4325 - val_auc: 0.6201 - val_f1_score: 0.4128 Epoch 7/50 188/188 [==============================] - 5s 28ms/step - loss: 1.0516 - accuracy: 0.4334 - auc: 0.6228 - f1_score: 0.4132 - val_loss: 1.0560 - val_accuracy: 0.4325 - val_auc: 0.6200 - val_f1_score: 0.4161 Epoch 8/50 188/188 [==============================] - 6s 30ms/step - loss: 1.0509 - accuracy: 0.4355 - auc: 0.6241 - f1_score: 0.4191 - val_loss: 1.0558 - val_accuracy: 0.4312 - val_auc: 0.6203 - val_f1_score: 0.4125 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 47 0.433996 | 0.428014 | 0.451814 | 0.453754 | 0.642006 | 0.642063 | 0.440296 | 0.441086 | 7 | LSTM | 8 | 3 | . 48 0.433360 | 0.427190 | 0.454387 | 0.454970 | 0.643039 | 0.642296 | 0.450757 | 0.450540 | 8 | LSTM | 8 | 3 | . 49 0.436816 | 0.430666 | 0.460371 | 0.461428 | 0.648606 | 0.647873 | 0.442060 | 0.441691 | 9 | LSTM | 8 | 3 | . 50 0.433134 | 0.427003 | 0.453428 | 0.454529 | 0.643891 | 0.643565 | 0.442517 | 0.442524 | 10 | LSTM | 8 | 3 | . 51 0.429799 | 0.423908 | 0.437546 | 0.439925 | 0.626992 | 0.627791 | 0.418663 | 0.419517 | 1 | Simple | 8 | 3 | . 51 rows × 12 columns . Train shape: (83399, 2, 3) Test shape: (10292, 2, 3) Train shape: (83399, 2, 3) Test shape: (10292, 2, 3) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 2, 3)] 0 [] input_2 (InputLayer) [(None, 2, 3)] 0 [] simple_rnn (SimpleRNN) (None, 2, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 2, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 200) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 200) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 408) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 204500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 343,243 Trainable params: 343,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 11s 39ms/step - loss: 1.0883 - accuracy: 0.3751 - auc: 0.5509 - f1_score: 0.3803 - val_loss: 1.0777 - val_accuracy: 0.4113 - val_auc: 0.5864 - val_f1_score: 0.4042 Epoch 2/50 188/188 [==============================] - 6s 33ms/step - loss: 1.0655 - accuracy: 0.4202 - auc: 0.6050 - f1_score: 0.4162 - val_loss: 1.0609 - val_accuracy: 0.4234 - val_auc: 0.6112 - val_f1_score: 0.4202 Epoch 3/50 188/188 [==============================] - 7s 38ms/step - loss: 1.0563 - accuracy: 0.4273 - auc: 0.6166 - f1_score: 0.4210 - val_loss: 1.0566 - val_accuracy: 0.4302 - val_auc: 0.6173 - val_f1_score: 0.4238 Epoch 4/50 188/188 [==============================] - 7s 39ms/step - loss: 1.0527 - accuracy: 0.4335 - auc: 0.6215 - f1_score: 0.4239 - val_loss: 1.0571 - val_accuracy: 0.4264 - val_auc: 0.6160 - val_f1_score: 0.4130 Epoch 5/50 188/188 [==============================] - 6s 33ms/step - loss: 1.0516 - accuracy: 0.4331 - auc: 0.6232 - f1_score: 0.4223 - val_loss: 1.0566 - val_accuracy: 0.4287 - val_auc: 0.6164 - val_f1_score: 0.4188 Epoch 6/50 188/188 [==============================] - 6s 31ms/step - loss: 1.0507 - accuracy: 0.4338 - auc: 0.6241 - f1_score: 0.4252 - val_loss: 1.0558 - val_accuracy: 0.4257 - val_auc: 0.6181 - val_f1_score: 0.4156 Epoch 7/50 188/188 [==============================] - 6s 31ms/step - loss: 1.0496 - accuracy: 0.4386 - auc: 0.6260 - f1_score: 0.4303 - val_loss: 1.0560 - val_accuracy: 0.4271 - val_auc: 0.6189 - val_f1_score: 0.4130 Epoch 8/50 188/188 [==============================] - 6s 31ms/step - loss: 1.0490 - accuracy: 0.4379 - auc: 0.6268 - f1_score: 0.4279 - val_loss: 1.0559 - val_accuracy: 0.4299 - val_auc: 0.6179 - val_f1_score: 0.4232 Epoch 9/50 188/188 [==============================] - 6s 31ms/step - loss: 1.0484 - accuracy: 0.4381 - auc: 0.6277 - f1_score: 0.4298 - val_loss: 1.0555 - val_accuracy: 0.4282 - val_auc: 0.6191 - val_f1_score: 0.4215 Epoch 10/50 188/188 [==============================] - 6s 32ms/step - loss: 1.0486 - accuracy: 0.4390 - auc: 0.6281 - f1_score: 0.4325 - val_loss: 1.0552 - val_accuracy: 0.4324 - val_auc: 0.6202 - val_f1_score: 0.4207 Epoch 11/50 188/188 [==============================] - 6s 33ms/step - loss: 1.0479 - accuracy: 0.4389 - auc: 0.6283 - f1_score: 0.4302 - val_loss: 1.0563 - val_accuracy: 0.4260 - val_auc: 0.6179 - val_f1_score: 0.4158 Epoch 12/50 188/188 [==============================] - 7s 36ms/step - loss: 1.0471 - accuracy: 0.4395 - auc: 0.6297 - f1_score: 0.4307 - val_loss: 1.0555 - val_accuracy: 0.4293 - val_auc: 0.6190 - val_f1_score: 0.4224 Epoch 13/50 188/188 [==============================] - 7s 37ms/step - loss: 1.0477 - accuracy: 0.4390 - auc: 0.6287 - f1_score: 0.4334 - val_loss: 1.0564 - val_accuracy: 0.4266 - val_auc: 0.6181 - val_f1_score: 0.4168 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 48 0.433360 | 0.427190 | 0.454387 | 0.454970 | 0.643039 | 0.642296 | 0.450757 | 0.450540 | 8 | LSTM | 8 | 3 | . 49 0.436816 | 0.430666 | 0.460371 | 0.461428 | 0.648606 | 0.647873 | 0.442060 | 0.441691 | 9 | LSTM | 8 | 3 | . 50 0.433134 | 0.427003 | 0.453428 | 0.454529 | 0.643891 | 0.643565 | 0.442517 | 0.442524 | 10 | LSTM | 8 | 3 | . 51 0.429799 | 0.423908 | 0.437546 | 0.439925 | 0.626992 | 0.627791 | 0.418663 | 0.419517 | 1 | Simple | 8 | 3 | . 52 0.431442 | 0.425406 | 0.443366 | 0.444610 | 0.633184 | 0.633280 | 0.434007 | 0.434173 | 2 | Simple | 8 | 3 | . 52 rows × 12 columns . Train shape: (83399, 3, 3) Test shape: (10292, 3, 3) Train shape: (83399, 3, 3) Test shape: (10292, 3, 3) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 3, 3)] 0 [] input_2 (InputLayer) [(None, 3, 3)] 0 [] simple_rnn (SimpleRNN) (None, 3, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 3, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 300) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 300) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 608) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 304500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 443,243 Trainable params: 443,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 16s 58ms/step - loss: 1.0919 - accuracy: 0.3578 - auc: 0.5435 - f1_score: 0.4058 - val_loss: 1.0808 - val_accuracy: 0.3993 - val_auc: 0.5777 - val_f1_score: 0.3718 Epoch 2/50 188/188 [==============================] - 9s 48ms/step - loss: 1.0705 - accuracy: 0.4075 - auc: 0.5944 - f1_score: 0.3909 - val_loss: 1.0626 - val_accuracy: 0.4201 - val_auc: 0.6091 - val_f1_score: 0.3667 Epoch 3/50 188/188 [==============================] - 9s 46ms/step - loss: 1.0586 - accuracy: 0.4255 - auc: 0.6130 - f1_score: 0.4019 - val_loss: 1.0567 - val_accuracy: 0.4254 - val_auc: 0.6173 - val_f1_score: 0.3742 Epoch 4/50 188/188 [==============================] - 8s 44ms/step - loss: 1.0532 - accuracy: 0.4322 - auc: 0.6206 - f1_score: 0.4000 - val_loss: 1.0576 - val_accuracy: 0.4246 - val_auc: 0.6169 - val_f1_score: 0.3786 Epoch 5/50 188/188 [==============================] - 8s 44ms/step - loss: 1.0518 - accuracy: 0.4343 - auc: 0.6229 - f1_score: 0.4064 - val_loss: 1.0551 - val_accuracy: 0.4265 - val_auc: 0.6199 - val_f1_score: 0.3897 Epoch 6/50 188/188 [==============================] - 9s 48ms/step - loss: 1.0507 - accuracy: 0.4347 - auc: 0.6248 - f1_score: 0.4111 - val_loss: 1.0547 - val_accuracy: 0.4297 - val_auc: 0.6205 - val_f1_score: 0.4027 Epoch 7/50 188/188 [==============================] - 8s 44ms/step - loss: 1.0497 - accuracy: 0.4350 - auc: 0.6259 - f1_score: 0.4145 - val_loss: 1.0549 - val_accuracy: 0.4297 - val_auc: 0.6194 - val_f1_score: 0.4010 Epoch 8/50 188/188 [==============================] - 8s 40ms/step - loss: 1.0478 - accuracy: 0.4394 - auc: 0.6289 - f1_score: 0.4244 - val_loss: 1.0536 - val_accuracy: 0.4317 - val_auc: 0.6218 - val_f1_score: 0.4060 Epoch 9/50 188/188 [==============================] - 8s 41ms/step - loss: 1.0477 - accuracy: 0.4390 - auc: 0.6289 - f1_score: 0.4239 - val_loss: 1.0540 - val_accuracy: 0.4315 - val_auc: 0.6215 - val_f1_score: 0.4160 Epoch 10/50 188/188 [==============================] - 8s 42ms/step - loss: 1.0480 - accuracy: 0.4398 - auc: 0.6287 - f1_score: 0.4272 - val_loss: 1.0539 - val_accuracy: 0.4303 - val_auc: 0.6213 - val_f1_score: 0.4144 Epoch 11/50 188/188 [==============================] - 8s 40ms/step - loss: 1.0468 - accuracy: 0.4392 - auc: 0.6296 - f1_score: 0.4278 - val_loss: 1.0536 - val_accuracy: 0.4296 - val_auc: 0.6214 - val_f1_score: 0.4147 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 49 0.436816 | 0.430666 | 0.460371 | 0.461428 | 0.648606 | 0.647873 | 0.442060 | 0.441691 | 9 | LSTM | 8 | 3 | . 50 0.433134 | 0.427003 | 0.453428 | 0.454529 | 0.643891 | 0.643565 | 0.442517 | 0.442524 | 10 | LSTM | 8 | 3 | . 51 0.429799 | 0.423908 | 0.437546 | 0.439925 | 0.626992 | 0.627791 | 0.418663 | 0.419517 | 1 | Simple | 8 | 3 | . 52 0.431442 | 0.425406 | 0.443366 | 0.444610 | 0.633184 | 0.633280 | 0.434007 | 0.434173 | 2 | Simple | 8 | 3 | . 53 0.431460 | 0.425422 | 0.445394 | 0.447158 | 0.637919 | 0.637933 | 0.431140 | 0.431641 | 3 | Simple | 8 | 3 | . 53 rows × 12 columns . Train shape: (83399, 4, 3) Test shape: (10292, 4, 3) Train shape: (83399, 4, 3) Test shape: (10292, 4, 3) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 4, 3)] 0 [] input_2 (InputLayer) [(None, 4, 3)] 0 [] simple_rnn (SimpleRNN) (None, 4, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 4, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 400) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 400) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 808) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 404500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 543,243 Trainable params: 543,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 14s 53ms/step - loss: 1.0838 - accuracy: 0.3907 - auc: 0.5677 - f1_score: 0.4106 - val_loss: 1.0684 - val_accuracy: 0.4121 - val_auc: 0.6018 - val_f1_score: 0.4095 Epoch 2/50 188/188 [==============================] - 8s 43ms/step - loss: 1.0621 - accuracy: 0.4224 - auc: 0.6079 - f1_score: 0.4161 - val_loss: 1.0562 - val_accuracy: 0.4264 - val_auc: 0.6181 - val_f1_score: 0.4246 Epoch 3/50 188/188 [==============================] - 9s 47ms/step - loss: 1.0543 - accuracy: 0.4302 - auc: 0.6191 - f1_score: 0.4253 - val_loss: 1.0557 - val_accuracy: 0.4309 - val_auc: 0.6175 - val_f1_score: 0.4272 Epoch 4/50 188/188 [==============================] - 9s 45ms/step - loss: 1.0518 - accuracy: 0.4334 - auc: 0.6219 - f1_score: 0.4291 - val_loss: 1.0551 - val_accuracy: 0.4293 - val_auc: 0.6198 - val_f1_score: 0.4261 Epoch 5/50 188/188 [==============================] - 9s 45ms/step - loss: 1.0497 - accuracy: 0.4355 - auc: 0.6254 - f1_score: 0.4303 - val_loss: 1.0544 - val_accuracy: 0.4239 - val_auc: 0.6200 - val_f1_score: 0.4205 Epoch 6/50 188/188 [==============================] - 9s 49ms/step - loss: 1.0479 - accuracy: 0.4391 - auc: 0.6286 - f1_score: 0.4334 - val_loss: 1.0540 - val_accuracy: 0.4263 - val_auc: 0.6203 - val_f1_score: 0.4166 Epoch 7/50 188/188 [==============================] - 9s 47ms/step - loss: 1.0463 - accuracy: 0.4423 - auc: 0.6304 - f1_score: 0.4356 - val_loss: 1.0538 - val_accuracy: 0.4288 - val_auc: 0.6215 - val_f1_score: 0.4241 Epoch 8/50 188/188 [==============================] - 9s 46ms/step - loss: 1.0457 - accuracy: 0.4415 - auc: 0.6310 - f1_score: 0.4359 - val_loss: 1.0537 - val_accuracy: 0.4282 - val_auc: 0.6215 - val_f1_score: 0.4269 Epoch 9/50 188/188 [==============================] - 9s 47ms/step - loss: 1.0451 - accuracy: 0.4438 - auc: 0.6323 - f1_score: 0.4381 - val_loss: 1.0538 - val_accuracy: 0.4288 - val_auc: 0.6218 - val_f1_score: 0.4259 Epoch 10/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0446 - accuracy: 0.4442 - auc: 0.6331 - f1_score: 0.4381 - val_loss: 1.0534 - val_accuracy: 0.4283 - val_auc: 0.6221 - val_f1_score: 0.4206 Epoch 11/50 188/188 [==============================] - 9s 47ms/step - loss: 1.0434 - accuracy: 0.4464 - auc: 0.6349 - f1_score: 0.4407 - val_loss: 1.0538 - val_accuracy: 0.4288 - val_auc: 0.6212 - val_f1_score: 0.4241 Epoch 12/50 188/188 [==============================] - 9s 47ms/step - loss: 1.0433 - accuracy: 0.4447 - auc: 0.6346 - f1_score: 0.4382 - val_loss: 1.0535 - val_accuracy: 0.4291 - val_auc: 0.6217 - val_f1_score: 0.4267 Epoch 13/50 188/188 [==============================] - 9s 45ms/step - loss: 1.0424 - accuracy: 0.4459 - auc: 0.6356 - f1_score: 0.4406 - val_loss: 1.0544 - val_accuracy: 0.4300 - val_auc: 0.6204 - val_f1_score: 0.4286 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 50 0.433134 | 0.427003 | 0.453428 | 0.454529 | 0.643891 | 0.643565 | 0.442517 | 0.442524 | 10 | LSTM | 8 | 3 | . 51 0.429799 | 0.423908 | 0.437546 | 0.439925 | 0.626992 | 0.627791 | 0.418663 | 0.419517 | 1 | Simple | 8 | 3 | . 52 0.431442 | 0.425406 | 0.443366 | 0.444610 | 0.633184 | 0.633280 | 0.434007 | 0.434173 | 2 | Simple | 8 | 3 | . 53 0.431460 | 0.425422 | 0.445394 | 0.447158 | 0.637919 | 0.637933 | 0.431140 | 0.431641 | 3 | Simple | 8 | 3 | . 54 0.432009 | 0.425618 | 0.455466 | 0.455244 | 0.644543 | 0.643218 | 0.453959 | 0.453127 | 4 | Simple | 8 | 3 | . 54 rows × 12 columns . Train shape: (83399, 5, 3) Test shape: (10292, 5, 3) Train shape: (83399, 5, 3) Test shape: (10292, 5, 3) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 5, 3)] 0 [] input_2 (InputLayer) [(None, 5, 3)] 0 [] simple_rnn (SimpleRNN) (None, 5, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 5, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 500) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 500) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1008) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 504500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 643,243 Trainable params: 643,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 17s 63ms/step - loss: 1.0839 - accuracy: 0.3912 - auc: 0.5688 - f1_score: 0.4244 - val_loss: 1.0725 - val_accuracy: 0.4074 - val_auc: 0.5919 - val_f1_score: 0.3735 Epoch 2/50 188/188 [==============================] - 10s 55ms/step - loss: 1.0656 - accuracy: 0.4149 - auc: 0.6017 - f1_score: 0.3952 - val_loss: 1.0601 - val_accuracy: 0.4225 - val_auc: 0.6094 - val_f1_score: 0.3899 Epoch 3/50 188/188 [==============================] - 10s 56ms/step - loss: 1.0577 - accuracy: 0.4249 - auc: 0.6125 - f1_score: 0.4046 - val_loss: 1.0575 - val_accuracy: 0.4255 - val_auc: 0.6147 - val_f1_score: 0.3885 Epoch 4/50 188/188 [==============================] - 11s 57ms/step - loss: 1.0528 - accuracy: 0.4327 - auc: 0.6209 - f1_score: 0.4114 - val_loss: 1.0548 - val_accuracy: 0.4293 - val_auc: 0.6191 - val_f1_score: 0.4100 Epoch 5/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0500 - accuracy: 0.4359 - auc: 0.6245 - f1_score: 0.4209 - val_loss: 1.0550 - val_accuracy: 0.4315 - val_auc: 0.6202 - val_f1_score: 0.4124 Epoch 6/50 188/188 [==============================] - 10s 55ms/step - loss: 1.0484 - accuracy: 0.4377 - auc: 0.6268 - f1_score: 0.4221 - val_loss: 1.0541 - val_accuracy: 0.4293 - val_auc: 0.6205 - val_f1_score: 0.4150 Epoch 7/50 188/188 [==============================] - 10s 52ms/step - loss: 1.0468 - accuracy: 0.4373 - auc: 0.6283 - f1_score: 0.4237 - val_loss: 1.0557 - val_accuracy: 0.4249 - val_auc: 0.6173 - val_f1_score: 0.4044 Epoch 8/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0462 - accuracy: 0.4392 - auc: 0.6292 - f1_score: 0.4266 - val_loss: 1.0549 - val_accuracy: 0.4276 - val_auc: 0.6198 - val_f1_score: 0.4111 Epoch 9/50 188/188 [==============================] - 10s 52ms/step - loss: 1.0448 - accuracy: 0.4428 - auc: 0.6318 - f1_score: 0.4311 - val_loss: 1.0547 - val_accuracy: 0.4225 - val_auc: 0.6190 - val_f1_score: 0.4041 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 51 0.429799 | 0.423908 | 0.437546 | 0.439925 | 0.626992 | 0.627791 | 0.418663 | 0.419517 | 1 | Simple | 8 | 3 | . 52 0.431442 | 0.425406 | 0.443366 | 0.444610 | 0.633184 | 0.633280 | 0.434007 | 0.434173 | 2 | Simple | 8 | 3 | . 53 0.431460 | 0.425422 | 0.445394 | 0.447158 | 0.637919 | 0.637933 | 0.431140 | 0.431641 | 3 | Simple | 8 | 3 | . 54 0.432009 | 0.425618 | 0.455466 | 0.455244 | 0.644543 | 0.643218 | 0.453959 | 0.453127 | 4 | Simple | 8 | 3 | . 55 0.433546 | 0.427289 | 0.449503 | 0.451235 | 0.642273 | 0.641356 | 0.431301 | 0.431733 | 5 | Simple | 8 | 3 | . 55 rows × 12 columns . Train shape: (83399, 6, 3) Test shape: (10292, 6, 3) Train shape: (83399, 6, 3) Test shape: (10292, 6, 3) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 6, 3)] 0 [] input_2 (InputLayer) [(None, 6, 3)] 0 [] simple_rnn (SimpleRNN) (None, 6, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 6, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 600) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 600) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1208) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 604500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 743,243 Trainable params: 743,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 14s 61ms/step - loss: 1.0877 - accuracy: 0.3638 - auc: 0.5557 - f1_score: 0.4136 - val_loss: 1.0787 - val_accuracy: 0.3793 - val_auc: 0.5797 - val_f1_score: 0.3294 Epoch 2/50 188/188 [==============================] - 10s 56ms/step - loss: 1.0708 - accuracy: 0.3936 - auc: 0.5925 - f1_score: 0.3854 - val_loss: 1.0637 - val_accuracy: 0.4194 - val_auc: 0.6054 - val_f1_score: 0.3806 Epoch 3/50 188/188 [==============================] - 11s 58ms/step - loss: 1.0581 - accuracy: 0.4267 - auc: 0.6129 - f1_score: 0.4108 - val_loss: 1.0593 - val_accuracy: 0.4200 - val_auc: 0.6124 - val_f1_score: 0.3944 Epoch 4/50 188/188 [==============================] - 12s 63ms/step - loss: 1.0519 - accuracy: 0.4349 - auc: 0.6218 - f1_score: 0.4221 - val_loss: 1.0551 - val_accuracy: 0.4235 - val_auc: 0.6185 - val_f1_score: 0.3987 Epoch 5/50 188/188 [==============================] - 11s 58ms/step - loss: 1.0496 - accuracy: 0.4343 - auc: 0.6253 - f1_score: 0.4208 - val_loss: 1.0543 - val_accuracy: 0.4289 - val_auc: 0.6205 - val_f1_score: 0.4106 Epoch 6/50 188/188 [==============================] - 10s 55ms/step - loss: 1.0475 - accuracy: 0.4412 - auc: 0.6289 - f1_score: 0.4312 - val_loss: 1.0541 - val_accuracy: 0.4285 - val_auc: 0.6211 - val_f1_score: 0.4043 Epoch 7/50 188/188 [==============================] - 11s 60ms/step - loss: 1.0445 - accuracy: 0.4424 - auc: 0.6328 - f1_score: 0.4318 - val_loss: 1.0528 - val_accuracy: 0.4330 - val_auc: 0.6217 - val_f1_score: 0.4203 Epoch 8/50 188/188 [==============================] - 12s 62ms/step - loss: 1.0436 - accuracy: 0.4457 - auc: 0.6343 - f1_score: 0.4363 - val_loss: 1.0540 - val_accuracy: 0.4329 - val_auc: 0.6211 - val_f1_score: 0.4169 Epoch 9/50 188/188 [==============================] - 11s 59ms/step - loss: 1.0427 - accuracy: 0.4451 - auc: 0.6351 - f1_score: 0.4378 - val_loss: 1.0532 - val_accuracy: 0.4333 - val_auc: 0.6231 - val_f1_score: 0.4207 Epoch 10/50 188/188 [==============================] - 12s 62ms/step - loss: 1.0416 - accuracy: 0.4498 - auc: 0.6375 - f1_score: 0.4404 - val_loss: 1.0535 - val_accuracy: 0.4341 - val_auc: 0.6233 - val_f1_score: 0.4235 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 52 0.431442 | 0.425406 | 0.443366 | 0.444610 | 0.633184 | 0.633280 | 0.434007 | 0.434173 | 2 | Simple | 8 | 3 | . 53 0.431460 | 0.425422 | 0.445394 | 0.447158 | 0.637919 | 0.637933 | 0.431140 | 0.431641 | 3 | Simple | 8 | 3 | . 54 0.432009 | 0.425618 | 0.455466 | 0.455244 | 0.644543 | 0.643218 | 0.453959 | 0.453127 | 4 | Simple | 8 | 3 | . 55 0.433546 | 0.427289 | 0.449503 | 0.451235 | 0.642273 | 0.641356 | 0.431301 | 0.431733 | 5 | Simple | 8 | 3 | . 56 0.435751 | 0.429486 | 0.457395 | 0.458204 | 0.648364 | 0.647179 | 0.446376 | 0.446102 | 6 | Simple | 8 | 3 | . 56 rows × 12 columns . Train shape: (83399, 7, 3) Test shape: (10292, 7, 3) Train shape: (83399, 7, 3) Test shape: (10292, 7, 3) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 7, 3)] 0 [] input_2 (InputLayer) [(None, 7, 3)] 0 [] simple_rnn (SimpleRNN) (None, 7, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 7, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 700) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 700) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1408) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 704500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 843,243 Trainable params: 843,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 16s 68ms/step - loss: 1.0830 - accuracy: 0.3927 - auc: 0.5719 - f1_score: 0.4211 - val_loss: 1.0712 - val_accuracy: 0.4096 - val_auc: 0.5938 - val_f1_score: 0.3903 Epoch 2/50 188/188 [==============================] - 12s 63ms/step - loss: 1.0653 - accuracy: 0.4179 - auc: 0.6021 - f1_score: 0.4060 - val_loss: 1.0632 - val_accuracy: 0.4195 - val_auc: 0.6062 - val_f1_score: 0.4059 Epoch 3/50 188/188 [==============================] - 12s 64ms/step - loss: 1.0559 - accuracy: 0.4296 - auc: 0.6174 - f1_score: 0.4183 - val_loss: 1.0581 - val_accuracy: 0.4276 - val_auc: 0.6145 - val_f1_score: 0.4182 Epoch 4/50 188/188 [==============================] - 15s 82ms/step - loss: 1.0504 - accuracy: 0.4336 - auc: 0.6243 - f1_score: 0.4229 - val_loss: 1.0587 - val_accuracy: 0.4269 - val_auc: 0.6137 - val_f1_score: 0.4130 Epoch 5/50 188/188 [==============================] - 13s 71ms/step - loss: 1.0466 - accuracy: 0.4441 - auc: 0.6308 - f1_score: 0.4352 - val_loss: 1.0566 - val_accuracy: 0.4293 - val_auc: 0.6163 - val_f1_score: 0.4224 Epoch 6/50 188/188 [==============================] - 14s 77ms/step - loss: 1.0438 - accuracy: 0.4449 - auc: 0.6339 - f1_score: 0.4381 - val_loss: 1.0553 - val_accuracy: 0.4320 - val_auc: 0.6185 - val_f1_score: 0.4198 Epoch 7/50 188/188 [==============================] - 13s 71ms/step - loss: 1.0428 - accuracy: 0.4474 - auc: 0.6357 - f1_score: 0.4379 - val_loss: 1.0579 - val_accuracy: 0.4289 - val_auc: 0.6151 - val_f1_score: 0.4146 Epoch 8/50 188/188 [==============================] - 14s 75ms/step - loss: 1.0415 - accuracy: 0.4492 - auc: 0.6376 - f1_score: 0.4411 - val_loss: 1.0590 - val_accuracy: 0.4252 - val_auc: 0.6153 - val_f1_score: 0.4121 Epoch 9/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0392 - accuracy: 0.4497 - auc: 0.6402 - f1_score: 0.4440 - val_loss: 1.0575 - val_accuracy: 0.4264 - val_auc: 0.6168 - val_f1_score: 0.4105 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 53 0.431460 | 0.425422 | 0.445394 | 0.447158 | 0.637919 | 0.637933 | 0.431140 | 0.431641 | 3 | Simple | 8 | 3 | . 54 0.432009 | 0.425618 | 0.455466 | 0.455244 | 0.644543 | 0.643218 | 0.453959 | 0.453127 | 4 | Simple | 8 | 3 | . 55 0.433546 | 0.427289 | 0.449503 | 0.451235 | 0.642273 | 0.641356 | 0.431301 | 0.431733 | 5 | Simple | 8 | 3 | . 56 0.435751 | 0.429486 | 0.457395 | 0.458204 | 0.648364 | 0.647179 | 0.446376 | 0.446102 | 6 | Simple | 8 | 3 | . 57 0.438593 | 0.432070 | 0.462431 | 0.462212 | 0.652948 | 0.650993 | 0.447286 | 0.445852 | 7 | Simple | 8 | 3 | . 57 rows × 12 columns . Train shape: (83399, 8, 3) Test shape: (10292, 8, 3) Train shape: (83399, 8, 3) Test shape: (10292, 8, 3) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 8, 3)] 0 [] input_2 (InputLayer) [(None, 8, 3)] 0 [] simple_rnn (SimpleRNN) (None, 8, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 8, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 800) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 800) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1608) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 804500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 943,243 Trainable params: 943,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 19s 85ms/step - loss: 1.0813 - accuracy: 0.3921 - auc: 0.5717 - f1_score: 0.4199 - val_loss: 1.0719 - val_accuracy: 0.4103 - val_auc: 0.5916 - val_f1_score: 0.3907 Epoch 2/50 188/188 [==============================] - 14s 74ms/step - loss: 1.0643 - accuracy: 0.4223 - auc: 0.6053 - f1_score: 0.4103 - val_loss: 1.0650 - val_accuracy: 0.4199 - val_auc: 0.6029 - val_f1_score: 0.4050 Epoch 3/50 188/188 [==============================] - 14s 75ms/step - loss: 1.0568 - accuracy: 0.4289 - auc: 0.6161 - f1_score: 0.4212 - val_loss: 1.0612 - val_accuracy: 0.4189 - val_auc: 0.6082 - val_f1_score: 0.3976 Epoch 4/50 188/188 [==============================] - 15s 79ms/step - loss: 1.0511 - accuracy: 0.4364 - auc: 0.6237 - f1_score: 0.4276 - val_loss: 1.0575 - val_accuracy: 0.4234 - val_auc: 0.6141 - val_f1_score: 0.4056 Epoch 5/50 188/188 [==============================] - 15s 78ms/step - loss: 1.0479 - accuracy: 0.4389 - auc: 0.6277 - f1_score: 0.4307 - val_loss: 1.0566 - val_accuracy: 0.4342 - val_auc: 0.6169 - val_f1_score: 0.4239 Epoch 6/50 188/188 [==============================] - 14s 75ms/step - loss: 1.0453 - accuracy: 0.4423 - auc: 0.6316 - f1_score: 0.4355 - val_loss: 1.0566 - val_accuracy: 0.4309 - val_auc: 0.6168 - val_f1_score: 0.4205 Epoch 7/50 188/188 [==============================] - 14s 77ms/step - loss: 1.0433 - accuracy: 0.4436 - auc: 0.6341 - f1_score: 0.4377 - val_loss: 1.0571 - val_accuracy: 0.4297 - val_auc: 0.6171 - val_f1_score: 0.4176 Epoch 8/50 188/188 [==============================] - 14s 74ms/step - loss: 1.0421 - accuracy: 0.4458 - auc: 0.6357 - f1_score: 0.4396 - val_loss: 1.0588 - val_accuracy: 0.4223 - val_auc: 0.6137 - val_f1_score: 0.4144 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 54 0.432009 | 0.425618 | 0.455466 | 0.455244 | 0.644543 | 0.643218 | 0.453959 | 0.453127 | 4 | Simple | 8 | 3 | . 55 0.433546 | 0.427289 | 0.449503 | 0.451235 | 0.642273 | 0.641356 | 0.431301 | 0.431733 | 5 | Simple | 8 | 3 | . 56 0.435751 | 0.429486 | 0.457395 | 0.458204 | 0.648364 | 0.647179 | 0.446376 | 0.446102 | 6 | Simple | 8 | 3 | . 57 0.438593 | 0.432070 | 0.462431 | 0.462212 | 0.652948 | 0.650993 | 0.447286 | 0.445852 | 7 | Simple | 8 | 3 | . 58 0.436751 | 0.430123 | 0.459150 | 0.458802 | 0.650716 | 0.648437 | 0.452011 | 0.450682 | 8 | Simple | 8 | 3 | . 58 rows × 12 columns . Train shape: (83399, 9, 3) Test shape: (10292, 9, 3) Train shape: (83399, 9, 3) Test shape: (10292, 9, 3) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 9, 3)] 0 [] input_2 (InputLayer) [(None, 9, 3)] 0 [] simple_rnn (SimpleRNN) (None, 9, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 9, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 900) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 900) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1808) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 904500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,043,243 Trainable params: 1,043,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 18s 81ms/step - loss: 1.0883 - accuracy: 0.3853 - auc: 0.5617 - f1_score: 0.4199 - val_loss: 1.0747 - val_accuracy: 0.3950 - val_auc: 0.5862 - val_f1_score: 0.3887 Epoch 2/50 188/188 [==============================] - 16s 83ms/step - loss: 1.0661 - accuracy: 0.4161 - auc: 0.6012 - f1_score: 0.4061 - val_loss: 1.0681 - val_accuracy: 0.4131 - val_auc: 0.5982 - val_f1_score: 0.4045 Epoch 3/50 188/188 [==============================] - 16s 87ms/step - loss: 1.0588 - accuracy: 0.4254 - auc: 0.6123 - f1_score: 0.4149 - val_loss: 1.0621 - val_accuracy: 0.4170 - val_auc: 0.6076 - val_f1_score: 0.4118 Epoch 4/50 188/188 [==============================] - 16s 86ms/step - loss: 1.0525 - accuracy: 0.4330 - auc: 0.6210 - f1_score: 0.4220 - val_loss: 1.0609 - val_accuracy: 0.4192 - val_auc: 0.6085 - val_f1_score: 0.4067 Epoch 5/50 188/188 [==============================] - 16s 86ms/step - loss: 1.0496 - accuracy: 0.4389 - auc: 0.6256 - f1_score: 0.4288 - val_loss: 1.0563 - val_accuracy: 0.4233 - val_auc: 0.6148 - val_f1_score: 0.4163 Epoch 6/50 188/188 [==============================] - 16s 85ms/step - loss: 1.0459 - accuracy: 0.4409 - auc: 0.6301 - f1_score: 0.4337 - val_loss: 1.0582 - val_accuracy: 0.4264 - val_auc: 0.6133 - val_f1_score: 0.4183 Epoch 7/50 188/188 [==============================] - 15s 78ms/step - loss: 1.0440 - accuracy: 0.4439 - auc: 0.6328 - f1_score: 0.4336 - val_loss: 1.0580 - val_accuracy: 0.4239 - val_auc: 0.6152 - val_f1_score: 0.4129 Epoch 8/50 188/188 [==============================] - 14s 77ms/step - loss: 1.0419 - accuracy: 0.4459 - auc: 0.6364 - f1_score: 0.4380 - val_loss: 1.0566 - val_accuracy: 0.4260 - val_auc: 0.6163 - val_f1_score: 0.4228 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 55 0.433546 | 0.427289 | 0.449503 | 0.451235 | 0.642273 | 0.641356 | 0.431301 | 0.431733 | 5 | Simple | 8 | 3 | . 56 0.435751 | 0.429486 | 0.457395 | 0.458204 | 0.648364 | 0.647179 | 0.446376 | 0.446102 | 6 | Simple | 8 | 3 | . 57 0.438593 | 0.432070 | 0.462431 | 0.462212 | 0.652948 | 0.650993 | 0.447286 | 0.445852 | 7 | Simple | 8 | 3 | . 58 0.436751 | 0.430123 | 0.459150 | 0.458802 | 0.650716 | 0.648437 | 0.452011 | 0.450682 | 8 | Simple | 8 | 3 | . 59 0.434331 | 0.427698 | 0.458671 | 0.458018 | 0.651064 | 0.648594 | 0.454947 | 0.453487 | 9 | Simple | 8 | 3 | . 59 rows × 12 columns . Train shape: (83399, 10, 3) Test shape: (10292, 10, 3) Train shape: (83399, 10, 3) Test shape: (10292, 10, 3) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 3)] 0 [] input_2 (InputLayer) [(None, 10, 3)] 0 [] simple_rnn (SimpleRNN) (None, 10, 100) 10300 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 10, 100) 10300 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 2008) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1004500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,143,243 Trainable params: 1,143,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 19s 86ms/step - loss: 1.0789 - accuracy: 0.3945 - auc: 0.5781 - f1_score: 0.4231 - val_loss: 1.0710 - val_accuracy: 0.4077 - val_auc: 0.5934 - val_f1_score: 0.3590 Epoch 2/50 188/188 [==============================] - 16s 84ms/step - loss: 1.0632 - accuracy: 0.4184 - auc: 0.6052 - f1_score: 0.3839 - val_loss: 1.0643 - val_accuracy: 0.4180 - val_auc: 0.6051 - val_f1_score: 0.3691 Epoch 3/50 188/188 [==============================] - 16s 83ms/step - loss: 1.0551 - accuracy: 0.4316 - auc: 0.6181 - f1_score: 0.4030 - val_loss: 1.0607 - val_accuracy: 0.4209 - val_auc: 0.6089 - val_f1_score: 0.3996 Epoch 4/50 188/188 [==============================] - 16s 87ms/step - loss: 1.0504 - accuracy: 0.4368 - auc: 0.6250 - f1_score: 0.4084 - val_loss: 1.0588 - val_accuracy: 0.4254 - val_auc: 0.6127 - val_f1_score: 0.3923 Epoch 5/50 188/188 [==============================] - 15s 78ms/step - loss: 1.0463 - accuracy: 0.4399 - auc: 0.6302 - f1_score: 0.4178 - val_loss: 1.0592 - val_accuracy: 0.4248 - val_auc: 0.6126 - val_f1_score: 0.4001 Epoch 6/50 188/188 [==============================] - 16s 83ms/step - loss: 1.0431 - accuracy: 0.4450 - auc: 0.6345 - f1_score: 0.4237 - val_loss: 1.0588 - val_accuracy: 0.4206 - val_auc: 0.6140 - val_f1_score: 0.3976 Epoch 7/50 188/188 [==============================] - 15s 81ms/step - loss: 1.0415 - accuracy: 0.4456 - auc: 0.6364 - f1_score: 0.4288 - val_loss: 1.0584 - val_accuracy: 0.4204 - val_auc: 0.6139 - val_f1_score: 0.4009 Epoch 8/50 188/188 [==============================] - 16s 84ms/step - loss: 1.0390 - accuracy: 0.4476 - auc: 0.6397 - f1_score: 0.4300 - val_loss: 1.0578 - val_accuracy: 0.4230 - val_auc: 0.6150 - val_f1_score: 0.4108 Epoch 9/50 188/188 [==============================] - 16s 87ms/step - loss: 1.0375 - accuracy: 0.4518 - auc: 0.6420 - f1_score: 0.4375 - val_loss: 1.0589 - val_accuracy: 0.4224 - val_auc: 0.6130 - val_f1_score: 0.4135 Epoch 10/50 188/188 [==============================] - 18s 93ms/step - loss: 1.0353 - accuracy: 0.4562 - auc: 0.6451 - f1_score: 0.4434 - val_loss: 1.0584 - val_accuracy: 0.4279 - val_auc: 0.6153 - val_f1_score: 0.4216 Epoch 11/50 188/188 [==============================] - 16s 83ms/step - loss: 1.0339 - accuracy: 0.4568 - auc: 0.6466 - f1_score: 0.4443 - val_loss: 1.0593 - val_accuracy: 0.4260 - val_auc: 0.6146 - val_f1_score: 0.4168 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 56 0.435751 | 0.429486 | 0.457395 | 0.458204 | 0.648364 | 0.647179 | 0.446376 | 0.446102 | 6 | Simple | 8 | 3 | . 57 0.438593 | 0.432070 | 0.462431 | 0.462212 | 0.652948 | 0.650993 | 0.447286 | 0.445852 | 7 | Simple | 8 | 3 | . 58 0.436751 | 0.430123 | 0.459150 | 0.458802 | 0.650716 | 0.648437 | 0.452011 | 0.450682 | 8 | Simple | 8 | 3 | . 59 0.434331 | 0.427698 | 0.458671 | 0.458018 | 0.651064 | 0.648594 | 0.454947 | 0.453487 | 9 | Simple | 8 | 3 | . 60 0.441610 | 0.434677 | 0.471751 | 0.470249 | 0.663292 | 0.659855 | 0.461930 | 0.459346 | 10 | Simple | 8 | 3 | . 60 rows × 12 columns . Train shape: (83399, 1, 2) Test shape: (10292, 1, 2) Train shape: (83399, 1, 2) Test shape: (10292, 1, 2) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 1, 2)] 0 [] input_2 (InputLayer) [(None, 1, 2)] 0 [] lstm (LSTM) (None, 1, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 1, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 100) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 100) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 202) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 101500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 301,243 Trainable params: 301,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 8s 33ms/step - loss: 1.0915 - accuracy: 0.3633 - auc: 0.5493 - f1_score: 0.4231 - val_loss: 1.0855 - val_accuracy: 0.3885 - val_auc: 0.5675 - val_f1_score: 0.3141 Epoch 2/50 188/188 [==============================] - 6s 32ms/step - loss: 1.0850 - accuracy: 0.3911 - auc: 0.5682 - f1_score: 0.3458 - val_loss: 1.0832 - val_accuracy: 0.3879 - val_auc: 0.5723 - val_f1_score: 0.3362 Epoch 3/50 188/188 [==============================] - 5s 27ms/step - loss: 1.0843 - accuracy: 0.3915 - auc: 0.5700 - f1_score: 0.3479 - val_loss: 1.0829 - val_accuracy: 0.3868 - val_auc: 0.5733 - val_f1_score: 0.3316 Epoch 4/50 188/188 [==============================] - 5s 26ms/step - loss: 1.0843 - accuracy: 0.3911 - auc: 0.5698 - f1_score: 0.3401 - val_loss: 1.0828 - val_accuracy: 0.3904 - val_auc: 0.5744 - val_f1_score: 0.3457 Epoch 5/50 188/188 [==============================] - 5s 27ms/step - loss: 1.0834 - accuracy: 0.3931 - auc: 0.5719 - f1_score: 0.3573 - val_loss: 1.0829 - val_accuracy: 0.3893 - val_auc: 0.5735 - val_f1_score: 0.3392 Epoch 6/50 188/188 [==============================] - 5s 25ms/step - loss: 1.0835 - accuracy: 0.3913 - auc: 0.5714 - f1_score: 0.3531 - val_loss: 1.0829 - val_accuracy: 0.3915 - val_auc: 0.5741 - val_f1_score: 0.3499 Epoch 7/50 188/188 [==============================] - 5s 25ms/step - loss: 1.0838 - accuracy: 0.3919 - auc: 0.5716 - f1_score: 0.3463 - val_loss: 1.0827 - val_accuracy: 0.3914 - val_auc: 0.5744 - val_f1_score: 0.3414 Epoch 8/50 188/188 [==============================] - 5s 25ms/step - loss: 1.0834 - accuracy: 0.3914 - auc: 0.5720 - f1_score: 0.3501 - val_loss: 1.0828 - val_accuracy: 0.3920 - val_auc: 0.5745 - val_f1_score: 0.3490 Epoch 9/50 188/188 [==============================] - 5s 24ms/step - loss: 1.0833 - accuracy: 0.3929 - auc: 0.5725 - f1_score: 0.3500 - val_loss: 1.0828 - val_accuracy: 0.3918 - val_auc: 0.5747 - val_f1_score: 0.3410 Epoch 10/50 188/188 [==============================] - 5s 27ms/step - loss: 1.0829 - accuracy: 0.3934 - auc: 0.5732 - f1_score: 0.3549 - val_loss: 1.0829 - val_accuracy: 0.3911 - val_auc: 0.5744 - val_f1_score: 0.3456 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 57 0.438593 | 0.432070 | 0.462431 | 0.462212 | 0.652948 | 0.650993 | 0.447286 | 0.445852 | 7 | Simple | 8 | 3 | . 58 0.436751 | 0.430123 | 0.459150 | 0.458802 | 0.650716 | 0.648437 | 0.452011 | 0.450682 | 8 | Simple | 8 | 3 | . 59 0.434331 | 0.427698 | 0.458671 | 0.458018 | 0.651064 | 0.648594 | 0.454947 | 0.453487 | 9 | Simple | 8 | 3 | . 60 0.441610 | 0.434677 | 0.471751 | 0.470249 | 0.663292 | 0.659855 | 0.461930 | 0.459346 | 10 | Simple | 8 | 3 | . 61 0.410930 | 0.404286 | 0.393693 | 0.397595 | 0.576263 | 0.576945 | 0.347596 | 0.349436 | 1 | LSTM | 2 | 2 | . 61 rows × 12 columns . Train shape: (83399, 2, 2) Test shape: (10292, 2, 2) Train shape: (83399, 2, 2) Test shape: (10292, 2, 2) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 2, 2)] 0 [] input_2 (InputLayer) [(None, 2, 2)] 0 [] lstm (LSTM) (None, 2, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 2, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 200) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 200) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 402) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 201500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 401,243 Trainable params: 401,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 12s 49ms/step - loss: 1.0843 - accuracy: 0.3947 - auc: 0.5705 - f1_score: 0.3422 - val_loss: 1.0793 - val_accuracy: 0.3966 - val_auc: 0.5820 - val_f1_score: 0.3403 Epoch 2/50 188/188 [==============================] - 8s 43ms/step - loss: 1.0787 - accuracy: 0.4016 - auc: 0.5814 - f1_score: 0.3664 - val_loss: 1.0782 - val_accuracy: 0.4013 - val_auc: 0.5836 - val_f1_score: 0.3811 Epoch 3/50 188/188 [==============================] - 8s 44ms/step - loss: 1.0779 - accuracy: 0.4015 - auc: 0.5831 - f1_score: 0.3819 - val_loss: 1.0776 - val_accuracy: 0.4000 - val_auc: 0.5844 - val_f1_score: 0.3831 Epoch 4/50 188/188 [==============================] - 10s 55ms/step - loss: 1.0777 - accuracy: 0.4010 - auc: 0.5835 - f1_score: 0.3854 - val_loss: 1.0777 - val_accuracy: 0.4025 - val_auc: 0.5848 - val_f1_score: 0.3906 Epoch 5/50 188/188 [==============================] - 11s 56ms/step - loss: 1.0773 - accuracy: 0.4024 - auc: 0.5846 - f1_score: 0.3884 - val_loss: 1.0771 - val_accuracy: 0.4024 - val_auc: 0.5859 - val_f1_score: 0.3929 Epoch 6/50 188/188 [==============================] - 10s 54ms/step - loss: 1.0772 - accuracy: 0.4025 - auc: 0.5849 - f1_score: 0.3907 - val_loss: 1.0781 - val_accuracy: 0.4014 - val_auc: 0.5845 - val_f1_score: 0.3969 Epoch 7/50 188/188 [==============================] - 11s 59ms/step - loss: 1.0773 - accuracy: 0.4043 - auc: 0.5845 - f1_score: 0.3949 - val_loss: 1.0778 - val_accuracy: 0.3999 - val_auc: 0.5852 - val_f1_score: 0.3938 Epoch 8/50 188/188 [==============================] - 11s 59ms/step - loss: 1.0769 - accuracy: 0.4052 - auc: 0.5860 - f1_score: 0.3933 - val_loss: 1.0773 - val_accuracy: 0.4065 - val_auc: 0.5862 - val_f1_score: 0.4029 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 58 0.436751 | 0.430123 | 0.459150 | 0.458802 | 0.650716 | 0.648437 | 0.452011 | 0.450682 | 8 | Simple | 8 | 3 | . 59 0.434331 | 0.427698 | 0.458671 | 0.458018 | 0.651064 | 0.648594 | 0.454947 | 0.453487 | 9 | Simple | 8 | 3 | . 60 0.441610 | 0.434677 | 0.471751 | 0.470249 | 0.663292 | 0.659855 | 0.461930 | 0.459346 | 10 | Simple | 8 | 3 | . 61 0.410930 | 0.404286 | 0.393693 | 0.397595 | 0.576263 | 0.576945 | 0.347596 | 0.349436 | 1 | LSTM | 2 | 2 | . 62 0.413318 | 0.406691 | 0.408496 | 0.409454 | 0.590161 | 0.589968 | 0.404763 | 0.405096 | 2 | LSTM | 2 | 2 | . 62 rows × 12 columns . Train shape: (83399, 3, 2) Test shape: (10292, 3, 2) Train shape: (83399, 3, 2) Test shape: (10292, 3, 2) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 3, 2)] 0 [] input_2 (InputLayer) [(None, 3, 2)] 0 [] lstm (LSTM) (None, 3, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 3, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 300) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 300) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 602) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 301500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 501,243 Trainable params: 501,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 16s 69ms/step - loss: 1.0859 - accuracy: 0.3920 - auc: 0.5697 - f1_score: 0.3991 - val_loss: 1.0746 - val_accuracy: 0.4066 - val_auc: 0.5900 - val_f1_score: 0.3880 Epoch 2/50 188/188 [==============================] - 12s 65ms/step - loss: 1.0744 - accuracy: 0.4076 - auc: 0.5897 - f1_score: 0.3976 - val_loss: 1.0730 - val_accuracy: 0.4058 - val_auc: 0.5920 - val_f1_score: 0.3994 Epoch 3/50 188/188 [==============================] - 13s 67ms/step - loss: 1.0736 - accuracy: 0.4084 - auc: 0.5915 - f1_score: 0.4005 - val_loss: 1.0718 - val_accuracy: 0.4077 - val_auc: 0.5943 - val_f1_score: 0.3935 Epoch 4/50 188/188 [==============================] - 12s 64ms/step - loss: 1.0728 - accuracy: 0.4068 - auc: 0.5916 - f1_score: 0.3996 - val_loss: 1.0721 - val_accuracy: 0.4090 - val_auc: 0.5937 - val_f1_score: 0.3954 Epoch 5/50 188/188 [==============================] - 12s 64ms/step - loss: 1.0729 - accuracy: 0.4081 - auc: 0.5921 - f1_score: 0.4002 - val_loss: 1.0717 - val_accuracy: 0.4083 - val_auc: 0.5939 - val_f1_score: 0.4001 Epoch 6/50 188/188 [==============================] - 12s 63ms/step - loss: 1.0727 - accuracy: 0.4087 - auc: 0.5930 - f1_score: 0.4008 - val_loss: 1.0721 - val_accuracy: 0.4058 - val_auc: 0.5934 - val_f1_score: 0.3898 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 59 0.434331 | 0.427698 | 0.458671 | 0.458018 | 0.651064 | 0.648594 | 0.454947 | 0.453487 | 9 | Simple | 8 | 3 | . 60 0.441610 | 0.434677 | 0.471751 | 0.470249 | 0.663292 | 0.659855 | 0.461930 | 0.459346 | 10 | Simple | 8 | 3 | . 61 0.410930 | 0.404286 | 0.393693 | 0.397595 | 0.576263 | 0.576945 | 0.347596 | 0.349436 | 1 | LSTM | 2 | 2 | . 62 0.413318 | 0.406691 | 0.408496 | 0.409454 | 0.590161 | 0.589968 | 0.404763 | 0.405096 | 2 | LSTM | 2 | 2 | . 63 0.417086 | 0.410738 | 0.413859 | 0.416638 | 0.600008 | 0.601063 | 0.397879 | 0.399353 | 3 | LSTM | 2 | 2 | . 63 rows × 12 columns . Train shape: (83399, 4, 2) Test shape: (10292, 4, 2) Train shape: (83399, 4, 2) Test shape: (10292, 4, 2) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 4, 2)] 0 [] input_2 (InputLayer) [(None, 4, 2)] 0 [] lstm (LSTM) (None, 4, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 4, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 400) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 400) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 802) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 401500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 601,243 Trainable params: 601,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 19s 77ms/step - loss: 1.0807 - accuracy: 0.4000 - auc: 0.5777 - f1_score: 0.3950 - val_loss: 1.0690 - val_accuracy: 0.4082 - val_auc: 0.5998 - val_f1_score: 0.3434 Epoch 2/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0705 - accuracy: 0.4119 - auc: 0.5951 - f1_score: 0.3698 - val_loss: 1.0668 - val_accuracy: 0.4134 - val_auc: 0.6017 - val_f1_score: 0.3840 Epoch 3/50 188/188 [==============================] - 13s 71ms/step - loss: 1.0686 - accuracy: 0.4138 - auc: 0.5987 - f1_score: 0.3901 - val_loss: 1.0669 - val_accuracy: 0.4127 - val_auc: 0.6025 - val_f1_score: 0.3948 Epoch 4/50 188/188 [==============================] - 14s 72ms/step - loss: 1.0687 - accuracy: 0.4143 - auc: 0.5989 - f1_score: 0.3994 - val_loss: 1.0665 - val_accuracy: 0.4170 - val_auc: 0.6035 - val_f1_score: 0.4041 Epoch 5/50 188/188 [==============================] - 13s 71ms/step - loss: 1.0682 - accuracy: 0.4156 - auc: 0.5996 - f1_score: 0.4020 - val_loss: 1.0666 - val_accuracy: 0.4168 - val_auc: 0.6026 - val_f1_score: 0.4006 Epoch 6/50 188/188 [==============================] - 14s 76ms/step - loss: 1.0674 - accuracy: 0.4160 - auc: 0.6010 - f1_score: 0.4026 - val_loss: 1.0670 - val_accuracy: 0.4164 - val_auc: 0.6027 - val_f1_score: 0.4064 Epoch 7/50 188/188 [==============================] - 14s 77ms/step - loss: 1.0672 - accuracy: 0.4163 - auc: 0.6012 - f1_score: 0.4036 - val_loss: 1.0670 - val_accuracy: 0.4103 - val_auc: 0.6009 - val_f1_score: 0.3841 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 60 0.441610 | 0.434677 | 0.471751 | 0.470249 | 0.663292 | 0.659855 | 0.461930 | 0.459346 | 10 | Simple | 8 | 3 | . 61 0.410930 | 0.404286 | 0.393693 | 0.397595 | 0.576263 | 0.576945 | 0.347596 | 0.349436 | 1 | LSTM | 2 | 2 | . 62 0.413318 | 0.406691 | 0.408496 | 0.409454 | 0.590161 | 0.589968 | 0.404763 | 0.405096 | 2 | LSTM | 2 | 2 | . 63 0.417086 | 0.410738 | 0.413859 | 0.416638 | 0.600008 | 0.601063 | 0.397879 | 0.399353 | 3 | LSTM | 2 | 2 | . 64 0.419841 | 0.413588 | 0.420715 | 0.423881 | 0.608033 | 0.609166 | 0.395096 | 0.396718 | 4 | LSTM | 2 | 2 | . 64 rows × 12 columns . Train shape: (83399, 5, 2) Test shape: (10292, 5, 2) Train shape: (83399, 5, 2) Test shape: (10292, 5, 2) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 5, 2)] 0 [] input_2 (InputLayer) [(None, 5, 2)] 0 [] lstm (LSTM) (None, 5, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 5, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 500) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 500) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1002) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 501500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 701,243 Trainable params: 701,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 22s 100ms/step - loss: 1.0908 - accuracy: 0.3797 - auc: 0.5499 - f1_score: 0.4002 - val_loss: 1.0800 - val_accuracy: 0.4080 - val_auc: 0.5846 - val_f1_score: 0.3755 Epoch 2/50 188/188 [==============================] - 17s 90ms/step - loss: 1.0745 - accuracy: 0.4130 - auc: 0.5910 - f1_score: 0.3972 - val_loss: 1.0656 - val_accuracy: 0.4175 - val_auc: 0.6047 - val_f1_score: 0.4051 Epoch 3/50 188/188 [==============================] - 18s 94ms/step - loss: 1.0675 - accuracy: 0.4159 - auc: 0.6009 - f1_score: 0.4070 - val_loss: 1.0652 - val_accuracy: 0.4169 - val_auc: 0.6047 - val_f1_score: 0.3992 Epoch 4/50 188/188 [==============================] - 17s 88ms/step - loss: 1.0668 - accuracy: 0.4175 - auc: 0.6023 - f1_score: 0.4078 - val_loss: 1.0651 - val_accuracy: 0.4157 - val_auc: 0.6049 - val_f1_score: 0.4057 Epoch 5/50 188/188 [==============================] - 16s 85ms/step - loss: 1.0660 - accuracy: 0.4197 - auc: 0.6040 - f1_score: 0.4120 - val_loss: 1.0647 - val_accuracy: 0.4177 - val_auc: 0.6048 - val_f1_score: 0.4105 Epoch 6/50 188/188 [==============================] - 16s 86ms/step - loss: 1.0653 - accuracy: 0.4223 - auc: 0.6049 - f1_score: 0.4155 - val_loss: 1.0637 - val_accuracy: 0.4188 - val_auc: 0.6063 - val_f1_score: 0.4085 Epoch 7/50 188/188 [==============================] - 16s 85ms/step - loss: 1.0639 - accuracy: 0.4219 - auc: 0.6067 - f1_score: 0.4166 - val_loss: 1.0639 - val_accuracy: 0.4171 - val_auc: 0.6053 - val_f1_score: 0.4069 Epoch 8/50 188/188 [==============================] - 16s 86ms/step - loss: 1.0638 - accuracy: 0.4219 - auc: 0.6072 - f1_score: 0.4168 - val_loss: 1.0642 - val_accuracy: 0.4124 - val_auc: 0.6047 - val_f1_score: 0.3957 Epoch 9/50 188/188 [==============================] - 16s 86ms/step - loss: 1.0637 - accuracy: 0.4241 - auc: 0.6079 - f1_score: 0.4172 - val_loss: 1.0644 - val_accuracy: 0.4174 - val_auc: 0.6047 - val_f1_score: 0.4103 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 61 0.410930 | 0.404286 | 0.393693 | 0.397595 | 0.576263 | 0.576945 | 0.347596 | 0.349436 | 1 | LSTM | 2 | 2 | . 62 0.413318 | 0.406691 | 0.408496 | 0.409454 | 0.590161 | 0.589968 | 0.404763 | 0.405096 | 2 | LSTM | 2 | 2 | . 63 0.417086 | 0.410738 | 0.413859 | 0.416638 | 0.600008 | 0.601063 | 0.397879 | 0.399353 | 3 | LSTM | 2 | 2 | . 64 0.419841 | 0.413588 | 0.420715 | 0.423881 | 0.608033 | 0.609166 | 0.395096 | 0.396718 | 4 | LSTM | 2 | 2 | . 65 0.422192 | 0.415801 | 0.429109 | 0.430761 | 0.615495 | 0.615413 | 0.422091 | 0.422747 | 5 | LSTM | 2 | 2 | . 65 rows × 12 columns . Train shape: (83399, 6, 2) Test shape: (10292, 6, 2) Train shape: (83399, 6, 2) Test shape: (10292, 6, 2) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 6, 2)] 0 [] input_2 (InputLayer) [(None, 6, 2)] 0 [] lstm (LSTM) (None, 6, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 6, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 600) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 600) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1202) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 601500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 801,243 Trainable params: 801,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 25s 113ms/step - loss: 1.0778 - accuracy: 0.4059 - auc: 0.5854 - f1_score: 0.4121 - val_loss: 1.0642 - val_accuracy: 0.4181 - val_auc: 0.6060 - val_f1_score: 0.3961 Epoch 2/50 188/188 [==============================] - 20s 108ms/step - loss: 1.0648 - accuracy: 0.4194 - auc: 0.6055 - f1_score: 0.4060 - val_loss: 1.0633 - val_accuracy: 0.4168 - val_auc: 0.6065 - val_f1_score: 0.3927 Epoch 3/50 188/188 [==============================] - 22s 118ms/step - loss: 1.0636 - accuracy: 0.4226 - auc: 0.6074 - f1_score: 0.4090 - val_loss: 1.0623 - val_accuracy: 0.4194 - val_auc: 0.6080 - val_f1_score: 0.4070 Epoch 4/50 188/188 [==============================] - 19s 101ms/step - loss: 1.0634 - accuracy: 0.4223 - auc: 0.6078 - f1_score: 0.4114 - val_loss: 1.0625 - val_accuracy: 0.4156 - val_auc: 0.6080 - val_f1_score: 0.4058 Epoch 5/50 188/188 [==============================] - 20s 104ms/step - loss: 1.0626 - accuracy: 0.4235 - auc: 0.6087 - f1_score: 0.4147 - val_loss: 1.0623 - val_accuracy: 0.4157 - val_auc: 0.6077 - val_f1_score: 0.4070 Epoch 6/50 188/188 [==============================] - 19s 99ms/step - loss: 1.0619 - accuracy: 0.4249 - auc: 0.6099 - f1_score: 0.4170 - val_loss: 1.0625 - val_accuracy: 0.4197 - val_auc: 0.6081 - val_f1_score: 0.4183 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 62 0.413318 | 0.406691 | 0.408496 | 0.409454 | 0.590161 | 0.589968 | 0.404763 | 0.405096 | 2 | LSTM | 2 | 2 | . 63 0.417086 | 0.410738 | 0.413859 | 0.416638 | 0.600008 | 0.601063 | 0.397879 | 0.399353 | 3 | LSTM | 2 | 2 | . 64 0.419841 | 0.413588 | 0.420715 | 0.423881 | 0.608033 | 0.609166 | 0.395096 | 0.396718 | 4 | LSTM | 2 | 2 | . 65 0.422192 | 0.415801 | 0.429109 | 0.430761 | 0.615495 | 0.615413 | 0.422091 | 0.422747 | 5 | LSTM | 2 | 2 | . 66 0.421293 | 0.414861 | 0.432106 | 0.432653 | 0.618415 | 0.617832 | 0.430306 | 0.430218 | 6 | LSTM | 2 | 2 | . 66 rows × 12 columns . Train shape: (83399, 7, 2) Test shape: (10292, 7, 2) Train shape: (83399, 7, 2) Test shape: (10292, 7, 2) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 7, 2)] 0 [] input_2 (InputLayer) [(None, 7, 2)] 0 [] lstm (LSTM) (None, 7, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 7, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 700) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 700) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1402) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 701500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 901,243 Trainable params: 901,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 28s 123ms/step - loss: 1.0780 - accuracy: 0.4116 - auc: 0.5793 - f1_score: 0.4048 - val_loss: 1.0663 - val_accuracy: 0.4152 - val_auc: 0.6024 - val_f1_score: 0.3389 Epoch 2/50 188/188 [==============================] - 22s 117ms/step - loss: 1.0642 - accuracy: 0.4215 - auc: 0.6059 - f1_score: 0.3639 - val_loss: 1.0628 - val_accuracy: 0.4169 - val_auc: 0.6063 - val_f1_score: 0.3688 Epoch 3/50 188/188 [==============================] - 23s 123ms/step - loss: 1.0617 - accuracy: 0.4234 - auc: 0.6096 - f1_score: 0.3853 - val_loss: 1.0620 - val_accuracy: 0.4175 - val_auc: 0.6074 - val_f1_score: 0.3880 Epoch 4/50 188/188 [==============================] - 24s 127ms/step - loss: 1.0613 - accuracy: 0.4258 - auc: 0.6113 - f1_score: 0.4009 - val_loss: 1.0618 - val_accuracy: 0.4219 - val_auc: 0.6092 - val_f1_score: 0.4028 Epoch 5/50 188/188 [==============================] - 23s 122ms/step - loss: 1.0605 - accuracy: 0.4262 - auc: 0.6123 - f1_score: 0.4060 - val_loss: 1.0621 - val_accuracy: 0.4179 - val_auc: 0.6086 - val_f1_score: 0.4021 Epoch 6/50 188/188 [==============================] - 23s 124ms/step - loss: 1.0584 - accuracy: 0.4277 - auc: 0.6145 - f1_score: 0.4117 - val_loss: 1.0613 - val_accuracy: 0.4186 - val_auc: 0.6087 - val_f1_score: 0.4051 Epoch 7/50 188/188 [==============================] - 24s 126ms/step - loss: 1.0587 - accuracy: 0.4288 - auc: 0.6148 - f1_score: 0.4155 - val_loss: 1.0616 - val_accuracy: 0.4189 - val_auc: 0.6085 - val_f1_score: 0.4119 Epoch 8/50 188/188 [==============================] - 23s 124ms/step - loss: 1.0583 - accuracy: 0.4299 - auc: 0.6149 - f1_score: 0.4197 - val_loss: 1.0617 - val_accuracy: 0.4195 - val_auc: 0.6090 - val_f1_score: 0.4133 Epoch 9/50 188/188 [==============================] - 23s 120ms/step - loss: 1.0590 - accuracy: 0.4281 - auc: 0.6143 - f1_score: 0.4197 - val_loss: 1.0614 - val_accuracy: 0.4197 - val_auc: 0.6089 - val_f1_score: 0.4139 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 63 0.417086 | 0.410738 | 0.413859 | 0.416638 | 0.600008 | 0.601063 | 0.397879 | 0.399353 | 3 | LSTM | 2 | 2 | . 64 0.419841 | 0.413588 | 0.420715 | 0.423881 | 0.608033 | 0.609166 | 0.395096 | 0.396718 | 4 | LSTM | 2 | 2 | . 65 0.422192 | 0.415801 | 0.429109 | 0.430761 | 0.615495 | 0.615413 | 0.422091 | 0.422747 | 5 | LSTM | 2 | 2 | . 66 0.421293 | 0.414861 | 0.432106 | 0.432653 | 0.618415 | 0.617832 | 0.430306 | 0.430218 | 6 | LSTM | 2 | 2 | . 67 0.423153 | 0.416833 | 0.434657 | 0.436367 | 0.622302 | 0.622161 | 0.427952 | 0.428796 | 7 | LSTM | 2 | 2 | . 67 rows × 12 columns . Train shape: (83399, 8, 2) Test shape: (10292, 8, 2) Train shape: (83399, 8, 2) Test shape: (10292, 8, 2) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 8, 2)] 0 [] input_2 (InputLayer) [(None, 8, 2)] 0 [] lstm (LSTM) (None, 8, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 8, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 800) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 800) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1602) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 801500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,001,243 Trainable params: 1,001,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 30s 137ms/step - loss: 1.0826 - accuracy: 0.3736 - auc: 0.5681 - f1_score: 0.4073 - val_loss: 1.0751 - val_accuracy: 0.3854 - val_auc: 0.5835 - val_f1_score: 0.3278 Epoch 2/50 188/188 [==============================] - 24s 128ms/step - loss: 1.0672 - accuracy: 0.4140 - auc: 0.6013 - f1_score: 0.4113 - val_loss: 1.0632 - val_accuracy: 0.4125 - val_auc: 0.6054 - val_f1_score: 0.3877 Epoch 3/50 188/188 [==============================] - 26s 138ms/step - loss: 1.0608 - accuracy: 0.4240 - auc: 0.6111 - f1_score: 0.4128 - val_loss: 1.0621 - val_accuracy: 0.4147 - val_auc: 0.6067 - val_f1_score: 0.4031 Epoch 4/50 188/188 [==============================] - 29s 155ms/step - loss: 1.0585 - accuracy: 0.4285 - auc: 0.6144 - f1_score: 0.4223 - val_loss: 1.0616 - val_accuracy: 0.4169 - val_auc: 0.6085 - val_f1_score: 0.4042 Epoch 5/50 188/188 [==============================] - 24s 129ms/step - loss: 1.0589 - accuracy: 0.4284 - auc: 0.6147 - f1_score: 0.4205 - val_loss: 1.0615 - val_accuracy: 0.4152 - val_auc: 0.6081 - val_f1_score: 0.4113 Epoch 6/50 188/188 [==============================] - 23s 125ms/step - loss: 1.0582 - accuracy: 0.4284 - auc: 0.6155 - f1_score: 0.4221 - val_loss: 1.0610 - val_accuracy: 0.4219 - val_auc: 0.6091 - val_f1_score: 0.4202 Epoch 7/50 188/188 [==============================] - 24s 127ms/step - loss: 1.0570 - accuracy: 0.4322 - auc: 0.6175 - f1_score: 0.4277 - val_loss: 1.0614 - val_accuracy: 0.4206 - val_auc: 0.6088 - val_f1_score: 0.4110 Epoch 8/50 188/188 [==============================] - 23s 124ms/step - loss: 1.0568 - accuracy: 0.4342 - auc: 0.6186 - f1_score: 0.4278 - val_loss: 1.0613 - val_accuracy: 0.4169 - val_auc: 0.6085 - val_f1_score: 0.4096 Epoch 9/50 188/188 [==============================] - 23s 123ms/step - loss: 1.0561 - accuracy: 0.4329 - auc: 0.6195 - f1_score: 0.4274 - val_loss: 1.0618 - val_accuracy: 0.4152 - val_auc: 0.6073 - val_f1_score: 0.4056 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 64 0.419841 | 0.413588 | 0.420715 | 0.423881 | 0.608033 | 0.609166 | 0.395096 | 0.396718 | 4 | LSTM | 2 | 2 | . 65 0.422192 | 0.415801 | 0.429109 | 0.430761 | 0.615495 | 0.615413 | 0.422091 | 0.422747 | 5 | LSTM | 2 | 2 | . 66 0.421293 | 0.414861 | 0.432106 | 0.432653 | 0.618415 | 0.617832 | 0.430306 | 0.430218 | 6 | LSTM | 2 | 2 | . 67 0.423153 | 0.416833 | 0.434657 | 0.436367 | 0.622302 | 0.622161 | 0.427952 | 0.428796 | 7 | LSTM | 2 | 2 | . 68 0.425347 | 0.419001 | 0.441132 | 0.442856 | 0.628616 | 0.628440 | 0.431302 | 0.432004 | 8 | LSTM | 2 | 2 | . 68 rows × 12 columns . Train shape: (83399, 9, 2) Test shape: (10292, 9, 2) Train shape: (83399, 9, 2) Test shape: (10292, 9, 2) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 9, 2)] 0 [] input_2 (InputLayer) [(None, 9, 2)] 0 [] lstm (LSTM) (None, 9, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 9, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 900) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 900) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1802) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 901500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,101,243 Trainable params: 1,101,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 36s 156ms/step - loss: 1.0750 - accuracy: 0.4165 - auc: 0.5893 - f1_score: 0.4117 - val_loss: 1.0637 - val_accuracy: 0.4175 - val_auc: 0.6052 - val_f1_score: 0.4038 Epoch 2/50 188/188 [==============================] - 27s 146ms/step - loss: 1.0612 - accuracy: 0.4272 - auc: 0.6112 - f1_score: 0.4180 - val_loss: 1.0613 - val_accuracy: 0.4223 - val_auc: 0.6091 - val_f1_score: 0.4170 Epoch 3/50 188/188 [==============================] - 27s 144ms/step - loss: 1.0592 - accuracy: 0.4292 - auc: 0.6140 - f1_score: 0.4233 - val_loss: 1.0613 - val_accuracy: 0.4224 - val_auc: 0.6092 - val_f1_score: 0.4176 Epoch 4/50 188/188 [==============================] - 27s 144ms/step - loss: 1.0583 - accuracy: 0.4288 - auc: 0.6151 - f1_score: 0.4231 - val_loss: 1.0609 - val_accuracy: 0.4193 - val_auc: 0.6097 - val_f1_score: 0.4142 Epoch 5/50 188/188 [==============================] - 28s 150ms/step - loss: 1.0572 - accuracy: 0.4317 - auc: 0.6170 - f1_score: 0.4276 - val_loss: 1.0609 - val_accuracy: 0.4181 - val_auc: 0.6101 - val_f1_score: 0.4126 Epoch 6/50 188/188 [==============================] - 27s 145ms/step - loss: 1.0568 - accuracy: 0.4329 - auc: 0.6184 - f1_score: 0.4284 - val_loss: 1.0606 - val_accuracy: 0.4192 - val_auc: 0.6101 - val_f1_score: 0.4146 Epoch 7/50 188/188 [==============================] - 28s 149ms/step - loss: 1.0560 - accuracy: 0.4330 - auc: 0.6192 - f1_score: 0.4291 - val_loss: 1.0613 - val_accuracy: 0.4177 - val_auc: 0.6088 - val_f1_score: 0.4139 Epoch 8/50 188/188 [==============================] - 27s 146ms/step - loss: 1.0552 - accuracy: 0.4367 - auc: 0.6213 - f1_score: 0.4322 - val_loss: 1.0605 - val_accuracy: 0.4222 - val_auc: 0.6109 - val_f1_score: 0.4170 Epoch 9/50 188/188 [==============================] - 28s 148ms/step - loss: 1.0557 - accuracy: 0.4368 - auc: 0.6206 - f1_score: 0.4334 - val_loss: 1.0607 - val_accuracy: 0.4180 - val_auc: 0.6098 - val_f1_score: 0.4126 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 65 0.422192 | 0.415801 | 0.429109 | 0.430761 | 0.615495 | 0.615413 | 0.422091 | 0.422747 | 5 | LSTM | 2 | 2 | . 66 0.421293 | 0.414861 | 0.432106 | 0.432653 | 0.618415 | 0.617832 | 0.430306 | 0.430218 | 6 | LSTM | 2 | 2 | . 67 0.423153 | 0.416833 | 0.434657 | 0.436367 | 0.622302 | 0.622161 | 0.427952 | 0.428796 | 7 | LSTM | 2 | 2 | . 68 0.425347 | 0.419001 | 0.441132 | 0.442856 | 0.628616 | 0.628440 | 0.431302 | 0.432004 | 8 | LSTM | 2 | 2 | . 69 0.426285 | 0.419939 | 0.444707 | 0.445365 | 0.630568 | 0.629962 | 0.438532 | 0.438226 | 9 | LSTM | 2 | 2 | . 69 rows × 12 columns . Train shape: (83399, 10, 2) Test shape: (10292, 10, 2) Train shape: (83399, 10, 2) Test shape: (10292, 10, 2) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 2)] 0 [] input_2 (InputLayer) [(None, 10, 2)] 0 [] lstm (LSTM) (None, 10, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 10, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 2002) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1001500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,201,243 Trainable params: 1,201,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 36s 160ms/step - loss: 1.0794 - accuracy: 0.3804 - auc: 0.5771 - f1_score: 0.4146 - val_loss: 1.0712 - val_accuracy: 0.4149 - val_auc: 0.5993 - val_f1_score: 0.4134 Epoch 2/50 188/188 [==============================] - 29s 156ms/step - loss: 1.0625 - accuracy: 0.4237 - auc: 0.6100 - f1_score: 0.4145 - val_loss: 1.0612 - val_accuracy: 0.4210 - val_auc: 0.6111 - val_f1_score: 0.3991 Epoch 3/50 188/188 [==============================] - 31s 163ms/step - loss: 1.0581 - accuracy: 0.4320 - auc: 0.6156 - f1_score: 0.4171 - val_loss: 1.0596 - val_accuracy: 0.4222 - val_auc: 0.6132 - val_f1_score: 0.4050 Epoch 4/50 188/188 [==============================] - 29s 154ms/step - loss: 1.0566 - accuracy: 0.4322 - auc: 0.6180 - f1_score: 0.4195 - val_loss: 1.0597 - val_accuracy: 0.4223 - val_auc: 0.6128 - val_f1_score: 0.4114 Epoch 5/50 188/188 [==============================] - 31s 165ms/step - loss: 1.0554 - accuracy: 0.4337 - auc: 0.6200 - f1_score: 0.4264 - val_loss: 1.0597 - val_accuracy: 0.4248 - val_auc: 0.6130 - val_f1_score: 0.4212 Epoch 6/50 188/188 [==============================] - 30s 157ms/step - loss: 1.0540 - accuracy: 0.4370 - auc: 0.6227 - f1_score: 0.4319 - val_loss: 1.0601 - val_accuracy: 0.4230 - val_auc: 0.6125 - val_f1_score: 0.4159 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 66 0.421293 | 0.414861 | 0.432106 | 0.432653 | 0.618415 | 0.617832 | 0.430306 | 0.430218 | 6 | LSTM | 2 | 2 | . 67 0.423153 | 0.416833 | 0.434657 | 0.436367 | 0.622302 | 0.622161 | 0.427952 | 0.428796 | 7 | LSTM | 2 | 2 | . 68 0.425347 | 0.419001 | 0.441132 | 0.442856 | 0.628616 | 0.628440 | 0.431302 | 0.432004 | 8 | LSTM | 2 | 2 | . 69 0.426285 | 0.419939 | 0.444707 | 0.445365 | 0.630568 | 0.629962 | 0.438532 | 0.438226 | 9 | LSTM | 2 | 2 | . 70 0.427374 | 0.421171 | 0.443661 | 0.444747 | 0.630587 | 0.630568 | 0.436326 | 0.436371 | 10 | LSTM | 2 | 2 | . 70 rows × 12 columns . Train shape: (83399, 1, 2) Test shape: (10292, 1, 2) Train shape: (83399, 1, 2) Test shape: (10292, 1, 2) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 1, 2)] 0 [] input_2 (InputLayer) [(None, 1, 2)] 0 [] simple_rnn (SimpleRNN) (None, 1, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 1, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 100) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 100) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 202) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 101500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 240,043 Trainable params: 240,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 8s 28ms/step - loss: 1.0907 - accuracy: 0.3669 - auc: 0.5507 - f1_score: 0.4050 - val_loss: 1.0865 - val_accuracy: 0.3871 - val_auc: 0.5672 - val_f1_score: 0.3532 Epoch 2/50 188/188 [==============================] - 5s 24ms/step - loss: 1.0857 - accuracy: 0.3880 - auc: 0.5666 - f1_score: 0.3678 - val_loss: 1.0833 - val_accuracy: 0.3966 - val_auc: 0.5738 - val_f1_score: 0.3408 Epoch 3/50 188/188 [==============================] - 5s 26ms/step - loss: 1.0845 - accuracy: 0.3894 - auc: 0.5694 - f1_score: 0.3616 - val_loss: 1.0827 - val_accuracy: 0.3958 - val_auc: 0.5751 - val_f1_score: 0.3445 Epoch 4/50 188/188 [==============================] - 5s 24ms/step - loss: 1.0837 - accuracy: 0.3913 - auc: 0.5712 - f1_score: 0.3531 - val_loss: 1.0826 - val_accuracy: 0.3924 - val_auc: 0.5752 - val_f1_score: 0.3222 Epoch 5/50 188/188 [==============================] - 5s 24ms/step - loss: 1.0838 - accuracy: 0.3899 - auc: 0.5708 - f1_score: 0.3514 - val_loss: 1.0823 - val_accuracy: 0.3920 - val_auc: 0.5752 - val_f1_score: 0.3354 Epoch 6/50 188/188 [==============================] - 5s 25ms/step - loss: 1.0836 - accuracy: 0.3915 - auc: 0.5717 - f1_score: 0.3487 - val_loss: 1.0819 - val_accuracy: 0.3902 - val_auc: 0.5759 - val_f1_score: 0.3537 Epoch 7/50 188/188 [==============================] - 5s 25ms/step - loss: 1.0837 - accuracy: 0.3926 - auc: 0.5716 - f1_score: 0.3602 - val_loss: 1.0824 - val_accuracy: 0.3869 - val_auc: 0.5743 - val_f1_score: 0.3504 Epoch 8/50 188/188 [==============================] - 5s 26ms/step - loss: 1.0834 - accuracy: 0.3919 - auc: 0.5722 - f1_score: 0.3575 - val_loss: 1.0827 - val_accuracy: 0.3888 - val_auc: 0.5731 - val_f1_score: 0.3557 Epoch 9/50 188/188 [==============================] - 6s 33ms/step - loss: 1.0836 - accuracy: 0.3911 - auc: 0.5724 - f1_score: 0.3517 - val_loss: 1.0823 - val_accuracy: 0.3910 - val_auc: 0.5750 - val_f1_score: 0.3481 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 67 0.423153 | 0.416833 | 0.434657 | 0.436367 | 0.622302 | 0.622161 | 0.427952 | 0.428796 | 7 | LSTM | 2 | 2 | . 68 0.425347 | 0.419001 | 0.441132 | 0.442856 | 0.628616 | 0.628440 | 0.431302 | 0.432004 | 8 | LSTM | 2 | 2 | . 69 0.426285 | 0.419939 | 0.444707 | 0.445365 | 0.630568 | 0.629962 | 0.438532 | 0.438226 | 9 | LSTM | 2 | 2 | . 70 0.427374 | 0.421171 | 0.443661 | 0.444747 | 0.630587 | 0.630568 | 0.436326 | 0.436371 | 10 | LSTM | 2 | 2 | . 71 0.410917 | 0.404180 | 0.394925 | 0.398624 | 0.577812 | 0.578069 | 0.352692 | 0.354411 | 1 | Simple | 2 | 2 | . 71 rows × 12 columns . Train shape: (83399, 2, 2) Test shape: (10292, 2, 2) Train shape: (83399, 2, 2) Test shape: (10292, 2, 2) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 2, 2)] 0 [] input_2 (InputLayer) [(None, 2, 2)] 0 [] simple_rnn (SimpleRNN) (None, 2, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 2, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 200) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 200) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 402) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 201500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 340,043 Trainable params: 340,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 12s 42ms/step - loss: 1.0874 - accuracy: 0.3804 - auc: 0.5596 - f1_score: 0.3557 - val_loss: 1.0821 - val_accuracy: 0.3957 - val_auc: 0.5754 - val_f1_score: 0.3504 Epoch 2/50 188/188 [==============================] - 6s 33ms/step - loss: 1.0808 - accuracy: 0.3992 - auc: 0.5782 - f1_score: 0.3684 - val_loss: 1.0790 - val_accuracy: 0.4011 - val_auc: 0.5822 - val_f1_score: 0.3796 Epoch 3/50 188/188 [==============================] - 6s 34ms/step - loss: 1.0791 - accuracy: 0.3990 - auc: 0.5804 - f1_score: 0.3755 - val_loss: 1.0783 - val_accuracy: 0.4004 - val_auc: 0.5838 - val_f1_score: 0.3825 Epoch 4/50 188/188 [==============================] - 6s 33ms/step - loss: 1.0781 - accuracy: 0.4017 - auc: 0.5829 - f1_score: 0.3823 - val_loss: 1.0778 - val_accuracy: 0.4007 - val_auc: 0.5848 - val_f1_score: 0.3705 Epoch 5/50 188/188 [==============================] - 7s 35ms/step - loss: 1.0776 - accuracy: 0.4029 - auc: 0.5839 - f1_score: 0.3849 - val_loss: 1.0780 - val_accuracy: 0.4062 - val_auc: 0.5863 - val_f1_score: 0.3815 Epoch 6/50 188/188 [==============================] - 7s 36ms/step - loss: 1.0775 - accuracy: 0.4014 - auc: 0.5842 - f1_score: 0.3839 - val_loss: 1.0782 - val_accuracy: 0.4023 - val_auc: 0.5857 - val_f1_score: 0.3915 Epoch 7/50 188/188 [==============================] - 7s 35ms/step - loss: 1.0775 - accuracy: 0.4012 - auc: 0.5838 - f1_score: 0.3860 - val_loss: 1.0776 - val_accuracy: 0.4028 - val_auc: 0.5869 - val_f1_score: 0.3869 Epoch 8/50 188/188 [==============================] - 7s 35ms/step - loss: 1.0775 - accuracy: 0.4033 - auc: 0.5843 - f1_score: 0.3881 - val_loss: 1.0775 - val_accuracy: 0.4026 - val_auc: 0.5866 - val_f1_score: 0.3894 Epoch 9/50 188/188 [==============================] - 6s 34ms/step - loss: 1.0775 - accuracy: 0.4025 - auc: 0.5848 - f1_score: 0.3860 - val_loss: 1.0772 - val_accuracy: 0.4042 - val_auc: 0.5877 - val_f1_score: 0.3802 Epoch 10/50 188/188 [==============================] - 7s 38ms/step - loss: 1.0770 - accuracy: 0.4027 - auc: 0.5854 - f1_score: 0.3868 - val_loss: 1.0772 - val_accuracy: 0.4026 - val_auc: 0.5871 - val_f1_score: 0.3849 Epoch 11/50 188/188 [==============================] - 7s 40ms/step - loss: 1.0760 - accuracy: 0.4047 - auc: 0.5871 - f1_score: 0.3913 - val_loss: 1.0774 - val_accuracy: 0.3998 - val_auc: 0.5878 - val_f1_score: 0.3854 Epoch 12/50 188/188 [==============================] - 7s 38ms/step - loss: 1.0768 - accuracy: 0.4034 - auc: 0.5857 - f1_score: 0.3924 - val_loss: 1.0766 - val_accuracy: 0.4024 - val_auc: 0.5886 - val_f1_score: 0.3857 Epoch 13/50 188/188 [==============================] - 6s 33ms/step - loss: 1.0767 - accuracy: 0.4045 - auc: 0.5864 - f1_score: 0.3910 - val_loss: 1.0769 - val_accuracy: 0.4047 - val_auc: 0.5884 - val_f1_score: 0.3869 Epoch 14/50 188/188 [==============================] - 6s 33ms/step - loss: 1.0763 - accuracy: 0.4049 - auc: 0.5871 - f1_score: 0.3893 - val_loss: 1.0766 - val_accuracy: 0.4030 - val_auc: 0.5887 - val_f1_score: 0.3839 Epoch 15/50 188/188 [==============================] - 6s 33ms/step - loss: 1.0763 - accuracy: 0.4056 - auc: 0.5872 - f1_score: 0.3938 - val_loss: 1.0769 - val_accuracy: 0.4025 - val_auc: 0.5879 - val_f1_score: 0.3847 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 68 0.425347 | 0.419001 | 0.441132 | 0.442856 | 0.628616 | 0.628440 | 0.431302 | 0.432004 | 8 | LSTM | 2 | 2 | . 69 0.426285 | 0.419939 | 0.444707 | 0.445365 | 0.630568 | 0.629962 | 0.438532 | 0.438226 | 9 | LSTM | 2 | 2 | . 70 0.427374 | 0.421171 | 0.443661 | 0.444747 | 0.630587 | 0.630568 | 0.436326 | 0.436371 | 10 | LSTM | 2 | 2 | . 71 0.410917 | 0.404180 | 0.394925 | 0.398624 | 0.577812 | 0.578069 | 0.352692 | 0.354411 | 1 | Simple | 2 | 2 | . 72 0.414599 | 0.407993 | 0.410305 | 0.412649 | 0.594682 | 0.594554 | 0.393465 | 0.394592 | 2 | Simple | 2 | 2 | . 72 rows × 12 columns . Train shape: (83399, 3, 2) Test shape: (10292, 3, 2) Train shape: (83399, 3, 2) Test shape: (10292, 3, 2) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 3, 2)] 0 [] input_2 (InputLayer) [(None, 3, 2)] 0 [] simple_rnn (SimpleRNN) (None, 3, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 3, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 300) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 300) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 602) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 301500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 440,043 Trainable params: 440,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 13s 50ms/step - loss: 1.0863 - accuracy: 0.3847 - auc: 0.5621 - f1_score: 0.3822 - val_loss: 1.0769 - val_accuracy: 0.4026 - val_auc: 0.5854 - val_f1_score: 0.3896 Epoch 2/50 188/188 [==============================] - 8s 44ms/step - loss: 1.0772 - accuracy: 0.4012 - auc: 0.5838 - f1_score: 0.3879 - val_loss: 1.0753 - val_accuracy: 0.4068 - val_auc: 0.5890 - val_f1_score: 0.3883 Epoch 3/50 188/188 [==============================] - 8s 40ms/step - loss: 1.0741 - accuracy: 0.4083 - auc: 0.5902 - f1_score: 0.3945 - val_loss: 1.0732 - val_accuracy: 0.4110 - val_auc: 0.5927 - val_f1_score: 0.3982 Epoch 4/50 188/188 [==============================] - 8s 42ms/step - loss: 1.0733 - accuracy: 0.4092 - auc: 0.5917 - f1_score: 0.3943 - val_loss: 1.0737 - val_accuracy: 0.4061 - val_auc: 0.5907 - val_f1_score: 0.3854 Epoch 5/50 188/188 [==============================] - 8s 42ms/step - loss: 1.0720 - accuracy: 0.4118 - auc: 0.5943 - f1_score: 0.3938 - val_loss: 1.0719 - val_accuracy: 0.4088 - val_auc: 0.5947 - val_f1_score: 0.3911 Epoch 6/50 188/188 [==============================] - 7s 39ms/step - loss: 1.0717 - accuracy: 0.4097 - auc: 0.5943 - f1_score: 0.3932 - val_loss: 1.0719 - val_accuracy: 0.4065 - val_auc: 0.5945 - val_f1_score: 0.3905 Epoch 7/50 188/188 [==============================] - 8s 42ms/step - loss: 1.0722 - accuracy: 0.4102 - auc: 0.5935 - f1_score: 0.3952 - val_loss: 1.0721 - val_accuracy: 0.4090 - val_auc: 0.5936 - val_f1_score: 0.3990 Epoch 8/50 188/188 [==============================] - 8s 40ms/step - loss: 1.0712 - accuracy: 0.4119 - auc: 0.5963 - f1_score: 0.3978 - val_loss: 1.0726 - val_accuracy: 0.4118 - val_auc: 0.5932 - val_f1_score: 0.3981 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 69 0.426285 | 0.419939 | 0.444707 | 0.445365 | 0.630568 | 0.629962 | 0.438532 | 0.438226 | 9 | LSTM | 2 | 2 | . 70 0.427374 | 0.421171 | 0.443661 | 0.444747 | 0.630587 | 0.630568 | 0.436326 | 0.436371 | 10 | LSTM | 2 | 2 | . 71 0.410917 | 0.404180 | 0.394925 | 0.398624 | 0.577812 | 0.578069 | 0.352692 | 0.354411 | 1 | Simple | 2 | 2 | . 72 0.414599 | 0.407993 | 0.410305 | 0.412649 | 0.594682 | 0.594554 | 0.393465 | 0.394592 | 2 | Simple | 2 | 2 | . 73 0.418077 | 0.411569 | 0.419266 | 0.421490 | 0.603743 | 0.603930 | 0.405959 | 0.406901 | 3 | Simple | 2 | 2 | . 73 rows × 12 columns . Train shape: (83399, 4, 2) Test shape: (10292, 4, 2) Train shape: (83399, 4, 2) Test shape: (10292, 4, 2) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 4, 2)] 0 [] input_2 (InputLayer) [(None, 4, 2)] 0 [] simple_rnn (SimpleRNN) (None, 4, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 4, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 400) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 400) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 802) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 401500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 540,043 Trainable params: 540,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 12s 48ms/step - loss: 1.0833 - accuracy: 0.3897 - auc: 0.5677 - f1_score: 0.3970 - val_loss: 1.0752 - val_accuracy: 0.4042 - val_auc: 0.5839 - val_f1_score: 0.3510 Epoch 2/50 188/188 [==============================] - 9s 47ms/step - loss: 1.0741 - accuracy: 0.4062 - auc: 0.5876 - f1_score: 0.3723 - val_loss: 1.0718 - val_accuracy: 0.4064 - val_auc: 0.5904 - val_f1_score: 0.3630 Epoch 3/50 188/188 [==============================] - 9s 49ms/step - loss: 1.0713 - accuracy: 0.4095 - auc: 0.5928 - f1_score: 0.3741 - val_loss: 1.0699 - val_accuracy: 0.4064 - val_auc: 0.5937 - val_f1_score: 0.3628 Epoch 4/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0689 - accuracy: 0.4131 - auc: 0.5972 - f1_score: 0.3884 - val_loss: 1.0701 - val_accuracy: 0.4106 - val_auc: 0.5948 - val_f1_score: 0.3726 Epoch 5/50 188/188 [==============================] - 10s 56ms/step - loss: 1.0683 - accuracy: 0.4166 - auc: 0.5995 - f1_score: 0.3980 - val_loss: 1.0697 - val_accuracy: 0.4113 - val_auc: 0.5969 - val_f1_score: 0.3860 Epoch 6/50 188/188 [==============================] - 9s 46ms/step - loss: 1.0682 - accuracy: 0.4154 - auc: 0.5994 - f1_score: 0.3979 - val_loss: 1.0692 - val_accuracy: 0.4104 - val_auc: 0.5975 - val_f1_score: 0.3823 Epoch 7/50 188/188 [==============================] - 11s 57ms/step - loss: 1.0680 - accuracy: 0.4164 - auc: 0.6007 - f1_score: 0.3984 - val_loss: 1.0693 - val_accuracy: 0.4119 - val_auc: 0.5966 - val_f1_score: 0.3938 Epoch 8/50 188/188 [==============================] - 11s 60ms/step - loss: 1.0666 - accuracy: 0.4183 - auc: 0.6027 - f1_score: 0.4020 - val_loss: 1.0681 - val_accuracy: 0.4095 - val_auc: 0.5990 - val_f1_score: 0.3908 Epoch 9/50 188/188 [==============================] - 11s 57ms/step - loss: 1.0669 - accuracy: 0.4177 - auc: 0.6017 - f1_score: 0.4048 - val_loss: 1.0682 - val_accuracy: 0.4066 - val_auc: 0.5982 - val_f1_score: 0.3779 Epoch 10/50 188/188 [==============================] - 10s 54ms/step - loss: 1.0658 - accuracy: 0.4192 - auc: 0.6043 - f1_score: 0.4076 - val_loss: 1.0682 - val_accuracy: 0.4145 - val_auc: 0.5992 - val_f1_score: 0.4031 Epoch 11/50 188/188 [==============================] - 9s 49ms/step - loss: 1.0650 - accuracy: 0.4192 - auc: 0.6048 - f1_score: 0.4074 - val_loss: 1.0688 - val_accuracy: 0.4095 - val_auc: 0.5981 - val_f1_score: 0.3954 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 70 0.427374 | 0.421171 | 0.443661 | 0.444747 | 0.630587 | 0.630568 | 0.436326 | 0.436371 | 10 | LSTM | 2 | 2 | . 71 0.410917 | 0.404180 | 0.394925 | 0.398624 | 0.577812 | 0.578069 | 0.352692 | 0.354411 | 1 | Simple | 2 | 2 | . 72 0.414599 | 0.407993 | 0.410305 | 0.412649 | 0.594682 | 0.594554 | 0.393465 | 0.394592 | 2 | Simple | 2 | 2 | . 73 0.418077 | 0.411569 | 0.419266 | 0.421490 | 0.603743 | 0.603930 | 0.405959 | 0.406901 | 3 | Simple | 2 | 2 | . 74 0.421872 | 0.415397 | 0.427670 | 0.429654 | 0.614013 | 0.613847 | 0.413532 | 0.414293 | 4 | Simple | 2 | 2 | . 74 rows × 12 columns . Train shape: (83399, 5, 2) Test shape: (10292, 5, 2) Train shape: (83399, 5, 2) Test shape: (10292, 5, 2) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 5, 2)] 0 [] input_2 (InputLayer) [(None, 5, 2)] 0 [] simple_rnn (SimpleRNN) (None, 5, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 5, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 500) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 500) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1002) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 501500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 640,043 Trainable params: 640,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 13s 55ms/step - loss: 1.0926 - accuracy: 0.3615 - auc: 0.5385 - f1_score: 0.3960 - val_loss: 1.0839 - val_accuracy: 0.3769 - val_auc: 0.5647 - val_f1_score: 0.3059 Epoch 2/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0839 - accuracy: 0.3719 - auc: 0.5655 - f1_score: 0.3127 - val_loss: 1.0801 - val_accuracy: 0.3778 - val_auc: 0.5719 - val_f1_score: 0.3471 Epoch 3/50 188/188 [==============================] - 11s 56ms/step - loss: 1.0807 - accuracy: 0.3795 - auc: 0.5747 - f1_score: 0.3489 - val_loss: 1.0782 - val_accuracy: 0.3783 - val_auc: 0.5781 - val_f1_score: 0.3691 Epoch 4/50 188/188 [==============================] - 13s 72ms/step - loss: 1.0776 - accuracy: 0.3843 - auc: 0.5824 - f1_score: 0.3663 - val_loss: 1.0761 - val_accuracy: 0.3811 - val_auc: 0.5831 - val_f1_score: 0.3764 Epoch 5/50 188/188 [==============================] - 12s 65ms/step - loss: 1.0754 - accuracy: 0.3873 - auc: 0.5867 - f1_score: 0.3796 - val_loss: 1.0748 - val_accuracy: 0.3830 - val_auc: 0.5863 - val_f1_score: 0.3758 Epoch 6/50 188/188 [==============================] - 13s 68ms/step - loss: 1.0728 - accuracy: 0.3979 - auc: 0.5927 - f1_score: 0.3967 - val_loss: 1.0728 - val_accuracy: 0.4024 - val_auc: 0.5922 - val_f1_score: 0.3755 Epoch 7/50 188/188 [==============================] - 12s 61ms/step - loss: 1.0701 - accuracy: 0.4090 - auc: 0.5969 - f1_score: 0.4009 - val_loss: 1.0708 - val_accuracy: 0.4165 - val_auc: 0.5943 - val_f1_score: 0.3777 Epoch 8/50 188/188 [==============================] - 11s 58ms/step - loss: 1.0683 - accuracy: 0.4165 - auc: 0.5996 - f1_score: 0.4005 - val_loss: 1.0710 - val_accuracy: 0.4088 - val_auc: 0.5925 - val_f1_score: 0.3626 Epoch 9/50 188/188 [==============================] - 11s 57ms/step - loss: 1.0673 - accuracy: 0.4189 - auc: 0.6013 - f1_score: 0.3993 - val_loss: 1.0702 - val_accuracy: 0.4156 - val_auc: 0.5948 - val_f1_score: 0.3903 Epoch 10/50 188/188 [==============================] - 10s 55ms/step - loss: 1.0660 - accuracy: 0.4204 - auc: 0.6041 - f1_score: 0.4016 - val_loss: 1.0698 - val_accuracy: 0.4144 - val_auc: 0.5953 - val_f1_score: 0.3904 Epoch 11/50 188/188 [==============================] - 11s 56ms/step - loss: 1.0659 - accuracy: 0.4188 - auc: 0.6037 - f1_score: 0.4022 - val_loss: 1.0687 - val_accuracy: 0.4112 - val_auc: 0.5972 - val_f1_score: 0.3956 Epoch 12/50 188/188 [==============================] - 13s 68ms/step - loss: 1.0643 - accuracy: 0.4213 - auc: 0.6058 - f1_score: 0.4058 - val_loss: 1.0680 - val_accuracy: 0.4108 - val_auc: 0.5979 - val_f1_score: 0.3816 Epoch 13/50 188/188 [==============================] - 12s 63ms/step - loss: 1.0632 - accuracy: 0.4232 - auc: 0.6076 - f1_score: 0.4111 - val_loss: 1.0672 - val_accuracy: 0.4162 - val_auc: 0.6000 - val_f1_score: 0.3944 Epoch 14/50 188/188 [==============================] - 13s 68ms/step - loss: 1.0623 - accuracy: 0.4248 - auc: 0.6095 - f1_score: 0.4130 - val_loss: 1.0673 - val_accuracy: 0.4181 - val_auc: 0.6006 - val_f1_score: 0.4016 Epoch 15/50 188/188 [==============================] - 12s 63ms/step - loss: 1.0618 - accuracy: 0.4234 - auc: 0.6096 - f1_score: 0.4135 - val_loss: 1.0666 - val_accuracy: 0.4145 - val_auc: 0.6015 - val_f1_score: 0.4017 Epoch 16/50 188/188 [==============================] - 12s 64ms/step - loss: 1.0613 - accuracy: 0.4261 - auc: 0.6113 - f1_score: 0.4167 - val_loss: 1.0665 - val_accuracy: 0.4180 - val_auc: 0.6021 - val_f1_score: 0.4065 Epoch 17/50 188/188 [==============================] - 12s 62ms/step - loss: 1.0608 - accuracy: 0.4259 - auc: 0.6119 - f1_score: 0.4176 - val_loss: 1.0662 - val_accuracy: 0.4203 - val_auc: 0.6026 - val_f1_score: 0.4109 Epoch 18/50 188/188 [==============================] - 12s 64ms/step - loss: 1.0601 - accuracy: 0.4264 - auc: 0.6128 - f1_score: 0.4192 - val_loss: 1.0683 - val_accuracy: 0.4179 - val_auc: 0.5983 - val_f1_score: 0.4107 Epoch 19/50 188/188 [==============================] - 12s 62ms/step - loss: 1.0602 - accuracy: 0.4269 - auc: 0.6135 - f1_score: 0.4200 - val_loss: 1.0665 - val_accuracy: 0.4173 - val_auc: 0.6020 - val_f1_score: 0.4028 Epoch 20/50 188/188 [==============================] - 11s 59ms/step - loss: 1.0594 - accuracy: 0.4286 - auc: 0.6142 - f1_score: 0.4208 - val_loss: 1.0669 - val_accuracy: 0.4216 - val_auc: 0.6010 - val_f1_score: 0.4104 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 71 0.410917 | 0.404180 | 0.394925 | 0.398624 | 0.577812 | 0.578069 | 0.352692 | 0.354411 | 1 | Simple | 2 | 2 | . 72 0.414599 | 0.407993 | 0.410305 | 0.412649 | 0.594682 | 0.594554 | 0.393465 | 0.394592 | 2 | Simple | 2 | 2 | . 73 0.418077 | 0.411569 | 0.419266 | 0.421490 | 0.603743 | 0.603930 | 0.405959 | 0.406901 | 3 | Simple | 2 | 2 | . 74 0.421872 | 0.415397 | 0.427670 | 0.429654 | 0.614013 | 0.613847 | 0.413532 | 0.414293 | 4 | Simple | 2 | 2 | . 75 0.425240 | 0.418601 | 0.440968 | 0.441454 | 0.627441 | 0.626246 | 0.429513 | 0.428766 | 5 | Simple | 2 | 2 | . 75 rows × 12 columns . Train shape: (83399, 6, 2) Test shape: (10292, 6, 2) Train shape: (83399, 6, 2) Test shape: (10292, 6, 2) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 6, 2)] 0 [] input_2 (InputLayer) [(None, 6, 2)] 0 [] simple_rnn (SimpleRNN) (None, 6, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 6, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 600) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 600) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1202) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 601500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 740,043 Trainable params: 740,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 17s 65ms/step - loss: 1.0823 - accuracy: 0.3891 - auc: 0.5689 - f1_score: 0.4119 - val_loss: 1.0713 - val_accuracy: 0.4061 - val_auc: 0.5912 - val_f1_score: 0.3655 Epoch 2/50 188/188 [==============================] - 14s 74ms/step - loss: 1.0684 - accuracy: 0.4142 - auc: 0.5981 - f1_score: 0.3960 - val_loss: 1.0677 - val_accuracy: 0.4189 - val_auc: 0.5999 - val_f1_score: 0.4063 Epoch 3/50 188/188 [==============================] - 13s 67ms/step - loss: 1.0652 - accuracy: 0.4182 - auc: 0.6035 - f1_score: 0.4051 - val_loss: 1.0674 - val_accuracy: 0.4068 - val_auc: 0.5991 - val_f1_score: 0.3864 Epoch 4/50 188/188 [==============================] - 12s 63ms/step - loss: 1.0641 - accuracy: 0.4194 - auc: 0.6061 - f1_score: 0.4081 - val_loss: 1.0665 - val_accuracy: 0.4129 - val_auc: 0.6019 - val_f1_score: 0.4009 Epoch 5/50 188/188 [==============================] - 12s 61ms/step - loss: 1.0629 - accuracy: 0.4209 - auc: 0.6073 - f1_score: 0.4123 - val_loss: 1.0665 - val_accuracy: 0.4139 - val_auc: 0.6015 - val_f1_score: 0.3997 Epoch 6/50 188/188 [==============================] - 11s 61ms/step - loss: 1.0619 - accuracy: 0.4211 - auc: 0.6087 - f1_score: 0.4090 - val_loss: 1.0655 - val_accuracy: 0.4139 - val_auc: 0.6017 - val_f1_score: 0.3933 Epoch 7/50 188/188 [==============================] - 11s 61ms/step - loss: 1.0612 - accuracy: 0.4256 - auc: 0.6110 - f1_score: 0.4163 - val_loss: 1.0653 - val_accuracy: 0.4113 - val_auc: 0.6029 - val_f1_score: 0.3988 Epoch 8/50 188/188 [==============================] - 11s 59ms/step - loss: 1.0609 - accuracy: 0.4243 - auc: 0.6115 - f1_score: 0.4143 - val_loss: 1.0654 - val_accuracy: 0.4128 - val_auc: 0.6030 - val_f1_score: 0.3946 Epoch 9/50 188/188 [==============================] - 11s 59ms/step - loss: 1.0595 - accuracy: 0.4261 - auc: 0.6132 - f1_score: 0.4147 - val_loss: 1.0653 - val_accuracy: 0.4145 - val_auc: 0.6024 - val_f1_score: 0.3987 Epoch 10/50 188/188 [==============================] - 11s 58ms/step - loss: 1.0591 - accuracy: 0.4274 - auc: 0.6138 - f1_score: 0.4167 - val_loss: 1.0659 - val_accuracy: 0.4150 - val_auc: 0.6031 - val_f1_score: 0.3974 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 72 0.414599 | 0.407993 | 0.410305 | 0.412649 | 0.594682 | 0.594554 | 0.393465 | 0.394592 | 2 | Simple | 2 | 2 | . 73 0.418077 | 0.411569 | 0.419266 | 0.421490 | 0.603743 | 0.603930 | 0.405959 | 0.406901 | 3 | Simple | 2 | 2 | . 74 0.421872 | 0.415397 | 0.427670 | 0.429654 | 0.614013 | 0.613847 | 0.413532 | 0.414293 | 4 | Simple | 2 | 2 | . 75 0.425240 | 0.418601 | 0.440968 | 0.441454 | 0.627441 | 0.626246 | 0.429513 | 0.428766 | 5 | Simple | 2 | 2 | . 76 0.424918 | 0.418472 | 0.434712 | 0.436691 | 0.624399 | 0.623855 | 0.414225 | 0.414793 | 6 | Simple | 2 | 2 | . 76 rows × 12 columns . Train shape: (83399, 7, 2) Test shape: (10292, 7, 2) Train shape: (83399, 7, 2) Test shape: (10292, 7, 2) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 7, 2)] 0 [] input_2 (InputLayer) [(None, 7, 2)] 0 [] simple_rnn (SimpleRNN) (None, 7, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 7, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 700) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 700) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1402) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 701500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 840,043 Trainable params: 840,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 17s 75ms/step - loss: 1.0848 - accuracy: 0.3743 - auc: 0.5618 - f1_score: 0.3942 - val_loss: 1.0762 - val_accuracy: 0.4029 - val_auc: 0.5835 - val_f1_score: 0.3579 Epoch 2/50 188/188 [==============================] - 13s 71ms/step - loss: 1.0694 - accuracy: 0.4108 - auc: 0.5956 - f1_score: 0.3817 - val_loss: 1.0698 - val_accuracy: 0.4083 - val_auc: 0.5952 - val_f1_score: 0.3618 Epoch 3/50 188/188 [==============================] - 13s 71ms/step - loss: 1.0642 - accuracy: 0.4189 - auc: 0.6048 - f1_score: 0.3847 - val_loss: 1.0663 - val_accuracy: 0.4140 - val_auc: 0.6014 - val_f1_score: 0.3798 Epoch 4/50 188/188 [==============================] - 14s 72ms/step - loss: 1.0618 - accuracy: 0.4229 - auc: 0.6093 - f1_score: 0.3961 - val_loss: 1.0661 - val_accuracy: 0.4107 - val_auc: 0.5994 - val_f1_score: 0.3850 Epoch 5/50 188/188 [==============================] - 13s 70ms/step - loss: 1.0606 - accuracy: 0.4230 - auc: 0.6112 - f1_score: 0.4017 - val_loss: 1.0649 - val_accuracy: 0.4125 - val_auc: 0.6030 - val_f1_score: 0.3843 Epoch 6/50 188/188 [==============================] - 13s 70ms/step - loss: 1.0594 - accuracy: 0.4267 - auc: 0.6130 - f1_score: 0.4078 - val_loss: 1.0654 - val_accuracy: 0.4128 - val_auc: 0.6022 - val_f1_score: 0.3849 Epoch 7/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0577 - accuracy: 0.4273 - auc: 0.6155 - f1_score: 0.4086 - val_loss: 1.0656 - val_accuracy: 0.4108 - val_auc: 0.6014 - val_f1_score: 0.3877 Epoch 8/50 188/188 [==============================] - 13s 69ms/step - loss: 1.0570 - accuracy: 0.4290 - auc: 0.6167 - f1_score: 0.4120 - val_loss: 1.0661 - val_accuracy: 0.4096 - val_auc: 0.6012 - val_f1_score: 0.3904 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 73 0.418077 | 0.411569 | 0.419266 | 0.421490 | 0.603743 | 0.603930 | 0.405959 | 0.406901 | 3 | Simple | 2 | 2 | . 74 0.421872 | 0.415397 | 0.427670 | 0.429654 | 0.614013 | 0.613847 | 0.413532 | 0.414293 | 4 | Simple | 2 | 2 | . 75 0.425240 | 0.418601 | 0.440968 | 0.441454 | 0.627441 | 0.626246 | 0.429513 | 0.428766 | 5 | Simple | 2 | 2 | . 76 0.424918 | 0.418472 | 0.434712 | 0.436691 | 0.624399 | 0.623855 | 0.414225 | 0.414793 | 6 | Simple | 2 | 2 | . 77 0.427357 | 0.420931 | 0.436521 | 0.438406 | 0.627299 | 0.626764 | 0.415720 | 0.416135 | 7 | Simple | 2 | 2 | . 77 rows × 12 columns . Train shape: (83399, 8, 2) Test shape: (10292, 8, 2) Train shape: (83399, 8, 2) Test shape: (10292, 8, 2) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 8, 2)] 0 [] input_2 (InputLayer) [(None, 8, 2)] 0 [] simple_rnn (SimpleRNN) (None, 8, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 8, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 800) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 800) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1602) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 801500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 940,043 Trainable params: 940,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 17s 77ms/step - loss: 1.0767 - accuracy: 0.4045 - auc: 0.5836 - f1_score: 0.3875 - val_loss: 1.0700 - val_accuracy: 0.4080 - val_auc: 0.5933 - val_f1_score: 0.3644 Epoch 2/50 188/188 [==============================] - 14s 75ms/step - loss: 1.0656 - accuracy: 0.4183 - auc: 0.6032 - f1_score: 0.3916 - val_loss: 1.0658 - val_accuracy: 0.4176 - val_auc: 0.6017 - val_f1_score: 0.4014 Epoch 3/50 188/188 [==============================] - 18s 96ms/step - loss: 1.0625 - accuracy: 0.4229 - auc: 0.6083 - f1_score: 0.4100 - val_loss: 1.0648 - val_accuracy: 0.4200 - val_auc: 0.6036 - val_f1_score: 0.4107 Epoch 4/50 188/188 [==============================] - 17s 90ms/step - loss: 1.0599 - accuracy: 0.4264 - auc: 0.6118 - f1_score: 0.4164 - val_loss: 1.0641 - val_accuracy: 0.4179 - val_auc: 0.6045 - val_f1_score: 0.4087 Epoch 5/50 188/188 [==============================] - 16s 86ms/step - loss: 1.0583 - accuracy: 0.4274 - auc: 0.6151 - f1_score: 0.4179 - val_loss: 1.0629 - val_accuracy: 0.4150 - val_auc: 0.6057 - val_f1_score: 0.4075 Epoch 6/50 188/188 [==============================] - 15s 82ms/step - loss: 1.0572 - accuracy: 0.4319 - auc: 0.6169 - f1_score: 0.4240 - val_loss: 1.0631 - val_accuracy: 0.4169 - val_auc: 0.6056 - val_f1_score: 0.4118 Epoch 7/50 188/188 [==============================] - 15s 81ms/step - loss: 1.0563 - accuracy: 0.4298 - auc: 0.6177 - f1_score: 0.4226 - val_loss: 1.0647 - val_accuracy: 0.4146 - val_auc: 0.6033 - val_f1_score: 0.4096 Epoch 8/50 188/188 [==============================] - 17s 90ms/step - loss: 1.0551 - accuracy: 0.4324 - auc: 0.6196 - f1_score: 0.4257 - val_loss: 1.0640 - val_accuracy: 0.4175 - val_auc: 0.6036 - val_f1_score: 0.4114 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 74 0.421872 | 0.415397 | 0.427670 | 0.429654 | 0.614013 | 0.613847 | 0.413532 | 0.414293 | 4 | Simple | 2 | 2 | . 75 0.425240 | 0.418601 | 0.440968 | 0.441454 | 0.627441 | 0.626246 | 0.429513 | 0.428766 | 5 | Simple | 2 | 2 | . 76 0.424918 | 0.418472 | 0.434712 | 0.436691 | 0.624399 | 0.623855 | 0.414225 | 0.414793 | 6 | Simple | 2 | 2 | . 77 0.427357 | 0.420931 | 0.436521 | 0.438406 | 0.627299 | 0.626764 | 0.415720 | 0.416135 | 7 | Simple | 2 | 2 | . 78 0.427606 | 0.421062 | 0.439987 | 0.440474 | 0.629281 | 0.628125 | 0.432923 | 0.432532 | 8 | Simple | 2 | 2 | . 78 rows × 12 columns . Train shape: (83399, 9, 2) Test shape: (10292, 9, 2) Train shape: (83399, 9, 2) Test shape: (10292, 9, 2) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 9, 2)] 0 [] input_2 (InputLayer) [(None, 9, 2)] 0 [] simple_rnn (SimpleRNN) (None, 9, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 9, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 900) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 900) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1802) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 901500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,040,043 Trainable params: 1,040,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 21s 97ms/step - loss: 1.0784 - accuracy: 0.3985 - auc: 0.5778 - f1_score: 0.3976 - val_loss: 1.0707 - val_accuracy: 0.4018 - val_auc: 0.5915 - val_f1_score: 0.3291 Epoch 2/50 188/188 [==============================] - 16s 84ms/step - loss: 1.0654 - accuracy: 0.4163 - auc: 0.6029 - f1_score: 0.3547 - val_loss: 1.0663 - val_accuracy: 0.4167 - val_auc: 0.6007 - val_f1_score: 0.3822 Epoch 3/50 188/188 [==============================] - 16s 84ms/step - loss: 1.0620 - accuracy: 0.4191 - auc: 0.6076 - f1_score: 0.3803 - val_loss: 1.0657 - val_accuracy: 0.4134 - val_auc: 0.6012 - val_f1_score: 0.3950 Epoch 4/50 188/188 [==============================] - 16s 84ms/step - loss: 1.0598 - accuracy: 0.4274 - auc: 0.6114 - f1_score: 0.4018 - val_loss: 1.0653 - val_accuracy: 0.4171 - val_auc: 0.6024 - val_f1_score: 0.4062 Epoch 5/50 188/188 [==============================] - 17s 88ms/step - loss: 1.0579 - accuracy: 0.4293 - auc: 0.6148 - f1_score: 0.4119 - val_loss: 1.0655 - val_accuracy: 0.4162 - val_auc: 0.6026 - val_f1_score: 0.4078 Epoch 6/50 188/188 [==============================] - 16s 83ms/step - loss: 1.0563 - accuracy: 0.4331 - auc: 0.6180 - f1_score: 0.4180 - val_loss: 1.0658 - val_accuracy: 0.4161 - val_auc: 0.6022 - val_f1_score: 0.4073 Epoch 7/50 188/188 [==============================] - 15s 81ms/step - loss: 1.0551 - accuracy: 0.4337 - auc: 0.6196 - f1_score: 0.4198 - val_loss: 1.0650 - val_accuracy: 0.4189 - val_auc: 0.6033 - val_f1_score: 0.4128 Epoch 8/50 188/188 [==============================] - 15s 78ms/step - loss: 1.0531 - accuracy: 0.4342 - auc: 0.6219 - f1_score: 0.4212 - val_loss: 1.0649 - val_accuracy: 0.4145 - val_auc: 0.6035 - val_f1_score: 0.4104 Epoch 9/50 188/188 [==============================] - 16s 84ms/step - loss: 1.0520 - accuracy: 0.4354 - auc: 0.6235 - f1_score: 0.4242 - val_loss: 1.0648 - val_accuracy: 0.4168 - val_auc: 0.6039 - val_f1_score: 0.4133 Epoch 10/50 188/188 [==============================] - 15s 79ms/step - loss: 1.0518 - accuracy: 0.4368 - auc: 0.6239 - f1_score: 0.4277 - val_loss: 1.0649 - val_accuracy: 0.4143 - val_auc: 0.6035 - val_f1_score: 0.4095 Epoch 11/50 188/188 [==============================] - 15s 78ms/step - loss: 1.0510 - accuracy: 0.4366 - auc: 0.6245 - f1_score: 0.4280 - val_loss: 1.0663 - val_accuracy: 0.4127 - val_auc: 0.6010 - val_f1_score: 0.4099 Epoch 12/50 188/188 [==============================] - 15s 78ms/step - loss: 1.0509 - accuracy: 0.4374 - auc: 0.6248 - f1_score: 0.4306 - val_loss: 1.0660 - val_accuracy: 0.4163 - val_auc: 0.6038 - val_f1_score: 0.4119 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 75 0.425240 | 0.418601 | 0.440968 | 0.441454 | 0.627441 | 0.626246 | 0.429513 | 0.428766 | 5 | Simple | 2 | 2 | . 76 0.424918 | 0.418472 | 0.434712 | 0.436691 | 0.624399 | 0.623855 | 0.414225 | 0.414793 | 6 | Simple | 2 | 2 | . 77 0.427357 | 0.420931 | 0.436521 | 0.438406 | 0.627299 | 0.626764 | 0.415720 | 0.416135 | 7 | Simple | 2 | 2 | . 78 0.427606 | 0.421062 | 0.439987 | 0.440474 | 0.629281 | 0.628125 | 0.432923 | 0.432532 | 8 | Simple | 2 | 2 | . 79 0.431254 | 0.424516 | 0.446757 | 0.446649 | 0.636787 | 0.634955 | 0.441967 | 0.441049 | 9 | Simple | 2 | 2 | . 79 rows × 12 columns . Train shape: (83399, 10, 2) Test shape: (10292, 10, 2) Train shape: (83399, 10, 2) Test shape: (10292, 10, 2) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 2)] 0 [] input_2 (InputLayer) [(None, 10, 2)] 0 [] simple_rnn (SimpleRNN) (None, 10, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 10, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 2002) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1001500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,140,043 Trainable params: 1,140,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 20s 91ms/step - loss: 1.0820 - accuracy: 0.3934 - auc: 0.5697 - f1_score: 0.4091 - val_loss: 1.0741 - val_accuracy: 0.4096 - val_auc: 0.5885 - val_f1_score: 0.3898 Epoch 2/50 188/188 [==============================] - 19s 99ms/step - loss: 1.0687 - accuracy: 0.4170 - auc: 0.5985 - f1_score: 0.3966 - val_loss: 1.0685 - val_accuracy: 0.4161 - val_auc: 0.5977 - val_f1_score: 0.4074 Epoch 3/50 188/188 [==============================] - 18s 94ms/step - loss: 1.0622 - accuracy: 0.4227 - auc: 0.6089 - f1_score: 0.4164 - val_loss: 1.0658 - val_accuracy: 0.4221 - val_auc: 0.6025 - val_f1_score: 0.4198 Epoch 4/50 188/188 [==============================] - 18s 95ms/step - loss: 1.0587 - accuracy: 0.4271 - auc: 0.6145 - f1_score: 0.4222 - val_loss: 1.0648 - val_accuracy: 0.4198 - val_auc: 0.6033 - val_f1_score: 0.4161 Epoch 5/50 188/188 [==============================] - 18s 94ms/step - loss: 1.0560 - accuracy: 0.4320 - auc: 0.6174 - f1_score: 0.4274 - val_loss: 1.0634 - val_accuracy: 0.4207 - val_auc: 0.6062 - val_f1_score: 0.4145 Epoch 6/50 188/188 [==============================] - 18s 94ms/step - loss: 1.0542 - accuracy: 0.4371 - auc: 0.6216 - f1_score: 0.4338 - val_loss: 1.0631 - val_accuracy: 0.4231 - val_auc: 0.6068 - val_f1_score: 0.4223 Epoch 7/50 188/188 [==============================] - 17s 91ms/step - loss: 1.0529 - accuracy: 0.4356 - auc: 0.6228 - f1_score: 0.4318 - val_loss: 1.0635 - val_accuracy: 0.4243 - val_auc: 0.6071 - val_f1_score: 0.4225 Epoch 8/50 188/188 [==============================] - 17s 92ms/step - loss: 1.0516 - accuracy: 0.4367 - auc: 0.6247 - f1_score: 0.4340 - val_loss: 1.0634 - val_accuracy: 0.4193 - val_auc: 0.6060 - val_f1_score: 0.4178 Epoch 9/50 188/188 [==============================] - 17s 92ms/step - loss: 1.0502 - accuracy: 0.4376 - auc: 0.6263 - f1_score: 0.4335 - val_loss: 1.0631 - val_accuracy: 0.4203 - val_auc: 0.6067 - val_f1_score: 0.4174 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 76 0.424918 | 0.418472 | 0.434712 | 0.436691 | 0.624399 | 0.623855 | 0.414225 | 0.414793 | 6 | Simple | 2 | 2 | . 77 0.427357 | 0.420931 | 0.436521 | 0.438406 | 0.627299 | 0.626764 | 0.415720 | 0.416135 | 7 | Simple | 2 | 2 | . 78 0.427606 | 0.421062 | 0.439987 | 0.440474 | 0.629281 | 0.628125 | 0.432923 | 0.432532 | 8 | Simple | 2 | 2 | . 79 0.431254 | 0.424516 | 0.446757 | 0.446649 | 0.636787 | 0.634955 | 0.441967 | 0.441049 | 9 | Simple | 2 | 2 | . 80 0.430037 | 0.423400 | 0.453646 | 0.453460 | 0.641572 | 0.639772 | 0.450515 | 0.449607 | 10 | Simple | 2 | 2 | . 80 rows × 12 columns . Train shape: (83399, 1, 2) Test shape: (10292, 1, 2) Train shape: (83399, 1, 2) Test shape: (10292, 1, 2) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 1, 2)] 0 [] input_2 (InputLayer) [(None, 1, 2)] 0 [] lstm (LSTM) (None, 1, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 1, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 100) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 100) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 205) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 103000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 302,743 Trainable params: 302,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 8s 32ms/step - loss: 1.0675 - accuracy: 0.4197 - auc: 0.6022 - f1_score: 0.4262 - val_loss: 1.0556 - val_accuracy: 0.4291 - val_auc: 0.6193 - val_f1_score: 0.4052 Epoch 2/50 188/188 [==============================] - 6s 30ms/step - loss: 1.0536 - accuracy: 0.4328 - auc: 0.6201 - f1_score: 0.4122 - val_loss: 1.0547 - val_accuracy: 0.4314 - val_auc: 0.6214 - val_f1_score: 0.4196 Epoch 3/50 188/188 [==============================] - 5s 28ms/step - loss: 1.0525 - accuracy: 0.4335 - auc: 0.6215 - f1_score: 0.4199 - val_loss: 1.0545 - val_accuracy: 0.4343 - val_auc: 0.6220 - val_f1_score: 0.4266 Epoch 4/50 188/188 [==============================] - 5s 29ms/step - loss: 1.0521 - accuracy: 0.4331 - auc: 0.6221 - f1_score: 0.4221 - val_loss: 1.0548 - val_accuracy: 0.4330 - val_auc: 0.6216 - val_f1_score: 0.4268 Epoch 5/50 188/188 [==============================] - 5s 29ms/step - loss: 1.0512 - accuracy: 0.4338 - auc: 0.6234 - f1_score: 0.4229 - val_loss: 1.0547 - val_accuracy: 0.4348 - val_auc: 0.6221 - val_f1_score: 0.4244 Epoch 6/50 188/188 [==============================] - 5s 29ms/step - loss: 1.0510 - accuracy: 0.4338 - auc: 0.6232 - f1_score: 0.4242 - val_loss: 1.0545 - val_accuracy: 0.4351 - val_auc: 0.6226 - val_f1_score: 0.4289 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 77 0.427357 | 0.420931 | 0.436521 | 0.438406 | 0.627299 | 0.626764 | 0.415720 | 0.416135 | 7 | Simple | 2 | 2 | . 78 0.427606 | 0.421062 | 0.439987 | 0.440474 | 0.629281 | 0.628125 | 0.432923 | 0.432532 | 8 | Simple | 2 | 2 | . 79 0.431254 | 0.424516 | 0.446757 | 0.446649 | 0.636787 | 0.634955 | 0.441967 | 0.441049 | 9 | Simple | 2 | 2 | . 80 0.430037 | 0.423400 | 0.453646 | 0.453460 | 0.641572 | 0.639772 | 0.450515 | 0.449607 | 10 | Simple | 2 | 2 | . 81 0.427529 | 0.421569 | 0.436303 | 0.437534 | 0.626557 | 0.627034 | 0.430298 | 0.430585 | 1 | LSTM | 5 | 2 | . 81 rows × 12 columns . Train shape: (83399, 2, 2) Test shape: (10292, 2, 2) Train shape: (83399, 2, 2) Test shape: (10292, 2, 2) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 2, 2)] 0 [] input_2 (InputLayer) [(None, 2, 2)] 0 [] lstm (LSTM) (None, 2, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 2, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 200) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 200) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 405) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 203000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 402,743 Trainable params: 402,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 12s 52ms/step - loss: 1.0676 - accuracy: 0.4220 - auc: 0.6007 - f1_score: 0.4070 - val_loss: 1.0561 - val_accuracy: 0.4279 - val_auc: 0.6180 - val_f1_score: 0.3765 Epoch 2/50 188/188 [==============================] - 8s 44ms/step - loss: 1.0528 - accuracy: 0.4338 - auc: 0.6218 - f1_score: 0.3967 - val_loss: 1.0542 - val_accuracy: 0.4318 - val_auc: 0.6208 - val_f1_score: 0.4007 Epoch 3/50 188/188 [==============================] - 8s 43ms/step - loss: 1.0503 - accuracy: 0.4358 - auc: 0.6244 - f1_score: 0.4138 - val_loss: 1.0531 - val_accuracy: 0.4365 - val_auc: 0.6236 - val_f1_score: 0.4171 Epoch 4/50 188/188 [==============================] - 8s 41ms/step - loss: 1.0500 - accuracy: 0.4365 - auc: 0.6252 - f1_score: 0.4243 - val_loss: 1.0535 - val_accuracy: 0.4353 - val_auc: 0.6233 - val_f1_score: 0.4197 Epoch 5/50 188/188 [==============================] - 8s 43ms/step - loss: 1.0499 - accuracy: 0.4359 - auc: 0.6253 - f1_score: 0.4247 - val_loss: 1.0534 - val_accuracy: 0.4341 - val_auc: 0.6239 - val_f1_score: 0.4169 Epoch 6/50 188/188 [==============================] - 8s 42ms/step - loss: 1.0485 - accuracy: 0.4380 - auc: 0.6273 - f1_score: 0.4259 - val_loss: 1.0530 - val_accuracy: 0.4405 - val_auc: 0.6249 - val_f1_score: 0.4289 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 78 0.427606 | 0.421062 | 0.439987 | 0.440474 | 0.629281 | 0.628125 | 0.432923 | 0.432532 | 8 | Simple | 2 | 2 | . 79 0.431254 | 0.424516 | 0.446757 | 0.446649 | 0.636787 | 0.634955 | 0.441967 | 0.441049 | 9 | Simple | 2 | 2 | . 80 0.430037 | 0.423400 | 0.453646 | 0.453460 | 0.641572 | 0.639772 | 0.450515 | 0.449607 | 10 | Simple | 2 | 2 | . 81 0.427529 | 0.421569 | 0.436303 | 0.437534 | 0.626557 | 0.627034 | 0.430298 | 0.430585 | 1 | LSTM | 5 | 2 | . 82 0.429649 | 0.423740 | 0.441633 | 0.443346 | 0.630471 | 0.631014 | 0.429898 | 0.430345 | 2 | LSTM | 5 | 2 | . 82 rows × 12 columns . Train shape: (83399, 3, 2) Test shape: (10292, 3, 2) Train shape: (83399, 3, 2) Test shape: (10292, 3, 2) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 3, 2)] 0 [] input_2 (InputLayer) [(None, 3, 2)] 0 [] lstm (LSTM) (None, 3, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 3, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 300) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 300) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 605) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 303000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 502,743 Trainable params: 502,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 15s 65ms/step - loss: 1.0683 - accuracy: 0.4191 - auc: 0.6007 - f1_score: 0.4212 - val_loss: 1.0548 - val_accuracy: 0.4306 - val_auc: 0.6220 - val_f1_score: 0.4110 Epoch 2/50 188/188 [==============================] - 11s 60ms/step - loss: 1.0514 - accuracy: 0.4341 - auc: 0.6239 - f1_score: 0.4225 - val_loss: 1.0519 - val_accuracy: 0.4357 - val_auc: 0.6252 - val_f1_score: 0.4185 Epoch 3/50 188/188 [==============================] - 11s 59ms/step - loss: 1.0487 - accuracy: 0.4363 - auc: 0.6269 - f1_score: 0.4242 - val_loss: 1.0513 - val_accuracy: 0.4336 - val_auc: 0.6263 - val_f1_score: 0.4231 Epoch 4/50 188/188 [==============================] - 11s 57ms/step - loss: 1.0477 - accuracy: 0.4355 - auc: 0.6278 - f1_score: 0.4267 - val_loss: 1.0512 - val_accuracy: 0.4324 - val_auc: 0.6266 - val_f1_score: 0.4188 Epoch 5/50 188/188 [==============================] - 11s 59ms/step - loss: 1.0471 - accuracy: 0.4385 - auc: 0.6284 - f1_score: 0.4292 - val_loss: 1.0522 - val_accuracy: 0.4347 - val_auc: 0.6256 - val_f1_score: 0.4233 Epoch 6/50 188/188 [==============================] - 11s 59ms/step - loss: 1.0468 - accuracy: 0.4398 - auc: 0.6297 - f1_score: 0.4313 - val_loss: 1.0517 - val_accuracy: 0.4351 - val_auc: 0.6265 - val_f1_score: 0.4219 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 79 0.431254 | 0.424516 | 0.446757 | 0.446649 | 0.636787 | 0.634955 | 0.441967 | 0.441049 | 9 | Simple | 2 | 2 | . 80 0.430037 | 0.423400 | 0.453646 | 0.453460 | 0.641572 | 0.639772 | 0.450515 | 0.449607 | 10 | Simple | 2 | 2 | . 81 0.427529 | 0.421569 | 0.436303 | 0.437534 | 0.626557 | 0.627034 | 0.430298 | 0.430585 | 1 | LSTM | 5 | 2 | . 82 0.429649 | 0.423740 | 0.441633 | 0.443346 | 0.630471 | 0.631014 | 0.429898 | 0.430345 | 2 | LSTM | 5 | 2 | . 83 0.430894 | 0.425086 | 0.441786 | 0.444061 | 0.633122 | 0.634155 | 0.428058 | 0.429072 | 3 | LSTM | 5 | 2 | . 83 rows × 12 columns . Train shape: (83399, 4, 2) Test shape: (10292, 4, 2) Train shape: (83399, 4, 2) Test shape: (10292, 4, 2) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 4, 2)] 0 [] input_2 (InputLayer) [(None, 4, 2)] 0 [] lstm (LSTM) (None, 4, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 4, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 400) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 400) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 805) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 403000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 602,743 Trainable params: 602,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 17s 73ms/step - loss: 1.0716 - accuracy: 0.4153 - auc: 0.5941 - f1_score: 0.4050 - val_loss: 1.0540 - val_accuracy: 0.4320 - val_auc: 0.6230 - val_f1_score: 0.3654 Epoch 2/50 188/188 [==============================] - 13s 69ms/step - loss: 1.0512 - accuracy: 0.4337 - auc: 0.6233 - f1_score: 0.3993 - val_loss: 1.0503 - val_accuracy: 0.4361 - val_auc: 0.6277 - val_f1_score: 0.4064 Epoch 3/50 188/188 [==============================] - 13s 69ms/step - loss: 1.0480 - accuracy: 0.4378 - auc: 0.6276 - f1_score: 0.4120 - val_loss: 1.0498 - val_accuracy: 0.4388 - val_auc: 0.6282 - val_f1_score: 0.4126 Epoch 4/50 188/188 [==============================] - 13s 71ms/step - loss: 1.0466 - accuracy: 0.4389 - auc: 0.6293 - f1_score: 0.4213 - val_loss: 1.0495 - val_accuracy: 0.4367 - val_auc: 0.6291 - val_f1_score: 0.4243 Epoch 5/50 188/188 [==============================] - 14s 72ms/step - loss: 1.0453 - accuracy: 0.4391 - auc: 0.6308 - f1_score: 0.4283 - val_loss: 1.0498 - val_accuracy: 0.4362 - val_auc: 0.6292 - val_f1_score: 0.4269 Epoch 6/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0452 - accuracy: 0.4430 - auc: 0.6317 - f1_score: 0.4321 - val_loss: 1.0497 - val_accuracy: 0.4385 - val_auc: 0.6286 - val_f1_score: 0.4276 Epoch 7/50 188/188 [==============================] - 13s 70ms/step - loss: 1.0454 - accuracy: 0.4410 - auc: 0.6315 - f1_score: 0.4328 - val_loss: 1.0498 - val_accuracy: 0.4375 - val_auc: 0.6286 - val_f1_score: 0.4269 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 80 0.430037 | 0.423400 | 0.453646 | 0.453460 | 0.641572 | 0.639772 | 0.450515 | 0.449607 | 10 | Simple | 2 | 2 | . 81 0.427529 | 0.421569 | 0.436303 | 0.437534 | 0.626557 | 0.627034 | 0.430298 | 0.430585 | 1 | LSTM | 5 | 2 | . 82 0.429649 | 0.423740 | 0.441633 | 0.443346 | 0.630471 | 0.631014 | 0.429898 | 0.430345 | 2 | LSTM | 5 | 2 | . 83 0.430894 | 0.425086 | 0.441786 | 0.444061 | 0.633122 | 0.634155 | 0.428058 | 0.429072 | 3 | LSTM | 5 | 2 | . 84 0.431652 | 0.425786 | 0.445318 | 0.447178 | 0.635669 | 0.636310 | 0.434498 | 0.435192 | 4 | LSTM | 5 | 2 | . 84 rows × 12 columns . Train shape: (83399, 5, 2) Test shape: (10292, 5, 2) Train shape: (83399, 5, 2) Test shape: (10292, 5, 2) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 5, 2)] 0 [] input_2 (InputLayer) [(None, 5, 2)] 0 [] lstm (LSTM) (None, 5, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 5, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 500) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 500) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1005) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 503000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 702,743 Trainable params: 702,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 21s 92ms/step - loss: 1.0718 - accuracy: 0.4199 - auc: 0.5984 - f1_score: 0.4185 - val_loss: 1.0563 - val_accuracy: 0.4293 - val_auc: 0.6211 - val_f1_score: 0.4033 Epoch 2/50 188/188 [==============================] - 16s 83ms/step - loss: 1.0500 - accuracy: 0.4371 - auc: 0.6258 - f1_score: 0.4144 - val_loss: 1.0505 - val_accuracy: 0.4301 - val_auc: 0.6252 - val_f1_score: 0.4147 Epoch 3/50 188/188 [==============================] - 15s 80ms/step - loss: 1.0472 - accuracy: 0.4386 - auc: 0.6284 - f1_score: 0.4248 - val_loss: 1.0494 - val_accuracy: 0.4318 - val_auc: 0.6265 - val_f1_score: 0.4164 Epoch 4/50 188/188 [==============================] - 16s 83ms/step - loss: 1.0460 - accuracy: 0.4413 - auc: 0.6304 - f1_score: 0.4285 - val_loss: 1.0486 - val_accuracy: 0.4325 - val_auc: 0.6277 - val_f1_score: 0.4180 Epoch 5/50 188/188 [==============================] - 15s 81ms/step - loss: 1.0445 - accuracy: 0.4423 - auc: 0.6319 - f1_score: 0.4344 - val_loss: 1.0496 - val_accuracy: 0.4319 - val_auc: 0.6266 - val_f1_score: 0.4199 Epoch 6/50 188/188 [==============================] - 15s 81ms/step - loss: 1.0447 - accuracy: 0.4430 - auc: 0.6320 - f1_score: 0.4332 - val_loss: 1.0491 - val_accuracy: 0.4369 - val_auc: 0.6280 - val_f1_score: 0.4276 Epoch 7/50 188/188 [==============================] - 17s 89ms/step - loss: 1.0443 - accuracy: 0.4414 - auc: 0.6324 - f1_score: 0.4338 - val_loss: 1.0494 - val_accuracy: 0.4374 - val_auc: 0.6274 - val_f1_score: 0.4301 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 81 0.427529 | 0.421569 | 0.436303 | 0.437534 | 0.626557 | 0.627034 | 0.430298 | 0.430585 | 1 | LSTM | 5 | 2 | . 82 0.429649 | 0.423740 | 0.441633 | 0.443346 | 0.630471 | 0.631014 | 0.429898 | 0.430345 | 2 | LSTM | 5 | 2 | . 83 0.430894 | 0.425086 | 0.441786 | 0.444061 | 0.633122 | 0.634155 | 0.428058 | 0.429072 | 3 | LSTM | 5 | 2 | . 84 0.431652 | 0.425786 | 0.445318 | 0.447178 | 0.635669 | 0.636310 | 0.434498 | 0.435192 | 4 | LSTM | 5 | 2 | . 85 0.431731 | 0.425747 | 0.445394 | 0.447393 | 0.637063 | 0.637364 | 0.437174 | 0.438126 | 5 | LSTM | 5 | 2 | . 85 rows × 12 columns . Train shape: (83399, 6, 2) Test shape: (10292, 6, 2) Train shape: (83399, 6, 2) Test shape: (10292, 6, 2) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 6, 2)] 0 [] input_2 (InputLayer) [(None, 6, 2)] 0 [] lstm (LSTM) (None, 6, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 6, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 600) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 600) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1205) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 603000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 802,743 Trainable params: 802,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 23s 103ms/step - loss: 1.0898 - accuracy: 0.3872 - auc: 0.5518 - f1_score: 0.4124 - val_loss: 1.0796 - val_accuracy: 0.4187 - val_auc: 0.5952 - val_f1_score: 0.3849 Epoch 2/50 188/188 [==============================] - 20s 108ms/step - loss: 1.0682 - accuracy: 0.4273 - auc: 0.6053 - f1_score: 0.4260 - val_loss: 1.0526 - val_accuracy: 0.4400 - val_auc: 0.6267 - val_f1_score: 0.4373 Epoch 3/50 188/188 [==============================] - 19s 99ms/step - loss: 1.0507 - accuracy: 0.4404 - auc: 0.6257 - f1_score: 0.4352 - val_loss: 1.0499 - val_accuracy: 0.4372 - val_auc: 0.6275 - val_f1_score: 0.4330 Epoch 4/50 188/188 [==============================] - 20s 106ms/step - loss: 1.0475 - accuracy: 0.4424 - auc: 0.6291 - f1_score: 0.4366 - val_loss: 1.0498 - val_accuracy: 0.4379 - val_auc: 0.6277 - val_f1_score: 0.4345 Epoch 5/50 188/188 [==============================] - 21s 111ms/step - loss: 1.0451 - accuracy: 0.4452 - auc: 0.6326 - f1_score: 0.4392 - val_loss: 1.0495 - val_accuracy: 0.4348 - val_auc: 0.6278 - val_f1_score: 0.4294 Epoch 6/50 188/188 [==============================] - 21s 111ms/step - loss: 1.0441 - accuracy: 0.4450 - auc: 0.6332 - f1_score: 0.4393 - val_loss: 1.0492 - val_accuracy: 0.4312 - val_auc: 0.6280 - val_f1_score: 0.4215 Epoch 7/50 188/188 [==============================] - 20s 106ms/step - loss: 1.0434 - accuracy: 0.4460 - auc: 0.6343 - f1_score: 0.4399 - val_loss: 1.0494 - val_accuracy: 0.4336 - val_auc: 0.6278 - val_f1_score: 0.4288 Epoch 8/50 188/188 [==============================] - 19s 99ms/step - loss: 1.0433 - accuracy: 0.4457 - auc: 0.6345 - f1_score: 0.4402 - val_loss: 1.0492 - val_accuracy: 0.4347 - val_auc: 0.6281 - val_f1_score: 0.4316 Epoch 9/50 188/188 [==============================] - 19s 99ms/step - loss: 1.0420 - accuracy: 0.4475 - auc: 0.6368 - f1_score: 0.4421 - val_loss: 1.0497 - val_accuracy: 0.4330 - val_auc: 0.6275 - val_f1_score: 0.4264 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 82 0.429649 | 0.423740 | 0.441633 | 0.443346 | 0.630471 | 0.631014 | 0.429898 | 0.430345 | 2 | LSTM | 5 | 2 | . 83 0.430894 | 0.425086 | 0.441786 | 0.444061 | 0.633122 | 0.634155 | 0.428058 | 0.429072 | 3 | LSTM | 5 | 2 | . 84 0.431652 | 0.425786 | 0.445318 | 0.447178 | 0.635669 | 0.636310 | 0.434498 | 0.435192 | 4 | LSTM | 5 | 2 | . 85 0.431731 | 0.425747 | 0.445394 | 0.447393 | 0.637063 | 0.637364 | 0.437174 | 0.438126 | 5 | LSTM | 5 | 2 | . 86 0.433086 | 0.427046 | 0.450997 | 0.452529 | 0.641143 | 0.641012 | 0.444113 | 0.444625 | 6 | LSTM | 5 | 2 | . 86 rows × 12 columns . Train shape: (83399, 7, 2) Test shape: (10292, 7, 2) Train shape: (83399, 7, 2) Test shape: (10292, 7, 2) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 7, 2)] 0 [] input_2 (InputLayer) [(None, 7, 2)] 0 [] lstm (LSTM) (None, 7, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 7, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 700) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 700) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1405) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 703000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 902,743 Trainable params: 902,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 28s 122ms/step - loss: 1.0694 - accuracy: 0.4192 - auc: 0.5936 - f1_score: 0.4148 - val_loss: 1.0572 - val_accuracy: 0.4309 - val_auc: 0.6171 - val_f1_score: 0.3602 Epoch 2/50 188/188 [==============================] - 24s 125ms/step - loss: 1.0525 - accuracy: 0.4381 - auc: 0.6228 - f1_score: 0.3973 - val_loss: 1.0538 - val_accuracy: 0.4351 - val_auc: 0.6219 - val_f1_score: 0.4085 Epoch 3/50 188/188 [==============================] - 24s 130ms/step - loss: 1.0498 - accuracy: 0.4428 - auc: 0.6274 - f1_score: 0.4263 - val_loss: 1.0523 - val_accuracy: 0.4379 - val_auc: 0.6249 - val_f1_score: 0.4218 Epoch 4/50 188/188 [==============================] - 24s 130ms/step - loss: 1.0475 - accuracy: 0.4434 - auc: 0.6305 - f1_score: 0.4306 - val_loss: 1.0502 - val_accuracy: 0.4414 - val_auc: 0.6278 - val_f1_score: 0.4355 Epoch 5/50 188/188 [==============================] - 22s 115ms/step - loss: 1.0454 - accuracy: 0.4440 - auc: 0.6322 - f1_score: 0.4374 - val_loss: 1.0490 - val_accuracy: 0.4409 - val_auc: 0.6297 - val_f1_score: 0.4345 Epoch 6/50 188/188 [==============================] - 23s 125ms/step - loss: 1.0426 - accuracy: 0.4442 - auc: 0.6353 - f1_score: 0.4385 - val_loss: 1.0487 - val_accuracy: 0.4415 - val_auc: 0.6298 - val_f1_score: 0.4350 Epoch 7/50 188/188 [==============================] - 24s 125ms/step - loss: 1.0430 - accuracy: 0.4456 - auc: 0.6352 - f1_score: 0.4394 - val_loss: 1.0487 - val_accuracy: 0.4440 - val_auc: 0.6298 - val_f1_score: 0.4414 Epoch 8/50 188/188 [==============================] - 23s 123ms/step - loss: 1.0411 - accuracy: 0.4481 - auc: 0.6376 - f1_score: 0.4429 - val_loss: 1.0489 - val_accuracy: 0.4427 - val_auc: 0.6300 - val_f1_score: 0.4402 Epoch 9/50 188/188 [==============================] - 24s 128ms/step - loss: 1.0405 - accuracy: 0.4492 - auc: 0.6385 - f1_score: 0.4449 - val_loss: 1.0491 - val_accuracy: 0.4399 - val_auc: 0.6293 - val_f1_score: 0.4358 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 83 0.430894 | 0.425086 | 0.441786 | 0.444061 | 0.633122 | 0.634155 | 0.428058 | 0.429072 | 3 | LSTM | 5 | 2 | . 84 0.431652 | 0.425786 | 0.445318 | 0.447178 | 0.635669 | 0.636310 | 0.434498 | 0.435192 | 4 | LSTM | 5 | 2 | . 85 0.431731 | 0.425747 | 0.445394 | 0.447393 | 0.637063 | 0.637364 | 0.437174 | 0.438126 | 5 | LSTM | 5 | 2 | . 86 0.433086 | 0.427046 | 0.450997 | 0.452529 | 0.641143 | 0.641012 | 0.444113 | 0.444625 | 6 | LSTM | 5 | 2 | . 87 0.434065 | 0.428043 | 0.454245 | 0.455048 | 0.643693 | 0.643410 | 0.449494 | 0.449419 | 7 | LSTM | 5 | 2 | . 87 rows × 12 columns . Train shape: (83399, 8, 2) Test shape: (10292, 8, 2) Train shape: (83399, 8, 2) Test shape: (10292, 8, 2) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 8, 2)] 0 [] input_2 (InputLayer) [(None, 8, 2)] 0 [] lstm (LSTM) (None, 8, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 8, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 800) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 800) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1605) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 803000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,002,743 Trainable params: 1,002,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 29s 131ms/step - loss: 1.0643 - accuracy: 0.4201 - auc: 0.6042 - f1_score: 0.4217 - val_loss: 1.0517 - val_accuracy: 0.4325 - val_auc: 0.6232 - val_f1_score: 0.4057 Epoch 2/50 188/188 [==============================] - 30s 162ms/step - loss: 1.0472 - accuracy: 0.4392 - auc: 0.6283 - f1_score: 0.4170 - val_loss: 1.0497 - val_accuracy: 0.4355 - val_auc: 0.6263 - val_f1_score: 0.4203 Epoch 3/50 188/188 [==============================] - 28s 150ms/step - loss: 1.0453 - accuracy: 0.4414 - auc: 0.6315 - f1_score: 0.4246 - val_loss: 1.0503 - val_accuracy: 0.4308 - val_auc: 0.6257 - val_f1_score: 0.4215 Epoch 4/50 188/188 [==============================] - 29s 154ms/step - loss: 1.0440 - accuracy: 0.4427 - auc: 0.6330 - f1_score: 0.4288 - val_loss: 1.0501 - val_accuracy: 0.4380 - val_auc: 0.6275 - val_f1_score: 0.4284 Epoch 5/50 188/188 [==============================] - 24s 130ms/step - loss: 1.0427 - accuracy: 0.4449 - auc: 0.6350 - f1_score: 0.4339 - val_loss: 1.0495 - val_accuracy: 0.4356 - val_auc: 0.6284 - val_f1_score: 0.4268 Epoch 6/50 188/188 [==============================] - 24s 126ms/step - loss: 1.0420 - accuracy: 0.4458 - auc: 0.6360 - f1_score: 0.4362 - val_loss: 1.0495 - val_accuracy: 0.4321 - val_auc: 0.6277 - val_f1_score: 0.4230 Epoch 7/50 188/188 [==============================] - 24s 127ms/step - loss: 1.0417 - accuracy: 0.4460 - auc: 0.6363 - f1_score: 0.4374 - val_loss: 1.0494 - val_accuracy: 0.4384 - val_auc: 0.6280 - val_f1_score: 0.4313 Epoch 8/50 188/188 [==============================] - 28s 149ms/step - loss: 1.0402 - accuracy: 0.4474 - auc: 0.6380 - f1_score: 0.4388 - val_loss: 1.0499 - val_accuracy: 0.4365 - val_auc: 0.6276 - val_f1_score: 0.4330 Epoch 9/50 188/188 [==============================] - 25s 131ms/step - loss: 1.0403 - accuracy: 0.4483 - auc: 0.6383 - f1_score: 0.4419 - val_loss: 1.0500 - val_accuracy: 0.4376 - val_auc: 0.6271 - val_f1_score: 0.4344 Epoch 10/50 188/188 [==============================] - 24s 130ms/step - loss: 1.0391 - accuracy: 0.4508 - auc: 0.6404 - f1_score: 0.4440 - val_loss: 1.0501 - val_accuracy: 0.4411 - val_auc: 0.6279 - val_f1_score: 0.4359 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 84 0.431652 | 0.425786 | 0.445318 | 0.447178 | 0.635669 | 0.636310 | 0.434498 | 0.435192 | 4 | LSTM | 5 | 2 | . 85 0.431731 | 0.425747 | 0.445394 | 0.447393 | 0.637063 | 0.637364 | 0.437174 | 0.438126 | 5 | LSTM | 5 | 2 | . 86 0.433086 | 0.427046 | 0.450997 | 0.452529 | 0.641143 | 0.641012 | 0.444113 | 0.444625 | 6 | LSTM | 5 | 2 | . 87 0.434065 | 0.428043 | 0.454245 | 0.455048 | 0.643693 | 0.643410 | 0.449494 | 0.449419 | 7 | LSTM | 5 | 2 | . 88 0.435399 | 0.429340 | 0.455292 | 0.456175 | 0.644946 | 0.644598 | 0.449274 | 0.449184 | 8 | LSTM | 5 | 2 | . 88 rows × 12 columns . Train shape: (83399, 9, 2) Test shape: (10292, 9, 2) Train shape: (83399, 9, 2) Test shape: (10292, 9, 2) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 9, 2)] 0 [] input_2 (InputLayer) [(None, 9, 2)] 0 [] lstm (LSTM) (None, 9, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 9, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 900) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 900) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1805) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 903000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,102,743 Trainable params: 1,102,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 33s 153ms/step - loss: 1.0752 - accuracy: 0.4071 - auc: 0.5881 - f1_score: 0.4225 - val_loss: 1.0677 - val_accuracy: 0.4326 - val_auc: 0.6145 - val_f1_score: 0.3784 Epoch 2/50 188/188 [==============================] - 31s 166ms/step - loss: 1.0544 - accuracy: 0.4337 - auc: 0.6215 - f1_score: 0.4143 - val_loss: 1.0516 - val_accuracy: 0.4290 - val_auc: 0.6239 - val_f1_score: 0.4003 Epoch 3/50 188/188 [==============================] - 29s 152ms/step - loss: 1.0463 - accuracy: 0.4399 - auc: 0.6299 - f1_score: 0.4273 - val_loss: 1.0492 - val_accuracy: 0.4399 - val_auc: 0.6283 - val_f1_score: 0.4231 Epoch 4/50 188/188 [==============================] - 27s 146ms/step - loss: 1.0445 - accuracy: 0.4436 - auc: 0.6330 - f1_score: 0.4335 - val_loss: 1.0489 - val_accuracy: 0.4406 - val_auc: 0.6290 - val_f1_score: 0.4362 Epoch 5/50 188/188 [==============================] - 26s 139ms/step - loss: 1.0429 - accuracy: 0.4445 - auc: 0.6353 - f1_score: 0.4374 - val_loss: 1.0488 - val_accuracy: 0.4384 - val_auc: 0.6288 - val_f1_score: 0.4305 Epoch 6/50 188/188 [==============================] - 26s 140ms/step - loss: 1.0419 - accuracy: 0.4460 - auc: 0.6362 - f1_score: 0.4395 - val_loss: 1.0493 - val_accuracy: 0.4384 - val_auc: 0.6281 - val_f1_score: 0.4274 Epoch 7/50 188/188 [==============================] - 26s 140ms/step - loss: 1.0411 - accuracy: 0.4490 - auc: 0.6381 - f1_score: 0.4418 - val_loss: 1.0492 - val_accuracy: 0.4387 - val_auc: 0.6282 - val_f1_score: 0.4354 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 85 0.431731 | 0.425747 | 0.445394 | 0.447393 | 0.637063 | 0.637364 | 0.437174 | 0.438126 | 5 | LSTM | 5 | 2 | . 86 0.433086 | 0.427046 | 0.450997 | 0.452529 | 0.641143 | 0.641012 | 0.444113 | 0.444625 | 6 | LSTM | 5 | 2 | . 87 0.434065 | 0.428043 | 0.454245 | 0.455048 | 0.643693 | 0.643410 | 0.449494 | 0.449419 | 7 | LSTM | 5 | 2 | . 88 0.435399 | 0.429340 | 0.455292 | 0.456175 | 0.644946 | 0.644598 | 0.449274 | 0.449184 | 8 | LSTM | 5 | 2 | . 89 0.432650 | 0.426589 | 0.454082 | 0.455068 | 0.644391 | 0.644040 | 0.450565 | 0.450837 | 9 | LSTM | 5 | 2 | . 89 rows × 12 columns . Train shape: (83399, 10, 2) Test shape: (10292, 10, 2) Train shape: (83399, 10, 2) Test shape: (10292, 10, 2) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 2)] 0 [] input_2 (InputLayer) [(None, 10, 2)] 0 [] lstm (LSTM) (None, 10, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 10, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 2005) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1003000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,202,743 Trainable params: 1,202,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 38s 174ms/step - loss: 1.0631 - accuracy: 0.4238 - auc: 0.6071 - f1_score: 0.4279 - val_loss: 1.0514 - val_accuracy: 0.4341 - val_auc: 0.6247 - val_f1_score: 0.3838 Epoch 2/50 188/188 [==============================] - 38s 200ms/step - loss: 1.0467 - accuracy: 0.4380 - auc: 0.6288 - f1_score: 0.3999 - val_loss: 1.0494 - val_accuracy: 0.4350 - val_auc: 0.6287 - val_f1_score: 0.3904 Epoch 3/50 188/188 [==============================] - 33s 175ms/step - loss: 1.0441 - accuracy: 0.4408 - auc: 0.6327 - f1_score: 0.4148 - val_loss: 1.0500 - val_accuracy: 0.4432 - val_auc: 0.6292 - val_f1_score: 0.4250 Epoch 4/50 188/188 [==============================] - 33s 176ms/step - loss: 1.0433 - accuracy: 0.4433 - auc: 0.6343 - f1_score: 0.4298 - val_loss: 1.0493 - val_accuracy: 0.4404 - val_auc: 0.6293 - val_f1_score: 0.4301 Epoch 5/50 188/188 [==============================] - 32s 170ms/step - loss: 1.0419 - accuracy: 0.4481 - auc: 0.6369 - f1_score: 0.4382 - val_loss: 1.0489 - val_accuracy: 0.4390 - val_auc: 0.6298 - val_f1_score: 0.4241 Epoch 6/50 188/188 [==============================] - 32s 169ms/step - loss: 1.0426 - accuracy: 0.4441 - auc: 0.6360 - f1_score: 0.4346 - val_loss: 1.0494 - val_accuracy: 0.4382 - val_auc: 0.6286 - val_f1_score: 0.4306 Epoch 7/50 188/188 [==============================] - 29s 156ms/step - loss: 1.0401 - accuracy: 0.4481 - auc: 0.6392 - f1_score: 0.4381 - val_loss: 1.0496 - val_accuracy: 0.4396 - val_auc: 0.6293 - val_f1_score: 0.4295 Epoch 8/50 188/188 [==============================] - 31s 165ms/step - loss: 1.0392 - accuracy: 0.4498 - auc: 0.6405 - f1_score: 0.4429 - val_loss: 1.0493 - val_accuracy: 0.4381 - val_auc: 0.6292 - val_f1_score: 0.4307 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 86 0.433086 | 0.427046 | 0.450997 | 0.452529 | 0.641143 | 0.641012 | 0.444113 | 0.444625 | 6 | LSTM | 5 | 2 | . 87 0.434065 | 0.428043 | 0.454245 | 0.455048 | 0.643693 | 0.643410 | 0.449494 | 0.449419 | 7 | LSTM | 5 | 2 | . 88 0.435399 | 0.429340 | 0.455292 | 0.456175 | 0.644946 | 0.644598 | 0.449274 | 0.449184 | 8 | LSTM | 5 | 2 | . 89 0.432650 | 0.426589 | 0.454082 | 0.455068 | 0.644391 | 0.644040 | 0.450565 | 0.450837 | 9 | LSTM | 5 | 2 | . 90 0.435631 | 0.429580 | 0.455913 | 0.457498 | 0.646738 | 0.646341 | 0.447819 | 0.448335 | 10 | LSTM | 5 | 2 | . 90 rows × 12 columns . Train shape: (83399, 1, 2) Test shape: (10292, 1, 2) Train shape: (83399, 1, 2) Test shape: (10292, 1, 2) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 1, 2)] 0 [] input_2 (InputLayer) [(None, 1, 2)] 0 [] simple_rnn (SimpleRNN) (None, 1, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 1, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 100) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 100) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 205) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 103000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 241,543 Trainable params: 241,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 9s 31ms/step - loss: 1.0703 - accuracy: 0.4109 - auc: 0.5927 - f1_score: 0.4130 - val_loss: 1.0571 - val_accuracy: 0.4289 - val_auc: 0.6185 - val_f1_score: 0.3720 Epoch 2/50 188/188 [==============================] - 5s 28ms/step - loss: 1.0555 - accuracy: 0.4293 - auc: 0.6175 - f1_score: 0.4086 - val_loss: 1.0554 - val_accuracy: 0.4320 - val_auc: 0.6208 - val_f1_score: 0.4192 Epoch 3/50 188/188 [==============================] - 5s 27ms/step - loss: 1.0532 - accuracy: 0.4313 - auc: 0.6209 - f1_score: 0.4232 - val_loss: 1.0543 - val_accuracy: 0.4313 - val_auc: 0.6230 - val_f1_score: 0.4218 Epoch 4/50 188/188 [==============================] - 6s 30ms/step - loss: 1.0524 - accuracy: 0.4331 - auc: 0.6216 - f1_score: 0.4262 - val_loss: 1.0555 - val_accuracy: 0.4305 - val_auc: 0.6218 - val_f1_score: 0.4275 Epoch 5/50 188/188 [==============================] - 6s 29ms/step - loss: 1.0520 - accuracy: 0.4347 - auc: 0.6225 - f1_score: 0.4280 - val_loss: 1.0550 - val_accuracy: 0.4355 - val_auc: 0.6224 - val_f1_score: 0.4342 Epoch 6/50 188/188 [==============================] - 5s 26ms/step - loss: 1.0517 - accuracy: 0.4339 - auc: 0.6225 - f1_score: 0.4288 - val_loss: 1.0543 - val_accuracy: 0.4351 - val_auc: 0.6237 - val_f1_score: 0.4260 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 87 0.434065 | 0.428043 | 0.454245 | 0.455048 | 0.643693 | 0.643410 | 0.449494 | 0.449419 | 7 | LSTM | 5 | 2 | . 88 0.435399 | 0.429340 | 0.455292 | 0.456175 | 0.644946 | 0.644598 | 0.449274 | 0.449184 | 8 | LSTM | 5 | 2 | . 89 0.432650 | 0.426589 | 0.454082 | 0.455068 | 0.644391 | 0.644040 | 0.450565 | 0.450837 | 9 | LSTM | 5 | 2 | . 90 0.435631 | 0.429580 | 0.455913 | 0.457498 | 0.646738 | 0.646341 | 0.447819 | 0.448335 | 10 | LSTM | 5 | 2 | . 91 0.428045 | 0.422074 | 0.437600 | 0.439366 | 0.627957 | 0.628350 | 0.428202 | 0.428948 | 1 | Simple | 5 | 2 | . 91 rows × 12 columns . Train shape: (83399, 2, 2) Test shape: (10292, 2, 2) Train shape: (83399, 2, 2) Test shape: (10292, 2, 2) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 2, 2)] 0 [] input_2 (InputLayer) [(None, 2, 2)] 0 [] simple_rnn (SimpleRNN) (None, 2, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 2, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 200) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 200) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 405) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 203000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 341,543 Trainable params: 341,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 11s 42ms/step - loss: 1.0801 - accuracy: 0.3930 - auc: 0.5744 - f1_score: 0.4069 - val_loss: 1.0690 - val_accuracy: 0.4234 - val_auc: 0.6081 - val_f1_score: 0.3838 Epoch 2/50 188/188 [==============================] - 7s 37ms/step - loss: 1.0629 - accuracy: 0.4221 - auc: 0.6088 - f1_score: 0.4020 - val_loss: 1.0582 - val_accuracy: 0.4308 - val_auc: 0.6177 - val_f1_score: 0.4055 Epoch 3/50 188/188 [==============================] - 7s 37ms/step - loss: 1.0556 - accuracy: 0.4310 - auc: 0.6188 - f1_score: 0.4184 - val_loss: 1.0543 - val_accuracy: 0.4369 - val_auc: 0.6227 - val_f1_score: 0.4125 Epoch 4/50 188/188 [==============================] - 7s 37ms/step - loss: 1.0527 - accuracy: 0.4347 - auc: 0.6221 - f1_score: 0.4225 - val_loss: 1.0542 - val_accuracy: 0.4319 - val_auc: 0.6217 - val_f1_score: 0.4171 Epoch 5/50 188/188 [==============================] - 6s 34ms/step - loss: 1.0512 - accuracy: 0.4346 - auc: 0.6244 - f1_score: 0.4235 - val_loss: 1.0537 - val_accuracy: 0.4354 - val_auc: 0.6225 - val_f1_score: 0.4173 Epoch 6/50 188/188 [==============================] - 6s 34ms/step - loss: 1.0504 - accuracy: 0.4367 - auc: 0.6247 - f1_score: 0.4232 - val_loss: 1.0539 - val_accuracy: 0.4315 - val_auc: 0.6220 - val_f1_score: 0.4144 Epoch 7/50 188/188 [==============================] - 6s 33ms/step - loss: 1.0497 - accuracy: 0.4377 - auc: 0.6255 - f1_score: 0.4254 - val_loss: 1.0538 - val_accuracy: 0.4336 - val_auc: 0.6229 - val_f1_score: 0.4121 Epoch 8/50 188/188 [==============================] - 6s 34ms/step - loss: 1.0490 - accuracy: 0.4367 - auc: 0.6270 - f1_score: 0.4252 - val_loss: 1.0542 - val_accuracy: 0.4318 - val_auc: 0.6231 - val_f1_score: 0.4066 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 88 0.435399 | 0.429340 | 0.455292 | 0.456175 | 0.644946 | 0.644598 | 0.449274 | 0.449184 | 8 | LSTM | 5 | 2 | . 89 0.432650 | 0.426589 | 0.454082 | 0.455068 | 0.644391 | 0.644040 | 0.450565 | 0.450837 | 9 | LSTM | 5 | 2 | . 90 0.435631 | 0.429580 | 0.455913 | 0.457498 | 0.646738 | 0.646341 | 0.447819 | 0.448335 | 10 | LSTM | 5 | 2 | . 91 0.428045 | 0.422074 | 0.437600 | 0.439366 | 0.627957 | 0.628350 | 0.428202 | 0.428948 | 1 | Simple | 5 | 2 | . 92 0.431451 | 0.425645 | 0.441993 | 0.444394 | 0.632440 | 0.633402 | 0.416594 | 0.417331 | 2 | Simple | 5 | 2 | . 92 rows × 12 columns . Train shape: (83399, 3, 2) Test shape: (10292, 3, 2) Train shape: (83399, 3, 2) Test shape: (10292, 3, 2) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 3, 2)] 0 [] input_2 (InputLayer) [(None, 3, 2)] 0 [] simple_rnn (SimpleRNN) (None, 3, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 3, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 300) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 300) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 605) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 303000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 441,543 Trainable params: 441,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 12s 46ms/step - loss: 1.0711 - accuracy: 0.4113 - auc: 0.5920 - f1_score: 0.4006 - val_loss: 1.0571 - val_accuracy: 0.4257 - val_auc: 0.6150 - val_f1_score: 0.3936 Epoch 2/50 188/188 [==============================] - 8s 41ms/step - loss: 1.0560 - accuracy: 0.4303 - auc: 0.6162 - f1_score: 0.4003 - val_loss: 1.0544 - val_accuracy: 0.4277 - val_auc: 0.6190 - val_f1_score: 0.4039 Epoch 3/50 188/188 [==============================] - 8s 43ms/step - loss: 1.0530 - accuracy: 0.4320 - auc: 0.6210 - f1_score: 0.4082 - val_loss: 1.0543 - val_accuracy: 0.4302 - val_auc: 0.6203 - val_f1_score: 0.3994 Epoch 4/50 188/188 [==============================] - 8s 45ms/step - loss: 1.0507 - accuracy: 0.4337 - auc: 0.6239 - f1_score: 0.4097 - val_loss: 1.0542 - val_accuracy: 0.4309 - val_auc: 0.6208 - val_f1_score: 0.4140 Epoch 5/50 188/188 [==============================] - 8s 43ms/step - loss: 1.0494 - accuracy: 0.4349 - auc: 0.6255 - f1_score: 0.4161 - val_loss: 1.0535 - val_accuracy: 0.4282 - val_auc: 0.6218 - val_f1_score: 0.4065 Epoch 6/50 188/188 [==============================] - 9s 47ms/step - loss: 1.0491 - accuracy: 0.4351 - auc: 0.6262 - f1_score: 0.4208 - val_loss: 1.0530 - val_accuracy: 0.4283 - val_auc: 0.6218 - val_f1_score: 0.4153 Epoch 7/50 188/188 [==============================] - 9s 47ms/step - loss: 1.0483 - accuracy: 0.4364 - auc: 0.6274 - f1_score: 0.4238 - val_loss: 1.0534 - val_accuracy: 0.4349 - val_auc: 0.6237 - val_f1_score: 0.4200 Epoch 8/50 188/188 [==============================] - 9s 47ms/step - loss: 1.0474 - accuracy: 0.4378 - auc: 0.6285 - f1_score: 0.4258 - val_loss: 1.0529 - val_accuracy: 0.4345 - val_auc: 0.6236 - val_f1_score: 0.4233 Epoch 9/50 188/188 [==============================] - 8s 42ms/step - loss: 1.0482 - accuracy: 0.4372 - auc: 0.6280 - f1_score: 0.4258 - val_loss: 1.0531 - val_accuracy: 0.4301 - val_auc: 0.6225 - val_f1_score: 0.4148 Epoch 10/50 188/188 [==============================] - 8s 42ms/step - loss: 1.0466 - accuracy: 0.4398 - auc: 0.6298 - f1_score: 0.4297 - val_loss: 1.0531 - val_accuracy: 0.4303 - val_auc: 0.6235 - val_f1_score: 0.4199 Epoch 11/50 188/188 [==============================] - 8s 45ms/step - loss: 1.0458 - accuracy: 0.4395 - auc: 0.6306 - f1_score: 0.4288 - val_loss: 1.0523 - val_accuracy: 0.4355 - val_auc: 0.6244 - val_f1_score: 0.4299 Epoch 12/50 188/188 [==============================] - 8s 44ms/step - loss: 1.0458 - accuracy: 0.4404 - auc: 0.6309 - f1_score: 0.4315 - val_loss: 1.0524 - val_accuracy: 0.4295 - val_auc: 0.6235 - val_f1_score: 0.4168 Epoch 13/50 188/188 [==============================] - 9s 50ms/step - loss: 1.0456 - accuracy: 0.4404 - auc: 0.6307 - f1_score: 0.4317 - val_loss: 1.0525 - val_accuracy: 0.4311 - val_auc: 0.6238 - val_f1_score: 0.4229 Epoch 14/50 188/188 [==============================] - 9s 45ms/step - loss: 1.0447 - accuracy: 0.4425 - auc: 0.6318 - f1_score: 0.4357 - val_loss: 1.0533 - val_accuracy: 0.4306 - val_auc: 0.6226 - val_f1_score: 0.4220 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 89 0.432650 | 0.426589 | 0.454082 | 0.455068 | 0.644391 | 0.644040 | 0.450565 | 0.450837 | 9 | LSTM | 5 | 2 | . 90 0.435631 | 0.429580 | 0.455913 | 0.457498 | 0.646738 | 0.646341 | 0.447819 | 0.448335 | 10 | LSTM | 5 | 2 | . 91 0.428045 | 0.422074 | 0.437600 | 0.439366 | 0.627957 | 0.628350 | 0.428202 | 0.428948 | 1 | Simple | 5 | 2 | . 92 0.431451 | 0.425645 | 0.441993 | 0.444394 | 0.632440 | 0.633402 | 0.416594 | 0.417331 | 2 | Simple | 5 | 2 | . 93 0.430796 | 0.424767 | 0.444860 | 0.446051 | 0.637315 | 0.637345 | 0.436331 | 0.436428 | 3 | Simple | 5 | 2 | . 93 rows × 12 columns . Train shape: (83399, 4, 2) Test shape: (10292, 4, 2) Train shape: (83399, 4, 2) Test shape: (10292, 4, 2) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 4, 2)] 0 [] input_2 (InputLayer) [(None, 4, 2)] 0 [] simple_rnn (SimpleRNN) (None, 4, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 4, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 400) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 400) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 805) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 403000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 541,543 Trainable params: 541,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 13s 54ms/step - loss: 1.0785 - accuracy: 0.3963 - auc: 0.5781 - f1_score: 0.4167 - val_loss: 1.0635 - val_accuracy: 0.4228 - val_auc: 0.6077 - val_f1_score: 0.3943 Epoch 2/50 188/188 [==============================] - 10s 56ms/step - loss: 1.0598 - accuracy: 0.4238 - auc: 0.6109 - f1_score: 0.4080 - val_loss: 1.0536 - val_accuracy: 0.4314 - val_auc: 0.6222 - val_f1_score: 0.4039 Epoch 3/50 188/188 [==============================] - 10s 51ms/step - loss: 1.0533 - accuracy: 0.4269 - auc: 0.6192 - f1_score: 0.4142 - val_loss: 1.0510 - val_accuracy: 0.4379 - val_auc: 0.6260 - val_f1_score: 0.4266 Epoch 4/50 188/188 [==============================] - 10s 52ms/step - loss: 1.0511 - accuracy: 0.4316 - auc: 0.6228 - f1_score: 0.4239 - val_loss: 1.0524 - val_accuracy: 0.4305 - val_auc: 0.6226 - val_f1_score: 0.4218 Epoch 5/50 188/188 [==============================] - 9s 50ms/step - loss: 1.0492 - accuracy: 0.4332 - auc: 0.6251 - f1_score: 0.4246 - val_loss: 1.0521 - val_accuracy: 0.4331 - val_auc: 0.6249 - val_f1_score: 0.4131 Epoch 6/50 188/188 [==============================] - 9s 49ms/step - loss: 1.0479 - accuracy: 0.4344 - auc: 0.6271 - f1_score: 0.4280 - val_loss: 1.0531 - val_accuracy: 0.4327 - val_auc: 0.6227 - val_f1_score: 0.4218 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 90 0.435631 | 0.429580 | 0.455913 | 0.457498 | 0.646738 | 0.646341 | 0.447819 | 0.448335 | 10 | LSTM | 5 | 2 | . 91 0.428045 | 0.422074 | 0.437600 | 0.439366 | 0.627957 | 0.628350 | 0.428202 | 0.428948 | 1 | Simple | 5 | 2 | . 92 0.431451 | 0.425645 | 0.441993 | 0.444394 | 0.632440 | 0.633402 | 0.416594 | 0.417331 | 2 | Simple | 5 | 2 | . 93 0.430796 | 0.424767 | 0.444860 | 0.446051 | 0.637315 | 0.637345 | 0.436331 | 0.436428 | 3 | Simple | 5 | 2 | . 94 0.430483 | 0.424461 | 0.446549 | 0.448432 | 0.636666 | 0.636886 | 0.435103 | 0.435771 | 4 | Simple | 5 | 2 | . 94 rows × 12 columns . Train shape: (83399, 5, 2) Test shape: (10292, 5, 2) Train shape: (83399, 5, 2) Test shape: (10292, 5, 2) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 5, 2)] 0 [] input_2 (InputLayer) [(None, 5, 2)] 0 [] simple_rnn (SimpleRNN) (None, 5, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 5, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 500) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 500) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1005) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 503000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 641,543 Trainable params: 641,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 13s 58ms/step - loss: 1.0834 - accuracy: 0.3932 - auc: 0.5644 - f1_score: 0.4026 - val_loss: 1.0726 - val_accuracy: 0.4120 - val_auc: 0.5892 - val_f1_score: 0.3729 Epoch 2/50 188/188 [==============================] - 11s 56ms/step - loss: 1.0665 - accuracy: 0.4238 - auc: 0.6024 - f1_score: 0.4080 - val_loss: 1.0589 - val_accuracy: 0.4343 - val_auc: 0.6143 - val_f1_score: 0.4279 Epoch 3/50 188/188 [==============================] - 11s 57ms/step - loss: 1.0575 - accuracy: 0.4303 - auc: 0.6154 - f1_score: 0.4258 - val_loss: 1.0539 - val_accuracy: 0.4282 - val_auc: 0.6190 - val_f1_score: 0.4194 Epoch 4/50 188/188 [==============================] - 11s 59ms/step - loss: 1.0520 - accuracy: 0.4342 - auc: 0.6230 - f1_score: 0.4292 - val_loss: 1.0516 - val_accuracy: 0.4305 - val_auc: 0.6248 - val_f1_score: 0.4218 Epoch 5/50 188/188 [==============================] - 10s 54ms/step - loss: 1.0499 - accuracy: 0.4361 - auc: 0.6258 - f1_score: 0.4301 - val_loss: 1.0521 - val_accuracy: 0.4289 - val_auc: 0.6219 - val_f1_score: 0.4252 Epoch 6/50 188/188 [==============================] - 11s 58ms/step - loss: 1.0488 - accuracy: 0.4377 - auc: 0.6271 - f1_score: 0.4319 - val_loss: 1.0515 - val_accuracy: 0.4336 - val_auc: 0.6236 - val_f1_score: 0.4199 Epoch 7/50 188/188 [==============================] - 11s 58ms/step - loss: 1.0468 - accuracy: 0.4417 - auc: 0.6298 - f1_score: 0.4363 - val_loss: 1.0518 - val_accuracy: 0.4281 - val_auc: 0.6221 - val_f1_score: 0.4191 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 91 0.428045 | 0.422074 | 0.437600 | 0.439366 | 0.627957 | 0.628350 | 0.428202 | 0.428948 | 1 | Simple | 5 | 2 | . 92 0.431451 | 0.425645 | 0.441993 | 0.444394 | 0.632440 | 0.633402 | 0.416594 | 0.417331 | 2 | Simple | 5 | 2 | . 93 0.430796 | 0.424767 | 0.444860 | 0.446051 | 0.637315 | 0.637345 | 0.436331 | 0.436428 | 3 | Simple | 5 | 2 | . 94 0.430483 | 0.424461 | 0.446549 | 0.448432 | 0.636666 | 0.636886 | 0.435103 | 0.435771 | 4 | Simple | 5 | 2 | . 95 0.432867 | 0.426762 | 0.448130 | 0.449618 | 0.639364 | 0.639276 | 0.439364 | 0.439770 | 5 | Simple | 5 | 2 | . 95 rows × 12 columns . Train shape: (83399, 6, 2) Test shape: (10292, 6, 2) Train shape: (83399, 6, 2) Test shape: (10292, 6, 2) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 6, 2)] 0 [] input_2 (InputLayer) [(None, 6, 2)] 0 [] simple_rnn (SimpleRNN) (None, 6, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 6, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 600) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 600) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1205) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 603000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 741,543 Trainable params: 741,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 17s 72ms/step - loss: 1.0759 - accuracy: 0.4021 - auc: 0.5828 - f1_score: 0.4067 - val_loss: 1.0668 - val_accuracy: 0.4110 - val_auc: 0.6002 - val_f1_score: 0.3575 Epoch 2/50 188/188 [==============================] - 12s 66ms/step - loss: 1.0587 - accuracy: 0.4246 - auc: 0.6122 - f1_score: 0.3933 - val_loss: 1.0572 - val_accuracy: 0.4317 - val_auc: 0.6179 - val_f1_score: 0.4057 Epoch 3/50 188/188 [==============================] - 12s 63ms/step - loss: 1.0521 - accuracy: 0.4319 - auc: 0.6213 - f1_score: 0.4152 - val_loss: 1.0523 - val_accuracy: 0.4317 - val_auc: 0.6226 - val_f1_score: 0.4111 Epoch 4/50 188/188 [==============================] - 12s 64ms/step - loss: 1.0482 - accuracy: 0.4361 - auc: 0.6264 - f1_score: 0.4199 - val_loss: 1.0516 - val_accuracy: 0.4293 - val_auc: 0.6238 - val_f1_score: 0.4133 Epoch 5/50 188/188 [==============================] - 13s 67ms/step - loss: 1.0458 - accuracy: 0.4406 - auc: 0.6301 - f1_score: 0.4277 - val_loss: 1.0513 - val_accuracy: 0.4312 - val_auc: 0.6248 - val_f1_score: 0.4153 Epoch 6/50 188/188 [==============================] - 13s 68ms/step - loss: 1.0456 - accuracy: 0.4397 - auc: 0.6301 - f1_score: 0.4284 - val_loss: 1.0512 - val_accuracy: 0.4368 - val_auc: 0.6256 - val_f1_score: 0.4229 Epoch 7/50 188/188 [==============================] - 13s 69ms/step - loss: 1.0446 - accuracy: 0.4416 - auc: 0.6317 - f1_score: 0.4329 - val_loss: 1.0508 - val_accuracy: 0.4368 - val_auc: 0.6260 - val_f1_score: 0.4255 Epoch 8/50 188/188 [==============================] - 12s 63ms/step - loss: 1.0436 - accuracy: 0.4444 - auc: 0.6330 - f1_score: 0.4364 - val_loss: 1.0508 - val_accuracy: 0.4380 - val_auc: 0.6264 - val_f1_score: 0.4261 Epoch 9/50 188/188 [==============================] - 12s 63ms/step - loss: 1.0430 - accuracy: 0.4448 - auc: 0.6342 - f1_score: 0.4352 - val_loss: 1.0513 - val_accuracy: 0.4369 - val_auc: 0.6255 - val_f1_score: 0.4242 Epoch 10/50 188/188 [==============================] - 12s 64ms/step - loss: 1.0414 - accuracy: 0.4474 - auc: 0.6369 - f1_score: 0.4395 - val_loss: 1.0509 - val_accuracy: 0.4356 - val_auc: 0.6268 - val_f1_score: 0.4246 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 92 0.431451 | 0.425645 | 0.441993 | 0.444394 | 0.632440 | 0.633402 | 0.416594 | 0.417331 | 2 | Simple | 5 | 2 | . 93 0.430796 | 0.424767 | 0.444860 | 0.446051 | 0.637315 | 0.637345 | 0.436331 | 0.436428 | 3 | Simple | 5 | 2 | . 94 0.430483 | 0.424461 | 0.446549 | 0.448432 | 0.636666 | 0.636886 | 0.435103 | 0.435771 | 4 | Simple | 5 | 2 | . 95 0.432867 | 0.426762 | 0.448130 | 0.449618 | 0.639364 | 0.639276 | 0.439364 | 0.439770 | 5 | Simple | 5 | 2 | . 96 0.434021 | 0.427916 | 0.453035 | 0.454617 | 0.643664 | 0.643169 | 0.440652 | 0.441027 | 6 | Simple | 5 | 2 | . 96 rows × 12 columns . Train shape: (83399, 7, 2) Test shape: (10292, 7, 2) Train shape: (83399, 7, 2) Test shape: (10292, 7, 2) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 7, 2)] 0 [] input_2 (InputLayer) [(None, 7, 2)] 0 [] simple_rnn (SimpleRNN) (None, 7, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 7, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 700) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 700) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1405) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 703000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 841,543 Trainable params: 841,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 17s 77ms/step - loss: 1.0760 - accuracy: 0.4016 - auc: 0.5834 - f1_score: 0.4203 - val_loss: 1.0655 - val_accuracy: 0.4119 - val_auc: 0.6027 - val_f1_score: 0.3790 Epoch 2/50 188/188 [==============================] - 13s 71ms/step - loss: 1.0593 - accuracy: 0.4209 - auc: 0.6105 - f1_score: 0.4061 - val_loss: 1.0576 - val_accuracy: 0.4245 - val_auc: 0.6148 - val_f1_score: 0.4122 Epoch 3/50 188/188 [==============================] - 14s 74ms/step - loss: 1.0526 - accuracy: 0.4293 - auc: 0.6205 - f1_score: 0.4183 - val_loss: 1.0542 - val_accuracy: 0.4297 - val_auc: 0.6209 - val_f1_score: 0.4187 Epoch 4/50 188/188 [==============================] - 14s 74ms/step - loss: 1.0492 - accuracy: 0.4349 - auc: 0.6254 - f1_score: 0.4243 - val_loss: 1.0535 - val_accuracy: 0.4299 - val_auc: 0.6216 - val_f1_score: 0.4204 Epoch 5/50 188/188 [==============================] - 14s 76ms/step - loss: 1.0459 - accuracy: 0.4410 - auc: 0.6298 - f1_score: 0.4328 - val_loss: 1.0521 - val_accuracy: 0.4341 - val_auc: 0.6248 - val_f1_score: 0.4209 Epoch 6/50 188/188 [==============================] - 15s 78ms/step - loss: 1.0443 - accuracy: 0.4438 - auc: 0.6327 - f1_score: 0.4353 - val_loss: 1.0513 - val_accuracy: 0.4380 - val_auc: 0.6258 - val_f1_score: 0.4284 Epoch 7/50 188/188 [==============================] - 15s 81ms/step - loss: 1.0430 - accuracy: 0.4466 - auc: 0.6338 - f1_score: 0.4376 - val_loss: 1.0528 - val_accuracy: 0.4381 - val_auc: 0.6237 - val_f1_score: 0.4291 Epoch 8/50 188/188 [==============================] - 14s 77ms/step - loss: 1.0425 - accuracy: 0.4441 - auc: 0.6343 - f1_score: 0.4371 - val_loss: 1.0514 - val_accuracy: 0.4402 - val_auc: 0.6257 - val_f1_score: 0.4318 Epoch 9/50 188/188 [==============================] - 14s 77ms/step - loss: 1.0414 - accuracy: 0.4464 - auc: 0.6368 - f1_score: 0.4409 - val_loss: 1.0517 - val_accuracy: 0.4339 - val_auc: 0.6248 - val_f1_score: 0.4272 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 93 0.430796 | 0.424767 | 0.444860 | 0.446051 | 0.637315 | 0.637345 | 0.436331 | 0.436428 | 3 | Simple | 5 | 2 | . 94 0.430483 | 0.424461 | 0.446549 | 0.448432 | 0.636666 | 0.636886 | 0.435103 | 0.435771 | 4 | Simple | 5 | 2 | . 95 0.432867 | 0.426762 | 0.448130 | 0.449618 | 0.639364 | 0.639276 | 0.439364 | 0.439770 | 5 | Simple | 5 | 2 | . 96 0.434021 | 0.427916 | 0.453035 | 0.454617 | 0.643664 | 0.643169 | 0.440652 | 0.441027 | 6 | Simple | 5 | 2 | . 97 0.434346 | 0.428122 | 0.457788 | 0.458341 | 0.646887 | 0.645916 | 0.451154 | 0.450799 | 7 | Simple | 5 | 2 | . 97 rows × 12 columns . Train shape: (83399, 8, 2) Test shape: (10292, 8, 2) Train shape: (83399, 8, 2) Test shape: (10292, 8, 2) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 8, 2)] 0 [] input_2 (InputLayer) [(None, 8, 2)] 0 [] simple_rnn (SimpleRNN) (None, 8, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 8, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 800) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 800) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1605) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 803000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 941,543 Trainable params: 941,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 17s 77ms/step - loss: 1.0795 - accuracy: 0.3918 - auc: 0.5738 - f1_score: 0.4173 - val_loss: 1.0667 - val_accuracy: 0.4095 - val_auc: 0.5983 - val_f1_score: 0.3832 Epoch 2/50 188/188 [==============================] - 14s 75ms/step - loss: 1.0612 - accuracy: 0.4235 - auc: 0.6087 - f1_score: 0.4145 - val_loss: 1.0604 - val_accuracy: 0.4150 - val_auc: 0.6088 - val_f1_score: 0.4061 Epoch 3/50 188/188 [==============================] - 15s 78ms/step - loss: 1.0536 - accuracy: 0.4321 - auc: 0.6199 - f1_score: 0.4243 - val_loss: 1.0564 - val_accuracy: 0.4266 - val_auc: 0.6166 - val_f1_score: 0.4206 Epoch 4/50 188/188 [==============================] - 14s 74ms/step - loss: 1.0481 - accuracy: 0.4393 - auc: 0.6273 - f1_score: 0.4330 - val_loss: 1.0537 - val_accuracy: 0.4308 - val_auc: 0.6217 - val_f1_score: 0.4173 Epoch 5/50 188/188 [==============================] - 14s 76ms/step - loss: 1.0456 - accuracy: 0.4408 - auc: 0.6310 - f1_score: 0.4321 - val_loss: 1.0533 - val_accuracy: 0.4366 - val_auc: 0.6221 - val_f1_score: 0.4321 Epoch 6/50 188/188 [==============================] - 14s 77ms/step - loss: 1.0443 - accuracy: 0.4427 - auc: 0.6327 - f1_score: 0.4366 - val_loss: 1.0536 - val_accuracy: 0.4329 - val_auc: 0.6199 - val_f1_score: 0.4246 Epoch 7/50 188/188 [==============================] - 14s 75ms/step - loss: 1.0422 - accuracy: 0.4474 - auc: 0.6358 - f1_score: 0.4422 - val_loss: 1.0539 - val_accuracy: 0.4308 - val_auc: 0.6219 - val_f1_score: 0.4232 Epoch 8/50 188/188 [==============================] - 14s 76ms/step - loss: 1.0417 - accuracy: 0.4461 - auc: 0.6359 - f1_score: 0.4416 - val_loss: 1.0524 - val_accuracy: 0.4356 - val_auc: 0.6244 - val_f1_score: 0.4256 Epoch 9/50 188/188 [==============================] - 14s 75ms/step - loss: 1.0400 - accuracy: 0.4500 - auc: 0.6385 - f1_score: 0.4433 - val_loss: 1.0514 - val_accuracy: 0.4373 - val_auc: 0.6257 - val_f1_score: 0.4340 Epoch 10/50 188/188 [==============================] - 14s 77ms/step - loss: 1.0395 - accuracy: 0.4497 - auc: 0.6393 - f1_score: 0.4457 - val_loss: 1.0539 - val_accuracy: 0.4325 - val_auc: 0.6223 - val_f1_score: 0.4236 Epoch 11/50 188/188 [==============================] - 14s 76ms/step - loss: 1.0384 - accuracy: 0.4501 - auc: 0.6410 - f1_score: 0.4432 - val_loss: 1.0530 - val_accuracy: 0.4336 - val_auc: 0.6239 - val_f1_score: 0.4279 Epoch 12/50 188/188 [==============================] - 15s 82ms/step - loss: 1.0379 - accuracy: 0.4538 - auc: 0.6419 - f1_score: 0.4499 - val_loss: 1.0521 - val_accuracy: 0.4311 - val_auc: 0.6241 - val_f1_score: 0.4235 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 94 0.430483 | 0.424461 | 0.446549 | 0.448432 | 0.636666 | 0.636886 | 0.435103 | 0.435771 | 4 | Simple | 5 | 2 | . 95 0.432867 | 0.426762 | 0.448130 | 0.449618 | 0.639364 | 0.639276 | 0.439364 | 0.439770 | 5 | Simple | 5 | 2 | . 96 0.434021 | 0.427916 | 0.453035 | 0.454617 | 0.643664 | 0.643169 | 0.440652 | 0.441027 | 6 | Simple | 5 | 2 | . 97 0.434346 | 0.428122 | 0.457788 | 0.458341 | 0.646887 | 0.645916 | 0.451154 | 0.450799 | 7 | Simple | 5 | 2 | . 98 0.437370 | 0.431073 | 0.461843 | 0.461771 | 0.652634 | 0.651135 | 0.454193 | 0.453133 | 8 | Simple | 5 | 2 | . 98 rows × 12 columns . Train shape: (83399, 9, 2) Test shape: (10292, 9, 2) Train shape: (83399, 9, 2) Test shape: (10292, 9, 2) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 9, 2)] 0 [] input_2 (InputLayer) [(None, 9, 2)] 0 [] simple_rnn (SimpleRNN) (None, 9, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 9, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 900) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 900) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1805) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 903000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,041,543 Trainable params: 1,041,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 23s 100ms/step - loss: 1.0749 - accuracy: 0.3994 - auc: 0.5836 - f1_score: 0.4284 - val_loss: 1.0651 - val_accuracy: 0.4158 - val_auc: 0.6021 - val_f1_score: 0.3954 Epoch 2/50 188/188 [==============================] - 17s 90ms/step - loss: 1.0581 - accuracy: 0.4241 - auc: 0.6119 - f1_score: 0.4104 - val_loss: 1.0593 - val_accuracy: 0.4285 - val_auc: 0.6148 - val_f1_score: 0.4199 Epoch 3/50 188/188 [==============================] - 18s 98ms/step - loss: 1.0509 - accuracy: 0.4331 - auc: 0.6228 - f1_score: 0.4216 - val_loss: 1.0579 - val_accuracy: 0.4277 - val_auc: 0.6163 - val_f1_score: 0.4168 Epoch 4/50 188/188 [==============================] - 17s 89ms/step - loss: 1.0467 - accuracy: 0.4367 - auc: 0.6282 - f1_score: 0.4239 - val_loss: 1.0554 - val_accuracy: 0.4305 - val_auc: 0.6200 - val_f1_score: 0.4092 Epoch 5/50 188/188 [==============================] - 20s 105ms/step - loss: 1.0444 - accuracy: 0.4404 - auc: 0.6316 - f1_score: 0.4269 - val_loss: 1.0549 - val_accuracy: 0.4321 - val_auc: 0.6208 - val_f1_score: 0.4122 Epoch 6/50 188/188 [==============================] - 17s 91ms/step - loss: 1.0433 - accuracy: 0.4422 - auc: 0.6327 - f1_score: 0.4326 - val_loss: 1.0530 - val_accuracy: 0.4308 - val_auc: 0.6232 - val_f1_score: 0.4161 Epoch 7/50 188/188 [==============================] - 17s 92ms/step - loss: 1.0420 - accuracy: 0.4438 - auc: 0.6352 - f1_score: 0.4356 - val_loss: 1.0526 - val_accuracy: 0.4300 - val_auc: 0.6243 - val_f1_score: 0.4185 Epoch 8/50 188/188 [==============================] - 20s 107ms/step - loss: 1.0401 - accuracy: 0.4452 - auc: 0.6365 - f1_score: 0.4362 - val_loss: 1.0530 - val_accuracy: 0.4278 - val_auc: 0.6237 - val_f1_score: 0.4245 Epoch 9/50 188/188 [==============================] - 17s 92ms/step - loss: 1.0387 - accuracy: 0.4489 - auc: 0.6392 - f1_score: 0.4420 - val_loss: 1.0538 - val_accuracy: 0.4301 - val_auc: 0.6227 - val_f1_score: 0.4237 Epoch 10/50 188/188 [==============================] - 16s 85ms/step - loss: 1.0376 - accuracy: 0.4493 - auc: 0.6408 - f1_score: 0.4428 - val_loss: 1.0531 - val_accuracy: 0.4329 - val_auc: 0.6230 - val_f1_score: 0.4239 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 95 0.432867 | 0.426762 | 0.448130 | 0.449618 | 0.639364 | 0.639276 | 0.439364 | 0.439770 | 5 | Simple | 5 | 2 | . 96 0.434021 | 0.427916 | 0.453035 | 0.454617 | 0.643664 | 0.643169 | 0.440652 | 0.441027 | 6 | Simple | 5 | 2 | . 97 0.434346 | 0.428122 | 0.457788 | 0.458341 | 0.646887 | 0.645916 | 0.451154 | 0.450799 | 7 | Simple | 5 | 2 | . 98 0.437370 | 0.431073 | 0.461843 | 0.461771 | 0.652634 | 0.651135 | 0.454193 | 0.453133 | 8 | Simple | 5 | 2 | . 99 0.436894 | 0.430485 | 0.460175 | 0.460164 | 0.651650 | 0.649923 | 0.451448 | 0.450417 | 9 | Simple | 5 | 2 | . 99 rows × 12 columns . Train shape: (83399, 10, 2) Test shape: (10292, 10, 2) Train shape: (83399, 10, 2) Test shape: (10292, 10, 2) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 2)] 0 [] input_2 (InputLayer) [(None, 10, 2)] 0 [] simple_rnn (SimpleRNN) (None, 10, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 10, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 2005) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1003000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,141,543 Trainable params: 1,141,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 20s 94ms/step - loss: 1.0730 - accuracy: 0.4057 - auc: 0.5885 - f1_score: 0.4243 - val_loss: 1.0649 - val_accuracy: 0.4107 - val_auc: 0.6023 - val_f1_score: 0.3948 Epoch 2/50 188/188 [==============================] - 17s 90ms/step - loss: 1.0574 - accuracy: 0.4266 - auc: 0.6140 - f1_score: 0.4126 - val_loss: 1.0610 - val_accuracy: 0.4187 - val_auc: 0.6090 - val_f1_score: 0.3972 Epoch 3/50 188/188 [==============================] - 18s 96ms/step - loss: 1.0512 - accuracy: 0.4360 - auc: 0.6231 - f1_score: 0.4201 - val_loss: 1.0574 - val_accuracy: 0.4295 - val_auc: 0.6152 - val_f1_score: 0.4133 Epoch 4/50 188/188 [==============================] - 17s 91ms/step - loss: 1.0480 - accuracy: 0.4368 - auc: 0.6273 - f1_score: 0.4254 - val_loss: 1.0550 - val_accuracy: 0.4265 - val_auc: 0.6185 - val_f1_score: 0.4073 Epoch 5/50 188/188 [==============================] - 17s 92ms/step - loss: 1.0446 - accuracy: 0.4406 - auc: 0.6313 - f1_score: 0.4279 - val_loss: 1.0560 - val_accuracy: 0.4270 - val_auc: 0.6174 - val_f1_score: 0.4179 Epoch 6/50 188/188 [==============================] - 18s 94ms/step - loss: 1.0428 - accuracy: 0.4434 - auc: 0.6341 - f1_score: 0.4345 - val_loss: 1.0552 - val_accuracy: 0.4279 - val_auc: 0.6186 - val_f1_score: 0.4215 Epoch 7/50 188/188 [==============================] - 18s 93ms/step - loss: 1.0401 - accuracy: 0.4451 - auc: 0.6372 - f1_score: 0.4385 - val_loss: 1.0565 - val_accuracy: 0.4251 - val_auc: 0.6176 - val_f1_score: 0.4165 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 96 0.434021 | 0.427916 | 0.453035 | 0.454617 | 0.643664 | 0.643169 | 0.440652 | 0.441027 | 6 | Simple | 5 | 2 | . 97 0.434346 | 0.428122 | 0.457788 | 0.458341 | 0.646887 | 0.645916 | 0.451154 | 0.450799 | 7 | Simple | 5 | 2 | . 98 0.437370 | 0.431073 | 0.461843 | 0.461771 | 0.652634 | 0.651135 | 0.454193 | 0.453133 | 8 | Simple | 5 | 2 | . 99 0.436894 | 0.430485 | 0.460175 | 0.460164 | 0.651650 | 0.649923 | 0.451448 | 0.450417 | 9 | Simple | 5 | 2 | . 100 0.436845 | 0.430477 | 0.456327 | 0.457410 | 0.649124 | 0.647918 | 0.445791 | 0.445722 | 10 | Simple | 5 | 2 | . 100 rows × 12 columns . Train shape: (83399, 1, 2) Test shape: (10292, 1, 2) Train shape: (83399, 1, 2) Test shape: (10292, 1, 2) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 1, 2)] 0 [] input_2 (InputLayer) [(None, 1, 2)] 0 [] lstm (LSTM) (None, 1, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 1, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 100) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 100) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 208) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 104500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 304,243 Trainable params: 304,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 8s 32ms/step - loss: 1.0832 - accuracy: 0.3757 - auc: 0.5587 - f1_score: 0.4111 - val_loss: 1.0747 - val_accuracy: 0.4210 - val_auc: 0.5933 - val_f1_score: 0.3825 Epoch 2/50 188/188 [==============================] - 5s 29ms/step - loss: 1.0734 - accuracy: 0.4170 - auc: 0.5921 - f1_score: 0.4101 - val_loss: 1.0709 - val_accuracy: 0.4247 - val_auc: 0.6028 - val_f1_score: 0.4218 Epoch 3/50 188/188 [==============================] - 5s 28ms/step - loss: 1.0700 - accuracy: 0.4222 - auc: 0.5988 - f1_score: 0.4212 - val_loss: 1.0690 - val_accuracy: 0.4299 - val_auc: 0.6056 - val_f1_score: 0.4299 Epoch 4/50 188/188 [==============================] - 5s 28ms/step - loss: 1.0677 - accuracy: 0.4260 - auc: 0.6033 - f1_score: 0.4259 - val_loss: 1.0669 - val_accuracy: 0.4245 - val_auc: 0.6066 - val_f1_score: 0.4178 Epoch 5/50 188/188 [==============================] - 5s 28ms/step - loss: 1.0636 - accuracy: 0.4275 - auc: 0.6112 - f1_score: 0.4283 - val_loss: 1.0599 - val_accuracy: 0.4293 - val_auc: 0.6194 - val_f1_score: 0.4274 Epoch 6/50 188/188 [==============================] - 5s 28ms/step - loss: 1.0559 - accuracy: 0.4302 - auc: 0.6185 - f1_score: 0.4246 - val_loss: 1.0544 - val_accuracy: 0.4332 - val_auc: 0.6217 - val_f1_score: 0.3923 Epoch 7/50 188/188 [==============================] - 6s 32ms/step - loss: 1.0526 - accuracy: 0.4328 - auc: 0.6222 - f1_score: 0.4185 - val_loss: 1.0548 - val_accuracy: 0.4327 - val_auc: 0.6208 - val_f1_score: 0.4249 Epoch 8/50 188/188 [==============================] - 6s 31ms/step - loss: 1.0521 - accuracy: 0.4322 - auc: 0.6222 - f1_score: 0.4253 - val_loss: 1.0544 - val_accuracy: 0.4296 - val_auc: 0.6217 - val_f1_score: 0.4195 Epoch 9/50 188/188 [==============================] - 6s 32ms/step - loss: 1.0519 - accuracy: 0.4337 - auc: 0.6231 - f1_score: 0.4247 - val_loss: 1.0541 - val_accuracy: 0.4319 - val_auc: 0.6229 - val_f1_score: 0.4144 Epoch 10/50 188/188 [==============================] - 6s 30ms/step - loss: 1.0512 - accuracy: 0.4349 - auc: 0.6242 - f1_score: 0.4244 - val_loss: 1.0542 - val_accuracy: 0.4378 - val_auc: 0.6230 - val_f1_score: 0.4250 Epoch 11/50 188/188 [==============================] - 6s 30ms/step - loss: 1.0512 - accuracy: 0.4324 - auc: 0.6239 - f1_score: 0.4245 - val_loss: 1.0544 - val_accuracy: 0.4357 - val_auc: 0.6225 - val_f1_score: 0.4233 Epoch 12/50 188/188 [==============================] - 5s 29ms/step - loss: 1.0509 - accuracy: 0.4361 - auc: 0.6247 - f1_score: 0.4288 - val_loss: 1.0541 - val_accuracy: 0.4373 - val_auc: 0.6232 - val_f1_score: 0.4221 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 97 0.434346 | 0.428122 | 0.457788 | 0.458341 | 0.646887 | 0.645916 | 0.451154 | 0.450799 | 7 | Simple | 5 | 2 | . 98 0.437370 | 0.431073 | 0.461843 | 0.461771 | 0.652634 | 0.651135 | 0.454193 | 0.453133 | 8 | Simple | 5 | 2 | . 99 0.436894 | 0.430485 | 0.460175 | 0.460164 | 0.651650 | 0.649923 | 0.451448 | 0.450417 | 9 | Simple | 5 | 2 | . 100 0.436845 | 0.430477 | 0.456327 | 0.457410 | 0.649124 | 0.647918 | 0.445791 | 0.445722 | 10 | Simple | 5 | 2 | . 101 0.429614 | 0.423697 | 0.439301 | 0.441405 | 0.629300 | 0.629927 | 0.423532 | 0.424238 | 1 | LSTM | 8 | 2 | . 101 rows × 12 columns . Train shape: (83399, 2, 2) Test shape: (10292, 2, 2) Train shape: (83399, 2, 2) Test shape: (10292, 2, 2) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 2, 2)] 0 [] input_2 (InputLayer) [(None, 2, 2)] 0 [] lstm (LSTM) (None, 2, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 2, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 200) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 200) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 408) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 204500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 404,243 Trainable params: 404,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 12s 49ms/step - loss: 1.0676 - accuracy: 0.4173 - auc: 0.5993 - f1_score: 0.4135 - val_loss: 1.0552 - val_accuracy: 0.4273 - val_auc: 0.6197 - val_f1_score: 0.3614 Epoch 2/50 188/188 [==============================] - 9s 46ms/step - loss: 1.0517 - accuracy: 0.4327 - auc: 0.6221 - f1_score: 0.3815 - val_loss: 1.0552 - val_accuracy: 0.4287 - val_auc: 0.6205 - val_f1_score: 0.3767 Epoch 3/50 188/188 [==============================] - 9s 47ms/step - loss: 1.0508 - accuracy: 0.4330 - auc: 0.6237 - f1_score: 0.3975 - val_loss: 1.0541 - val_accuracy: 0.4336 - val_auc: 0.6222 - val_f1_score: 0.4008 Epoch 4/50 188/188 [==============================] - 10s 52ms/step - loss: 1.0499 - accuracy: 0.4354 - auc: 0.6253 - f1_score: 0.4076 - val_loss: 1.0535 - val_accuracy: 0.4363 - val_auc: 0.6231 - val_f1_score: 0.4165 Epoch 5/50 188/188 [==============================] - 9s 47ms/step - loss: 1.0490 - accuracy: 0.4380 - auc: 0.6266 - f1_score: 0.4163 - val_loss: 1.0540 - val_accuracy: 0.4350 - val_auc: 0.6233 - val_f1_score: 0.4141 Epoch 6/50 188/188 [==============================] - 9s 49ms/step - loss: 1.0484 - accuracy: 0.4378 - auc: 0.6272 - f1_score: 0.4149 - val_loss: 1.0534 - val_accuracy: 0.4385 - val_auc: 0.6234 - val_f1_score: 0.4242 Epoch 7/50 188/188 [==============================] - 9s 47ms/step - loss: 1.0478 - accuracy: 0.4373 - auc: 0.6280 - f1_score: 0.4208 - val_loss: 1.0539 - val_accuracy: 0.4355 - val_auc: 0.6235 - val_f1_score: 0.4209 Epoch 8/50 188/188 [==============================] - 9s 46ms/step - loss: 1.0475 - accuracy: 0.4384 - auc: 0.6288 - f1_score: 0.4263 - val_loss: 1.0532 - val_accuracy: 0.4376 - val_auc: 0.6234 - val_f1_score: 0.4273 Epoch 9/50 188/188 [==============================] - 9s 46ms/step - loss: 1.0473 - accuracy: 0.4389 - auc: 0.6293 - f1_score: 0.4252 - val_loss: 1.0532 - val_accuracy: 0.4382 - val_auc: 0.6241 - val_f1_score: 0.4283 Epoch 10/50 188/188 [==============================] - 9s 49ms/step - loss: 1.0474 - accuracy: 0.4389 - auc: 0.6291 - f1_score: 0.4279 - val_loss: 1.0533 - val_accuracy: 0.4408 - val_auc: 0.6238 - val_f1_score: 0.4290 Epoch 11/50 188/188 [==============================] - 10s 52ms/step - loss: 1.0470 - accuracy: 0.4393 - auc: 0.6297 - f1_score: 0.4290 - val_loss: 1.0529 - val_accuracy: 0.4369 - val_auc: 0.6242 - val_f1_score: 0.4263 Epoch 12/50 188/188 [==============================] - 10s 54ms/step - loss: 1.0466 - accuracy: 0.4398 - auc: 0.6298 - f1_score: 0.4300 - val_loss: 1.0538 - val_accuracy: 0.4378 - val_auc: 0.6232 - val_f1_score: 0.4251 Epoch 13/50 188/188 [==============================] - 11s 59ms/step - loss: 1.0459 - accuracy: 0.4403 - auc: 0.6309 - f1_score: 0.4311 - val_loss: 1.0533 - val_accuracy: 0.4381 - val_auc: 0.6242 - val_f1_score: 0.4273 Epoch 14/50 188/188 [==============================] - 10s 54ms/step - loss: 1.0463 - accuracy: 0.4409 - auc: 0.6299 - f1_score: 0.4323 - val_loss: 1.0536 - val_accuracy: 0.4363 - val_auc: 0.6232 - val_f1_score: 0.4299 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 98 0.437370 | 0.431073 | 0.461843 | 0.461771 | 0.652634 | 0.651135 | 0.454193 | 0.453133 | 8 | Simple | 5 | 2 | . 99 0.436894 | 0.430485 | 0.460175 | 0.460164 | 0.651650 | 0.649923 | 0.451448 | 0.450417 | 9 | Simple | 5 | 2 | . 100 0.436845 | 0.430477 | 0.456327 | 0.457410 | 0.649124 | 0.647918 | 0.445791 | 0.445722 | 10 | Simple | 5 | 2 | . 101 0.429614 | 0.423697 | 0.439301 | 0.441405 | 0.629300 | 0.629927 | 0.423532 | 0.424238 | 1 | LSTM | 8 | 2 | . 102 0.430745 | 0.424774 | 0.443247 | 0.444561 | 0.633224 | 0.633390 | 0.437358 | 0.437671 | 2 | LSTM | 8 | 2 | . 102 rows × 12 columns . Train shape: (83399, 3, 2) Test shape: (10292, 3, 2) Train shape: (83399, 3, 2) Test shape: (10292, 3, 2) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 3, 2)] 0 [] input_2 (InputLayer) [(None, 3, 2)] 0 [] lstm (LSTM) (None, 3, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 3, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 300) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 300) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 608) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 304500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 504,243 Trainable params: 504,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 18s 75ms/step - loss: 1.0720 - accuracy: 0.4193 - auc: 0.5928 - f1_score: 0.4104 - val_loss: 1.0602 - val_accuracy: 0.4295 - val_auc: 0.6145 - val_f1_score: 0.3474 Epoch 2/50 188/188 [==============================] - 15s 77ms/step - loss: 1.0534 - accuracy: 0.4313 - auc: 0.6206 - f1_score: 0.3724 - val_loss: 1.0528 - val_accuracy: 0.4325 - val_auc: 0.6242 - val_f1_score: 0.3821 Epoch 3/50 188/188 [==============================] - 16s 88ms/step - loss: 1.0494 - accuracy: 0.4356 - auc: 0.6257 - f1_score: 0.3979 - val_loss: 1.0521 - val_accuracy: 0.4320 - val_auc: 0.6246 - val_f1_score: 0.3988 Epoch 4/50 188/188 [==============================] - 14s 72ms/step - loss: 1.0480 - accuracy: 0.4400 - auc: 0.6273 - f1_score: 0.4136 - val_loss: 1.0512 - val_accuracy: 0.4350 - val_auc: 0.6261 - val_f1_score: 0.4134 Epoch 5/50 188/188 [==============================] - 13s 69ms/step - loss: 1.0474 - accuracy: 0.4389 - auc: 0.6285 - f1_score: 0.4179 - val_loss: 1.0518 - val_accuracy: 0.4347 - val_auc: 0.6255 - val_f1_score: 0.4165 Epoch 6/50 188/188 [==============================] - 14s 74ms/step - loss: 1.0470 - accuracy: 0.4408 - auc: 0.6295 - f1_score: 0.4237 - val_loss: 1.0514 - val_accuracy: 0.4351 - val_auc: 0.6256 - val_f1_score: 0.4240 Epoch 7/50 188/188 [==============================] - 15s 78ms/step - loss: 1.0462 - accuracy: 0.4403 - auc: 0.6302 - f1_score: 0.4274 - val_loss: 1.0508 - val_accuracy: 0.4365 - val_auc: 0.6267 - val_f1_score: 0.4229 Epoch 8/50 188/188 [==============================] - 15s 78ms/step - loss: 1.0452 - accuracy: 0.4412 - auc: 0.6313 - f1_score: 0.4283 - val_loss: 1.0517 - val_accuracy: 0.4362 - val_auc: 0.6260 - val_f1_score: 0.4228 Epoch 9/50 188/188 [==============================] - 15s 78ms/step - loss: 1.0456 - accuracy: 0.4407 - auc: 0.6311 - f1_score: 0.4290 - val_loss: 1.0506 - val_accuracy: 0.4387 - val_auc: 0.6270 - val_f1_score: 0.4287 Epoch 10/50 188/188 [==============================] - 14s 74ms/step - loss: 1.0452 - accuracy: 0.4399 - auc: 0.6319 - f1_score: 0.4281 - val_loss: 1.0514 - val_accuracy: 0.4362 - val_auc: 0.6260 - val_f1_score: 0.4283 Epoch 11/50 188/188 [==============================] - 17s 89ms/step - loss: 1.0447 - accuracy: 0.4420 - auc: 0.6321 - f1_score: 0.4317 - val_loss: 1.0516 - val_accuracy: 0.4325 - val_auc: 0.6256 - val_f1_score: 0.4229 Epoch 12/50 188/188 [==============================] - 17s 89ms/step - loss: 1.0444 - accuracy: 0.4414 - auc: 0.6334 - f1_score: 0.4312 - val_loss: 1.0506 - val_accuracy: 0.4359 - val_auc: 0.6266 - val_f1_score: 0.4268 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 99 0.436894 | 0.430485 | 0.460175 | 0.460164 | 0.651650 | 0.649923 | 0.451448 | 0.450417 | 9 | Simple | 5 | 2 | . 100 0.436845 | 0.430477 | 0.456327 | 0.457410 | 0.649124 | 0.647918 | 0.445791 | 0.445722 | 10 | Simple | 5 | 2 | . 101 0.429614 | 0.423697 | 0.439301 | 0.441405 | 0.629300 | 0.629927 | 0.423532 | 0.424238 | 1 | LSTM | 8 | 2 | . 102 0.430745 | 0.424774 | 0.443247 | 0.444561 | 0.633224 | 0.633390 | 0.437358 | 0.437671 | 2 | LSTM | 8 | 2 | . 103 0.431683 | 0.425778 | 0.443181 | 0.445463 | 0.636262 | 0.636863 | 0.433566 | 0.434699 | 3 | LSTM | 8 | 2 | . 103 rows × 12 columns . Train shape: (83399, 4, 2) Test shape: (10292, 4, 2) Train shape: (83399, 4, 2) Test shape: (10292, 4, 2) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 4, 2)] 0 [] input_2 (InputLayer) [(None, 4, 2)] 0 [] lstm (LSTM) (None, 4, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 4, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 400) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 400) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 808) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 404500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 604,243 Trainable params: 604,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 18s 77ms/step - loss: 1.0806 - accuracy: 0.3941 - auc: 0.5703 - f1_score: 0.4120 - val_loss: 1.0671 - val_accuracy: 0.4360 - val_auc: 0.6139 - val_f1_score: 0.4068 Epoch 2/50 188/188 [==============================] - 15s 78ms/step - loss: 1.0612 - accuracy: 0.4350 - auc: 0.6132 - f1_score: 0.4118 - val_loss: 1.0523 - val_accuracy: 0.4381 - val_auc: 0.6256 - val_f1_score: 0.4126 Epoch 3/50 188/188 [==============================] - 17s 90ms/step - loss: 1.0514 - accuracy: 0.4354 - auc: 0.6235 - f1_score: 0.4144 - val_loss: 1.0498 - val_accuracy: 0.4344 - val_auc: 0.6279 - val_f1_score: 0.4124 Epoch 4/50 188/188 [==============================] - 17s 93ms/step - loss: 1.0483 - accuracy: 0.4395 - auc: 0.6277 - f1_score: 0.4256 - val_loss: 1.0495 - val_accuracy: 0.4391 - val_auc: 0.6284 - val_f1_score: 0.4233 Epoch 5/50 188/188 [==============================] - 18s 94ms/step - loss: 1.0481 - accuracy: 0.4400 - auc: 0.6284 - f1_score: 0.4290 - val_loss: 1.0490 - val_accuracy: 0.4394 - val_auc: 0.6290 - val_f1_score: 0.4267 Epoch 6/50 188/188 [==============================] - 16s 85ms/step - loss: 1.0458 - accuracy: 0.4408 - auc: 0.6306 - f1_score: 0.4311 - val_loss: 1.0491 - val_accuracy: 0.4386 - val_auc: 0.6291 - val_f1_score: 0.4304 Epoch 7/50 188/188 [==============================] - 16s 83ms/step - loss: 1.0447 - accuracy: 0.4409 - auc: 0.6316 - f1_score: 0.4337 - val_loss: 1.0491 - val_accuracy: 0.4398 - val_auc: 0.6291 - val_f1_score: 0.4316 Epoch 8/50 188/188 [==============================] - 17s 90ms/step - loss: 1.0456 - accuracy: 0.4416 - auc: 0.6312 - f1_score: 0.4326 - val_loss: 1.0493 - val_accuracy: 0.4374 - val_auc: 0.6292 - val_f1_score: 0.4310 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 100 0.436845 | 0.430477 | 0.456327 | 0.457410 | 0.649124 | 0.647918 | 0.445791 | 0.445722 | 10 | Simple | 5 | 2 | . 101 0.429614 | 0.423697 | 0.439301 | 0.441405 | 0.629300 | 0.629927 | 0.423532 | 0.424238 | 1 | LSTM | 8 | 2 | . 102 0.430745 | 0.424774 | 0.443247 | 0.444561 | 0.633224 | 0.633390 | 0.437358 | 0.437671 | 2 | LSTM | 8 | 2 | . 103 0.431683 | 0.425778 | 0.443181 | 0.445463 | 0.636262 | 0.636863 | 0.433566 | 0.434699 | 3 | LSTM | 8 | 2 | . 104 0.430435 | 0.424482 | 0.446103 | 0.447648 | 0.636771 | 0.637175 | 0.439994 | 0.440575 | 4 | LSTM | 8 | 2 | . 104 rows × 12 columns . Train shape: (83399, 5, 2) Test shape: (10292, 5, 2) Train shape: (83399, 5, 2) Test shape: (10292, 5, 2) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 5, 2)] 0 [] input_2 (InputLayer) [(None, 5, 2)] 0 [] lstm (LSTM) (None, 5, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 5, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 500) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 500) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1008) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 504500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 704,243 Trainable params: 704,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 28s 110ms/step - loss: 1.0650 - accuracy: 0.4255 - auc: 0.6051 - f1_score: 0.4228 - val_loss: 1.0519 - val_accuracy: 0.4319 - val_auc: 0.6239 - val_f1_score: 0.3981 Epoch 2/50 188/188 [==============================] - 19s 104ms/step - loss: 1.0495 - accuracy: 0.4362 - auc: 0.6252 - f1_score: 0.4038 - val_loss: 1.0505 - val_accuracy: 0.4368 - val_auc: 0.6261 - val_f1_score: 0.3981 Epoch 3/50 188/188 [==============================] - 19s 101ms/step - loss: 1.0472 - accuracy: 0.4402 - auc: 0.6289 - f1_score: 0.4129 - val_loss: 1.0500 - val_accuracy: 0.4378 - val_auc: 0.6272 - val_f1_score: 0.4277 Epoch 4/50 188/188 [==============================] - 22s 117ms/step - loss: 1.0457 - accuracy: 0.4432 - auc: 0.6316 - f1_score: 0.4294 - val_loss: 1.0504 - val_accuracy: 0.4327 - val_auc: 0.6269 - val_f1_score: 0.4066 Epoch 5/50 188/188 [==============================] - 22s 118ms/step - loss: 1.0454 - accuracy: 0.4436 - auc: 0.6321 - f1_score: 0.4278 - val_loss: 1.0497 - val_accuracy: 0.4391 - val_auc: 0.6272 - val_f1_score: 0.4278 Epoch 6/50 188/188 [==============================] - 21s 111ms/step - loss: 1.0438 - accuracy: 0.4443 - auc: 0.6337 - f1_score: 0.4322 - val_loss: 1.0496 - val_accuracy: 0.4369 - val_auc: 0.6277 - val_f1_score: 0.4314 Epoch 7/50 188/188 [==============================] - 22s 117ms/step - loss: 1.0440 - accuracy: 0.4457 - auc: 0.6341 - f1_score: 0.4374 - val_loss: 1.0496 - val_accuracy: 0.4373 - val_auc: 0.6281 - val_f1_score: 0.4289 Epoch 8/50 188/188 [==============================] - 22s 117ms/step - loss: 1.0429 - accuracy: 0.4472 - auc: 0.6349 - f1_score: 0.4392 - val_loss: 1.0495 - val_accuracy: 0.4351 - val_auc: 0.6283 - val_f1_score: 0.4233 Epoch 9/50 188/188 [==============================] - 27s 146ms/step - loss: 1.0425 - accuracy: 0.4475 - auc: 0.6357 - f1_score: 0.4385 - val_loss: 1.0503 - val_accuracy: 0.4363 - val_auc: 0.6275 - val_f1_score: 0.4257 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 101 0.429614 | 0.423697 | 0.439301 | 0.441405 | 0.629300 | 0.629927 | 0.423532 | 0.424238 | 1 | LSTM | 8 | 2 | . 102 0.430745 | 0.424774 | 0.443247 | 0.444561 | 0.633224 | 0.633390 | 0.437358 | 0.437671 | 2 | LSTM | 8 | 2 | . 103 0.431683 | 0.425778 | 0.443181 | 0.445463 | 0.636262 | 0.636863 | 0.433566 | 0.434699 | 3 | LSTM | 8 | 2 | . 104 0.430435 | 0.424482 | 0.446103 | 0.447648 | 0.636771 | 0.637175 | 0.439994 | 0.440575 | 4 | LSTM | 8 | 2 | . 105 0.435130 | 0.429273 | 0.450528 | 0.452715 | 0.640019 | 0.640486 | 0.439367 | 0.440342 | 5 | LSTM | 8 | 2 | . 105 rows × 12 columns . Train shape: (83399, 6, 2) Test shape: (10292, 6, 2) Train shape: (83399, 6, 2) Test shape: (10292, 6, 2) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 6, 2)] 0 [] input_2 (InputLayer) [(None, 6, 2)] 0 [] lstm (LSTM) (None, 6, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 6, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 600) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 600) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1208) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 604500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 804,243 Trainable params: 804,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 28s 128ms/step - loss: 1.0687 - accuracy: 0.4176 - auc: 0.5983 - f1_score: 0.4163 - val_loss: 1.0502 - val_accuracy: 0.4398 - val_auc: 0.6269 - val_f1_score: 0.4271 Epoch 2/50 188/188 [==============================] - 21s 114ms/step - loss: 1.0476 - accuracy: 0.4394 - auc: 0.6287 - f1_score: 0.4303 - val_loss: 1.0486 - val_accuracy: 0.4388 - val_auc: 0.6292 - val_f1_score: 0.4333 Epoch 3/50 188/188 [==============================] - 21s 111ms/step - loss: 1.0447 - accuracy: 0.4440 - auc: 0.6323 - f1_score: 0.4350 - val_loss: 1.0485 - val_accuracy: 0.4390 - val_auc: 0.6303 - val_f1_score: 0.4325 Epoch 4/50 188/188 [==============================] - 22s 119ms/step - loss: 1.0444 - accuracy: 0.4452 - auc: 0.6332 - f1_score: 0.4388 - val_loss: 1.0483 - val_accuracy: 0.4397 - val_auc: 0.6304 - val_f1_score: 0.4317 Epoch 5/50 188/188 [==============================] - 22s 116ms/step - loss: 1.0437 - accuracy: 0.4459 - auc: 0.6345 - f1_score: 0.4385 - val_loss: 1.0484 - val_accuracy: 0.4380 - val_auc: 0.6300 - val_f1_score: 0.4309 Epoch 6/50 188/188 [==============================] - 22s 119ms/step - loss: 1.0432 - accuracy: 0.4476 - auc: 0.6353 - f1_score: 0.4399 - val_loss: 1.0477 - val_accuracy: 0.4384 - val_auc: 0.6308 - val_f1_score: 0.4310 Epoch 7/50 188/188 [==============================] - 23s 125ms/step - loss: 1.0420 - accuracy: 0.4490 - auc: 0.6367 - f1_score: 0.4421 - val_loss: 1.0483 - val_accuracy: 0.4378 - val_auc: 0.6301 - val_f1_score: 0.4288 Epoch 8/50 188/188 [==============================] - 23s 122ms/step - loss: 1.0414 - accuracy: 0.4489 - auc: 0.6377 - f1_score: 0.4415 - val_loss: 1.0484 - val_accuracy: 0.4409 - val_auc: 0.6301 - val_f1_score: 0.4373 Epoch 9/50 188/188 [==============================] - 22s 116ms/step - loss: 1.0407 - accuracy: 0.4498 - auc: 0.6382 - f1_score: 0.4436 - val_loss: 1.0481 - val_accuracy: 0.4347 - val_auc: 0.6300 - val_f1_score: 0.4294 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 102 0.430745 | 0.424774 | 0.443247 | 0.444561 | 0.633224 | 0.633390 | 0.437358 | 0.437671 | 2 | LSTM | 8 | 2 | . 103 0.431683 | 0.425778 | 0.443181 | 0.445463 | 0.636262 | 0.636863 | 0.433566 | 0.434699 | 3 | LSTM | 8 | 2 | . 104 0.430435 | 0.424482 | 0.446103 | 0.447648 | 0.636771 | 0.637175 | 0.439994 | 0.440575 | 4 | LSTM | 8 | 2 | . 105 0.435130 | 0.429273 | 0.450528 | 0.452715 | 0.640019 | 0.640486 | 0.439367 | 0.440342 | 5 | LSTM | 8 | 2 | . 106 0.432948 | 0.426958 | 0.453199 | 0.454342 | 0.643384 | 0.643264 | 0.447778 | 0.448015 | 6 | LSTM | 8 | 2 | . 106 rows × 12 columns . Train shape: (83399, 7, 2) Test shape: (10292, 7, 2) Train shape: (83399, 7, 2) Test shape: (10292, 7, 2) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 7, 2)] 0 [] input_2 (InputLayer) [(None, 7, 2)] 0 [] lstm (LSTM) (None, 7, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 7, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 700) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 700) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1408) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 704500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 904,243 Trainable params: 904,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 32s 135ms/step - loss: 1.0697 - accuracy: 0.4164 - auc: 0.5991 - f1_score: 0.4333 - val_loss: 1.0506 - val_accuracy: 0.4361 - val_auc: 0.6267 - val_f1_score: 0.4043 Epoch 2/50 188/188 [==============================] - 23s 122ms/step - loss: 1.0481 - accuracy: 0.4375 - auc: 0.6275 - f1_score: 0.4158 - val_loss: 1.0490 - val_accuracy: 0.4410 - val_auc: 0.6284 - val_f1_score: 0.4237 Epoch 3/50 188/188 [==============================] - 23s 120ms/step - loss: 1.0459 - accuracy: 0.4410 - auc: 0.6306 - f1_score: 0.4233 - val_loss: 1.0489 - val_accuracy: 0.4421 - val_auc: 0.6289 - val_f1_score: 0.4258 Epoch 4/50 188/188 [==============================] - 23s 122ms/step - loss: 1.0447 - accuracy: 0.4404 - auc: 0.6319 - f1_score: 0.4251 - val_loss: 1.0485 - val_accuracy: 0.4392 - val_auc: 0.6290 - val_f1_score: 0.4215 Epoch 5/50 188/188 [==============================] - 23s 123ms/step - loss: 1.0432 - accuracy: 0.4449 - auc: 0.6344 - f1_score: 0.4341 - val_loss: 1.0486 - val_accuracy: 0.4424 - val_auc: 0.6295 - val_f1_score: 0.4284 Epoch 6/50 188/188 [==============================] - 23s 120ms/step - loss: 1.0427 - accuracy: 0.4461 - auc: 0.6356 - f1_score: 0.4359 - val_loss: 1.0485 - val_accuracy: 0.4415 - val_auc: 0.6293 - val_f1_score: 0.4319 Epoch 7/50 188/188 [==============================] - 24s 126ms/step - loss: 1.0425 - accuracy: 0.4457 - auc: 0.6352 - f1_score: 0.4373 - val_loss: 1.0489 - val_accuracy: 0.4403 - val_auc: 0.6291 - val_f1_score: 0.4287 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 103 0.431683 | 0.425778 | 0.443181 | 0.445463 | 0.636262 | 0.636863 | 0.433566 | 0.434699 | 3 | LSTM | 8 | 2 | . 104 0.430435 | 0.424482 | 0.446103 | 0.447648 | 0.636771 | 0.637175 | 0.439994 | 0.440575 | 4 | LSTM | 8 | 2 | . 105 0.435130 | 0.429273 | 0.450528 | 0.452715 | 0.640019 | 0.640486 | 0.439367 | 0.440342 | 5 | LSTM | 8 | 2 | . 106 0.432948 | 0.426958 | 0.453199 | 0.454342 | 0.643384 | 0.643264 | 0.447778 | 0.448015 | 6 | LSTM | 8 | 2 | . 107 0.434152 | 0.428299 | 0.450092 | 0.452431 | 0.640481 | 0.641050 | 0.437035 | 0.438128 | 7 | LSTM | 8 | 2 | . 107 rows × 12 columns . Train shape: (83399, 8, 2) Test shape: (10292, 8, 2) Train shape: (83399, 8, 2) Test shape: (10292, 8, 2) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 8, 2)] 0 [] input_2 (InputLayer) [(None, 8, 2)] 0 [] lstm (LSTM) (None, 8, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 8, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 800) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 800) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1608) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 804500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,004,243 Trainable params: 1,004,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 32s 143ms/step - loss: 1.0685 - accuracy: 0.4149 - auc: 0.6004 - f1_score: 0.4153 - val_loss: 1.0518 - val_accuracy: 0.4349 - val_auc: 0.6253 - val_f1_score: 0.4053 Epoch 2/50 188/188 [==============================] - 24s 126ms/step - loss: 1.0470 - accuracy: 0.4412 - auc: 0.6296 - f1_score: 0.4238 - val_loss: 1.0488 - val_accuracy: 0.4394 - val_auc: 0.6292 - val_f1_score: 0.4268 Epoch 3/50 188/188 [==============================] - 23s 125ms/step - loss: 1.0447 - accuracy: 0.4442 - auc: 0.6324 - f1_score: 0.4319 - val_loss: 1.0485 - val_accuracy: 0.4375 - val_auc: 0.6296 - val_f1_score: 0.4257 Epoch 4/50 188/188 [==============================] - 24s 129ms/step - loss: 1.0428 - accuracy: 0.4467 - auc: 0.6352 - f1_score: 0.4363 - val_loss: 1.0481 - val_accuracy: 0.4375 - val_auc: 0.6301 - val_f1_score: 0.4276 Epoch 5/50 188/188 [==============================] - 23s 125ms/step - loss: 1.0422 - accuracy: 0.4477 - auc: 0.6363 - f1_score: 0.4375 - val_loss: 1.0486 - val_accuracy: 0.4366 - val_auc: 0.6291 - val_f1_score: 0.4342 Epoch 6/50 188/188 [==============================] - 23s 121ms/step - loss: 1.0417 - accuracy: 0.4465 - auc: 0.6365 - f1_score: 0.4383 - val_loss: 1.0493 - val_accuracy: 0.4365 - val_auc: 0.6287 - val_f1_score: 0.4298 Epoch 7/50 188/188 [==============================] - 23s 124ms/step - loss: 1.0407 - accuracy: 0.4517 - auc: 0.6382 - f1_score: 0.4437 - val_loss: 1.0486 - val_accuracy: 0.4365 - val_auc: 0.6294 - val_f1_score: 0.4300 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 104 0.430435 | 0.424482 | 0.446103 | 0.447648 | 0.636771 | 0.637175 | 0.439994 | 0.440575 | 4 | LSTM | 8 | 2 | . 105 0.435130 | 0.429273 | 0.450528 | 0.452715 | 0.640019 | 0.640486 | 0.439367 | 0.440342 | 5 | LSTM | 8 | 2 | . 106 0.432948 | 0.426958 | 0.453199 | 0.454342 | 0.643384 | 0.643264 | 0.447778 | 0.448015 | 6 | LSTM | 8 | 2 | . 107 0.434152 | 0.428299 | 0.450092 | 0.452431 | 0.640481 | 0.641050 | 0.437035 | 0.438128 | 7 | LSTM | 8 | 2 | . 108 0.434052 | 0.428132 | 0.455074 | 0.456459 | 0.643914 | 0.644040 | 0.447814 | 0.448161 | 8 | LSTM | 8 | 2 | . 108 rows × 12 columns . Train shape: (83399, 9, 2) Test shape: (10292, 9, 2) Train shape: (83399, 9, 2) Test shape: (10292, 9, 2) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 9, 2)] 0 [] input_2 (InputLayer) [(None, 9, 2)] 0 [] lstm (LSTM) (None, 9, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 9, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 900) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 900) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1808) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 904500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,104,243 Trainable params: 1,104,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 37s 169ms/step - loss: 1.0738 - accuracy: 0.3776 - auc: 0.5878 - f1_score: 0.4232 - val_loss: 1.0596 - val_accuracy: 0.4289 - val_auc: 0.6112 - val_f1_score: 0.3756 Epoch 2/50 188/188 [==============================] - 31s 167ms/step - loss: 1.0521 - accuracy: 0.4344 - auc: 0.6222 - f1_score: 0.3846 - val_loss: 1.0516 - val_accuracy: 0.4303 - val_auc: 0.6244 - val_f1_score: 0.3699 Epoch 3/50 188/188 [==============================] - 32s 170ms/step - loss: 1.0467 - accuracy: 0.4395 - auc: 0.6297 - f1_score: 0.3994 - val_loss: 1.0497 - val_accuracy: 0.4373 - val_auc: 0.6274 - val_f1_score: 0.4093 Epoch 4/50 188/188 [==============================] - 30s 158ms/step - loss: 1.0445 - accuracy: 0.4439 - auc: 0.6329 - f1_score: 0.4264 - val_loss: 1.0495 - val_accuracy: 0.4417 - val_auc: 0.6285 - val_f1_score: 0.4242 Epoch 5/50 188/188 [==============================] - 32s 172ms/step - loss: 1.0435 - accuracy: 0.4459 - auc: 0.6346 - f1_score: 0.4341 - val_loss: 1.0487 - val_accuracy: 0.4397 - val_auc: 0.6293 - val_f1_score: 0.4311 Epoch 6/50 188/188 [==============================] - 32s 173ms/step - loss: 1.0419 - accuracy: 0.4472 - auc: 0.6365 - f1_score: 0.4375 - val_loss: 1.0490 - val_accuracy: 0.4402 - val_auc: 0.6290 - val_f1_score: 0.4295 Epoch 7/50 188/188 [==============================] - 28s 151ms/step - loss: 1.0411 - accuracy: 0.4493 - auc: 0.6376 - f1_score: 0.4394 - val_loss: 1.0489 - val_accuracy: 0.4380 - val_auc: 0.6287 - val_f1_score: 0.4344 Epoch 8/50 188/188 [==============================] - 31s 164ms/step - loss: 1.0408 - accuracy: 0.4511 - auc: 0.6386 - f1_score: 0.4448 - val_loss: 1.0497 - val_accuracy: 0.4381 - val_auc: 0.6276 - val_f1_score: 0.4212 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 105 0.435130 | 0.429273 | 0.450528 | 0.452715 | 0.640019 | 0.640486 | 0.439367 | 0.440342 | 5 | LSTM | 8 | 2 | . 106 0.432948 | 0.426958 | 0.453199 | 0.454342 | 0.643384 | 0.643264 | 0.447778 | 0.448015 | 6 | LSTM | 8 | 2 | . 107 0.434152 | 0.428299 | 0.450092 | 0.452431 | 0.640481 | 0.641050 | 0.437035 | 0.438128 | 7 | LSTM | 8 | 2 | . 108 0.434052 | 0.428132 | 0.455074 | 0.456459 | 0.643914 | 0.644040 | 0.447814 | 0.448161 | 8 | LSTM | 8 | 2 | . 109 0.434399 | 0.428598 | 0.454616 | 0.456734 | 0.643582 | 0.644277 | 0.436821 | 0.437494 | 9 | LSTM | 8 | 2 | . 109 rows × 12 columns . Train shape: (83399, 10, 2) Test shape: (10292, 10, 2) Train shape: (83399, 10, 2) Test shape: (10292, 10, 2) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 2)] 0 [] input_2 (InputLayer) [(None, 10, 2)] 0 [] lstm (LSTM) (None, 10, 100) 40800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 10, 100) 40800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 2008) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1004500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,204,243 Trainable params: 1,204,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 38s 176ms/step - loss: 1.0654 - accuracy: 0.4225 - auc: 0.6048 - f1_score: 0.4254 - val_loss: 1.0508 - val_accuracy: 0.4347 - val_auc: 0.6251 - val_f1_score: 0.3985 Epoch 2/50 188/188 [==============================] - 33s 176ms/step - loss: 1.0473 - accuracy: 0.4394 - auc: 0.6289 - f1_score: 0.4202 - val_loss: 1.0490 - val_accuracy: 0.4391 - val_auc: 0.6290 - val_f1_score: 0.4217 Epoch 3/50 188/188 [==============================] - 31s 165ms/step - loss: 1.0443 - accuracy: 0.4435 - auc: 0.6330 - f1_score: 0.4280 - val_loss: 1.0502 - val_accuracy: 0.4362 - val_auc: 0.6278 - val_f1_score: 0.4187 Epoch 4/50 188/188 [==============================] - 33s 173ms/step - loss: 1.0425 - accuracy: 0.4463 - auc: 0.6359 - f1_score: 0.4352 - val_loss: 1.0488 - val_accuracy: 0.4368 - val_auc: 0.6294 - val_f1_score: 0.4227 Epoch 5/50 188/188 [==============================] - 38s 204ms/step - loss: 1.0420 - accuracy: 0.4469 - auc: 0.6362 - f1_score: 0.4360 - val_loss: 1.0489 - val_accuracy: 0.4398 - val_auc: 0.6296 - val_f1_score: 0.4296 Epoch 6/50 188/188 [==============================] - 35s 184ms/step - loss: 1.0404 - accuracy: 0.4497 - auc: 0.6386 - f1_score: 0.4412 - val_loss: 1.0488 - val_accuracy: 0.4378 - val_auc: 0.6295 - val_f1_score: 0.4312 Epoch 7/50 188/188 [==============================] - 33s 176ms/step - loss: 1.0400 - accuracy: 0.4511 - auc: 0.6398 - f1_score: 0.4426 - val_loss: 1.0489 - val_accuracy: 0.4387 - val_auc: 0.6296 - val_f1_score: 0.4326 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 106 0.432948 | 0.426958 | 0.453199 | 0.454342 | 0.643384 | 0.643264 | 0.447778 | 0.448015 | 6 | LSTM | 8 | 2 | . 107 0.434152 | 0.428299 | 0.450092 | 0.452431 | 0.640481 | 0.641050 | 0.437035 | 0.438128 | 7 | LSTM | 8 | 2 | . 108 0.434052 | 0.428132 | 0.455074 | 0.456459 | 0.643914 | 0.644040 | 0.447814 | 0.448161 | 8 | LSTM | 8 | 2 | . 109 0.434399 | 0.428598 | 0.454616 | 0.456734 | 0.643582 | 0.644277 | 0.436821 | 0.437494 | 9 | LSTM | 8 | 2 | . 110 0.435845 | 0.429846 | 0.455946 | 0.457214 | 0.645521 | 0.645328 | 0.449321 | 0.449602 | 10 | LSTM | 8 | 2 | . 110 rows × 12 columns . Train shape: (83399, 1, 2) Test shape: (10292, 1, 2) Train shape: (83399, 1, 2) Test shape: (10292, 1, 2) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 1, 2)] 0 [] input_2 (InputLayer) [(None, 1, 2)] 0 [] simple_rnn (SimpleRNN) (None, 1, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 1, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 100) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 100) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 208) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 104500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 243,043 Trainable params: 243,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 10s 36ms/step - loss: 1.0850 - accuracy: 0.3896 - auc: 0.5742 - f1_score: 0.4281 - val_loss: 1.0645 - val_accuracy: 0.4269 - val_auc: 0.6112 - val_f1_score: 0.3668 Epoch 2/50 188/188 [==============================] - 6s 34ms/step - loss: 1.0589 - accuracy: 0.4276 - auc: 0.6136 - f1_score: 0.4074 - val_loss: 1.0557 - val_accuracy: 0.4321 - val_auc: 0.6202 - val_f1_score: 0.3859 Epoch 3/50 188/188 [==============================] - 10s 51ms/step - loss: 1.0546 - accuracy: 0.4326 - auc: 0.6197 - f1_score: 0.4109 - val_loss: 1.0550 - val_accuracy: 0.4313 - val_auc: 0.6210 - val_f1_score: 0.4086 Epoch 4/50 188/188 [==============================] - 7s 38ms/step - loss: 1.0529 - accuracy: 0.4328 - auc: 0.6214 - f1_score: 0.4163 - val_loss: 1.0549 - val_accuracy: 0.4313 - val_auc: 0.6211 - val_f1_score: 0.4035 Epoch 5/50 188/188 [==============================] - 7s 38ms/step - loss: 1.0522 - accuracy: 0.4360 - auc: 0.6232 - f1_score: 0.4189 - val_loss: 1.0541 - val_accuracy: 0.4371 - val_auc: 0.6230 - val_f1_score: 0.4106 Epoch 6/50 188/188 [==============================] - 8s 42ms/step - loss: 1.0512 - accuracy: 0.4353 - auc: 0.6242 - f1_score: 0.4184 - val_loss: 1.0538 - val_accuracy: 0.4323 - val_auc: 0.6230 - val_f1_score: 0.4140 Epoch 7/50 188/188 [==============================] - 7s 36ms/step - loss: 1.0505 - accuracy: 0.4358 - auc: 0.6246 - f1_score: 0.4217 - val_loss: 1.0539 - val_accuracy: 0.4375 - val_auc: 0.6237 - val_f1_score: 0.4212 Epoch 8/50 188/188 [==============================] - 5s 26ms/step - loss: 1.0506 - accuracy: 0.4359 - auc: 0.6246 - f1_score: 0.4236 - val_loss: 1.0538 - val_accuracy: 0.4373 - val_auc: 0.6237 - val_f1_score: 0.4246 Epoch 9/50 188/188 [==============================] - 6s 31ms/step - loss: 1.0498 - accuracy: 0.4363 - auc: 0.6257 - f1_score: 0.4238 - val_loss: 1.0542 - val_accuracy: 0.4373 - val_auc: 0.6235 - val_f1_score: 0.4213 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 107 0.434152 | 0.428299 | 0.450092 | 0.452431 | 0.640481 | 0.641050 | 0.437035 | 0.438128 | 7 | LSTM | 8 | 2 | . 108 0.434052 | 0.428132 | 0.455074 | 0.456459 | 0.643914 | 0.644040 | 0.447814 | 0.448161 | 8 | LSTM | 8 | 2 | . 109 0.434399 | 0.428598 | 0.454616 | 0.456734 | 0.643582 | 0.644277 | 0.436821 | 0.437494 | 9 | LSTM | 8 | 2 | . 110 0.435845 | 0.429846 | 0.455946 | 0.457214 | 0.645521 | 0.645328 | 0.449321 | 0.449602 | 10 | LSTM | 8 | 2 | . 111 0.430151 | 0.424279 | 0.440423 | 0.442522 | 0.629295 | 0.630061 | 0.423756 | 0.424412 | 1 | Simple | 8 | 2 | . 111 rows × 12 columns . Train shape: (83399, 2, 2) Test shape: (10292, 2, 2) Train shape: (83399, 2, 2) Test shape: (10292, 2, 2) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 2, 2)] 0 [] input_2 (InputLayer) [(None, 2, 2)] 0 [] simple_rnn (SimpleRNN) (None, 2, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 2, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 200) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 200) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 408) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 204500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 343,043 Trainable params: 343,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 17s 62ms/step - loss: 1.0790 - accuracy: 0.3908 - auc: 0.5769 - f1_score: 0.4098 - val_loss: 1.0593 - val_accuracy: 0.4290 - val_auc: 0.6136 - val_f1_score: 0.3896 Epoch 2/50 188/188 [==============================] - 10s 55ms/step - loss: 1.0585 - accuracy: 0.4244 - auc: 0.6128 - f1_score: 0.4000 - val_loss: 1.0554 - val_accuracy: 0.4285 - val_auc: 0.6199 - val_f1_score: 0.3827 Epoch 3/50 188/188 [==============================] - 9s 46ms/step - loss: 1.0539 - accuracy: 0.4300 - auc: 0.6194 - f1_score: 0.4044 - val_loss: 1.0533 - val_accuracy: 0.4361 - val_auc: 0.6235 - val_f1_score: 0.4091 Epoch 4/50 188/188 [==============================] - 10s 51ms/step - loss: 1.0510 - accuracy: 0.4351 - auc: 0.6244 - f1_score: 0.4188 - val_loss: 1.0540 - val_accuracy: 0.4351 - val_auc: 0.6229 - val_f1_score: 0.4031 Epoch 5/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0498 - accuracy: 0.4363 - auc: 0.6253 - f1_score: 0.4206 - val_loss: 1.0536 - val_accuracy: 0.4373 - val_auc: 0.6235 - val_f1_score: 0.4104 Epoch 6/50 188/188 [==============================] - 7s 40ms/step - loss: 1.0490 - accuracy: 0.4388 - auc: 0.6268 - f1_score: 0.4213 - val_loss: 1.0534 - val_accuracy: 0.4355 - val_auc: 0.6239 - val_f1_score: 0.4158 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 108 0.434052 | 0.428132 | 0.455074 | 0.456459 | 0.643914 | 0.644040 | 0.447814 | 0.448161 | 8 | LSTM | 8 | 2 | . 109 0.434399 | 0.428598 | 0.454616 | 0.456734 | 0.643582 | 0.644277 | 0.436821 | 0.437494 | 9 | LSTM | 8 | 2 | . 110 0.435845 | 0.429846 | 0.455946 | 0.457214 | 0.645521 | 0.645328 | 0.449321 | 0.449602 | 10 | LSTM | 8 | 2 | . 111 0.430151 | 0.424279 | 0.440423 | 0.442522 | 0.629295 | 0.630061 | 0.423756 | 0.424412 | 1 | Simple | 8 | 2 | . 112 0.430834 | 0.424930 | 0.443465 | 0.445678 | 0.632982 | 0.633522 | 0.424672 | 0.425438 | 2 | Simple | 8 | 2 | . 112 rows × 12 columns . Train shape: (83399, 3, 2) Test shape: (10292, 3, 2) Train shape: (83399, 3, 2) Test shape: (10292, 3, 2) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 3, 2)] 0 [] input_2 (InputLayer) [(None, 3, 2)] 0 [] simple_rnn (SimpleRNN) (None, 3, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 3, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 300) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 300) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 608) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 304500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 443,043 Trainable params: 443,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 14s 59ms/step - loss: 1.0804 - accuracy: 0.3719 - auc: 0.5755 - f1_score: 0.4098 - val_loss: 1.0662 - val_accuracy: 0.3860 - val_auc: 0.6015 - val_f1_score: 0.3222 Epoch 2/50 188/188 [==============================] - 10s 55ms/step - loss: 1.0615 - accuracy: 0.4060 - auc: 0.6082 - f1_score: 0.3997 - val_loss: 1.0559 - val_accuracy: 0.4275 - val_auc: 0.6177 - val_f1_score: 0.4040 Epoch 3/50 188/188 [==============================] - 10s 52ms/step - loss: 1.0520 - accuracy: 0.4329 - auc: 0.6217 - f1_score: 0.4163 - val_loss: 1.0522 - val_accuracy: 0.4323 - val_auc: 0.6226 - val_f1_score: 0.4113 Epoch 4/50 188/188 [==============================] - 12s 62ms/step - loss: 1.0499 - accuracy: 0.4356 - auc: 0.6249 - f1_score: 0.4188 - val_loss: 1.0539 - val_accuracy: 0.4324 - val_auc: 0.6218 - val_f1_score: 0.4167 Epoch 5/50 188/188 [==============================] - 10s 52ms/step - loss: 1.0488 - accuracy: 0.4364 - auc: 0.6262 - f1_score: 0.4206 - val_loss: 1.0525 - val_accuracy: 0.4293 - val_auc: 0.6239 - val_f1_score: 0.4156 Epoch 6/50 188/188 [==============================] - 10s 51ms/step - loss: 1.0471 - accuracy: 0.4378 - auc: 0.6286 - f1_score: 0.4232 - val_loss: 1.0533 - val_accuracy: 0.4338 - val_auc: 0.6229 - val_f1_score: 0.4155 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 109 0.434399 | 0.428598 | 0.454616 | 0.456734 | 0.643582 | 0.644277 | 0.436821 | 0.437494 | 9 | LSTM | 8 | 2 | . 110 0.435845 | 0.429846 | 0.455946 | 0.457214 | 0.645521 | 0.645328 | 0.449321 | 0.449602 | 10 | LSTM | 8 | 2 | . 111 0.430151 | 0.424279 | 0.440423 | 0.442522 | 0.629295 | 0.630061 | 0.423756 | 0.424412 | 1 | Simple | 8 | 2 | . 112 0.430834 | 0.424930 | 0.443465 | 0.445678 | 0.632982 | 0.633522 | 0.424672 | 0.425438 | 2 | Simple | 8 | 2 | . 113 0.431771 | 0.425934 | 0.441448 | 0.444091 | 0.634050 | 0.635056 | 0.422752 | 0.423947 | 3 | Simple | 8 | 2 | . 113 rows × 12 columns . Train shape: (83399, 4, 2) Test shape: (10292, 4, 2) Train shape: (83399, 4, 2) Test shape: (10292, 4, 2) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 4, 2)] 0 [] input_2 (InputLayer) [(None, 4, 2)] 0 [] simple_rnn (SimpleRNN) (None, 4, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 4, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 400) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 400) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 808) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 404500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 543,043 Trainable params: 543,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 14s 59ms/step - loss: 1.0898 - accuracy: 0.3715 - auc: 0.5495 - f1_score: 0.3996 - val_loss: 1.0738 - val_accuracy: 0.4026 - val_auc: 0.5914 - val_f1_score: 0.3867 Epoch 2/50 188/188 [==============================] - 13s 67ms/step - loss: 1.0661 - accuracy: 0.4167 - auc: 0.6012 - f1_score: 0.3991 - val_loss: 1.0585 - val_accuracy: 0.4248 - val_auc: 0.6129 - val_f1_score: 0.3628 Epoch 3/50 188/188 [==============================] - 12s 64ms/step - loss: 1.0560 - accuracy: 0.4283 - auc: 0.6153 - f1_score: 0.3928 - val_loss: 1.0544 - val_accuracy: 0.4275 - val_auc: 0.6193 - val_f1_score: 0.3767 Epoch 4/50 188/188 [==============================] - 11s 58ms/step - loss: 1.0524 - accuracy: 0.4333 - auc: 0.6214 - f1_score: 0.3908 - val_loss: 1.0525 - val_accuracy: 0.4339 - val_auc: 0.6221 - val_f1_score: 0.3848 Epoch 5/50 188/188 [==============================] - 12s 64ms/step - loss: 1.0493 - accuracy: 0.4356 - auc: 0.6254 - f1_score: 0.3930 - val_loss: 1.0515 - val_accuracy: 0.4341 - val_auc: 0.6253 - val_f1_score: 0.3920 Epoch 6/50 188/188 [==============================] - 13s 67ms/step - loss: 1.0474 - accuracy: 0.4366 - auc: 0.6273 - f1_score: 0.3984 - val_loss: 1.0517 - val_accuracy: 0.4369 - val_auc: 0.6251 - val_f1_score: 0.4017 Epoch 7/50 188/188 [==============================] - 11s 57ms/step - loss: 1.0464 - accuracy: 0.4383 - auc: 0.6295 - f1_score: 0.4074 - val_loss: 1.0511 - val_accuracy: 0.4386 - val_auc: 0.6265 - val_f1_score: 0.4109 Epoch 8/50 188/188 [==============================] - 11s 57ms/step - loss: 1.0461 - accuracy: 0.4415 - auc: 0.6302 - f1_score: 0.4182 - val_loss: 1.0516 - val_accuracy: 0.4402 - val_auc: 0.6257 - val_f1_score: 0.4198 Epoch 9/50 188/188 [==============================] - 11s 56ms/step - loss: 1.0446 - accuracy: 0.4435 - auc: 0.6322 - f1_score: 0.4256 - val_loss: 1.0517 - val_accuracy: 0.4337 - val_auc: 0.6248 - val_f1_score: 0.4180 Epoch 10/50 188/188 [==============================] - 11s 57ms/step - loss: 1.0435 - accuracy: 0.4422 - auc: 0.6335 - f1_score: 0.4287 - val_loss: 1.0514 - val_accuracy: 0.4348 - val_auc: 0.6259 - val_f1_score: 0.4182 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 110 0.435845 | 0.429846 | 0.455946 | 0.457214 | 0.645521 | 0.645328 | 0.449321 | 0.449602 | 10 | LSTM | 8 | 2 | . 111 0.430151 | 0.424279 | 0.440423 | 0.442522 | 0.629295 | 0.630061 | 0.423756 | 0.424412 | 1 | Simple | 8 | 2 | . 112 0.430834 | 0.424930 | 0.443465 | 0.445678 | 0.632982 | 0.633522 | 0.424672 | 0.425438 | 2 | Simple | 8 | 2 | . 113 0.431771 | 0.425934 | 0.441448 | 0.444091 | 0.634050 | 0.635056 | 0.422752 | 0.423947 | 3 | Simple | 8 | 2 | . 114 0.432082 | 0.426098 | 0.447443 | 0.450108 | 0.639474 | 0.639868 | 0.429693 | 0.430976 | 4 | Simple | 8 | 2 | . 114 rows × 12 columns . Train shape: (83399, 5, 2) Test shape: (10292, 5, 2) Train shape: (83399, 5, 2) Test shape: (10292, 5, 2) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 5, 2)] 0 [] input_2 (InputLayer) [(None, 5, 2)] 0 [] simple_rnn (SimpleRNN) (None, 5, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 5, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 500) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 500) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1008) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 504500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 643,043 Trainable params: 643,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 14s 65ms/step - loss: 1.0782 - accuracy: 0.4008 - auc: 0.5781 - f1_score: 0.4071 - val_loss: 1.0627 - val_accuracy: 0.4223 - val_auc: 0.6071 - val_f1_score: 0.3904 Epoch 2/50 188/188 [==============================] - 12s 62ms/step - loss: 1.0581 - accuracy: 0.4268 - auc: 0.6132 - f1_score: 0.4054 - val_loss: 1.0551 - val_accuracy: 0.4313 - val_auc: 0.6189 - val_f1_score: 0.4097 Epoch 3/50 188/188 [==============================] - 12s 61ms/step - loss: 1.0516 - accuracy: 0.4316 - auc: 0.6216 - f1_score: 0.4146 - val_loss: 1.0518 - val_accuracy: 0.4343 - val_auc: 0.6244 - val_f1_score: 0.4208 Epoch 4/50 188/188 [==============================] - 12s 62ms/step - loss: 1.0473 - accuracy: 0.4389 - auc: 0.6281 - f1_score: 0.4237 - val_loss: 1.0521 - val_accuracy: 0.4324 - val_auc: 0.6248 - val_f1_score: 0.4152 Epoch 5/50 188/188 [==============================] - 12s 62ms/step - loss: 1.0464 - accuracy: 0.4396 - auc: 0.6296 - f1_score: 0.4268 - val_loss: 1.0511 - val_accuracy: 0.4351 - val_auc: 0.6256 - val_f1_score: 0.4242 Epoch 6/50 188/188 [==============================] - 12s 62ms/step - loss: 1.0444 - accuracy: 0.4427 - auc: 0.6322 - f1_score: 0.4290 - val_loss: 1.0513 - val_accuracy: 0.4343 - val_auc: 0.6253 - val_f1_score: 0.4197 Epoch 7/50 188/188 [==============================] - 12s 62ms/step - loss: 1.0441 - accuracy: 0.4425 - auc: 0.6326 - f1_score: 0.4315 - val_loss: 1.0506 - val_accuracy: 0.4330 - val_auc: 0.6261 - val_f1_score: 0.4260 Epoch 8/50 188/188 [==============================] - 12s 63ms/step - loss: 1.0433 - accuracy: 0.4444 - auc: 0.6341 - f1_score: 0.4353 - val_loss: 1.0514 - val_accuracy: 0.4345 - val_auc: 0.6255 - val_f1_score: 0.4254 Epoch 9/50 188/188 [==============================] - 12s 62ms/step - loss: 1.0424 - accuracy: 0.4459 - auc: 0.6361 - f1_score: 0.4356 - val_loss: 1.0512 - val_accuracy: 0.4350 - val_auc: 0.6259 - val_f1_score: 0.4260 Epoch 10/50 188/188 [==============================] - 12s 62ms/step - loss: 1.0420 - accuracy: 0.4479 - auc: 0.6365 - f1_score: 0.4365 - val_loss: 1.0507 - val_accuracy: 0.4313 - val_auc: 0.6263 - val_f1_score: 0.4242 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 111 0.430151 | 0.424279 | 0.440423 | 0.442522 | 0.629295 | 0.630061 | 0.423756 | 0.424412 | 1 | Simple | 8 | 2 | . 112 0.430834 | 0.424930 | 0.443465 | 0.445678 | 0.632982 | 0.633522 | 0.424672 | 0.425438 | 2 | Simple | 8 | 2 | . 113 0.431771 | 0.425934 | 0.441448 | 0.444091 | 0.634050 | 0.635056 | 0.422752 | 0.423947 | 3 | Simple | 8 | 2 | . 114 0.432082 | 0.426098 | 0.447443 | 0.450108 | 0.639474 | 0.639868 | 0.429693 | 0.430976 | 4 | Simple | 8 | 2 | . 115 0.433563 | 0.427400 | 0.452163 | 0.453578 | 0.644873 | 0.644318 | 0.444437 | 0.444841 | 5 | Simple | 8 | 2 | . 115 rows × 12 columns . Train shape: (83399, 6, 2) Test shape: (10292, 6, 2) Train shape: (83399, 6, 2) Test shape: (10292, 6, 2) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 6, 2)] 0 [] input_2 (InputLayer) [(None, 6, 2)] 0 [] simple_rnn (SimpleRNN) (None, 6, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 6, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 600) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 600) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1208) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 604500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 743,043 Trainable params: 743,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 18s 79ms/step - loss: 1.0834 - accuracy: 0.3868 - auc: 0.5675 - f1_score: 0.4186 - val_loss: 1.0673 - val_accuracy: 0.4138 - val_auc: 0.5996 - val_f1_score: 0.3816 Epoch 2/50 188/188 [==============================] - 13s 68ms/step - loss: 1.0623 - accuracy: 0.4204 - auc: 0.6073 - f1_score: 0.4062 - val_loss: 1.0582 - val_accuracy: 0.4237 - val_auc: 0.6141 - val_f1_score: 0.4052 Epoch 3/50 188/188 [==============================] - 13s 67ms/step - loss: 1.0551 - accuracy: 0.4300 - auc: 0.6183 - f1_score: 0.4185 - val_loss: 1.0533 - val_accuracy: 0.4295 - val_auc: 0.6210 - val_f1_score: 0.4129 Epoch 4/50 188/188 [==============================] - 13s 71ms/step - loss: 1.0506 - accuracy: 0.4352 - auc: 0.6244 - f1_score: 0.4198 - val_loss: 1.0512 - val_accuracy: 0.4365 - val_auc: 0.6243 - val_f1_score: 0.4230 Epoch 5/50 188/188 [==============================] - 13s 67ms/step - loss: 1.0482 - accuracy: 0.4368 - auc: 0.6276 - f1_score: 0.4259 - val_loss: 1.0509 - val_accuracy: 0.4347 - val_auc: 0.6247 - val_f1_score: 0.4197 Epoch 6/50 188/188 [==============================] - 13s 68ms/step - loss: 1.0456 - accuracy: 0.4418 - auc: 0.6313 - f1_score: 0.4310 - val_loss: 1.0511 - val_accuracy: 0.4307 - val_auc: 0.6238 - val_f1_score: 0.4184 Epoch 7/50 188/188 [==============================] - 11s 61ms/step - loss: 1.0439 - accuracy: 0.4429 - auc: 0.6339 - f1_score: 0.4326 - val_loss: 1.0511 - val_accuracy: 0.4349 - val_auc: 0.6244 - val_f1_score: 0.4237 Epoch 8/50 188/188 [==============================] - 11s 60ms/step - loss: 1.0428 - accuracy: 0.4459 - auc: 0.6351 - f1_score: 0.4370 - val_loss: 1.0519 - val_accuracy: 0.4373 - val_auc: 0.6251 - val_f1_score: 0.4260 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 112 0.430834 | 0.424930 | 0.443465 | 0.445678 | 0.632982 | 0.633522 | 0.424672 | 0.425438 | 2 | Simple | 8 | 2 | . 113 0.431771 | 0.425934 | 0.441448 | 0.444091 | 0.634050 | 0.635056 | 0.422752 | 0.423947 | 3 | Simple | 8 | 2 | . 114 0.432082 | 0.426098 | 0.447443 | 0.450108 | 0.639474 | 0.639868 | 0.429693 | 0.430976 | 4 | Simple | 8 | 2 | . 115 0.433563 | 0.427400 | 0.452163 | 0.453578 | 0.644873 | 0.644318 | 0.444437 | 0.444841 | 5 | Simple | 8 | 2 | . 116 0.435514 | 0.429363 | 0.454518 | 0.455607 | 0.645517 | 0.644857 | 0.442536 | 0.442483 | 6 | Simple | 8 | 2 | . 116 rows × 12 columns . Train shape: (83399, 7, 2) Test shape: (10292, 7, 2) Train shape: (83399, 7, 2) Test shape: (10292, 7, 2) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 7, 2)] 0 [] input_2 (InputLayer) [(None, 7, 2)] 0 [] simple_rnn (SimpleRNN) (None, 7, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 7, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 700) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 700) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1408) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 704500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 843,043 Trainable params: 843,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 17s 78ms/step - loss: 1.0771 - accuracy: 0.3953 - auc: 0.5798 - f1_score: 0.4230 - val_loss: 1.0652 - val_accuracy: 0.4163 - val_auc: 0.6034 - val_f1_score: 0.3848 Epoch 2/50 188/188 [==============================] - 14s 74ms/step - loss: 1.0601 - accuracy: 0.4234 - auc: 0.6101 - f1_score: 0.4071 - val_loss: 1.0572 - val_accuracy: 0.4257 - val_auc: 0.6165 - val_f1_score: 0.3964 Epoch 3/50 188/188 [==============================] - 14s 74ms/step - loss: 1.0517 - accuracy: 0.4322 - auc: 0.6227 - f1_score: 0.4191 - val_loss: 1.0544 - val_accuracy: 0.4269 - val_auc: 0.6197 - val_f1_score: 0.4146 Epoch 4/50 188/188 [==============================] - 14s 74ms/step - loss: 1.0489 - accuracy: 0.4394 - auc: 0.6269 - f1_score: 0.4275 - val_loss: 1.0522 - val_accuracy: 0.4330 - val_auc: 0.6229 - val_f1_score: 0.4158 Epoch 5/50 188/188 [==============================] - 14s 76ms/step - loss: 1.0467 - accuracy: 0.4395 - auc: 0.6296 - f1_score: 0.4288 - val_loss: 1.0519 - val_accuracy: 0.4379 - val_auc: 0.6247 - val_f1_score: 0.4178 Epoch 6/50 188/188 [==============================] - 14s 75ms/step - loss: 1.0437 - accuracy: 0.4425 - auc: 0.6334 - f1_score: 0.4347 - val_loss: 1.0522 - val_accuracy: 0.4393 - val_auc: 0.6249 - val_f1_score: 0.4288 Epoch 7/50 188/188 [==============================] - 15s 78ms/step - loss: 1.0427 - accuracy: 0.4455 - auc: 0.6349 - f1_score: 0.4366 - val_loss: 1.0511 - val_accuracy: 0.4324 - val_auc: 0.6254 - val_f1_score: 0.4282 Epoch 8/50 188/188 [==============================] - 14s 75ms/step - loss: 1.0408 - accuracy: 0.4479 - auc: 0.6381 - f1_score: 0.4415 - val_loss: 1.0498 - val_accuracy: 0.4402 - val_auc: 0.6291 - val_f1_score: 0.4339 Epoch 9/50 188/188 [==============================] - 14s 74ms/step - loss: 1.0399 - accuracy: 0.4506 - auc: 0.6391 - f1_score: 0.4442 - val_loss: 1.0507 - val_accuracy: 0.4362 - val_auc: 0.6265 - val_f1_score: 0.4251 Epoch 10/50 188/188 [==============================] - 14s 77ms/step - loss: 1.0384 - accuracy: 0.4475 - auc: 0.6405 - f1_score: 0.4407 - val_loss: 1.0513 - val_accuracy: 0.4388 - val_auc: 0.6254 - val_f1_score: 0.4252 Epoch 11/50 188/188 [==============================] - 15s 81ms/step - loss: 1.0381 - accuracy: 0.4512 - auc: 0.6413 - f1_score: 0.4444 - val_loss: 1.0505 - val_accuracy: 0.4390 - val_auc: 0.6275 - val_f1_score: 0.4326 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 113 0.431771 | 0.425934 | 0.441448 | 0.444091 | 0.634050 | 0.635056 | 0.422752 | 0.423947 | 3 | Simple | 8 | 2 | . 114 0.432082 | 0.426098 | 0.447443 | 0.450108 | 0.639474 | 0.639868 | 0.429693 | 0.430976 | 4 | Simple | 8 | 2 | . 115 0.433563 | 0.427400 | 0.452163 | 0.453578 | 0.644873 | 0.644318 | 0.444437 | 0.444841 | 5 | Simple | 8 | 2 | . 116 0.435514 | 0.429363 | 0.454518 | 0.455607 | 0.645517 | 0.644857 | 0.442536 | 0.442483 | 6 | Simple | 8 | 2 | . 117 0.437006 | 0.430669 | 0.463009 | 0.463016 | 0.653833 | 0.652196 | 0.456752 | 0.455808 | 7 | Simple | 8 | 2 | . 117 rows × 12 columns . Train shape: (83399, 8, 2) Test shape: (10292, 8, 2) Train shape: (83399, 8, 2) Test shape: (10292, 8, 2) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 8, 2)] 0 [] input_2 (InputLayer) [(None, 8, 2)] 0 [] simple_rnn (SimpleRNN) (None, 8, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 8, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 800) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 800) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1608) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 804500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 943,043 Trainable params: 943,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 19s 87ms/step - loss: 1.0758 - accuracy: 0.3980 - auc: 0.5822 - f1_score: 0.4265 - val_loss: 1.0640 - val_accuracy: 0.4179 - val_auc: 0.6041 - val_f1_score: 0.3766 Epoch 2/50 188/188 [==============================] - 16s 87ms/step - loss: 1.0592 - accuracy: 0.4251 - auc: 0.6115 - f1_score: 0.3976 - val_loss: 1.0583 - val_accuracy: 0.4248 - val_auc: 0.6142 - val_f1_score: 0.3777 Epoch 3/50 188/188 [==============================] - 16s 86ms/step - loss: 1.0524 - accuracy: 0.4306 - auc: 0.6208 - f1_score: 0.4072 - val_loss: 1.0555 - val_accuracy: 0.4300 - val_auc: 0.6186 - val_f1_score: 0.3921 Epoch 4/50 188/188 [==============================] - 17s 88ms/step - loss: 1.0482 - accuracy: 0.4383 - auc: 0.6272 - f1_score: 0.4194 - val_loss: 1.0537 - val_accuracy: 0.4335 - val_auc: 0.6223 - val_f1_score: 0.4105 Epoch 5/50 188/188 [==============================] - 16s 86ms/step - loss: 1.0453 - accuracy: 0.4411 - auc: 0.6309 - f1_score: 0.4278 - val_loss: 1.0506 - val_accuracy: 0.4317 - val_auc: 0.6262 - val_f1_score: 0.4163 Epoch 6/50 188/188 [==============================] - 16s 86ms/step - loss: 1.0436 - accuracy: 0.4434 - auc: 0.6343 - f1_score: 0.4319 - val_loss: 1.0517 - val_accuracy: 0.4331 - val_auc: 0.6237 - val_f1_score: 0.4178 Epoch 7/50 188/188 [==============================] - 17s 89ms/step - loss: 1.0417 - accuracy: 0.4473 - auc: 0.6365 - f1_score: 0.4370 - val_loss: 1.0511 - val_accuracy: 0.4353 - val_auc: 0.6250 - val_f1_score: 0.4252 Epoch 8/50 188/188 [==============================] - 16s 85ms/step - loss: 1.0400 - accuracy: 0.4491 - auc: 0.6386 - f1_score: 0.4386 - val_loss: 1.0527 - val_accuracy: 0.4343 - val_auc: 0.6252 - val_f1_score: 0.4212 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 114 0.432082 | 0.426098 | 0.447443 | 0.450108 | 0.639474 | 0.639868 | 0.429693 | 0.430976 | 4 | Simple | 8 | 2 | . 115 0.433563 | 0.427400 | 0.452163 | 0.453578 | 0.644873 | 0.644318 | 0.444437 | 0.444841 | 5 | Simple | 8 | 2 | . 116 0.435514 | 0.429363 | 0.454518 | 0.455607 | 0.645517 | 0.644857 | 0.442536 | 0.442483 | 6 | Simple | 8 | 2 | . 117 0.437006 | 0.430669 | 0.463009 | 0.463016 | 0.653833 | 0.652196 | 0.456752 | 0.455808 | 7 | Simple | 8 | 2 | . 118 0.437309 | 0.430990 | 0.460611 | 0.461252 | 0.651774 | 0.650485 | 0.447959 | 0.447464 | 8 | Simple | 8 | 2 | . 118 rows × 12 columns . Train shape: (83399, 9, 2) Test shape: (10292, 9, 2) Train shape: (83399, 9, 2) Test shape: (10292, 9, 2) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 9, 2)] 0 [] input_2 (InputLayer) [(None, 9, 2)] 0 [] simple_rnn (SimpleRNN) (None, 9, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 9, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 900) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 900) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1808) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 904500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,043,043 Trainable params: 1,043,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 20s 93ms/step - loss: 1.0725 - accuracy: 0.4060 - auc: 0.5878 - f1_score: 0.4172 - val_loss: 1.0636 - val_accuracy: 0.4173 - val_auc: 0.6052 - val_f1_score: 0.4026 Epoch 2/50 188/188 [==============================] - 17s 91ms/step - loss: 1.0558 - accuracy: 0.4284 - auc: 0.6170 - f1_score: 0.4134 - val_loss: 1.0571 - val_accuracy: 0.4302 - val_auc: 0.6156 - val_f1_score: 0.4233 Epoch 3/50 188/188 [==============================] - 18s 95ms/step - loss: 1.0494 - accuracy: 0.4371 - auc: 0.6255 - f1_score: 0.4222 - val_loss: 1.0553 - val_accuracy: 0.4318 - val_auc: 0.6185 - val_f1_score: 0.4241 Epoch 4/50 188/188 [==============================] - 17s 91ms/step - loss: 1.0460 - accuracy: 0.4395 - auc: 0.6304 - f1_score: 0.4260 - val_loss: 1.0535 - val_accuracy: 0.4320 - val_auc: 0.6216 - val_f1_score: 0.4293 Epoch 5/50 188/188 [==============================] - 18s 93ms/step - loss: 1.0442 - accuracy: 0.4438 - auc: 0.6330 - f1_score: 0.4353 - val_loss: 1.0536 - val_accuracy: 0.4311 - val_auc: 0.6216 - val_f1_score: 0.4207 Epoch 6/50 188/188 [==============================] - 18s 93ms/step - loss: 1.0423 - accuracy: 0.4454 - auc: 0.6350 - f1_score: 0.4354 - val_loss: 1.0528 - val_accuracy: 0.4343 - val_auc: 0.6229 - val_f1_score: 0.4264 Epoch 7/50 188/188 [==============================] - 18s 94ms/step - loss: 1.0402 - accuracy: 0.4482 - auc: 0.6381 - f1_score: 0.4396 - val_loss: 1.0539 - val_accuracy: 0.4368 - val_auc: 0.6217 - val_f1_score: 0.4309 Epoch 8/50 188/188 [==============================] - 17s 92ms/step - loss: 1.0393 - accuracy: 0.4496 - auc: 0.6397 - f1_score: 0.4404 - val_loss: 1.0531 - val_accuracy: 0.4326 - val_auc: 0.6217 - val_f1_score: 0.4244 Epoch 9/50 188/188 [==============================] - 17s 91ms/step - loss: 1.0376 - accuracy: 0.4519 - auc: 0.6418 - f1_score: 0.4427 - val_loss: 1.0530 - val_accuracy: 0.4288 - val_auc: 0.6234 - val_f1_score: 0.4172 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 115 0.433563 | 0.427400 | 0.452163 | 0.453578 | 0.644873 | 0.644318 | 0.444437 | 0.444841 | 5 | Simple | 8 | 2 | . 116 0.435514 | 0.429363 | 0.454518 | 0.455607 | 0.645517 | 0.644857 | 0.442536 | 0.442483 | 6 | Simple | 8 | 2 | . 117 0.437006 | 0.430669 | 0.463009 | 0.463016 | 0.653833 | 0.652196 | 0.456752 | 0.455808 | 7 | Simple | 8 | 2 | . 118 0.437309 | 0.430990 | 0.460611 | 0.461252 | 0.651774 | 0.650485 | 0.447959 | 0.447464 | 8 | Simple | 8 | 2 | . 119 0.439139 | 0.432810 | 0.461985 | 0.462124 | 0.653254 | 0.651975 | 0.451026 | 0.449984 | 9 | Simple | 8 | 2 | . 119 rows × 12 columns . Train shape: (83399, 10, 2) Test shape: (10292, 10, 2) Train shape: (83399, 10, 2) Test shape: (10292, 10, 2) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 2)] 0 [] input_2 (InputLayer) [(None, 10, 2)] 0 [] simple_rnn (SimpleRNN) (None, 10, 100) 10200 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 10, 100) 10200 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 2008) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1004500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,143,043 Trainable params: 1,143,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 22s 104ms/step - loss: 1.0770 - accuracy: 0.4006 - auc: 0.5808 - f1_score: 0.4165 - val_loss: 1.0679 - val_accuracy: 0.4149 - val_auc: 0.5986 - val_f1_score: 0.3812 Epoch 2/50 188/188 [==============================] - 19s 101ms/step - loss: 1.0597 - accuracy: 0.4240 - auc: 0.6104 - f1_score: 0.4003 - val_loss: 1.0624 - val_accuracy: 0.4201 - val_auc: 0.6076 - val_f1_score: 0.3827 Epoch 3/50 188/188 [==============================] - 18s 98ms/step - loss: 1.0541 - accuracy: 0.4299 - auc: 0.6186 - f1_score: 0.4042 - val_loss: 1.0557 - val_accuracy: 0.4300 - val_auc: 0.6182 - val_f1_score: 0.4071 Epoch 4/50 188/188 [==============================] - 21s 110ms/step - loss: 1.0487 - accuracy: 0.4365 - auc: 0.6256 - f1_score: 0.4184 - val_loss: 1.0548 - val_accuracy: 0.4314 - val_auc: 0.6193 - val_f1_score: 0.4132 Epoch 5/50 188/188 [==============================] - 20s 106ms/step - loss: 1.0458 - accuracy: 0.4406 - auc: 0.6300 - f1_score: 0.4263 - val_loss: 1.0549 - val_accuracy: 0.4272 - val_auc: 0.6189 - val_f1_score: 0.4070 Epoch 6/50 188/188 [==============================] - 19s 102ms/step - loss: 1.0439 - accuracy: 0.4439 - auc: 0.6328 - f1_score: 0.4313 - val_loss: 1.0536 - val_accuracy: 0.4289 - val_auc: 0.6212 - val_f1_score: 0.4162 Epoch 7/50 188/188 [==============================] - 18s 97ms/step - loss: 1.0416 - accuracy: 0.4462 - auc: 0.6364 - f1_score: 0.4347 - val_loss: 1.0538 - val_accuracy: 0.4336 - val_auc: 0.6220 - val_f1_score: 0.4283 Epoch 8/50 188/188 [==============================] - 18s 96ms/step - loss: 1.0405 - accuracy: 0.4466 - auc: 0.6370 - f1_score: 0.4359 - val_loss: 1.0530 - val_accuracy: 0.4351 - val_auc: 0.6228 - val_f1_score: 0.4250 Epoch 9/50 188/188 [==============================] - 18s 96ms/step - loss: 1.0395 - accuracy: 0.4494 - auc: 0.6388 - f1_score: 0.4394 - val_loss: 1.0536 - val_accuracy: 0.4320 - val_auc: 0.6213 - val_f1_score: 0.4244 Epoch 10/50 188/188 [==============================] - 19s 102ms/step - loss: 1.0375 - accuracy: 0.4519 - auc: 0.6413 - f1_score: 0.4438 - val_loss: 1.0536 - val_accuracy: 0.4329 - val_auc: 0.6221 - val_f1_score: 0.4248 Epoch 11/50 188/188 [==============================] - 19s 99ms/step - loss: 1.0361 - accuracy: 0.4527 - auc: 0.6430 - f1_score: 0.4442 - val_loss: 1.0535 - val_accuracy: 0.4329 - val_auc: 0.6211 - val_f1_score: 0.4276 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 116 0.435514 | 0.429363 | 0.454518 | 0.455607 | 0.645517 | 0.644857 | 0.442536 | 0.442483 | 6 | Simple | 8 | 2 | . 117 0.437006 | 0.430669 | 0.463009 | 0.463016 | 0.653833 | 0.652196 | 0.456752 | 0.455808 | 7 | Simple | 8 | 2 | . 118 0.437309 | 0.430990 | 0.460611 | 0.461252 | 0.651774 | 0.650485 | 0.447959 | 0.447464 | 8 | Simple | 8 | 2 | . 119 0.439139 | 0.432810 | 0.461985 | 0.462124 | 0.653254 | 0.651975 | 0.451026 | 0.449984 | 9 | Simple | 8 | 2 | . 120 0.436536 | 0.430086 | 0.464448 | 0.464476 | 0.654278 | 0.652474 | 0.459117 | 0.458334 | 10 | Simple | 8 | 2 | . 120 rows × 12 columns . Train shape: (83399, 1, 7) Test shape: (10292, 1, 7) Train shape: (83399, 1, 7) Test shape: (10292, 1, 7) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 1, 7)] 0 [] input_2 (InputLayer) [(None, 1, 7)] 0 [] lstm (LSTM) (None, 1, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 1, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 100) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 100) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 202) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 101500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 305,243 Trainable params: 305,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 8s 33ms/step - loss: 1.0912 - accuracy: 0.3781 - auc: 0.5509 - f1_score: 0.4082 - val_loss: 1.0815 - val_accuracy: 0.4086 - val_auc: 0.5830 - val_f1_score: 0.3584 Epoch 2/50 188/188 [==============================] - 6s 29ms/step - loss: 1.0754 - accuracy: 0.4100 - auc: 0.5887 - f1_score: 0.3681 - val_loss: 1.0733 - val_accuracy: 0.4090 - val_auc: 0.5937 - val_f1_score: 0.3741 Epoch 3/50 188/188 [==============================] - 6s 31ms/step - loss: 1.0724 - accuracy: 0.4130 - auc: 0.5943 - f1_score: 0.3879 - val_loss: 1.0716 - val_accuracy: 0.4103 - val_auc: 0.5957 - val_f1_score: 0.3885 Epoch 4/50 188/188 [==============================] - 6s 31ms/step - loss: 1.0710 - accuracy: 0.4154 - auc: 0.5968 - f1_score: 0.3998 - val_loss: 1.0709 - val_accuracy: 0.4145 - val_auc: 0.5967 - val_f1_score: 0.3964 Epoch 5/50 188/188 [==============================] - 6s 34ms/step - loss: 1.0698 - accuracy: 0.4159 - auc: 0.5984 - f1_score: 0.4022 - val_loss: 1.0705 - val_accuracy: 0.4138 - val_auc: 0.5976 - val_f1_score: 0.4032 Epoch 6/50 188/188 [==============================] - 6s 31ms/step - loss: 1.0692 - accuracy: 0.4167 - auc: 0.5992 - f1_score: 0.4063 - val_loss: 1.0699 - val_accuracy: 0.4163 - val_auc: 0.5989 - val_f1_score: 0.4095 Epoch 7/50 188/188 [==============================] - 6s 32ms/step - loss: 1.0692 - accuracy: 0.4164 - auc: 0.6000 - f1_score: 0.4053 - val_loss: 1.0702 - val_accuracy: 0.4121 - val_auc: 0.5979 - val_f1_score: 0.4063 Epoch 8/50 188/188 [==============================] - 6s 31ms/step - loss: 1.0686 - accuracy: 0.4170 - auc: 0.6002 - f1_score: 0.4062 - val_loss: 1.0701 - val_accuracy: 0.4092 - val_auc: 0.5977 - val_f1_score: 0.4043 Epoch 9/50 188/188 [==============================] - 7s 36ms/step - loss: 1.0692 - accuracy: 0.4162 - auc: 0.6000 - f1_score: 0.4090 - val_loss: 1.0706 - val_accuracy: 0.4088 - val_auc: 0.5965 - val_f1_score: 0.4008 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 117 0.437006 | 0.430669 | 0.463009 | 0.463016 | 0.653833 | 0.652196 | 0.456752 | 0.455808 | 7 | Simple | 8 | 2 | . 118 0.437309 | 0.430990 | 0.460611 | 0.461252 | 0.651774 | 0.650485 | 0.447959 | 0.447464 | 8 | Simple | 8 | 2 | . 119 0.439139 | 0.432810 | 0.461985 | 0.462124 | 0.653254 | 0.651975 | 0.451026 | 0.449984 | 9 | Simple | 8 | 2 | . 120 0.436536 | 0.430086 | 0.464448 | 0.464476 | 0.654278 | 0.652474 | 0.459117 | 0.458334 | 10 | Simple | 8 | 2 | . 121 0.419249 | 0.412813 | 0.420704 | 0.422558 | 0.606606 | 0.606748 | 0.411648 | 0.412549 | 1 | LSTM | 2 | 7 | . 121 rows × 12 columns . Train shape: (83399, 2, 7) Test shape: (10292, 2, 7) Train shape: (83399, 2, 7) Test shape: (10292, 2, 7) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 2, 7)] 0 [] input_2 (InputLayer) [(None, 2, 7)] 0 [] lstm (LSTM) (None, 2, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 2, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 200) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 200) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 402) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 201500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 405,243 Trainable params: 405,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 13s 58ms/step - loss: 1.0841 - accuracy: 0.3972 - auc: 0.5743 - f1_score: 0.4008 - val_loss: 1.0646 - val_accuracy: 0.4248 - val_auc: 0.6104 - val_f1_score: 0.4088 Epoch 2/50 188/188 [==============================] - 11s 57ms/step - loss: 1.0630 - accuracy: 0.4245 - auc: 0.6093 - f1_score: 0.4154 - val_loss: 1.0595 - val_accuracy: 0.4260 - val_auc: 0.6142 - val_f1_score: 0.4192 Epoch 3/50 188/188 [==============================] - 11s 61ms/step - loss: 1.0604 - accuracy: 0.4262 - auc: 0.6123 - f1_score: 0.4182 - val_loss: 1.0592 - val_accuracy: 0.4230 - val_auc: 0.6140 - val_f1_score: 0.4100 Epoch 4/50 188/188 [==============================] - 11s 56ms/step - loss: 1.0585 - accuracy: 0.4308 - auc: 0.6161 - f1_score: 0.4222 - val_loss: 1.0587 - val_accuracy: 0.4245 - val_auc: 0.6152 - val_f1_score: 0.4184 Epoch 5/50 188/188 [==============================] - 11s 57ms/step - loss: 1.0570 - accuracy: 0.4310 - auc: 0.6177 - f1_score: 0.4236 - val_loss: 1.0592 - val_accuracy: 0.4240 - val_auc: 0.6139 - val_f1_score: 0.4146 Epoch 6/50 188/188 [==============================] - 10s 55ms/step - loss: 1.0572 - accuracy: 0.4329 - auc: 0.6178 - f1_score: 0.4273 - val_loss: 1.0587 - val_accuracy: 0.4218 - val_auc: 0.6150 - val_f1_score: 0.4114 Epoch 7/50 188/188 [==============================] - 11s 60ms/step - loss: 1.0575 - accuracy: 0.4321 - auc: 0.6174 - f1_score: 0.4270 - val_loss: 1.0589 - val_accuracy: 0.4189 - val_auc: 0.6141 - val_f1_score: 0.4130 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 118 0.437309 | 0.430990 | 0.460611 | 0.461252 | 0.651774 | 0.650485 | 0.447959 | 0.447464 | 8 | Simple | 8 | 2 | . 119 0.439139 | 0.432810 | 0.461985 | 0.462124 | 0.653254 | 0.651975 | 0.451026 | 0.449984 | 9 | Simple | 8 | 2 | . 120 0.436536 | 0.430086 | 0.464448 | 0.464476 | 0.654278 | 0.652474 | 0.459117 | 0.458334 | 10 | Simple | 8 | 2 | . 121 0.419249 | 0.412813 | 0.420704 | 0.422558 | 0.606606 | 0.606748 | 0.411648 | 0.412549 | 1 | LSTM | 2 | 7 | . 122 0.425894 | 0.419715 | 0.437546 | 0.438563 | 0.626280 | 0.626258 | 0.431737 | 0.431796 | 2 | LSTM | 2 | 7 | . 122 rows × 12 columns . Train shape: (83399, 3, 7) Test shape: (10292, 3, 7) Train shape: (83399, 3, 7) Test shape: (10292, 3, 7) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 3, 7)] 0 [] input_2 (InputLayer) [(None, 3, 7)] 0 [] lstm (LSTM) (None, 3, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 3, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 300) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 300) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 602) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 301500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 505,243 Trainable params: 505,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 16s 75ms/step - loss: 1.0744 - accuracy: 0.4112 - auc: 0.5900 - f1_score: 0.4093 - val_loss: 1.0577 - val_accuracy: 0.4217 - val_auc: 0.6149 - val_f1_score: 0.3597 Epoch 2/50 188/188 [==============================] - 13s 72ms/step - loss: 1.0564 - accuracy: 0.4289 - auc: 0.6169 - f1_score: 0.3769 - val_loss: 1.0539 - val_accuracy: 0.4260 - val_auc: 0.6218 - val_f1_score: 0.3784 Epoch 3/50 188/188 [==============================] - 14s 72ms/step - loss: 1.0527 - accuracy: 0.4330 - auc: 0.6229 - f1_score: 0.3946 - val_loss: 1.0523 - val_accuracy: 0.4265 - val_auc: 0.6239 - val_f1_score: 0.4005 Epoch 4/50 188/188 [==============================] - 14s 72ms/step - loss: 1.0518 - accuracy: 0.4362 - auc: 0.6243 - f1_score: 0.4083 - val_loss: 1.0513 - val_accuracy: 0.4265 - val_auc: 0.6245 - val_f1_score: 0.4059 Epoch 5/50 188/188 [==============================] - 14s 72ms/step - loss: 1.0507 - accuracy: 0.4381 - auc: 0.6259 - f1_score: 0.4170 - val_loss: 1.0508 - val_accuracy: 0.4275 - val_auc: 0.6249 - val_f1_score: 0.4071 Epoch 6/50 188/188 [==============================] - 13s 71ms/step - loss: 1.0504 - accuracy: 0.4387 - auc: 0.6264 - f1_score: 0.4209 - val_loss: 1.0511 - val_accuracy: 0.4307 - val_auc: 0.6248 - val_f1_score: 0.4137 Epoch 7/50 188/188 [==============================] - 14s 76ms/step - loss: 1.0504 - accuracy: 0.4394 - auc: 0.6266 - f1_score: 0.4243 - val_loss: 1.0504 - val_accuracy: 0.4317 - val_auc: 0.6264 - val_f1_score: 0.4208 Epoch 8/50 188/188 [==============================] - 14s 76ms/step - loss: 1.0499 - accuracy: 0.4397 - auc: 0.6270 - f1_score: 0.4277 - val_loss: 1.0504 - val_accuracy: 0.4288 - val_auc: 0.6263 - val_f1_score: 0.4163 Epoch 9/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0489 - accuracy: 0.4403 - auc: 0.6287 - f1_score: 0.4277 - val_loss: 1.0506 - val_accuracy: 0.4313 - val_auc: 0.6263 - val_f1_score: 0.4230 Epoch 10/50 188/188 [==============================] - 13s 68ms/step - loss: 1.0482 - accuracy: 0.4406 - auc: 0.6293 - f1_score: 0.4291 - val_loss: 1.0503 - val_accuracy: 0.4331 - val_auc: 0.6269 - val_f1_score: 0.4270 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 119 0.439139 | 0.432810 | 0.461985 | 0.462124 | 0.653254 | 0.651975 | 0.451026 | 0.449984 | 9 | Simple | 8 | 2 | . 120 0.436536 | 0.430086 | 0.464448 | 0.464476 | 0.654278 | 0.652474 | 0.459117 | 0.458334 | 10 | Simple | 8 | 2 | . 121 0.419249 | 0.412813 | 0.420704 | 0.422558 | 0.606606 | 0.606748 | 0.411648 | 0.412549 | 1 | LSTM | 2 | 7 | . 122 0.425894 | 0.419715 | 0.437546 | 0.438563 | 0.626280 | 0.626258 | 0.431737 | 0.431796 | 2 | LSTM | 2 | 7 | . 123 0.428498 | 0.422400 | 0.447312 | 0.448687 | 0.637695 | 0.637619 | 0.441210 | 0.441601 | 3 | LSTM | 2 | 7 | . 123 rows × 12 columns . Train shape: (83399, 4, 7) Test shape: (10292, 4, 7) Train shape: (83399, 4, 7) Test shape: (10292, 4, 7) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 4, 7)] 0 [] input_2 (InputLayer) [(None, 4, 7)] 0 [] lstm (LSTM) (None, 4, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 4, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 400) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 400) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 802) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 401500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 605,243 Trainable params: 605,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 18s 85ms/step - loss: 1.0709 - accuracy: 0.4149 - auc: 0.5938 - f1_score: 0.4320 - val_loss: 1.0572 - val_accuracy: 0.4368 - val_auc: 0.6164 - val_f1_score: 0.4104 Epoch 2/50 188/188 [==============================] - 15s 81ms/step - loss: 1.0552 - accuracy: 0.4346 - auc: 0.6182 - f1_score: 0.4009 - val_loss: 1.0555 - val_accuracy: 0.4315 - val_auc: 0.6175 - val_f1_score: 0.3871 Epoch 3/50 188/188 [==============================] - 15s 81ms/step - loss: 1.0525 - accuracy: 0.4347 - auc: 0.6212 - f1_score: 0.3836 - val_loss: 1.0538 - val_accuracy: 0.4290 - val_auc: 0.6193 - val_f1_score: 0.3771 Epoch 4/50 188/188 [==============================] - 15s 80ms/step - loss: 1.0505 - accuracy: 0.4368 - auc: 0.6251 - f1_score: 0.3837 - val_loss: 1.0529 - val_accuracy: 0.4287 - val_auc: 0.6213 - val_f1_score: 0.3682 Epoch 5/50 188/188 [==============================] - 15s 81ms/step - loss: 1.0496 - accuracy: 0.4381 - auc: 0.6274 - f1_score: 0.3874 - val_loss: 1.0523 - val_accuracy: 0.4284 - val_auc: 0.6230 - val_f1_score: 0.3854 Epoch 6/50 188/188 [==============================] - 15s 81ms/step - loss: 1.0479 - accuracy: 0.4384 - auc: 0.6291 - f1_score: 0.3987 - val_loss: 1.0508 - val_accuracy: 0.4313 - val_auc: 0.6252 - val_f1_score: 0.3970 Epoch 7/50 188/188 [==============================] - 17s 90ms/step - loss: 1.0473 - accuracy: 0.4399 - auc: 0.6299 - f1_score: 0.4090 - val_loss: 1.0505 - val_accuracy: 0.4353 - val_auc: 0.6252 - val_f1_score: 0.4126 Epoch 8/50 188/188 [==============================] - 17s 91ms/step - loss: 1.0458 - accuracy: 0.4431 - auc: 0.6328 - f1_score: 0.4219 - val_loss: 1.0504 - val_accuracy: 0.4354 - val_auc: 0.6256 - val_f1_score: 0.4121 Epoch 9/50 188/188 [==============================] - 17s 90ms/step - loss: 1.0462 - accuracy: 0.4423 - auc: 0.6324 - f1_score: 0.4250 - val_loss: 1.0497 - val_accuracy: 0.4404 - val_auc: 0.6273 - val_f1_score: 0.4275 Epoch 10/50 188/188 [==============================] - 15s 81ms/step - loss: 1.0454 - accuracy: 0.4447 - auc: 0.6332 - f1_score: 0.4311 - val_loss: 1.0495 - val_accuracy: 0.4368 - val_auc: 0.6271 - val_f1_score: 0.4259 Epoch 11/50 188/188 [==============================] - 15s 81ms/step - loss: 1.0446 - accuracy: 0.4445 - auc: 0.6345 - f1_score: 0.4349 - val_loss: 1.0495 - val_accuracy: 0.4394 - val_auc: 0.6266 - val_f1_score: 0.4324 Epoch 12/50 188/188 [==============================] - 15s 81ms/step - loss: 1.0433 - accuracy: 0.4462 - auc: 0.6353 - f1_score: 0.4374 - val_loss: 1.0489 - val_accuracy: 0.4382 - val_auc: 0.6268 - val_f1_score: 0.4324 Epoch 13/50 188/188 [==============================] - 15s 81ms/step - loss: 1.0436 - accuracy: 0.4472 - auc: 0.6359 - f1_score: 0.4413 - val_loss: 1.0493 - val_accuracy: 0.4417 - val_auc: 0.6271 - val_f1_score: 0.4338 Epoch 14/50 188/188 [==============================] - 16s 83ms/step - loss: 1.0426 - accuracy: 0.4482 - auc: 0.6366 - f1_score: 0.4418 - val_loss: 1.0490 - val_accuracy: 0.4365 - val_auc: 0.6265 - val_f1_score: 0.4295 Epoch 15/50 188/188 [==============================] - 15s 81ms/step - loss: 1.0418 - accuracy: 0.4501 - auc: 0.6380 - f1_score: 0.4447 - val_loss: 1.0494 - val_accuracy: 0.4357 - val_auc: 0.6260 - val_f1_score: 0.4338 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 120 0.436536 | 0.430086 | 0.464448 | 0.464476 | 0.654278 | 0.652474 | 0.459117 | 0.458334 | 10 | Simple | 8 | 2 | . 121 0.419249 | 0.412813 | 0.420704 | 0.422558 | 0.606606 | 0.606748 | 0.411648 | 0.412549 | 1 | LSTM | 2 | 7 | . 122 0.425894 | 0.419715 | 0.437546 | 0.438563 | 0.626280 | 0.626258 | 0.431737 | 0.431796 | 2 | LSTM | 2 | 7 | . 123 0.428498 | 0.422400 | 0.447312 | 0.448687 | 0.637695 | 0.637619 | 0.441210 | 0.441601 | 3 | LSTM | 2 | 7 | . 124 0.433625 | 0.427496 | 0.458289 | 0.458802 | 0.647836 | 0.647237 | 0.455858 | 0.455612 | 4 | LSTM | 2 | 7 | . 124 rows × 12 columns . Train shape: (83399, 5, 7) Test shape: (10292, 5, 7) Train shape: (83399, 5, 7) Test shape: (10292, 5, 7) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 5, 7)] 0 [] input_2 (InputLayer) [(None, 5, 7)] 0 [] lstm (LSTM) (None, 5, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 5, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 500) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 500) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1002) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 501500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 705,243 Trainable params: 705,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 22s 104ms/step - loss: 1.0745 - accuracy: 0.3998 - auc: 0.5895 - f1_score: 0.4321 - val_loss: 1.0531 - val_accuracy: 0.4313 - val_auc: 0.6227 - val_f1_score: 0.3764 Epoch 2/50 188/188 [==============================] - 19s 102ms/step - loss: 1.0507 - accuracy: 0.4339 - auc: 0.6251 - f1_score: 0.4092 - val_loss: 1.0496 - val_accuracy: 0.4345 - val_auc: 0.6255 - val_f1_score: 0.4054 Epoch 3/50 188/188 [==============================] - 19s 101ms/step - loss: 1.0478 - accuracy: 0.4415 - auc: 0.6297 - f1_score: 0.4305 - val_loss: 1.0490 - val_accuracy: 0.4356 - val_auc: 0.6259 - val_f1_score: 0.4191 Epoch 4/50 188/188 [==============================] - 19s 102ms/step - loss: 1.0462 - accuracy: 0.4456 - auc: 0.6316 - f1_score: 0.4371 - val_loss: 1.0472 - val_accuracy: 0.4349 - val_auc: 0.6287 - val_f1_score: 0.4209 Epoch 5/50 188/188 [==============================] - 19s 101ms/step - loss: 1.0441 - accuracy: 0.4465 - auc: 0.6345 - f1_score: 0.4391 - val_loss: 1.0472 - val_accuracy: 0.4417 - val_auc: 0.6293 - val_f1_score: 0.4398 Epoch 6/50 188/188 [==============================] - 19s 100ms/step - loss: 1.0435 - accuracy: 0.4457 - auc: 0.6347 - f1_score: 0.4407 - val_loss: 1.0464 - val_accuracy: 0.4365 - val_auc: 0.6298 - val_f1_score: 0.4319 Epoch 7/50 188/188 [==============================] - 19s 100ms/step - loss: 1.0422 - accuracy: 0.4473 - auc: 0.6369 - f1_score: 0.4435 - val_loss: 1.0465 - val_accuracy: 0.4379 - val_auc: 0.6298 - val_f1_score: 0.4326 Epoch 8/50 188/188 [==============================] - 19s 100ms/step - loss: 1.0419 - accuracy: 0.4483 - auc: 0.6372 - f1_score: 0.4431 - val_loss: 1.0470 - val_accuracy: 0.4372 - val_auc: 0.6294 - val_f1_score: 0.4328 Epoch 9/50 188/188 [==============================] - 19s 100ms/step - loss: 1.0399 - accuracy: 0.4513 - auc: 0.6401 - f1_score: 0.4479 - val_loss: 1.0483 - val_accuracy: 0.4335 - val_auc: 0.6277 - val_f1_score: 0.4239 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 121 0.419249 | 0.412813 | 0.420704 | 0.422558 | 0.606606 | 0.606748 | 0.411648 | 0.412549 | 1 | LSTM | 2 | 7 | . 122 0.425894 | 0.419715 | 0.437546 | 0.438563 | 0.626280 | 0.626258 | 0.431737 | 0.431796 | 2 | LSTM | 2 | 7 | . 123 0.428498 | 0.422400 | 0.447312 | 0.448687 | 0.637695 | 0.637619 | 0.441210 | 0.441601 | 3 | LSTM | 2 | 7 | . 124 0.433625 | 0.427496 | 0.458289 | 0.458802 | 0.647836 | 0.647237 | 0.455858 | 0.455612 | 4 | LSTM | 2 | 7 | . 125 0.437437 | 0.431571 | 0.456513 | 0.457733 | 0.647148 | 0.647397 | 0.446097 | 0.446063 | 5 | LSTM | 2 | 7 | . 125 rows × 12 columns . Train shape: (83399, 6, 7) Test shape: (10292, 6, 7) Train shape: (83399, 6, 7) Test shape: (10292, 6, 7) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 6, 7)] 0 [] input_2 (InputLayer) [(None, 6, 7)] 0 [] lstm (LSTM) (None, 6, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 6, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 600) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 600) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1202) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 601500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 805,243 Trainable params: 805,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 26s 123ms/step - loss: 1.0670 - accuracy: 0.4228 - auc: 0.6016 - f1_score: 0.4220 - val_loss: 1.0487 - val_accuracy: 0.4345 - val_auc: 0.6277 - val_f1_score: 0.4163 Epoch 2/50 188/188 [==============================] - 22s 117ms/step - loss: 1.0475 - accuracy: 0.4425 - auc: 0.6296 - f1_score: 0.4236 - val_loss: 1.0470 - val_accuracy: 0.4355 - val_auc: 0.6297 - val_f1_score: 0.4240 Epoch 3/50 188/188 [==============================] - 23s 122ms/step - loss: 1.0448 - accuracy: 0.4439 - auc: 0.6330 - f1_score: 0.4310 - val_loss: 1.0461 - val_accuracy: 0.4396 - val_auc: 0.6311 - val_f1_score: 0.4283 Epoch 4/50 188/188 [==============================] - 22s 119ms/step - loss: 1.0437 - accuracy: 0.4462 - auc: 0.6348 - f1_score: 0.4347 - val_loss: 1.0449 - val_accuracy: 0.4420 - val_auc: 0.6325 - val_f1_score: 0.4327 Epoch 5/50 188/188 [==============================] - 22s 118ms/step - loss: 1.0420 - accuracy: 0.4488 - auc: 0.6372 - f1_score: 0.4384 - val_loss: 1.0454 - val_accuracy: 0.4429 - val_auc: 0.6321 - val_f1_score: 0.4382 Epoch 6/50 188/188 [==============================] - 21s 113ms/step - loss: 1.0409 - accuracy: 0.4487 - auc: 0.6381 - f1_score: 0.4413 - val_loss: 1.0453 - val_accuracy: 0.4418 - val_auc: 0.6319 - val_f1_score: 0.4304 Epoch 7/50 188/188 [==============================] - 22s 115ms/step - loss: 1.0408 - accuracy: 0.4494 - auc: 0.6390 - f1_score: 0.4423 - val_loss: 1.0459 - val_accuracy: 0.4438 - val_auc: 0.6316 - val_f1_score: 0.4363 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 122 0.425894 | 0.419715 | 0.437546 | 0.438563 | 0.626280 | 0.626258 | 0.431737 | 0.431796 | 2 | LSTM | 2 | 7 | . 123 0.428498 | 0.422400 | 0.447312 | 0.448687 | 0.637695 | 0.637619 | 0.441210 | 0.441601 | 3 | LSTM | 2 | 7 | . 124 0.433625 | 0.427496 | 0.458289 | 0.458802 | 0.647836 | 0.647237 | 0.455858 | 0.455612 | 4 | LSTM | 2 | 7 | . 125 0.437437 | 0.431571 | 0.456513 | 0.457733 | 0.647148 | 0.647397 | 0.446097 | 0.446063 | 5 | LSTM | 2 | 7 | . 126 0.433858 | 0.427815 | 0.459586 | 0.460654 | 0.649579 | 0.649312 | 0.451371 | 0.451369 | 6 | LSTM | 2 | 7 | . 126 rows × 12 columns . Train shape: (83399, 7, 7) Test shape: (10292, 7, 7) Train shape: (83399, 7, 7) Test shape: (10292, 7, 7) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 7, 7)] 0 [] input_2 (InputLayer) [(None, 7, 7)] 0 [] lstm (LSTM) (None, 7, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 7, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 700) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 700) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1402) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 701500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 905,243 Trainable params: 905,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 30s 142ms/step - loss: 1.0711 - accuracy: 0.4236 - auc: 0.5920 - f1_score: 0.4172 - val_loss: 1.0577 - val_accuracy: 0.4284 - val_auc: 0.6142 - val_f1_score: 0.3458 Epoch 2/50 188/188 [==============================] - 26s 139ms/step - loss: 1.0524 - accuracy: 0.4386 - auc: 0.6229 - f1_score: 0.3724 - val_loss: 1.0528 - val_accuracy: 0.4333 - val_auc: 0.6224 - val_f1_score: 0.3901 Epoch 3/50 188/188 [==============================] - 26s 136ms/step - loss: 1.0481 - accuracy: 0.4413 - auc: 0.6289 - f1_score: 0.3977 - val_loss: 1.0505 - val_accuracy: 0.4376 - val_auc: 0.6251 - val_f1_score: 0.4051 Epoch 4/50 188/188 [==============================] - 26s 137ms/step - loss: 1.0453 - accuracy: 0.4449 - auc: 0.6322 - f1_score: 0.4176 - val_loss: 1.0490 - val_accuracy: 0.4362 - val_auc: 0.6268 - val_f1_score: 0.4127 Epoch 5/50 188/188 [==============================] - 26s 136ms/step - loss: 1.0436 - accuracy: 0.4466 - auc: 0.6344 - f1_score: 0.4245 - val_loss: 1.0479 - val_accuracy: 0.4415 - val_auc: 0.6290 - val_f1_score: 0.4276 Epoch 6/50 188/188 [==============================] - 25s 133ms/step - loss: 1.0415 - accuracy: 0.4496 - auc: 0.6374 - f1_score: 0.4343 - val_loss: 1.0476 - val_accuracy: 0.4420 - val_auc: 0.6299 - val_f1_score: 0.4234 Epoch 7/50 188/188 [==============================] - 26s 138ms/step - loss: 1.0406 - accuracy: 0.4500 - auc: 0.6387 - f1_score: 0.4355 - val_loss: 1.0472 - val_accuracy: 0.4408 - val_auc: 0.6302 - val_f1_score: 0.4287 Epoch 8/50 188/188 [==============================] - 26s 139ms/step - loss: 1.0395 - accuracy: 0.4498 - auc: 0.6395 - f1_score: 0.4384 - val_loss: 1.0467 - val_accuracy: 0.4428 - val_auc: 0.6310 - val_f1_score: 0.4383 Epoch 9/50 188/188 [==============================] - 25s 133ms/step - loss: 1.0384 - accuracy: 0.4531 - auc: 0.6411 - f1_score: 0.4425 - val_loss: 1.0470 - val_accuracy: 0.4418 - val_auc: 0.6300 - val_f1_score: 0.4360 Epoch 10/50 188/188 [==============================] - 26s 137ms/step - loss: 1.0368 - accuracy: 0.4538 - auc: 0.6433 - f1_score: 0.4442 - val_loss: 1.0458 - val_accuracy: 0.4417 - val_auc: 0.6311 - val_f1_score: 0.4345 Epoch 11/50 188/188 [==============================] - 26s 138ms/step - loss: 1.0362 - accuracy: 0.4556 - auc: 0.6442 - f1_score: 0.4470 - val_loss: 1.0463 - val_accuracy: 0.4452 - val_auc: 0.6309 - val_f1_score: 0.4401 Epoch 12/50 188/188 [==============================] - 26s 137ms/step - loss: 1.0346 - accuracy: 0.4580 - auc: 0.6462 - f1_score: 0.4510 - val_loss: 1.0464 - val_accuracy: 0.4430 - val_auc: 0.6309 - val_f1_score: 0.4385 Epoch 13/50 188/188 [==============================] - 25s 134ms/step - loss: 1.0340 - accuracy: 0.4562 - auc: 0.6462 - f1_score: 0.4483 - val_loss: 1.0471 - val_accuracy: 0.4427 - val_auc: 0.6298 - val_f1_score: 0.4382 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 123 0.428498 | 0.422400 | 0.447312 | 0.448687 | 0.637695 | 0.637619 | 0.441210 | 0.441601 | 3 | LSTM | 2 | 7 | . 124 0.433625 | 0.427496 | 0.458289 | 0.458802 | 0.647836 | 0.647237 | 0.455858 | 0.455612 | 4 | LSTM | 2 | 7 | . 125 0.437437 | 0.431571 | 0.456513 | 0.457733 | 0.647148 | 0.647397 | 0.446097 | 0.446063 | 5 | LSTM | 2 | 7 | . 126 0.433858 | 0.427815 | 0.459586 | 0.460654 | 0.649579 | 0.649312 | 0.451371 | 0.451369 | 6 | LSTM | 2 | 7 | . 127 0.436716 | 0.430564 | 0.466279 | 0.466417 | 0.655239 | 0.654447 | 0.460767 | 0.459933 | 7 | LSTM | 2 | 7 | . 127 rows × 12 columns . Train shape: (83399, 8, 7) Test shape: (10292, 8, 7) Train shape: (83399, 8, 7) Test shape: (10292, 8, 7) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 8, 7)] 0 [] input_2 (InputLayer) [(None, 8, 7)] 0 [] lstm (LSTM) (None, 8, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 8, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 800) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 800) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1602) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 801500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,005,243 Trainable params: 1,005,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 32s 155ms/step - loss: 1.0635 - accuracy: 0.4221 - auc: 0.6075 - f1_score: 0.4362 - val_loss: 1.0507 - val_accuracy: 0.4347 - val_auc: 0.6261 - val_f1_score: 0.4010 Epoch 2/50 188/188 [==============================] - 31s 165ms/step - loss: 1.0468 - accuracy: 0.4427 - auc: 0.6305 - f1_score: 0.4293 - val_loss: 1.0472 - val_accuracy: 0.4399 - val_auc: 0.6294 - val_f1_score: 0.4284 Epoch 3/50 188/188 [==============================] - 38s 201ms/step - loss: 1.0429 - accuracy: 0.4475 - auc: 0.6358 - f1_score: 0.4392 - val_loss: 1.0460 - val_accuracy: 0.4411 - val_auc: 0.6305 - val_f1_score: 0.4303 Epoch 4/50 188/188 [==============================] - 32s 171ms/step - loss: 1.0413 - accuracy: 0.4512 - auc: 0.6382 - f1_score: 0.4434 - val_loss: 1.0453 - val_accuracy: 0.4428 - val_auc: 0.6320 - val_f1_score: 0.4346 Epoch 5/50 188/188 [==============================] - 31s 162ms/step - loss: 1.0394 - accuracy: 0.4516 - auc: 0.6402 - f1_score: 0.4453 - val_loss: 1.0468 - val_accuracy: 0.4399 - val_auc: 0.6305 - val_f1_score: 0.4351 Epoch 6/50 188/188 [==============================] - 34s 181ms/step - loss: 1.0384 - accuracy: 0.4548 - auc: 0.6422 - f1_score: 0.4502 - val_loss: 1.0447 - val_accuracy: 0.4446 - val_auc: 0.6333 - val_f1_score: 0.4377 Epoch 7/50 188/188 [==============================] - 32s 170ms/step - loss: 1.0374 - accuracy: 0.4558 - auc: 0.6436 - f1_score: 0.4502 - val_loss: 1.0453 - val_accuracy: 0.4397 - val_auc: 0.6324 - val_f1_score: 0.4327 Epoch 8/50 188/188 [==============================] - 30s 159ms/step - loss: 1.0361 - accuracy: 0.4587 - auc: 0.6453 - f1_score: 0.4548 - val_loss: 1.0444 - val_accuracy: 0.4406 - val_auc: 0.6332 - val_f1_score: 0.4323 Epoch 9/50 188/188 [==============================] - 29s 155ms/step - loss: 1.0343 - accuracy: 0.4605 - auc: 0.6477 - f1_score: 0.4560 - val_loss: 1.0443 - val_accuracy: 0.4404 - val_auc: 0.6333 - val_f1_score: 0.4323 Epoch 10/50 188/188 [==============================] - 29s 157ms/step - loss: 1.0327 - accuracy: 0.4603 - auc: 0.6494 - f1_score: 0.4556 - val_loss: 1.0452 - val_accuracy: 0.4430 - val_auc: 0.6326 - val_f1_score: 0.4368 Epoch 11/50 188/188 [==============================] - 30s 159ms/step - loss: 1.0316 - accuracy: 0.4629 - auc: 0.6512 - f1_score: 0.4592 - val_loss: 1.0445 - val_accuracy: 0.4409 - val_auc: 0.6332 - val_f1_score: 0.4299 Epoch 12/50 188/188 [==============================] - 29s 156ms/step - loss: 1.0293 - accuracy: 0.4667 - auc: 0.6539 - f1_score: 0.4625 - val_loss: 1.0469 - val_accuracy: 0.4386 - val_auc: 0.6307 - val_f1_score: 0.4342 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 124 0.433625 | 0.427496 | 0.458289 | 0.458802 | 0.647836 | 0.647237 | 0.455858 | 0.455612 | 4 | LSTM | 2 | 7 | . 125 0.437437 | 0.431571 | 0.456513 | 0.457733 | 0.647148 | 0.647397 | 0.446097 | 0.446063 | 5 | LSTM | 2 | 7 | . 126 0.433858 | 0.427815 | 0.459586 | 0.460654 | 0.649579 | 0.649312 | 0.451371 | 0.451369 | 6 | LSTM | 2 | 7 | . 127 0.436716 | 0.430564 | 0.466279 | 0.466417 | 0.655239 | 0.654447 | 0.460767 | 0.459933 | 7 | LSTM | 2 | 7 | . 128 0.443499 | 0.437217 | 0.476449 | 0.475169 | 0.665003 | 0.663396 | 0.471698 | 0.469507 | 8 | LSTM | 2 | 7 | . 128 rows × 12 columns . Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 9, 7)] 0 [] input_2 (InputLayer) [(None, 9, 7)] 0 [] lstm (LSTM) (None, 9, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 9, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 900) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 900) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1802) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 901500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,105,243 Trainable params: 1,105,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 44s 207ms/step - loss: 1.0676 - accuracy: 0.3980 - auc: 0.5986 - f1_score: 0.4388 - val_loss: 1.0554 - val_accuracy: 0.4360 - val_auc: 0.6178 - val_f1_score: 0.4148 Epoch 2/50 188/188 [==============================] - 34s 183ms/step - loss: 1.0486 - accuracy: 0.4392 - auc: 0.6274 - f1_score: 0.4215 - val_loss: 1.0472 - val_accuracy: 0.4398 - val_auc: 0.6304 - val_f1_score: 0.4193 Epoch 3/50 188/188 [==============================] - 33s 176ms/step - loss: 1.0427 - accuracy: 0.4458 - auc: 0.6355 - f1_score: 0.4303 - val_loss: 1.0466 - val_accuracy: 0.4452 - val_auc: 0.6314 - val_f1_score: 0.4285 Epoch 4/50 188/188 [==============================] - 32s 172ms/step - loss: 1.0408 - accuracy: 0.4497 - auc: 0.6383 - f1_score: 0.4354 - val_loss: 1.0463 - val_accuracy: 0.4430 - val_auc: 0.6320 - val_f1_score: 0.4362 Epoch 5/50 188/188 [==============================] - 34s 182ms/step - loss: 1.0388 - accuracy: 0.4529 - auc: 0.6416 - f1_score: 0.4442 - val_loss: 1.0460 - val_accuracy: 0.4412 - val_auc: 0.6315 - val_f1_score: 0.4292 Epoch 6/50 188/188 [==============================] - 34s 178ms/step - loss: 1.0378 - accuracy: 0.4545 - auc: 0.6432 - f1_score: 0.4452 - val_loss: 1.0457 - val_accuracy: 0.4409 - val_auc: 0.6326 - val_f1_score: 0.4343 Epoch 7/50 188/188 [==============================] - 32s 169ms/step - loss: 1.0362 - accuracy: 0.4571 - auc: 0.6456 - f1_score: 0.4507 - val_loss: 1.0452 - val_accuracy: 0.4436 - val_auc: 0.6328 - val_f1_score: 0.4355 Epoch 8/50 188/188 [==============================] - 32s 169ms/step - loss: 1.0342 - accuracy: 0.4597 - auc: 0.6481 - f1_score: 0.4542 - val_loss: 1.0461 - val_accuracy: 0.4423 - val_auc: 0.6313 - val_f1_score: 0.4371 Epoch 9/50 188/188 [==============================] - 34s 179ms/step - loss: 1.0325 - accuracy: 0.4600 - auc: 0.6495 - f1_score: 0.4547 - val_loss: 1.0462 - val_accuracy: 0.4502 - val_auc: 0.6329 - val_f1_score: 0.4465 Epoch 10/50 188/188 [==============================] - 34s 181ms/step - loss: 1.0297 - accuracy: 0.4637 - auc: 0.6530 - f1_score: 0.4594 - val_loss: 1.0479 - val_accuracy: 0.4409 - val_auc: 0.6324 - val_f1_score: 0.4324 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 125 0.437437 | 0.431571 | 0.456513 | 0.457733 | 0.647148 | 0.647397 | 0.446097 | 0.446063 | 5 | LSTM | 2 | 7 | . 126 0.433858 | 0.427815 | 0.459586 | 0.460654 | 0.649579 | 0.649312 | 0.451371 | 0.451369 | 6 | LSTM | 2 | 7 | . 127 0.436716 | 0.430564 | 0.466279 | 0.466417 | 0.655239 | 0.654447 | 0.460767 | 0.459933 | 7 | LSTM | 2 | 7 | . 128 0.443499 | 0.437217 | 0.476449 | 0.475169 | 0.665003 | 0.663396 | 0.471698 | 0.469507 | 8 | LSTM | 2 | 7 | . 129 0.444824 | 0.438636 | 0.471806 | 0.471621 | 0.662844 | 0.661722 | 0.462585 | 0.461235 | 9 | LSTM | 2 | 7 | . 129 rows × 12 columns . Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 7)] 0 [] input_2 (InputLayer) [(None, 10, 7)] 0 [] lstm (LSTM) (None, 10, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 10, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 2002) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1001500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,205,243 Trainable params: 1,205,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 39s 186ms/step - loss: 1.0679 - accuracy: 0.4115 - auc: 0.5974 - f1_score: 0.4274 - val_loss: 1.0478 - val_accuracy: 0.4369 - val_auc: 0.6295 - val_f1_score: 0.4287 Epoch 2/50 188/188 [==============================] - 38s 201ms/step - loss: 1.0451 - accuracy: 0.4442 - auc: 0.6328 - f1_score: 0.4352 - val_loss: 1.0464 - val_accuracy: 0.4424 - val_auc: 0.6315 - val_f1_score: 0.4362 Epoch 3/50 188/188 [==============================] - 36s 189ms/step - loss: 1.0427 - accuracy: 0.4464 - auc: 0.6356 - f1_score: 0.4363 - val_loss: 1.0449 - val_accuracy: 0.4439 - val_auc: 0.6332 - val_f1_score: 0.4357 Epoch 4/50 188/188 [==============================] - 43s 230ms/step - loss: 1.0405 - accuracy: 0.4502 - auc: 0.6391 - f1_score: 0.4422 - val_loss: 1.0445 - val_accuracy: 0.4472 - val_auc: 0.6348 - val_f1_score: 0.4415 Epoch 5/50 188/188 [==============================] - 38s 201ms/step - loss: 1.0387 - accuracy: 0.4523 - auc: 0.6411 - f1_score: 0.4447 - val_loss: 1.0447 - val_accuracy: 0.4469 - val_auc: 0.6334 - val_f1_score: 0.4403 Epoch 6/50 188/188 [==============================] - 32s 172ms/step - loss: 1.0367 - accuracy: 0.4548 - auc: 0.6434 - f1_score: 0.4478 - val_loss: 1.0432 - val_accuracy: 0.4480 - val_auc: 0.6362 - val_f1_score: 0.4435 Epoch 7/50 188/188 [==============================] - 33s 173ms/step - loss: 1.0359 - accuracy: 0.4560 - auc: 0.6448 - f1_score: 0.4503 - val_loss: 1.0438 - val_accuracy: 0.4478 - val_auc: 0.6353 - val_f1_score: 0.4450 Epoch 8/50 188/188 [==============================] - 33s 173ms/step - loss: 1.0346 - accuracy: 0.4559 - auc: 0.6465 - f1_score: 0.4492 - val_loss: 1.0444 - val_accuracy: 0.4507 - val_auc: 0.6356 - val_f1_score: 0.4482 Epoch 9/50 188/188 [==============================] - 32s 173ms/step - loss: 1.0332 - accuracy: 0.4579 - auc: 0.6478 - f1_score: 0.4534 - val_loss: 1.0444 - val_accuracy: 0.4522 - val_auc: 0.6352 - val_f1_score: 0.4508 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 126 0.433858 | 0.427815 | 0.459586 | 0.460654 | 0.649579 | 0.649312 | 0.451371 | 0.451369 | 6 | LSTM | 2 | 7 | . 127 0.436716 | 0.430564 | 0.466279 | 0.466417 | 0.655239 | 0.654447 | 0.460767 | 0.459933 | 7 | LSTM | 2 | 7 | . 128 0.443499 | 0.437217 | 0.476449 | 0.475169 | 0.665003 | 0.663396 | 0.471698 | 0.469507 | 8 | LSTM | 2 | 7 | . 129 0.444824 | 0.438636 | 0.471806 | 0.471621 | 0.662844 | 0.661722 | 0.462585 | 0.461235 | 9 | LSTM | 2 | 7 | . 130 0.440709 | 0.434575 | 0.468143 | 0.467809 | 0.657931 | 0.656786 | 0.466323 | 0.465363 | 10 | LSTM | 2 | 7 | . 130 rows × 12 columns . Train shape: (83399, 1, 7) Test shape: (10292, 1, 7) Train shape: (83399, 1, 7) Test shape: (10292, 1, 7) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 1, 7)] 0 [] input_2 (InputLayer) [(None, 1, 7)] 0 [] simple_rnn (SimpleRNN) (None, 1, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 1, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 100) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 100) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 202) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 101500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 241,043 Trainable params: 241,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 8s 33ms/step - loss: 1.0940 - accuracy: 0.3573 - auc: 0.5397 - f1_score: 0.4115 - val_loss: 1.0857 - val_accuracy: 0.3755 - val_auc: 0.5684 - val_f1_score: 0.3294 Epoch 2/50 188/188 [==============================] - 6s 30ms/step - loss: 1.0806 - accuracy: 0.4002 - auc: 0.5802 - f1_score: 0.3991 - val_loss: 1.0745 - val_accuracy: 0.4012 - val_auc: 0.5917 - val_f1_score: 0.4002 Epoch 3/50 188/188 [==============================] - 6s 29ms/step - loss: 1.0741 - accuracy: 0.4090 - auc: 0.5919 - f1_score: 0.4074 - val_loss: 1.0717 - val_accuracy: 0.4041 - val_auc: 0.5949 - val_f1_score: 0.4020 Epoch 4/50 188/188 [==============================] - 5s 29ms/step - loss: 1.0717 - accuracy: 0.4122 - auc: 0.5955 - f1_score: 0.4100 - val_loss: 1.0712 - val_accuracy: 0.4080 - val_auc: 0.5964 - val_f1_score: 0.4046 Epoch 5/50 188/188 [==============================] - 5s 29ms/step - loss: 1.0711 - accuracy: 0.4117 - auc: 0.5964 - f1_score: 0.4078 - val_loss: 1.0701 - val_accuracy: 0.4088 - val_auc: 0.5978 - val_f1_score: 0.4050 Epoch 6/50 188/188 [==============================] - 6s 29ms/step - loss: 1.0692 - accuracy: 0.4152 - auc: 0.6000 - f1_score: 0.4121 - val_loss: 1.0694 - val_accuracy: 0.4113 - val_auc: 0.5988 - val_f1_score: 0.4012 Epoch 7/50 188/188 [==============================] - 6s 33ms/step - loss: 1.0697 - accuracy: 0.4137 - auc: 0.5983 - f1_score: 0.4094 - val_loss: 1.0698 - val_accuracy: 0.4119 - val_auc: 0.5983 - val_f1_score: 0.4108 Epoch 8/50 188/188 [==============================] - 6s 33ms/step - loss: 1.0693 - accuracy: 0.4157 - auc: 0.5999 - f1_score: 0.4107 - val_loss: 1.0692 - val_accuracy: 0.4144 - val_auc: 0.6003 - val_f1_score: 0.4125 Epoch 9/50 188/188 [==============================] - 5s 29ms/step - loss: 1.0686 - accuracy: 0.4166 - auc: 0.6002 - f1_score: 0.4128 - val_loss: 1.0695 - val_accuracy: 0.4157 - val_auc: 0.5992 - val_f1_score: 0.4122 Epoch 10/50 188/188 [==============================] - 5s 29ms/step - loss: 1.0674 - accuracy: 0.4179 - auc: 0.6025 - f1_score: 0.4140 - val_loss: 1.0695 - val_accuracy: 0.4100 - val_auc: 0.5991 - val_f1_score: 0.4080 Epoch 11/50 188/188 [==============================] - 5s 29ms/step - loss: 1.0679 - accuracy: 0.4167 - auc: 0.6014 - f1_score: 0.4139 - val_loss: 1.0693 - val_accuracy: 0.4128 - val_auc: 0.5991 - val_f1_score: 0.4109 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 127 0.436716 | 0.430564 | 0.466279 | 0.466417 | 0.655239 | 0.654447 | 0.460767 | 0.459933 | 7 | LSTM | 2 | 7 | . 128 0.443499 | 0.437217 | 0.476449 | 0.475169 | 0.665003 | 0.663396 | 0.471698 | 0.469507 | 8 | LSTM | 2 | 7 | . 129 0.444824 | 0.438636 | 0.471806 | 0.471621 | 0.662844 | 0.661722 | 0.462585 | 0.461235 | 9 | LSTM | 2 | 7 | . 130 0.440709 | 0.434575 | 0.468143 | 0.467809 | 0.657931 | 0.656786 | 0.466323 | 0.465363 | 10 | LSTM | 2 | 7 | . 131 0.419813 | 0.413255 | 0.426373 | 0.427066 | 0.611495 | 0.610833 | 0.424309 | 0.424372 | 1 | Simple | 2 | 7 | . 131 rows × 12 columns . Train shape: (83399, 2, 7) Test shape: (10292, 2, 7) Train shape: (83399, 2, 7) Test shape: (10292, 2, 7) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 2, 7)] 0 [] input_2 (InputLayer) [(None, 2, 7)] 0 [] simple_rnn (SimpleRNN) (None, 2, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 2, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 200) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 200) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 402) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 201500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 341,043 Trainable params: 341,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 11s 45ms/step - loss: 1.0839 - accuracy: 0.3883 - auc: 0.5637 - f1_score: 0.3991 - val_loss: 1.0672 - val_accuracy: 0.4135 - val_auc: 0.6038 - val_f1_score: 0.3553 Epoch 2/50 188/188 [==============================] - 7s 39ms/step - loss: 1.0663 - accuracy: 0.4160 - auc: 0.6022 - f1_score: 0.3873 - val_loss: 1.0627 - val_accuracy: 0.4205 - val_auc: 0.6094 - val_f1_score: 0.3952 Epoch 3/50 188/188 [==============================] - 7s 38ms/step - loss: 1.0616 - accuracy: 0.4233 - auc: 0.6098 - f1_score: 0.4040 - val_loss: 1.0621 - val_accuracy: 0.4181 - val_auc: 0.6105 - val_f1_score: 0.4025 Epoch 4/50 188/188 [==============================] - 7s 39ms/step - loss: 1.0601 - accuracy: 0.4253 - auc: 0.6124 - f1_score: 0.4134 - val_loss: 1.0604 - val_accuracy: 0.4241 - val_auc: 0.6135 - val_f1_score: 0.4128 Epoch 5/50 188/188 [==============================] - 7s 38ms/step - loss: 1.0586 - accuracy: 0.4288 - auc: 0.6152 - f1_score: 0.4208 - val_loss: 1.0595 - val_accuracy: 0.4255 - val_auc: 0.6147 - val_f1_score: 0.4204 Epoch 6/50 188/188 [==============================] - 7s 39ms/step - loss: 1.0572 - accuracy: 0.4287 - auc: 0.6168 - f1_score: 0.4214 - val_loss: 1.0596 - val_accuracy: 0.4257 - val_auc: 0.6146 - val_f1_score: 0.4169 Epoch 7/50 188/188 [==============================] - 7s 38ms/step - loss: 1.0567 - accuracy: 0.4304 - auc: 0.6178 - f1_score: 0.4250 - val_loss: 1.0595 - val_accuracy: 0.4290 - val_auc: 0.6156 - val_f1_score: 0.4258 Epoch 8/50 188/188 [==============================] - 7s 39ms/step - loss: 1.0548 - accuracy: 0.4327 - auc: 0.6205 - f1_score: 0.4267 - val_loss: 1.0587 - val_accuracy: 0.4247 - val_auc: 0.6155 - val_f1_score: 0.4194 Epoch 9/50 188/188 [==============================] - 7s 39ms/step - loss: 1.0551 - accuracy: 0.4315 - auc: 0.6200 - f1_score: 0.4261 - val_loss: 1.0589 - val_accuracy: 0.4302 - val_auc: 0.6157 - val_f1_score: 0.4257 Epoch 10/50 188/188 [==============================] - 7s 39ms/step - loss: 1.0544 - accuracy: 0.4367 - auc: 0.6223 - f1_score: 0.4322 - val_loss: 1.0587 - val_accuracy: 0.4270 - val_auc: 0.6157 - val_f1_score: 0.4227 Epoch 11/50 188/188 [==============================] - 7s 39ms/step - loss: 1.0536 - accuracy: 0.4350 - auc: 0.6225 - f1_score: 0.4299 - val_loss: 1.0587 - val_accuracy: 0.4295 - val_auc: 0.6160 - val_f1_score: 0.4281 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 128 0.443499 | 0.437217 | 0.476449 | 0.475169 | 0.665003 | 0.663396 | 0.471698 | 0.469507 | 8 | LSTM | 2 | 7 | . 129 0.444824 | 0.438636 | 0.471806 | 0.471621 | 0.662844 | 0.661722 | 0.462585 | 0.461235 | 9 | LSTM | 2 | 7 | . 130 0.440709 | 0.434575 | 0.468143 | 0.467809 | 0.657931 | 0.656786 | 0.466323 | 0.465363 | 10 | LSTM | 2 | 7 | . 131 0.419813 | 0.413255 | 0.426373 | 0.427066 | 0.611495 | 0.610833 | 0.424309 | 0.424372 | 1 | Simple | 2 | 7 | . 132 0.426294 | 0.419919 | 0.444282 | 0.444228 | 0.632010 | 0.631019 | 0.442681 | 0.442041 | 2 | Simple | 2 | 7 | . 132 rows × 12 columns . Train shape: (83399, 3, 7) Test shape: (10292, 3, 7) Train shape: (83399, 3, 7) Test shape: (10292, 3, 7) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 3, 7)] 0 [] input_2 (InputLayer) [(None, 3, 7)] 0 [] simple_rnn (SimpleRNN) (None, 3, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 3, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 300) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 300) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 602) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 301500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 441,043 Trainable params: 441,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 12s 51ms/step - loss: 1.0759 - accuracy: 0.4027 - auc: 0.5842 - f1_score: 0.4201 - val_loss: 1.0604 - val_accuracy: 0.4218 - val_auc: 0.6123 - val_f1_score: 0.3977 Epoch 2/50 188/188 [==============================] - 9s 46ms/step - loss: 1.0588 - accuracy: 0.4275 - auc: 0.6140 - f1_score: 0.4156 - val_loss: 1.0561 - val_accuracy: 0.4269 - val_auc: 0.6174 - val_f1_score: 0.4090 Epoch 3/50 188/188 [==============================] - 9s 46ms/step - loss: 1.0548 - accuracy: 0.4339 - auc: 0.6205 - f1_score: 0.4238 - val_loss: 1.0549 - val_accuracy: 0.4255 - val_auc: 0.6191 - val_f1_score: 0.4099 Epoch 4/50 188/188 [==============================] - 8s 45ms/step - loss: 1.0525 - accuracy: 0.4370 - auc: 0.6232 - f1_score: 0.4283 - val_loss: 1.0541 - val_accuracy: 0.4312 - val_auc: 0.6212 - val_f1_score: 0.4186 Epoch 5/50 188/188 [==============================] - 8s 45ms/step - loss: 1.0512 - accuracy: 0.4375 - auc: 0.6256 - f1_score: 0.4300 - val_loss: 1.0530 - val_accuracy: 0.4342 - val_auc: 0.6221 - val_f1_score: 0.4282 Epoch 6/50 188/188 [==============================] - 8s 45ms/step - loss: 1.0504 - accuracy: 0.4404 - auc: 0.6271 - f1_score: 0.4343 - val_loss: 1.0530 - val_accuracy: 0.4281 - val_auc: 0.6208 - val_f1_score: 0.4164 Epoch 7/50 188/188 [==============================] - 8s 45ms/step - loss: 1.0492 - accuracy: 0.4409 - auc: 0.6279 - f1_score: 0.4356 - val_loss: 1.0526 - val_accuracy: 0.4309 - val_auc: 0.6225 - val_f1_score: 0.4229 Epoch 8/50 188/188 [==============================] - 8s 45ms/step - loss: 1.0466 - accuracy: 0.4427 - auc: 0.6313 - f1_score: 0.4364 - val_loss: 1.0528 - val_accuracy: 0.4312 - val_auc: 0.6219 - val_f1_score: 0.4242 Epoch 9/50 188/188 [==============================] - 8s 45ms/step - loss: 1.0466 - accuracy: 0.4437 - auc: 0.6319 - f1_score: 0.4391 - val_loss: 1.0526 - val_accuracy: 0.4269 - val_auc: 0.6222 - val_f1_score: 0.4170 Epoch 10/50 188/188 [==============================] - 8s 45ms/step - loss: 1.0460 - accuracy: 0.4461 - auc: 0.6329 - f1_score: 0.4406 - val_loss: 1.0528 - val_accuracy: 0.4347 - val_auc: 0.6230 - val_f1_score: 0.4311 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 129 0.444824 | 0.438636 | 0.471806 | 0.471621 | 0.662844 | 0.661722 | 0.462585 | 0.461235 | 9 | LSTM | 2 | 7 | . 130 0.440709 | 0.434575 | 0.468143 | 0.467809 | 0.657931 | 0.656786 | 0.466323 | 0.465363 | 10 | LSTM | 2 | 7 | . 131 0.419813 | 0.413255 | 0.426373 | 0.427066 | 0.611495 | 0.610833 | 0.424309 | 0.424372 | 1 | Simple | 2 | 7 | . 132 0.426294 | 0.419919 | 0.444282 | 0.444228 | 0.632010 | 0.631019 | 0.442681 | 0.442041 | 2 | Simple | 2 | 7 | . 133 0.433179 | 0.426882 | 0.457897 | 0.457920 | 0.644898 | 0.643857 | 0.453634 | 0.452780 | 3 | Simple | 2 | 7 | . 133 rows × 12 columns . Train shape: (83399, 4, 7) Test shape: (10292, 4, 7) Train shape: (83399, 4, 7) Test shape: (10292, 4, 7) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 4, 7)] 0 [] input_2 (InputLayer) [(None, 4, 7)] 0 [] simple_rnn (SimpleRNN) (None, 4, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 4, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 400) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 400) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 802) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 401500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 541,043 Trainable params: 541,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 14s 62ms/step - loss: 1.0763 - accuracy: 0.4008 - auc: 0.5812 - f1_score: 0.4303 - val_loss: 1.0657 - val_accuracy: 0.4277 - val_auc: 0.6032 - val_f1_score: 0.3841 Epoch 2/50 188/188 [==============================] - 11s 60ms/step - loss: 1.0612 - accuracy: 0.4233 - auc: 0.6081 - f1_score: 0.3869 - val_loss: 1.0607 - val_accuracy: 0.4249 - val_auc: 0.6096 - val_f1_score: 0.3619 Epoch 3/50 188/188 [==============================] - 11s 59ms/step - loss: 1.0555 - accuracy: 0.4319 - auc: 0.6162 - f1_score: 0.3934 - val_loss: 1.0580 - val_accuracy: 0.4281 - val_auc: 0.6129 - val_f1_score: 0.3721 Epoch 4/50 188/188 [==============================] - 11s 59ms/step - loss: 1.0522 - accuracy: 0.4334 - auc: 0.6207 - f1_score: 0.3920 - val_loss: 1.0561 - val_accuracy: 0.4305 - val_auc: 0.6157 - val_f1_score: 0.3828 Epoch 5/50 188/188 [==============================] - 11s 59ms/step - loss: 1.0499 - accuracy: 0.4363 - auc: 0.6247 - f1_score: 0.3991 - val_loss: 1.0531 - val_accuracy: 0.4300 - val_auc: 0.6213 - val_f1_score: 0.3838 Epoch 6/50 188/188 [==============================] - 11s 58ms/step - loss: 1.0469 - accuracy: 0.4404 - auc: 0.6302 - f1_score: 0.4091 - val_loss: 1.0524 - val_accuracy: 0.4297 - val_auc: 0.6226 - val_f1_score: 0.4013 Epoch 7/50 188/188 [==============================] - 11s 58ms/step - loss: 1.0461 - accuracy: 0.4426 - auc: 0.6323 - f1_score: 0.4210 - val_loss: 1.0521 - val_accuracy: 0.4306 - val_auc: 0.6226 - val_f1_score: 0.4026 Epoch 8/50 188/188 [==============================] - 11s 61ms/step - loss: 1.0450 - accuracy: 0.4439 - auc: 0.6331 - f1_score: 0.4239 - val_loss: 1.0524 - val_accuracy: 0.4320 - val_auc: 0.6239 - val_f1_score: 0.4168 Epoch 9/50 188/188 [==============================] - 11s 60ms/step - loss: 1.0427 - accuracy: 0.4451 - auc: 0.6355 - f1_score: 0.4302 - val_loss: 1.0522 - val_accuracy: 0.4295 - val_auc: 0.6239 - val_f1_score: 0.4141 Epoch 10/50 188/188 [==============================] - 11s 58ms/step - loss: 1.0419 - accuracy: 0.4473 - auc: 0.6367 - f1_score: 0.4333 - val_loss: 1.0506 - val_accuracy: 0.4307 - val_auc: 0.6248 - val_f1_score: 0.4182 Epoch 11/50 188/188 [==============================] - 11s 58ms/step - loss: 1.0403 - accuracy: 0.4504 - auc: 0.6393 - f1_score: 0.4379 - val_loss: 1.0501 - val_accuracy: 0.4338 - val_auc: 0.6255 - val_f1_score: 0.4166 Epoch 12/50 188/188 [==============================] - 11s 58ms/step - loss: 1.0393 - accuracy: 0.4496 - auc: 0.6406 - f1_score: 0.4376 - val_loss: 1.0502 - val_accuracy: 0.4305 - val_auc: 0.6251 - val_f1_score: 0.4149 Epoch 13/50 188/188 [==============================] - 11s 58ms/step - loss: 1.0380 - accuracy: 0.4517 - auc: 0.6418 - f1_score: 0.4413 - val_loss: 1.0515 - val_accuracy: 0.4307 - val_auc: 0.6252 - val_f1_score: 0.4198 Epoch 14/50 188/188 [==============================] - 11s 58ms/step - loss: 1.0375 - accuracy: 0.4528 - auc: 0.6425 - f1_score: 0.4443 - val_loss: 1.0518 - val_accuracy: 0.4351 - val_auc: 0.6240 - val_f1_score: 0.4242 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 130 0.440709 | 0.434575 | 0.468143 | 0.467809 | 0.657931 | 0.656786 | 0.466323 | 0.465363 | 10 | LSTM | 2 | 7 | . 131 0.419813 | 0.413255 | 0.426373 | 0.427066 | 0.611495 | 0.610833 | 0.424309 | 0.424372 | 1 | Simple | 2 | 7 | . 132 0.426294 | 0.419919 | 0.444282 | 0.444228 | 0.632010 | 0.631019 | 0.442681 | 0.442041 | 2 | Simple | 2 | 7 | . 133 0.433179 | 0.426882 | 0.457897 | 0.457920 | 0.644898 | 0.643857 | 0.453634 | 0.452780 | 3 | Simple | 2 | 7 | . 134 0.437145 | 0.430733 | 0.465593 | 0.465947 | 0.656052 | 0.654516 | 0.454056 | 0.453177 | 4 | Simple | 2 | 7 | . 134 rows × 12 columns . Train shape: (83399, 5, 7) Test shape: (10292, 5, 7) Train shape: (83399, 5, 7) Test shape: (10292, 5, 7) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 5, 7)] 0 [] input_2 (InputLayer) [(None, 5, 7)] 0 [] simple_rnn (SimpleRNN) (None, 5, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 5, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 500) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 500) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1002) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 501500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 641,043 Trainable params: 641,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 15s 69ms/step - loss: 1.0753 - accuracy: 0.4032 - auc: 0.5823 - f1_score: 0.4187 - val_loss: 1.0605 - val_accuracy: 0.4186 - val_auc: 0.6109 - val_f1_score: 0.4113 Epoch 2/50 188/188 [==============================] - 13s 69ms/step - loss: 1.0549 - accuracy: 0.4311 - auc: 0.6183 - f1_score: 0.4217 - val_loss: 1.0535 - val_accuracy: 0.4337 - val_auc: 0.6205 - val_f1_score: 0.4303 Epoch 3/50 188/188 [==============================] - 12s 65ms/step - loss: 1.0495 - accuracy: 0.4375 - auc: 0.6258 - f1_score: 0.4278 - val_loss: 1.0506 - val_accuracy: 0.4355 - val_auc: 0.6251 - val_f1_score: 0.4338 Epoch 4/50 188/188 [==============================] - 13s 67ms/step - loss: 1.0465 - accuracy: 0.4420 - auc: 0.6309 - f1_score: 0.4342 - val_loss: 1.0496 - val_accuracy: 0.4385 - val_auc: 0.6264 - val_f1_score: 0.4361 Epoch 5/50 188/188 [==============================] - 12s 66ms/step - loss: 1.0443 - accuracy: 0.4457 - auc: 0.6341 - f1_score: 0.4376 - val_loss: 1.0498 - val_accuracy: 0.4357 - val_auc: 0.6258 - val_f1_score: 0.4355 Epoch 6/50 188/188 [==============================] - 13s 68ms/step - loss: 1.0424 - accuracy: 0.4480 - auc: 0.6366 - f1_score: 0.4436 - val_loss: 1.0479 - val_accuracy: 0.4355 - val_auc: 0.6280 - val_f1_score: 0.4322 Epoch 7/50 188/188 [==============================] - 12s 66ms/step - loss: 1.0403 - accuracy: 0.4497 - auc: 0.6391 - f1_score: 0.4424 - val_loss: 1.0480 - val_accuracy: 0.4415 - val_auc: 0.6276 - val_f1_score: 0.4397 Epoch 8/50 188/188 [==============================] - 12s 65ms/step - loss: 1.0392 - accuracy: 0.4515 - auc: 0.6407 - f1_score: 0.4465 - val_loss: 1.0476 - val_accuracy: 0.4421 - val_auc: 0.6283 - val_f1_score: 0.4402 Epoch 9/50 188/188 [==============================] - 12s 64ms/step - loss: 1.0381 - accuracy: 0.4506 - auc: 0.6411 - f1_score: 0.4444 - val_loss: 1.0472 - val_accuracy: 0.4376 - val_auc: 0.6287 - val_f1_score: 0.4356 Epoch 10/50 188/188 [==============================] - 12s 65ms/step - loss: 1.0355 - accuracy: 0.4558 - auc: 0.6453 - f1_score: 0.4502 - val_loss: 1.0481 - val_accuracy: 0.4373 - val_auc: 0.6285 - val_f1_score: 0.4369 Epoch 11/50 188/188 [==============================] - 13s 66ms/step - loss: 1.0336 - accuracy: 0.4562 - auc: 0.6473 - f1_score: 0.4508 - val_loss: 1.0486 - val_accuracy: 0.4357 - val_auc: 0.6266 - val_f1_score: 0.4336 Epoch 12/50 188/188 [==============================] - 12s 65ms/step - loss: 1.0332 - accuracy: 0.4552 - auc: 0.6474 - f1_score: 0.4493 - val_loss: 1.0485 - val_accuracy: 0.4405 - val_auc: 0.6279 - val_f1_score: 0.4383 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 131 0.419813 | 0.413255 | 0.426373 | 0.427066 | 0.611495 | 0.610833 | 0.424309 | 0.424372 | 1 | Simple | 2 | 7 | . 132 0.426294 | 0.419919 | 0.444282 | 0.444228 | 0.632010 | 0.631019 | 0.442681 | 0.442041 | 2 | Simple | 2 | 7 | . 133 0.433179 | 0.426882 | 0.457897 | 0.457920 | 0.644898 | 0.643857 | 0.453634 | 0.452780 | 3 | Simple | 2 | 7 | . 134 0.437145 | 0.430733 | 0.465593 | 0.465947 | 0.656052 | 0.654516 | 0.454056 | 0.453177 | 4 | Simple | 2 | 7 | . 135 0.439640 | 0.432968 | 0.472111 | 0.470239 | 0.663504 | 0.660690 | 0.469338 | 0.466793 | 5 | Simple | 2 | 7 | . 135 rows × 12 columns . Train shape: (83399, 6, 7) Test shape: (10292, 6, 7) Train shape: (83399, 6, 7) Test shape: (10292, 6, 7) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 6, 7)] 0 [] input_2 (InputLayer) [(None, 6, 7)] 0 [] simple_rnn (SimpleRNN) (None, 6, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 6, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 600) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 600) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1202) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 601500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 741,043 Trainable params: 741,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 18s 80ms/step - loss: 1.0736 - accuracy: 0.4012 - auc: 0.5862 - f1_score: 0.4344 - val_loss: 1.0598 - val_accuracy: 0.4186 - val_auc: 0.6087 - val_f1_score: 0.3801 Epoch 2/50 188/188 [==============================] - 14s 75ms/step - loss: 1.0540 - accuracy: 0.4292 - auc: 0.6191 - f1_score: 0.4118 - val_loss: 1.0541 - val_accuracy: 0.4325 - val_auc: 0.6180 - val_f1_score: 0.4072 Epoch 3/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0475 - accuracy: 0.4348 - auc: 0.6279 - f1_score: 0.4240 - val_loss: 1.0511 - val_accuracy: 0.4362 - val_auc: 0.6230 - val_f1_score: 0.4265 Epoch 4/50 188/188 [==============================] - 14s 74ms/step - loss: 1.0437 - accuracy: 0.4409 - auc: 0.6339 - f1_score: 0.4334 - val_loss: 1.0505 - val_accuracy: 0.4339 - val_auc: 0.6239 - val_f1_score: 0.4195 Epoch 5/50 188/188 [==============================] - 14s 75ms/step - loss: 1.0402 - accuracy: 0.4469 - auc: 0.6381 - f1_score: 0.4381 - val_loss: 1.0493 - val_accuracy: 0.4379 - val_auc: 0.6260 - val_f1_score: 0.4249 Epoch 6/50 188/188 [==============================] - 14s 74ms/step - loss: 1.0386 - accuracy: 0.4487 - auc: 0.6400 - f1_score: 0.4427 - val_loss: 1.0480 - val_accuracy: 0.4391 - val_auc: 0.6278 - val_f1_score: 0.4317 Epoch 7/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0365 - accuracy: 0.4516 - auc: 0.6431 - f1_score: 0.4469 - val_loss: 1.0483 - val_accuracy: 0.4424 - val_auc: 0.6273 - val_f1_score: 0.4367 Epoch 8/50 188/188 [==============================] - 14s 74ms/step - loss: 1.0345 - accuracy: 0.4554 - auc: 0.6458 - f1_score: 0.4505 - val_loss: 1.0483 - val_accuracy: 0.4412 - val_auc: 0.6280 - val_f1_score: 0.4359 Epoch 9/50 188/188 [==============================] - 20s 104ms/step - loss: 1.0325 - accuracy: 0.4579 - auc: 0.6490 - f1_score: 0.4529 - val_loss: 1.0499 - val_accuracy: 0.4371 - val_auc: 0.6266 - val_f1_score: 0.4284 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 132 0.426294 | 0.419919 | 0.444282 | 0.444228 | 0.632010 | 0.631019 | 0.442681 | 0.442041 | 2 | Simple | 2 | 7 | . 133 0.433179 | 0.426882 | 0.457897 | 0.457920 | 0.644898 | 0.643857 | 0.453634 | 0.452780 | 3 | Simple | 2 | 7 | . 134 0.437145 | 0.430733 | 0.465593 | 0.465947 | 0.656052 | 0.654516 | 0.454056 | 0.453177 | 4 | Simple | 2 | 7 | . 135 0.439640 | 0.432968 | 0.472111 | 0.470239 | 0.663504 | 0.660690 | 0.469338 | 0.466793 | 5 | Simple | 2 | 7 | . 136 0.442673 | 0.436216 | 0.470967 | 0.471033 | 0.663809 | 0.661921 | 0.462056 | 0.461017 | 6 | Simple | 2 | 7 | . 136 rows × 12 columns . Train shape: (83399, 7, 7) Test shape: (10292, 7, 7) Train shape: (83399, 7, 7) Test shape: (10292, 7, 7) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 7, 7)] 0 [] input_2 (InputLayer) [(None, 7, 7)] 0 [] simple_rnn (SimpleRNN) (None, 7, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 7, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 700) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 700) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1402) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 701500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 841,043 Trainable params: 841,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 20s 91ms/step - loss: 1.0697 - accuracy: 0.4102 - auc: 0.5945 - f1_score: 0.4368 - val_loss: 1.0576 - val_accuracy: 0.4272 - val_auc: 0.6150 - val_f1_score: 0.4102 Epoch 2/50 188/188 [==============================] - 17s 90ms/step - loss: 1.0527 - accuracy: 0.4321 - auc: 0.6210 - f1_score: 0.4239 - val_loss: 1.0545 - val_accuracy: 0.4278 - val_auc: 0.6183 - val_f1_score: 0.4019 Epoch 3/50 188/188 [==============================] - 16s 86ms/step - loss: 1.0450 - accuracy: 0.4439 - auc: 0.6320 - f1_score: 0.4352 - val_loss: 1.0520 - val_accuracy: 0.4372 - val_auc: 0.6226 - val_f1_score: 0.4208 Epoch 4/50 188/188 [==============================] - 16s 86ms/step - loss: 1.0437 - accuracy: 0.4444 - auc: 0.6333 - f1_score: 0.4380 - val_loss: 1.0509 - val_accuracy: 0.4386 - val_auc: 0.6249 - val_f1_score: 0.4274 Epoch 5/50 188/188 [==============================] - 16s 86ms/step - loss: 1.0402 - accuracy: 0.4477 - auc: 0.6380 - f1_score: 0.4395 - val_loss: 1.0502 - val_accuracy: 0.4338 - val_auc: 0.6251 - val_f1_score: 0.4155 Epoch 6/50 188/188 [==============================] - 17s 90ms/step - loss: 1.0366 - accuracy: 0.4546 - auc: 0.6431 - f1_score: 0.4484 - val_loss: 1.0517 - val_accuracy: 0.4416 - val_auc: 0.6247 - val_f1_score: 0.4259 Epoch 7/50 188/188 [==============================] - 16s 88ms/step - loss: 1.0358 - accuracy: 0.4530 - auc: 0.6445 - f1_score: 0.4469 - val_loss: 1.0485 - val_accuracy: 0.4411 - val_auc: 0.6279 - val_f1_score: 0.4324 Epoch 8/50 188/188 [==============================] - 17s 91ms/step - loss: 1.0331 - accuracy: 0.4554 - auc: 0.6465 - f1_score: 0.4501 - val_loss: 1.0481 - val_accuracy: 0.4421 - val_auc: 0.6289 - val_f1_score: 0.4358 Epoch 9/50 188/188 [==============================] - 17s 88ms/step - loss: 1.0303 - accuracy: 0.4586 - auc: 0.6505 - f1_score: 0.4542 - val_loss: 1.0498 - val_accuracy: 0.4403 - val_auc: 0.6260 - val_f1_score: 0.4326 Epoch 10/50 188/188 [==============================] - 16s 87ms/step - loss: 1.0282 - accuracy: 0.4646 - auc: 0.6540 - f1_score: 0.4593 - val_loss: 1.0495 - val_accuracy: 0.4369 - val_auc: 0.6267 - val_f1_score: 0.4271 Epoch 11/50 188/188 [==============================] - 17s 88ms/step - loss: 1.0271 - accuracy: 0.4631 - auc: 0.6541 - f1_score: 0.4588 - val_loss: 1.0486 - val_accuracy: 0.4435 - val_auc: 0.6295 - val_f1_score: 0.4361 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 133 0.433179 | 0.426882 | 0.457897 | 0.457920 | 0.644898 | 0.643857 | 0.453634 | 0.452780 | 3 | Simple | 2 | 7 | . 134 0.437145 | 0.430733 | 0.465593 | 0.465947 | 0.656052 | 0.654516 | 0.454056 | 0.453177 | 4 | Simple | 2 | 7 | . 135 0.439640 | 0.432968 | 0.472111 | 0.470239 | 0.663504 | 0.660690 | 0.469338 | 0.466793 | 5 | Simple | 2 | 7 | . 136 0.442673 | 0.436216 | 0.470967 | 0.471033 | 0.663809 | 0.661921 | 0.462056 | 0.461017 | 6 | Simple | 2 | 7 | . 137 0.447949 | 0.441129 | 0.485431 | 0.483020 | 0.676126 | 0.672693 | 0.477340 | 0.473801 | 7 | Simple | 2 | 7 | . 137 rows × 12 columns . Train shape: (83399, 8, 7) Test shape: (10292, 8, 7) Train shape: (83399, 8, 7) Test shape: (10292, 8, 7) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 8, 7)] 0 [] input_2 (InputLayer) [(None, 8, 7)] 0 [] simple_rnn (SimpleRNN) (None, 8, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 8, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 800) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 800) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1602) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 801500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 941,043 Trainable params: 941,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 20s 95ms/step - loss: 1.0771 - accuracy: 0.3971 - auc: 0.5807 - f1_score: 0.4411 - val_loss: 1.0603 - val_accuracy: 0.4212 - val_auc: 0.6102 - val_f1_score: 0.4041 Epoch 2/50 188/188 [==============================] - 17s 89ms/step - loss: 1.0528 - accuracy: 0.4300 - auc: 0.6214 - f1_score: 0.4228 - val_loss: 1.0548 - val_accuracy: 0.4278 - val_auc: 0.6188 - val_f1_score: 0.4067 Epoch 3/50 188/188 [==============================] - 17s 93ms/step - loss: 1.0463 - accuracy: 0.4411 - auc: 0.6312 - f1_score: 0.4330 - val_loss: 1.0522 - val_accuracy: 0.4360 - val_auc: 0.6229 - val_f1_score: 0.4194 Epoch 4/50 188/188 [==============================] - 18s 97ms/step - loss: 1.0418 - accuracy: 0.4456 - auc: 0.6366 - f1_score: 0.4372 - val_loss: 1.0500 - val_accuracy: 0.4400 - val_auc: 0.6265 - val_f1_score: 0.4311 Epoch 5/50 188/188 [==============================] - 17s 91ms/step - loss: 1.0372 - accuracy: 0.4539 - auc: 0.6429 - f1_score: 0.4476 - val_loss: 1.0504 - val_accuracy: 0.4386 - val_auc: 0.6270 - val_f1_score: 0.4246 Epoch 6/50 188/188 [==============================] - 17s 91ms/step - loss: 1.0345 - accuracy: 0.4562 - auc: 0.6458 - f1_score: 0.4490 - val_loss: 1.0493 - val_accuracy: 0.4381 - val_auc: 0.6266 - val_f1_score: 0.4290 Epoch 7/50 188/188 [==============================] - 17s 91ms/step - loss: 1.0320 - accuracy: 0.4596 - auc: 0.6497 - f1_score: 0.4531 - val_loss: 1.0513 - val_accuracy: 0.4371 - val_auc: 0.6263 - val_f1_score: 0.4248 Epoch 8/50 188/188 [==============================] - 17s 90ms/step - loss: 1.0282 - accuracy: 0.4642 - auc: 0.6542 - f1_score: 0.4585 - val_loss: 1.0505 - val_accuracy: 0.4362 - val_auc: 0.6275 - val_f1_score: 0.4280 Epoch 9/50 188/188 [==============================] - 18s 94ms/step - loss: 1.0251 - accuracy: 0.4676 - auc: 0.6583 - f1_score: 0.4637 - val_loss: 1.0506 - val_accuracy: 0.4412 - val_auc: 0.6277 - val_f1_score: 0.4297 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 134 0.437145 | 0.430733 | 0.465593 | 0.465947 | 0.656052 | 0.654516 | 0.454056 | 0.453177 | 4 | Simple | 2 | 7 | . 135 0.439640 | 0.432968 | 0.472111 | 0.470239 | 0.663504 | 0.660690 | 0.469338 | 0.466793 | 5 | Simple | 2 | 7 | . 136 0.442673 | 0.436216 | 0.470967 | 0.471033 | 0.663809 | 0.661921 | 0.462056 | 0.461017 | 6 | Simple | 2 | 7 | . 137 0.447949 | 0.441129 | 0.485431 | 0.483020 | 0.676126 | 0.672693 | 0.477340 | 0.473801 | 7 | Simple | 2 | 7 | . 138 0.448555 | 0.441939 | 0.485126 | 0.483941 | 0.675458 | 0.672918 | 0.473531 | 0.471083 | 8 | Simple | 2 | 7 | . 138 rows × 12 columns . Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 9, 7)] 0 [] input_2 (InputLayer) [(None, 9, 7)] 0 [] simple_rnn (SimpleRNN) (None, 9, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 9, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 900) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 900) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 1802) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 901500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,041,043 Trainable params: 1,041,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 23s 109ms/step - loss: 1.0666 - accuracy: 0.4132 - auc: 0.5983 - f1_score: 0.4429 - val_loss: 1.0548 - val_accuracy: 0.4308 - val_auc: 0.6180 - val_f1_score: 0.4283 Epoch 2/50 188/188 [==============================] - 19s 102ms/step - loss: 1.0508 - accuracy: 0.4367 - auc: 0.6247 - f1_score: 0.4298 - val_loss: 1.0523 - val_accuracy: 0.4337 - val_auc: 0.6230 - val_f1_score: 0.4294 Epoch 3/50 188/188 [==============================] - 19s 100ms/step - loss: 1.0442 - accuracy: 0.4449 - auc: 0.6333 - f1_score: 0.4395 - val_loss: 1.0510 - val_accuracy: 0.4356 - val_auc: 0.6255 - val_f1_score: 0.4255 Epoch 4/50 188/188 [==============================] - 19s 100ms/step - loss: 1.0405 - accuracy: 0.4494 - auc: 0.6391 - f1_score: 0.4426 - val_loss: 1.0494 - val_accuracy: 0.4373 - val_auc: 0.6282 - val_f1_score: 0.4300 Epoch 5/50 188/188 [==============================] - 19s 99ms/step - loss: 1.0366 - accuracy: 0.4561 - auc: 0.6440 - f1_score: 0.4498 - val_loss: 1.0494 - val_accuracy: 0.4367 - val_auc: 0.6268 - val_f1_score: 0.4341 Epoch 6/50 188/188 [==============================] - 18s 97ms/step - loss: 1.0335 - accuracy: 0.4592 - auc: 0.6474 - f1_score: 0.4547 - val_loss: 1.0485 - val_accuracy: 0.4415 - val_auc: 0.6284 - val_f1_score: 0.4385 Epoch 7/50 188/188 [==============================] - 18s 96ms/step - loss: 1.0298 - accuracy: 0.4633 - auc: 0.6525 - f1_score: 0.4578 - val_loss: 1.0489 - val_accuracy: 0.4412 - val_auc: 0.6291 - val_f1_score: 0.4322 Epoch 8/50 188/188 [==============================] - 18s 98ms/step - loss: 1.0270 - accuracy: 0.4652 - auc: 0.6554 - f1_score: 0.4595 - val_loss: 1.0493 - val_accuracy: 0.4416 - val_auc: 0.6278 - val_f1_score: 0.4393 Epoch 9/50 188/188 [==============================] - 18s 96ms/step - loss: 1.0244 - accuracy: 0.4699 - auc: 0.6588 - f1_score: 0.4646 - val_loss: 1.0500 - val_accuracy: 0.4368 - val_auc: 0.6275 - val_f1_score: 0.4342 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 135 0.439640 | 0.432968 | 0.472111 | 0.470239 | 0.663504 | 0.660690 | 0.469338 | 0.466793 | 5 | Simple | 2 | 7 | . 136 0.442673 | 0.436216 | 0.470967 | 0.471033 | 0.663809 | 0.661921 | 0.462056 | 0.461017 | 6 | Simple | 2 | 7 | . 137 0.447949 | 0.441129 | 0.485431 | 0.483020 | 0.676126 | 0.672693 | 0.477340 | 0.473801 | 7 | Simple | 2 | 7 | . 138 0.448555 | 0.441939 | 0.485126 | 0.483941 | 0.675458 | 0.672918 | 0.473531 | 0.471083 | 8 | Simple | 2 | 7 | . 139 0.448673 | 0.441760 | 0.488211 | 0.485578 | 0.678334 | 0.674655 | 0.485613 | 0.482312 | 9 | Simple | 2 | 7 | . 139 rows × 12 columns . Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 2) Test shape: (10292, 2) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 7)] 0 [] input_2 (InputLayer) [(None, 10, 7)] 0 [] simple_rnn (SimpleRNN) (None, 10, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 10, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 2)] 0 [] concatenate (Concatenate) (None, 2002) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1001500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,141,043 Trainable params: 1,141,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 24s 112ms/step - loss: 1.0767 - accuracy: 0.3967 - auc: 0.5827 - f1_score: 0.4462 - val_loss: 1.0607 - val_accuracy: 0.4281 - val_auc: 0.6100 - val_f1_score: 0.4233 Epoch 2/50 188/188 [==============================] - 22s 117ms/step - loss: 1.0523 - accuracy: 0.4353 - auc: 0.6234 - f1_score: 0.4315 - val_loss: 1.0528 - val_accuracy: 0.4385 - val_auc: 0.6227 - val_f1_score: 0.4293 Epoch 3/50 188/188 [==============================] - 22s 117ms/step - loss: 1.0445 - accuracy: 0.4432 - auc: 0.6332 - f1_score: 0.4394 - val_loss: 1.0500 - val_accuracy: 0.4372 - val_auc: 0.6268 - val_f1_score: 0.4324 Epoch 4/50 188/188 [==============================] - 22s 116ms/step - loss: 1.0390 - accuracy: 0.4526 - auc: 0.6406 - f1_score: 0.4494 - val_loss: 1.0502 - val_accuracy: 0.4448 - val_auc: 0.6281 - val_f1_score: 0.4422 Epoch 5/50 188/188 [==============================] - 21s 113ms/step - loss: 1.0339 - accuracy: 0.4582 - auc: 0.6471 - f1_score: 0.4555 - val_loss: 1.0516 - val_accuracy: 0.4388 - val_auc: 0.6258 - val_f1_score: 0.4345 Epoch 6/50 188/188 [==============================] - 21s 112ms/step - loss: 1.0320 - accuracy: 0.4610 - auc: 0.6499 - f1_score: 0.4598 - val_loss: 1.0497 - val_accuracy: 0.4417 - val_auc: 0.6281 - val_f1_score: 0.4417 Epoch 7/50 188/188 [==============================] - 21s 112ms/step - loss: 1.0274 - accuracy: 0.4666 - auc: 0.6553 - f1_score: 0.4652 - val_loss: 1.0499 - val_accuracy: 0.4441 - val_auc: 0.6285 - val_f1_score: 0.4439 Epoch 8/50 188/188 [==============================] - 22s 114ms/step - loss: 1.0237 - accuracy: 0.4703 - auc: 0.6599 - f1_score: 0.4681 - val_loss: 1.0501 - val_accuracy: 0.4436 - val_auc: 0.6275 - val_f1_score: 0.4430 Epoch 9/50 188/188 [==============================] - 21s 113ms/step - loss: 1.0194 - accuracy: 0.4772 - auc: 0.6647 - f1_score: 0.4762 - val_loss: 1.0513 - val_accuracy: 0.4348 - val_auc: 0.6267 - val_f1_score: 0.4338 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 136 0.442673 | 0.436216 | 0.470967 | 0.471033 | 0.663809 | 0.661921 | 0.462056 | 0.461017 | 6 | Simple | 2 | 7 | . 137 0.447949 | 0.441129 | 0.485431 | 0.483020 | 0.676126 | 0.672693 | 0.477340 | 0.473801 | 7 | Simple | 2 | 7 | . 138 0.448555 | 0.441939 | 0.485126 | 0.483941 | 0.675458 | 0.672918 | 0.473531 | 0.471083 | 8 | Simple | 2 | 7 | . 139 0.448673 | 0.441760 | 0.488211 | 0.485578 | 0.678334 | 0.674655 | 0.485613 | 0.482312 | 9 | Simple | 2 | 7 | . 140 0.451428 | 0.444303 | 0.496081 | 0.492145 | 0.685261 | 0.680838 | 0.495120 | 0.490604 | 10 | Simple | 2 | 7 | . 140 rows × 12 columns . Train shape: (83399, 1, 7) Test shape: (10292, 1, 7) Train shape: (83399, 1, 7) Test shape: (10292, 1, 7) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 1, 7)] 0 [] input_2 (InputLayer) [(None, 1, 7)] 0 [] lstm (LSTM) (None, 1, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 1, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 100) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 100) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 205) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 103000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 306,743 Trainable params: 306,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 10s 40ms/step - loss: 1.0661 - accuracy: 0.4198 - auc: 0.6029 - f1_score: 0.4471 - val_loss: 1.0561 - val_accuracy: 0.4330 - val_auc: 0.6199 - val_f1_score: 0.3972 Epoch 2/50 188/188 [==============================] - 7s 36ms/step - loss: 1.0531 - accuracy: 0.4339 - auc: 0.6216 - f1_score: 0.4071 - val_loss: 1.0553 - val_accuracy: 0.4336 - val_auc: 0.6208 - val_f1_score: 0.4056 Epoch 3/50 188/188 [==============================] - 7s 36ms/step - loss: 1.0510 - accuracy: 0.4360 - auc: 0.6241 - f1_score: 0.4179 - val_loss: 1.0547 - val_accuracy: 0.4333 - val_auc: 0.6217 - val_f1_score: 0.4187 Epoch 4/50 188/188 [==============================] - 7s 38ms/step - loss: 1.0494 - accuracy: 0.4366 - auc: 0.6262 - f1_score: 0.4228 - val_loss: 1.0546 - val_accuracy: 0.4314 - val_auc: 0.6209 - val_f1_score: 0.4217 Epoch 5/50 188/188 [==============================] - 7s 36ms/step - loss: 1.0487 - accuracy: 0.4394 - auc: 0.6274 - f1_score: 0.4272 - val_loss: 1.0539 - val_accuracy: 0.4317 - val_auc: 0.6223 - val_f1_score: 0.4218 Epoch 6/50 188/188 [==============================] - 7s 36ms/step - loss: 1.0488 - accuracy: 0.4373 - auc: 0.6271 - f1_score: 0.4272 - val_loss: 1.0544 - val_accuracy: 0.4296 - val_auc: 0.6219 - val_f1_score: 0.4158 Epoch 7/50 188/188 [==============================] - 7s 36ms/step - loss: 1.0482 - accuracy: 0.4396 - auc: 0.6280 - f1_score: 0.4281 - val_loss: 1.0543 - val_accuracy: 0.4318 - val_auc: 0.6217 - val_f1_score: 0.4227 Epoch 8/50 188/188 [==============================] - 7s 36ms/step - loss: 1.0479 - accuracy: 0.4401 - auc: 0.6284 - f1_score: 0.4289 - val_loss: 1.0544 - val_accuracy: 0.4314 - val_auc: 0.6211 - val_f1_score: 0.4221 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 137 0.447949 | 0.441129 | 0.485431 | 0.483020 | 0.676126 | 0.672693 | 0.477340 | 0.473801 | 7 | Simple | 2 | 7 | . 138 0.448555 | 0.441939 | 0.485126 | 0.483941 | 0.675458 | 0.672918 | 0.473531 | 0.471083 | 8 | Simple | 2 | 7 | . 139 0.448673 | 0.441760 | 0.488211 | 0.485578 | 0.678334 | 0.674655 | 0.485613 | 0.482312 | 9 | Simple | 2 | 7 | . 140 0.451428 | 0.444303 | 0.496081 | 0.492145 | 0.685261 | 0.680838 | 0.495120 | 0.490604 | 10 | Simple | 2 | 7 | . 141 0.429937 | 0.423962 | 0.441012 | 0.442914 | 0.630998 | 0.631433 | 0.431248 | 0.431992 | 1 | LSTM | 5 | 7 | . 141 rows × 12 columns . Train shape: (83399, 2, 7) Test shape: (10292, 2, 7) Train shape: (83399, 2, 7) Test shape: (10292, 2, 7) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 2, 7)] 0 [] input_2 (InputLayer) [(None, 2, 7)] 0 [] lstm (LSTM) (None, 2, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 2, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 200) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 200) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 405) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 203000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 406,743 Trainable params: 406,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 13s 57ms/step - loss: 1.0665 - accuracy: 0.4216 - auc: 0.6044 - f1_score: 0.4064 - val_loss: 1.0551 - val_accuracy: 0.4259 - val_auc: 0.6191 - val_f1_score: 0.3543 Epoch 2/50 188/188 [==============================] - 10s 55ms/step - loss: 1.0488 - accuracy: 0.4358 - auc: 0.6266 - f1_score: 0.3721 - val_loss: 1.0527 - val_accuracy: 0.4314 - val_auc: 0.6239 - val_f1_score: 0.3702 Epoch 3/50 188/188 [==============================] - 10s 54ms/step - loss: 1.0464 - accuracy: 0.4365 - auc: 0.6294 - f1_score: 0.3864 - val_loss: 1.0525 - val_accuracy: 0.4289 - val_auc: 0.6232 - val_f1_score: 0.3847 Epoch 4/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0452 - accuracy: 0.4404 - auc: 0.6311 - f1_score: 0.4051 - val_loss: 1.0515 - val_accuracy: 0.4313 - val_auc: 0.6245 - val_f1_score: 0.4035 Epoch 5/50 188/188 [==============================] - 10s 54ms/step - loss: 1.0447 - accuracy: 0.4406 - auc: 0.6320 - f1_score: 0.4162 - val_loss: 1.0513 - val_accuracy: 0.4336 - val_auc: 0.6251 - val_f1_score: 0.4122 Epoch 6/50 188/188 [==============================] - 10s 54ms/step - loss: 1.0445 - accuracy: 0.4433 - auc: 0.6331 - f1_score: 0.4244 - val_loss: 1.0510 - val_accuracy: 0.4355 - val_auc: 0.6257 - val_f1_score: 0.4208 Epoch 7/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0440 - accuracy: 0.4456 - auc: 0.6344 - f1_score: 0.4282 - val_loss: 1.0508 - val_accuracy: 0.4342 - val_auc: 0.6259 - val_f1_score: 0.4193 Epoch 8/50 188/188 [==============================] - 11s 56ms/step - loss: 1.0435 - accuracy: 0.4445 - auc: 0.6340 - f1_score: 0.4323 - val_loss: 1.0515 - val_accuracy: 0.4372 - val_auc: 0.6254 - val_f1_score: 0.4266 Epoch 9/50 188/188 [==============================] - 11s 57ms/step - loss: 1.0433 - accuracy: 0.4457 - auc: 0.6349 - f1_score: 0.4342 - val_loss: 1.0514 - val_accuracy: 0.4330 - val_auc: 0.6252 - val_f1_score: 0.4204 Epoch 10/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0427 - accuracy: 0.4463 - auc: 0.6358 - f1_score: 0.4366 - val_loss: 1.0515 - val_accuracy: 0.4313 - val_auc: 0.6252 - val_f1_score: 0.4172 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 138 0.448555 | 0.441939 | 0.485126 | 0.483941 | 0.675458 | 0.672918 | 0.473531 | 0.471083 | 8 | Simple | 2 | 7 | . 139 0.448673 | 0.441760 | 0.488211 | 0.485578 | 0.678334 | 0.674655 | 0.485613 | 0.482312 | 9 | Simple | 2 | 7 | . 140 0.451428 | 0.444303 | 0.496081 | 0.492145 | 0.685261 | 0.680838 | 0.495120 | 0.490604 | 10 | Simple | 2 | 7 | . 141 0.429937 | 0.423962 | 0.441012 | 0.442914 | 0.630998 | 0.631433 | 0.431248 | 0.431992 | 1 | LSTM | 5 | 7 | . 142 0.433087 | 0.427183 | 0.448152 | 0.449942 | 0.638633 | 0.638949 | 0.434724 | 0.435165 | 2 | LSTM | 5 | 7 | . 142 rows × 12 columns . Train shape: (83399, 3, 7) Test shape: (10292, 3, 7) Train shape: (83399, 3, 7) Test shape: (10292, 3, 7) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 3, 7)] 0 [] input_2 (InputLayer) [(None, 3, 7)] 0 [] lstm (LSTM) (None, 3, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 3, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 300) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 300) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 605) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 303000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 506,743 Trainable params: 506,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 17s 75ms/step - loss: 1.0608 - accuracy: 0.4261 - auc: 0.6102 - f1_score: 0.4068 - val_loss: 1.0508 - val_accuracy: 0.4326 - val_auc: 0.6259 - val_f1_score: 0.3585 Epoch 2/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0471 - accuracy: 0.4365 - auc: 0.6293 - f1_score: 0.3821 - val_loss: 1.0490 - val_accuracy: 0.4397 - val_auc: 0.6284 - val_f1_score: 0.4054 Epoch 3/50 188/188 [==============================] - 13s 71ms/step - loss: 1.0446 - accuracy: 0.4426 - auc: 0.6322 - f1_score: 0.4163 - val_loss: 1.0494 - val_accuracy: 0.4404 - val_auc: 0.6280 - val_f1_score: 0.4242 Epoch 4/50 188/188 [==============================] - 13s 70ms/step - loss: 1.0432 - accuracy: 0.4451 - auc: 0.6345 - f1_score: 0.4271 - val_loss: 1.0481 - val_accuracy: 0.4404 - val_auc: 0.6294 - val_f1_score: 0.4291 Epoch 5/50 188/188 [==============================] - 14s 72ms/step - loss: 1.0425 - accuracy: 0.4450 - auc: 0.6356 - f1_score: 0.4339 - val_loss: 1.0482 - val_accuracy: 0.4390 - val_auc: 0.6295 - val_f1_score: 0.4348 Epoch 6/50 188/188 [==============================] - 13s 71ms/step - loss: 1.0423 - accuracy: 0.4467 - auc: 0.6355 - f1_score: 0.4396 - val_loss: 1.0481 - val_accuracy: 0.4381 - val_auc: 0.6301 - val_f1_score: 0.4307 Epoch 7/50 188/188 [==============================] - 13s 69ms/step - loss: 1.0412 - accuracy: 0.4473 - auc: 0.6368 - f1_score: 0.4389 - val_loss: 1.0481 - val_accuracy: 0.4409 - val_auc: 0.6297 - val_f1_score: 0.4348 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 139 0.448673 | 0.441760 | 0.488211 | 0.485578 | 0.678334 | 0.674655 | 0.485613 | 0.482312 | 9 | Simple | 2 | 7 | . 140 0.451428 | 0.444303 | 0.496081 | 0.492145 | 0.685261 | 0.680838 | 0.495120 | 0.490604 | 10 | Simple | 2 | 7 | . 141 0.429937 | 0.423962 | 0.441012 | 0.442914 | 0.630998 | 0.631433 | 0.431248 | 0.431992 | 1 | LSTM | 5 | 7 | . 142 0.433087 | 0.427183 | 0.448152 | 0.449942 | 0.638633 | 0.638949 | 0.434724 | 0.435165 | 2 | LSTM | 5 | 7 | . 143 0.432942 | 0.427066 | 0.451313 | 0.452872 | 0.640787 | 0.641096 | 0.444817 | 0.445348 | 3 | LSTM | 5 | 7 | . 143 rows × 12 columns . Train shape: (83399, 4, 7) Test shape: (10292, 4, 7) Train shape: (83399, 4, 7) Test shape: (10292, 4, 7) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 4, 7)] 0 [] input_2 (InputLayer) [(None, 4, 7)] 0 [] lstm (LSTM) (None, 4, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 4, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 400) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 400) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 805) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 403000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 606,743 Trainable params: 606,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 23s 104ms/step - loss: 1.0662 - accuracy: 0.4237 - auc: 0.6034 - f1_score: 0.4255 - val_loss: 1.0493 - val_accuracy: 0.4376 - val_auc: 0.6277 - val_f1_score: 0.4289 Epoch 2/50 188/188 [==============================] - 19s 100ms/step - loss: 1.0471 - accuracy: 0.4402 - auc: 0.6299 - f1_score: 0.4310 - val_loss: 1.0468 - val_accuracy: 0.4394 - val_auc: 0.6308 - val_f1_score: 0.4251 Epoch 3/50 188/188 [==============================] - 20s 105ms/step - loss: 1.0434 - accuracy: 0.4439 - auc: 0.6341 - f1_score: 0.4342 - val_loss: 1.0458 - val_accuracy: 0.4410 - val_auc: 0.6321 - val_f1_score: 0.4344 Epoch 4/50 188/188 [==============================] - 19s 103ms/step - loss: 1.0426 - accuracy: 0.4470 - auc: 0.6355 - f1_score: 0.4412 - val_loss: 1.0466 - val_accuracy: 0.4374 - val_auc: 0.6315 - val_f1_score: 0.4276 Epoch 5/50 188/188 [==============================] - 20s 104ms/step - loss: 1.0408 - accuracy: 0.4486 - auc: 0.6375 - f1_score: 0.4408 - val_loss: 1.0456 - val_accuracy: 0.4393 - val_auc: 0.6328 - val_f1_score: 0.4353 Epoch 6/50 188/188 [==============================] - 20s 107ms/step - loss: 1.0398 - accuracy: 0.4486 - auc: 0.6390 - f1_score: 0.4445 - val_loss: 1.0461 - val_accuracy: 0.4421 - val_auc: 0.6327 - val_f1_score: 0.4332 Epoch 7/50 188/188 [==============================] - 20s 105ms/step - loss: 1.0391 - accuracy: 0.4513 - auc: 0.6404 - f1_score: 0.4463 - val_loss: 1.0455 - val_accuracy: 0.4439 - val_auc: 0.6335 - val_f1_score: 0.4362 Epoch 8/50 188/188 [==============================] - 19s 102ms/step - loss: 1.0381 - accuracy: 0.4505 - auc: 0.6416 - f1_score: 0.4452 - val_loss: 1.0456 - val_accuracy: 0.4415 - val_auc: 0.6330 - val_f1_score: 0.4374 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 140 0.451428 | 0.444303 | 0.496081 | 0.492145 | 0.685261 | 0.680838 | 0.495120 | 0.490604 | 10 | Simple | 2 | 7 | . 141 0.429937 | 0.423962 | 0.441012 | 0.442914 | 0.630998 | 0.631433 | 0.431248 | 0.431992 | 1 | LSTM | 5 | 7 | . 142 0.433087 | 0.427183 | 0.448152 | 0.449942 | 0.638633 | 0.638949 | 0.434724 | 0.435165 | 2 | LSTM | 5 | 7 | . 143 0.432942 | 0.427066 | 0.451313 | 0.452872 | 0.640787 | 0.641096 | 0.444817 | 0.445348 | 3 | LSTM | 5 | 7 | . 144 0.434501 | 0.428540 | 0.456709 | 0.457606 | 0.647541 | 0.647354 | 0.452009 | 0.451953 | 4 | LSTM | 5 | 7 | . 144 rows × 12 columns . Train shape: (83399, 5, 7) Test shape: (10292, 5, 7) Train shape: (83399, 5, 7) Test shape: (10292, 5, 7) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 5, 7)] 0 [] input_2 (InputLayer) [(None, 5, 7)] 0 [] lstm (LSTM) (None, 5, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 5, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 500) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 500) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1005) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 503000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 706,743 Trainable params: 706,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 26s 120ms/step - loss: 1.0717 - accuracy: 0.4138 - auc: 0.5901 - f1_score: 0.4188 - val_loss: 1.0557 - val_accuracy: 0.4307 - val_auc: 0.6166 - val_f1_score: 0.3506 Epoch 2/50 188/188 [==============================] - 22s 115ms/step - loss: 1.0499 - accuracy: 0.4418 - auc: 0.6270 - f1_score: 0.4037 - val_loss: 1.0478 - val_accuracy: 0.4397 - val_auc: 0.6283 - val_f1_score: 0.4142 Epoch 3/50 188/188 [==============================] - 22s 116ms/step - loss: 1.0435 - accuracy: 0.4462 - auc: 0.6346 - f1_score: 0.4315 - val_loss: 1.0459 - val_accuracy: 0.4428 - val_auc: 0.6317 - val_f1_score: 0.4333 Epoch 4/50 188/188 [==============================] - 21s 114ms/step - loss: 1.0412 - accuracy: 0.4479 - auc: 0.6374 - f1_score: 0.4407 - val_loss: 1.0457 - val_accuracy: 0.4411 - val_auc: 0.6317 - val_f1_score: 0.4294 Epoch 5/50 188/188 [==============================] - 22s 118ms/step - loss: 1.0398 - accuracy: 0.4490 - auc: 0.6392 - f1_score: 0.4413 - val_loss: 1.0448 - val_accuracy: 0.4430 - val_auc: 0.6332 - val_f1_score: 0.4361 Epoch 6/50 188/188 [==============================] - 22s 120ms/step - loss: 1.0384 - accuracy: 0.4530 - auc: 0.6414 - f1_score: 0.4467 - val_loss: 1.0460 - val_accuracy: 0.4410 - val_auc: 0.6316 - val_f1_score: 0.4331 Epoch 7/50 188/188 [==============================] - 23s 120ms/step - loss: 1.0375 - accuracy: 0.4517 - auc: 0.6420 - f1_score: 0.4459 - val_loss: 1.0458 - val_accuracy: 0.4397 - val_auc: 0.6327 - val_f1_score: 0.4293 Epoch 8/50 188/188 [==============================] - 22s 118ms/step - loss: 1.0363 - accuracy: 0.4533 - auc: 0.6432 - f1_score: 0.4486 - val_loss: 1.0456 - val_accuracy: 0.4406 - val_auc: 0.6322 - val_f1_score: 0.4320 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 141 0.429937 | 0.423962 | 0.441012 | 0.442914 | 0.630998 | 0.631433 | 0.431248 | 0.431992 | 1 | LSTM | 5 | 7 | . 142 0.433087 | 0.427183 | 0.448152 | 0.449942 | 0.638633 | 0.638949 | 0.434724 | 0.435165 | 2 | LSTM | 5 | 7 | . 143 0.432942 | 0.427066 | 0.451313 | 0.452872 | 0.640787 | 0.641096 | 0.444817 | 0.445348 | 3 | LSTM | 5 | 7 | . 144 0.434501 | 0.428540 | 0.456709 | 0.457606 | 0.647541 | 0.647354 | 0.452009 | 0.451953 | 4 | LSTM | 5 | 7 | . 145 0.437018 | 0.431113 | 0.456752 | 0.458253 | 0.648169 | 0.648208 | 0.447489 | 0.447758 | 5 | LSTM | 5 | 7 | . 145 rows × 12 columns . Train shape: (83399, 6, 7) Test shape: (10292, 6, 7) Train shape: (83399, 6, 7) Test shape: (10292, 6, 7) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 6, 7)] 0 [] input_2 (InputLayer) [(None, 6, 7)] 0 [] lstm (LSTM) (None, 6, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 6, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 600) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 600) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1205) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 603000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 806,743 Trainable params: 806,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 32s 148ms/step - loss: 1.0605 - accuracy: 0.4247 - auc: 0.6116 - f1_score: 0.4279 - val_loss: 1.0482 - val_accuracy: 0.4348 - val_auc: 0.6286 - val_f1_score: 0.3885 Epoch 2/50 188/188 [==============================] - 26s 137ms/step - loss: 1.0428 - accuracy: 0.4439 - auc: 0.6350 - f1_score: 0.4188 - val_loss: 1.0458 - val_accuracy: 0.4405 - val_auc: 0.6331 - val_f1_score: 0.4240 Epoch 3/50 188/188 [==============================] - 26s 139ms/step - loss: 1.0412 - accuracy: 0.4487 - auc: 0.6376 - f1_score: 0.4347 - val_loss: 1.0440 - val_accuracy: 0.4450 - val_auc: 0.6350 - val_f1_score: 0.4326 Epoch 4/50 188/188 [==============================] - 26s 140ms/step - loss: 1.0384 - accuracy: 0.4513 - auc: 0.6409 - f1_score: 0.4410 - val_loss: 1.0447 - val_accuracy: 0.4487 - val_auc: 0.6349 - val_f1_score: 0.4387 Epoch 5/50 188/188 [==============================] - 27s 141ms/step - loss: 1.0374 - accuracy: 0.4521 - auc: 0.6424 - f1_score: 0.4431 - val_loss: 1.0452 - val_accuracy: 0.4456 - val_auc: 0.6343 - val_f1_score: 0.4367 Epoch 6/50 188/188 [==============================] - 26s 138ms/step - loss: 1.0358 - accuracy: 0.4527 - auc: 0.6439 - f1_score: 0.4459 - val_loss: 1.0454 - val_accuracy: 0.4453 - val_auc: 0.6347 - val_f1_score: 0.4410 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 142 0.433087 | 0.427183 | 0.448152 | 0.449942 | 0.638633 | 0.638949 | 0.434724 | 0.435165 | 2 | LSTM | 5 | 7 | . 143 0.432942 | 0.427066 | 0.451313 | 0.452872 | 0.640787 | 0.641096 | 0.444817 | 0.445348 | 3 | LSTM | 5 | 7 | . 144 0.434501 | 0.428540 | 0.456709 | 0.457606 | 0.647541 | 0.647354 | 0.452009 | 0.451953 | 4 | LSTM | 5 | 7 | . 145 0.437018 | 0.431113 | 0.456752 | 0.458253 | 0.648169 | 0.648208 | 0.447489 | 0.447758 | 5 | LSTM | 5 | 7 | . 146 0.438215 | 0.432382 | 0.457428 | 0.458841 | 0.649401 | 0.649439 | 0.452412 | 0.452896 | 6 | LSTM | 5 | 7 | . 146 rows × 12 columns . Train shape: (83399, 7, 7) Test shape: (10292, 7, 7) Train shape: (83399, 7, 7) Test shape: (10292, 7, 7) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 7, 7)] 0 [] input_2 (InputLayer) [(None, 7, 7)] 0 [] lstm (LSTM) (None, 7, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 7, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 700) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 700) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1405) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 703000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 906,743 Trainable params: 906,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 37s 163ms/step - loss: 1.0682 - accuracy: 0.4194 - auc: 0.5990 - f1_score: 0.4321 - val_loss: 1.0480 - val_accuracy: 0.4444 - val_auc: 0.6302 - val_f1_score: 0.4407 Epoch 2/50 188/188 [==============================] - 28s 150ms/step - loss: 1.0441 - accuracy: 0.4472 - auc: 0.6347 - f1_score: 0.4427 - val_loss: 1.0456 - val_accuracy: 0.4518 - val_auc: 0.6336 - val_f1_score: 0.4492 Epoch 3/50 188/188 [==============================] - 28s 151ms/step - loss: 1.0407 - accuracy: 0.4494 - auc: 0.6388 - f1_score: 0.4438 - val_loss: 1.0442 - val_accuracy: 0.4484 - val_auc: 0.6350 - val_f1_score: 0.4436 Epoch 4/50 188/188 [==============================] - 34s 182ms/step - loss: 1.0390 - accuracy: 0.4518 - auc: 0.6409 - f1_score: 0.4475 - val_loss: 1.0443 - val_accuracy: 0.4494 - val_auc: 0.6355 - val_f1_score: 0.4431 Epoch 5/50 188/188 [==============================] - 30s 161ms/step - loss: 1.0369 - accuracy: 0.4538 - auc: 0.6431 - f1_score: 0.4489 - val_loss: 1.0439 - val_accuracy: 0.4471 - val_auc: 0.6356 - val_f1_score: 0.4393 Epoch 6/50 188/188 [==============================] - 29s 155ms/step - loss: 1.0357 - accuracy: 0.4558 - auc: 0.6449 - f1_score: 0.4513 - val_loss: 1.0440 - val_accuracy: 0.4466 - val_auc: 0.6356 - val_f1_score: 0.4459 Epoch 7/50 188/188 [==============================] - 29s 152ms/step - loss: 1.0339 - accuracy: 0.4571 - auc: 0.6472 - f1_score: 0.4529 - val_loss: 1.0439 - val_accuracy: 0.4469 - val_auc: 0.6353 - val_f1_score: 0.4428 Epoch 8/50 188/188 [==============================] - 29s 153ms/step - loss: 1.0334 - accuracy: 0.4598 - auc: 0.6486 - f1_score: 0.4566 - val_loss: 1.0441 - val_accuracy: 0.4463 - val_auc: 0.6355 - val_f1_score: 0.4459 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 143 0.432942 | 0.427066 | 0.451313 | 0.452872 | 0.640787 | 0.641096 | 0.444817 | 0.445348 | 3 | LSTM | 5 | 7 | . 144 0.434501 | 0.428540 | 0.456709 | 0.457606 | 0.647541 | 0.647354 | 0.452009 | 0.451953 | 4 | LSTM | 5 | 7 | . 145 0.437018 | 0.431113 | 0.456752 | 0.458253 | 0.648169 | 0.648208 | 0.447489 | 0.447758 | 5 | LSTM | 5 | 7 | . 146 0.438215 | 0.432382 | 0.457428 | 0.458841 | 0.649401 | 0.649439 | 0.452412 | 0.452896 | 6 | LSTM | 5 | 7 | . 147 0.439712 | 0.433618 | 0.468198 | 0.468024 | 0.657026 | 0.655993 | 0.467623 | 0.466876 | 7 | LSTM | 5 | 7 | . 147 rows × 12 columns . Train shape: (83399, 8, 7) Test shape: (10292, 8, 7) Train shape: (83399, 8, 7) Test shape: (10292, 8, 7) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 8, 7)] 0 [] input_2 (InputLayer) [(None, 8, 7)] 0 [] lstm (LSTM) (None, 8, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 8, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 800) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 800) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1605) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 803000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,006,743 Trainable params: 1,006,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 38s 179ms/step - loss: 1.0796 - accuracy: 0.3802 - auc: 0.5817 - f1_score: 0.4272 - val_loss: 1.0632 - val_accuracy: 0.3915 - val_auc: 0.6076 - val_f1_score: 0.3426 Epoch 2/50 188/188 [==============================] - 31s 163ms/step - loss: 1.0519 - accuracy: 0.4272 - auc: 0.6232 - f1_score: 0.4200 - val_loss: 1.0457 - val_accuracy: 0.4384 - val_auc: 0.6326 - val_f1_score: 0.4131 Epoch 3/50 188/188 [==============================] - 32s 168ms/step - loss: 1.0429 - accuracy: 0.4462 - auc: 0.6352 - f1_score: 0.4309 - val_loss: 1.0438 - val_accuracy: 0.4418 - val_auc: 0.6352 - val_f1_score: 0.4325 Epoch 4/50 188/188 [==============================] - 30s 159ms/step - loss: 1.0398 - accuracy: 0.4503 - auc: 0.6394 - f1_score: 0.4404 - val_loss: 1.0438 - val_accuracy: 0.4493 - val_auc: 0.6361 - val_f1_score: 0.4429 Epoch 5/50 188/188 [==============================] - 31s 163ms/step - loss: 1.0384 - accuracy: 0.4503 - auc: 0.6408 - f1_score: 0.4409 - val_loss: 1.0435 - val_accuracy: 0.4447 - val_auc: 0.6354 - val_f1_score: 0.4370 Epoch 6/50 188/188 [==============================] - 32s 170ms/step - loss: 1.0361 - accuracy: 0.4557 - auc: 0.6444 - f1_score: 0.4466 - val_loss: 1.0443 - val_accuracy: 0.4451 - val_auc: 0.6348 - val_f1_score: 0.4428 Epoch 7/50 188/188 [==============================] - 30s 161ms/step - loss: 1.0350 - accuracy: 0.4568 - auc: 0.6462 - f1_score: 0.4500 - val_loss: 1.0427 - val_accuracy: 0.4502 - val_auc: 0.6373 - val_f1_score: 0.4459 Epoch 8/50 188/188 [==============================] - 31s 163ms/step - loss: 1.0339 - accuracy: 0.4577 - auc: 0.6472 - f1_score: 0.4501 - val_loss: 1.0432 - val_accuracy: 0.4454 - val_auc: 0.6359 - val_f1_score: 0.4425 Epoch 9/50 188/188 [==============================] - 31s 167ms/step - loss: 1.0328 - accuracy: 0.4612 - auc: 0.6490 - f1_score: 0.4545 - val_loss: 1.0440 - val_accuracy: 0.4444 - val_auc: 0.6355 - val_f1_score: 0.4416 Epoch 10/50 188/188 [==============================] - 32s 169ms/step - loss: 1.0307 - accuracy: 0.4621 - auc: 0.6512 - f1_score: 0.4552 - val_loss: 1.0437 - val_accuracy: 0.4483 - val_auc: 0.6360 - val_f1_score: 0.4405 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 144 0.434501 | 0.428540 | 0.456709 | 0.457606 | 0.647541 | 0.647354 | 0.452009 | 0.451953 | 4 | LSTM | 5 | 7 | . 145 0.437018 | 0.431113 | 0.456752 | 0.458253 | 0.648169 | 0.648208 | 0.447489 | 0.447758 | 5 | LSTM | 5 | 7 | . 146 0.438215 | 0.432382 | 0.457428 | 0.458841 | 0.649401 | 0.649439 | 0.452412 | 0.452896 | 6 | LSTM | 5 | 7 | . 147 0.439712 | 0.433618 | 0.468198 | 0.468024 | 0.657026 | 0.655993 | 0.467623 | 0.466876 | 7 | LSTM | 5 | 7 | . 148 0.440498 | 0.434461 | 0.468340 | 0.468603 | 0.659218 | 0.658343 | 0.460074 | 0.459289 | 8 | LSTM | 5 | 7 | . 148 rows × 12 columns . Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 9, 7)] 0 [] input_2 (InputLayer) [(None, 9, 7)] 0 [] lstm (LSTM) (None, 9, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 9, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 900) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 900) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1805) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 903000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,106,743 Trainable params: 1,106,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 42s 199ms/step - loss: 1.0758 - accuracy: 0.4044 - auc: 0.5765 - f1_score: 0.4307 - val_loss: 1.0665 - val_accuracy: 0.4418 - val_auc: 0.6055 - val_f1_score: 0.4354 Epoch 2/50 188/188 [==============================] - 37s 197ms/step - loss: 1.0613 - accuracy: 0.4451 - auc: 0.6105 - f1_score: 0.4420 - val_loss: 1.0596 - val_accuracy: 0.4421 - val_auc: 0.6162 - val_f1_score: 0.4421 Epoch 3/50 188/188 [==============================] - 39s 205ms/step - loss: 1.0538 - accuracy: 0.4491 - auc: 0.6247 - f1_score: 0.4505 - val_loss: 1.0538 - val_accuracy: 0.4412 - val_auc: 0.6248 - val_f1_score: 0.4413 Epoch 4/50 188/188 [==============================] - 38s 202ms/step - loss: 1.0465 - accuracy: 0.4496 - auc: 0.6341 - f1_score: 0.4502 - val_loss: 1.0471 - val_accuracy: 0.4446 - val_auc: 0.6323 - val_f1_score: 0.4452 Epoch 5/50 188/188 [==============================] - 43s 226ms/step - loss: 1.0403 - accuracy: 0.4535 - auc: 0.6406 - f1_score: 0.4532 - val_loss: 1.0460 - val_accuracy: 0.4411 - val_auc: 0.6322 - val_f1_score: 0.4389 Epoch 6/50 188/188 [==============================] - 37s 199ms/step - loss: 1.0361 - accuracy: 0.4583 - auc: 0.6451 - f1_score: 0.4574 - val_loss: 1.0451 - val_accuracy: 0.4420 - val_auc: 0.6334 - val_f1_score: 0.4398 Epoch 7/50 188/188 [==============================] - 37s 199ms/step - loss: 1.0341 - accuracy: 0.4586 - auc: 0.6473 - f1_score: 0.4576 - val_loss: 1.0467 - val_accuracy: 0.4363 - val_auc: 0.6303 - val_f1_score: 0.4329 Epoch 8/50 188/188 [==============================] - 39s 208ms/step - loss: 1.0321 - accuracy: 0.4619 - auc: 0.6502 - f1_score: 0.4601 - val_loss: 1.0458 - val_accuracy: 0.4432 - val_auc: 0.6320 - val_f1_score: 0.4430 Epoch 9/50 188/188 [==============================] - 38s 203ms/step - loss: 1.0292 - accuracy: 0.4645 - auc: 0.6534 - f1_score: 0.4634 - val_loss: 1.0462 - val_accuracy: 0.4404 - val_auc: 0.6316 - val_f1_score: 0.4404 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 145 0.437018 | 0.431113 | 0.456752 | 0.458253 | 0.648169 | 0.648208 | 0.447489 | 0.447758 | 5 | LSTM | 5 | 7 | . 146 0.438215 | 0.432382 | 0.457428 | 0.458841 | 0.649401 | 0.649439 | 0.452412 | 0.452896 | 6 | LSTM | 5 | 7 | . 147 0.439712 | 0.433618 | 0.468198 | 0.468024 | 0.657026 | 0.655993 | 0.467623 | 0.466876 | 7 | LSTM | 5 | 7 | . 148 0.440498 | 0.434461 | 0.468340 | 0.468603 | 0.659218 | 0.658343 | 0.460074 | 0.459289 | 8 | LSTM | 5 | 7 | . 149 0.440332 | 0.433895 | 0.476003 | 0.474522 | 0.664681 | 0.662718 | 0.476024 | 0.474121 | 9 | LSTM | 5 | 7 | . 149 rows × 12 columns . Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 7)] 0 [] input_2 (InputLayer) [(None, 10, 7)] 0 [] lstm (LSTM) (None, 10, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 10, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 2005) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1003000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,206,743 Trainable params: 1,206,743 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 46s 219ms/step - loss: 1.0718 - accuracy: 0.4067 - auc: 0.5837 - f1_score: 0.4353 - val_loss: 1.0614 - val_accuracy: 0.4460 - val_auc: 0.6164 - val_f1_score: 0.4269 Epoch 2/50 188/188 [==============================] - 43s 228ms/step - loss: 1.0546 - accuracy: 0.4452 - auc: 0.6221 - f1_score: 0.4371 - val_loss: 1.0510 - val_accuracy: 0.4468 - val_auc: 0.6288 - val_f1_score: 0.4439 Epoch 3/50 188/188 [==============================] - 41s 220ms/step - loss: 1.0454 - accuracy: 0.4484 - auc: 0.6338 - f1_score: 0.4455 - val_loss: 1.0453 - val_accuracy: 0.4457 - val_auc: 0.6337 - val_f1_score: 0.4418 Epoch 4/50 188/188 [==============================] - 40s 215ms/step - loss: 1.0409 - accuracy: 0.4505 - auc: 0.6383 - f1_score: 0.4482 - val_loss: 1.0447 - val_accuracy: 0.4487 - val_auc: 0.6340 - val_f1_score: 0.4462 Epoch 5/50 188/188 [==============================] - 39s 209ms/step - loss: 1.0372 - accuracy: 0.4546 - auc: 0.6427 - f1_score: 0.4527 - val_loss: 1.0437 - val_accuracy: 0.4499 - val_auc: 0.6360 - val_f1_score: 0.4449 Epoch 6/50 188/188 [==============================] - 39s 207ms/step - loss: 1.0355 - accuracy: 0.4577 - auc: 0.6456 - f1_score: 0.4562 - val_loss: 1.0446 - val_accuracy: 0.4463 - val_auc: 0.6349 - val_f1_score: 0.4441 Epoch 7/50 188/188 [==============================] - 39s 206ms/step - loss: 1.0331 - accuracy: 0.4595 - auc: 0.6484 - f1_score: 0.4573 - val_loss: 1.0453 - val_accuracy: 0.4453 - val_auc: 0.6341 - val_f1_score: 0.4415 Epoch 8/50 188/188 [==============================] - 40s 211ms/step - loss: 1.0313 - accuracy: 0.4641 - auc: 0.6509 - f1_score: 0.4624 - val_loss: 1.0441 - val_accuracy: 0.4490 - val_auc: 0.6362 - val_f1_score: 0.4466 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 146 0.438215 | 0.432382 | 0.457428 | 0.458841 | 0.649401 | 0.649439 | 0.452412 | 0.452896 | 6 | LSTM | 5 | 7 | . 147 0.439712 | 0.433618 | 0.468198 | 0.468024 | 0.657026 | 0.655993 | 0.467623 | 0.466876 | 7 | LSTM | 5 | 7 | . 148 0.440498 | 0.434461 | 0.468340 | 0.468603 | 0.659218 | 0.658343 | 0.460074 | 0.459289 | 8 | LSTM | 5 | 7 | . 149 0.440332 | 0.433895 | 0.476003 | 0.474522 | 0.664681 | 0.662718 | 0.476024 | 0.474121 | 9 | LSTM | 5 | 7 | . 150 0.442646 | 0.436500 | 0.472623 | 0.472111 | 0.661681 | 0.660480 | 0.470172 | 0.468912 | 10 | LSTM | 5 | 7 | . 150 rows × 12 columns . Train shape: (83399, 1, 7) Test shape: (10292, 1, 7) Train shape: (83399, 1, 7) Test shape: (10292, 1, 7) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 1, 7)] 0 [] input_2 (InputLayer) [(None, 1, 7)] 0 [] simple_rnn (SimpleRNN) (None, 1, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 1, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 100) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 100) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 205) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 103000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 242,543 Trainable params: 242,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 10s 39ms/step - loss: 1.0696 - accuracy: 0.4108 - auc: 0.5955 - f1_score: 0.4335 - val_loss: 1.0566 - val_accuracy: 0.4287 - val_auc: 0.6168 - val_f1_score: 0.4026 Epoch 2/50 188/188 [==============================] - 6s 33ms/step - loss: 1.0536 - accuracy: 0.4312 - auc: 0.6202 - f1_score: 0.4115 - val_loss: 1.0539 - val_accuracy: 0.4306 - val_auc: 0.6217 - val_f1_score: 0.4213 Epoch 3/50 188/188 [==============================] - 6s 33ms/step - loss: 1.0517 - accuracy: 0.4346 - auc: 0.6227 - f1_score: 0.4228 - val_loss: 1.0547 - val_accuracy: 0.4313 - val_auc: 0.6211 - val_f1_score: 0.4208 Epoch 4/50 188/188 [==============================] - 6s 33ms/step - loss: 1.0503 - accuracy: 0.4361 - auc: 0.6249 - f1_score: 0.4226 - val_loss: 1.0539 - val_accuracy: 0.4321 - val_auc: 0.6224 - val_f1_score: 0.4235 Epoch 5/50 188/188 [==============================] - 7s 35ms/step - loss: 1.0494 - accuracy: 0.4356 - auc: 0.6266 - f1_score: 0.4236 - val_loss: 1.0532 - val_accuracy: 0.4317 - val_auc: 0.6234 - val_f1_score: 0.4218 Epoch 6/50 188/188 [==============================] - 7s 36ms/step - loss: 1.0478 - accuracy: 0.4400 - auc: 0.6286 - f1_score: 0.4304 - val_loss: 1.0538 - val_accuracy: 0.4355 - val_auc: 0.6234 - val_f1_score: 0.4280 Epoch 7/50 188/188 [==============================] - 6s 34ms/step - loss: 1.0482 - accuracy: 0.4393 - auc: 0.6284 - f1_score: 0.4284 - val_loss: 1.0539 - val_accuracy: 0.4341 - val_auc: 0.6232 - val_f1_score: 0.4254 Epoch 8/50 188/188 [==============================] - 6s 34ms/step - loss: 1.0470 - accuracy: 0.4404 - auc: 0.6300 - f1_score: 0.4298 - val_loss: 1.0537 - val_accuracy: 0.4324 - val_auc: 0.6234 - val_f1_score: 0.4238 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 147 0.439712 | 0.433618 | 0.468198 | 0.468024 | 0.657026 | 0.655993 | 0.467623 | 0.466876 | 7 | LSTM | 5 | 7 | . 148 0.440498 | 0.434461 | 0.468340 | 0.468603 | 0.659218 | 0.658343 | 0.460074 | 0.459289 | 8 | LSTM | 5 | 7 | . 149 0.440332 | 0.433895 | 0.476003 | 0.474522 | 0.664681 | 0.662718 | 0.476024 | 0.474121 | 9 | LSTM | 5 | 7 | . 150 0.442646 | 0.436500 | 0.472623 | 0.472111 | 0.661681 | 0.660480 | 0.470172 | 0.468912 | 10 | LSTM | 5 | 7 | . 151 0.429854 | 0.423773 | 0.443846 | 0.445443 | 0.634226 | 0.634307 | 0.434921 | 0.435411 | 1 | Simple | 5 | 7 | . 151 rows × 12 columns . Train shape: (83399, 2, 7) Test shape: (10292, 2, 7) Train shape: (83399, 2, 7) Test shape: (10292, 2, 7) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 2, 7)] 0 [] input_2 (InputLayer) [(None, 2, 7)] 0 [] simple_rnn (SimpleRNN) (None, 2, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 2, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 200) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 200) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 405) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 203000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 342,543 Trainable params: 342,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 13s 46ms/step - loss: 1.0694 - accuracy: 0.4077 - auc: 0.5938 - f1_score: 0.4172 - val_loss: 1.0572 - val_accuracy: 0.4300 - val_auc: 0.6185 - val_f1_score: 0.3866 Epoch 2/50 188/188 [==============================] - 8s 40ms/step - loss: 1.0533 - accuracy: 0.4302 - auc: 0.6197 - f1_score: 0.4062 - val_loss: 1.0551 - val_accuracy: 0.4362 - val_auc: 0.6206 - val_f1_score: 0.4126 Epoch 3/50 188/188 [==============================] - 8s 42ms/step - loss: 1.0497 - accuracy: 0.4386 - auc: 0.6267 - f1_score: 0.4198 - val_loss: 1.0531 - val_accuracy: 0.4331 - val_auc: 0.6229 - val_f1_score: 0.4164 Epoch 4/50 188/188 [==============================] - 10s 52ms/step - loss: 1.0473 - accuracy: 0.4393 - auc: 0.6287 - f1_score: 0.4250 - val_loss: 1.0533 - val_accuracy: 0.4288 - val_auc: 0.6234 - val_f1_score: 0.4141 Epoch 5/50 188/188 [==============================] - 9s 45ms/step - loss: 1.0473 - accuracy: 0.4399 - auc: 0.6289 - f1_score: 0.4287 - val_loss: 1.0526 - val_accuracy: 0.4299 - val_auc: 0.6240 - val_f1_score: 0.4141 Epoch 6/50 188/188 [==============================] - 7s 38ms/step - loss: 1.0453 - accuracy: 0.4420 - auc: 0.6320 - f1_score: 0.4301 - val_loss: 1.0518 - val_accuracy: 0.4330 - val_auc: 0.6248 - val_f1_score: 0.4180 Epoch 7/50 188/188 [==============================] - 7s 38ms/step - loss: 1.0447 - accuracy: 0.4434 - auc: 0.6330 - f1_score: 0.4329 - val_loss: 1.0514 - val_accuracy: 0.4336 - val_auc: 0.6254 - val_f1_score: 0.4221 Epoch 8/50 188/188 [==============================] - 7s 39ms/step - loss: 1.0432 - accuracy: 0.4454 - auc: 0.6349 - f1_score: 0.4359 - val_loss: 1.0519 - val_accuracy: 0.4317 - val_auc: 0.6251 - val_f1_score: 0.4213 Epoch 9/50 188/188 [==============================] - 7s 38ms/step - loss: 1.0426 - accuracy: 0.4455 - auc: 0.6356 - f1_score: 0.4358 - val_loss: 1.0513 - val_accuracy: 0.4303 - val_auc: 0.6256 - val_f1_score: 0.4225 Epoch 10/50 188/188 [==============================] - 7s 40ms/step - loss: 1.0414 - accuracy: 0.4475 - auc: 0.6371 - f1_score: 0.4399 - val_loss: 1.0524 - val_accuracy: 0.4308 - val_auc: 0.6246 - val_f1_score: 0.4217 Epoch 11/50 188/188 [==============================] - 7s 40ms/step - loss: 1.0421 - accuracy: 0.4470 - auc: 0.6368 - f1_score: 0.4392 - val_loss: 1.0515 - val_accuracy: 0.4337 - val_auc: 0.6255 - val_f1_score: 0.4252 Epoch 12/50 188/188 [==============================] - 8s 40ms/step - loss: 1.0416 - accuracy: 0.4462 - auc: 0.6371 - f1_score: 0.4390 - val_loss: 1.0521 - val_accuracy: 0.4329 - val_auc: 0.6253 - val_f1_score: 0.4278 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 148 0.440498 | 0.434461 | 0.468340 | 0.468603 | 0.659218 | 0.658343 | 0.460074 | 0.459289 | 8 | LSTM | 5 | 7 | . 149 0.440332 | 0.433895 | 0.476003 | 0.474522 | 0.664681 | 0.662718 | 0.476024 | 0.474121 | 9 | LSTM | 5 | 7 | . 150 0.442646 | 0.436500 | 0.472623 | 0.472111 | 0.661681 | 0.660480 | 0.470172 | 0.468912 | 10 | LSTM | 5 | 7 | . 151 0.429854 | 0.423773 | 0.443846 | 0.445443 | 0.634226 | 0.634307 | 0.434921 | 0.435411 | 1 | Simple | 5 | 7 | . 152 0.435427 | 0.429323 | 0.453635 | 0.454440 | 0.645088 | 0.644512 | 0.448329 | 0.448198 | 2 | Simple | 5 | 7 | . 152 rows × 12 columns . Train shape: (83399, 3, 7) Test shape: (10292, 3, 7) Train shape: (83399, 3, 7) Test shape: (10292, 3, 7) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 3, 7)] 0 [] input_2 (InputLayer) [(None, 3, 7)] 0 [] simple_rnn (SimpleRNN) (None, 3, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 3, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 300) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 300) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 605) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 303000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 442,543 Trainable params: 442,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 13s 52ms/step - loss: 1.0865 - accuracy: 0.3627 - auc: 0.5468 - f1_score: 0.4002 - val_loss: 1.0732 - val_accuracy: 0.4266 - val_auc: 0.6010 - val_f1_score: 0.4132 Epoch 2/50 188/188 [==============================] - 9s 48ms/step - loss: 1.0715 - accuracy: 0.4198 - auc: 0.5964 - f1_score: 0.4145 - val_loss: 1.0649 - val_accuracy: 0.4296 - val_auc: 0.6145 - val_f1_score: 0.4245 Epoch 3/50 188/188 [==============================] - 9s 49ms/step - loss: 1.0604 - accuracy: 0.4286 - auc: 0.6148 - f1_score: 0.4217 - val_loss: 1.0548 - val_accuracy: 0.4295 - val_auc: 0.6219 - val_f1_score: 0.4108 Epoch 4/50 188/188 [==============================] - 10s 52ms/step - loss: 1.0506 - accuracy: 0.4377 - auc: 0.6253 - f1_score: 0.4307 - val_loss: 1.0504 - val_accuracy: 0.4345 - val_auc: 0.6271 - val_f1_score: 0.4237 Epoch 5/50 188/188 [==============================] - 10s 54ms/step - loss: 1.0474 - accuracy: 0.4423 - auc: 0.6297 - f1_score: 0.4350 - val_loss: 1.0501 - val_accuracy: 0.4357 - val_auc: 0.6269 - val_f1_score: 0.4233 Epoch 6/50 188/188 [==============================] - 9s 47ms/step - loss: 1.0445 - accuracy: 0.4428 - auc: 0.6329 - f1_score: 0.4341 - val_loss: 1.0493 - val_accuracy: 0.4359 - val_auc: 0.6276 - val_f1_score: 0.4220 Epoch 7/50 188/188 [==============================] - 9s 50ms/step - loss: 1.0423 - accuracy: 0.4472 - auc: 0.6357 - f1_score: 0.4414 - val_loss: 1.0496 - val_accuracy: 0.4356 - val_auc: 0.6274 - val_f1_score: 0.4264 Epoch 8/50 188/188 [==============================] - 10s 51ms/step - loss: 1.0411 - accuracy: 0.4485 - auc: 0.6382 - f1_score: 0.4426 - val_loss: 1.0472 - val_accuracy: 0.4405 - val_auc: 0.6309 - val_f1_score: 0.4349 Epoch 9/50 188/188 [==============================] - 9s 48ms/step - loss: 1.0400 - accuracy: 0.4496 - auc: 0.6394 - f1_score: 0.4453 - val_loss: 1.0477 - val_accuracy: 0.4402 - val_auc: 0.6300 - val_f1_score: 0.4300 Epoch 10/50 188/188 [==============================] - 9s 48ms/step - loss: 1.0387 - accuracy: 0.4507 - auc: 0.6409 - f1_score: 0.4456 - val_loss: 1.0484 - val_accuracy: 0.4406 - val_auc: 0.6299 - val_f1_score: 0.4314 Epoch 11/50 188/188 [==============================] - 9s 48ms/step - loss: 1.0385 - accuracy: 0.4526 - auc: 0.6422 - f1_score: 0.4483 - val_loss: 1.0487 - val_accuracy: 0.4372 - val_auc: 0.6290 - val_f1_score: 0.4276 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 149 0.440332 | 0.433895 | 0.476003 | 0.474522 | 0.664681 | 0.662718 | 0.476024 | 0.474121 | 9 | LSTM | 5 | 7 | . 150 0.442646 | 0.436500 | 0.472623 | 0.472111 | 0.661681 | 0.660480 | 0.470172 | 0.468912 | 10 | LSTM | 5 | 7 | . 151 0.429854 | 0.423773 | 0.443846 | 0.445443 | 0.634226 | 0.634307 | 0.434921 | 0.435411 | 1 | Simple | 5 | 7 | . 152 0.435427 | 0.429323 | 0.453635 | 0.454440 | 0.645088 | 0.644512 | 0.448329 | 0.448198 | 2 | Simple | 5 | 7 | . 153 0.437211 | 0.431107 | 0.458780 | 0.459331 | 0.651374 | 0.650569 | 0.448817 | 0.448099 | 3 | Simple | 5 | 7 | . 153 rows × 12 columns . Train shape: (83399, 4, 7) Test shape: (10292, 4, 7) Train shape: (83399, 4, 7) Test shape: (10292, 4, 7) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 4, 7)] 0 [] input_2 (InputLayer) [(None, 4, 7)] 0 [] simple_rnn (SimpleRNN) (None, 4, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 4, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 400) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 400) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 805) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 403000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 542,543 Trainable params: 542,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 14s 63ms/step - loss: 1.0745 - accuracy: 0.4040 - auc: 0.5860 - f1_score: 0.4275 - val_loss: 1.0575 - val_accuracy: 0.4321 - val_auc: 0.6160 - val_f1_score: 0.4169 Epoch 2/50 188/188 [==============================] - 11s 58ms/step - loss: 1.0535 - accuracy: 0.4337 - auc: 0.6203 - f1_score: 0.4255 - val_loss: 1.0516 - val_accuracy: 0.4347 - val_auc: 0.6246 - val_f1_score: 0.4214 Epoch 3/50 188/188 [==============================] - 11s 58ms/step - loss: 1.0485 - accuracy: 0.4382 - auc: 0.6276 - f1_score: 0.4313 - val_loss: 1.0497 - val_accuracy: 0.4398 - val_auc: 0.6264 - val_f1_score: 0.4347 Epoch 4/50 188/188 [==============================] - 12s 63ms/step - loss: 1.0442 - accuracy: 0.4435 - auc: 0.6325 - f1_score: 0.4378 - val_loss: 1.0480 - val_accuracy: 0.4378 - val_auc: 0.6290 - val_f1_score: 0.4300 Epoch 5/50 188/188 [==============================] - 11s 59ms/step - loss: 1.0418 - accuracy: 0.4462 - auc: 0.6362 - f1_score: 0.4404 - val_loss: 1.0475 - val_accuracy: 0.4386 - val_auc: 0.6296 - val_f1_score: 0.4352 Epoch 6/50 188/188 [==============================] - 11s 58ms/step - loss: 1.0400 - accuracy: 0.4497 - auc: 0.6388 - f1_score: 0.4458 - val_loss: 1.0494 - val_accuracy: 0.4379 - val_auc: 0.6279 - val_f1_score: 0.4325 Epoch 7/50 188/188 [==============================] - 12s 63ms/step - loss: 1.0389 - accuracy: 0.4523 - auc: 0.6407 - f1_score: 0.4487 - val_loss: 1.0473 - val_accuracy: 0.4399 - val_auc: 0.6299 - val_f1_score: 0.4359 Epoch 8/50 188/188 [==============================] - 12s 66ms/step - loss: 1.0374 - accuracy: 0.4517 - auc: 0.6418 - f1_score: 0.4477 - val_loss: 1.0484 - val_accuracy: 0.4391 - val_auc: 0.6287 - val_f1_score: 0.4342 Epoch 9/50 188/188 [==============================] - 11s 60ms/step - loss: 1.0356 - accuracy: 0.4548 - auc: 0.6440 - f1_score: 0.4509 - val_loss: 1.0484 - val_accuracy: 0.4423 - val_auc: 0.6289 - val_f1_score: 0.4400 Epoch 10/50 188/188 [==============================] - 11s 58ms/step - loss: 1.0338 - accuracy: 0.4566 - auc: 0.6469 - f1_score: 0.4530 - val_loss: 1.0490 - val_accuracy: 0.4356 - val_auc: 0.6282 - val_f1_score: 0.4314 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 150 0.442646 | 0.436500 | 0.472623 | 0.472111 | 0.661681 | 0.660480 | 0.470172 | 0.468912 | 10 | LSTM | 5 | 7 | . 151 0.429854 | 0.423773 | 0.443846 | 0.445443 | 0.634226 | 0.634307 | 0.434921 | 0.435411 | 1 | Simple | 5 | 7 | . 152 0.435427 | 0.429323 | 0.453635 | 0.454440 | 0.645088 | 0.644512 | 0.448329 | 0.448198 | 2 | Simple | 5 | 7 | . 153 0.437211 | 0.431107 | 0.458780 | 0.459331 | 0.651374 | 0.650569 | 0.448817 | 0.448099 | 3 | Simple | 5 | 7 | . 154 0.440201 | 0.433845 | 0.467282 | 0.466662 | 0.658935 | 0.657230 | 0.463241 | 0.461745 | 4 | Simple | 5 | 7 | . 154 rows × 12 columns . Train shape: (83399, 5, 7) Test shape: (10292, 5, 7) Train shape: (83399, 5, 7) Test shape: (10292, 5, 7) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 5, 7)] 0 [] input_2 (InputLayer) [(None, 5, 7)] 0 [] simple_rnn (SimpleRNN) (None, 5, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 5, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 500) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 500) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1005) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 503000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 642,543 Trainable params: 642,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 16s 70ms/step - loss: 1.0724 - accuracy: 0.4097 - auc: 0.5895 - f1_score: 0.4351 - val_loss: 1.0573 - val_accuracy: 0.4233 - val_auc: 0.6162 - val_f1_score: 0.4190 Epoch 2/50 188/188 [==============================] - 12s 66ms/step - loss: 1.0523 - accuracy: 0.4377 - auc: 0.6229 - f1_score: 0.4357 - val_loss: 1.0509 - val_accuracy: 0.4329 - val_auc: 0.6231 - val_f1_score: 0.4308 Epoch 3/50 188/188 [==============================] - 13s 68ms/step - loss: 1.0452 - accuracy: 0.4466 - auc: 0.6329 - f1_score: 0.4435 - val_loss: 1.0491 - val_accuracy: 0.4381 - val_auc: 0.6262 - val_f1_score: 0.4386 Epoch 4/50 188/188 [==============================] - 13s 67ms/step - loss: 1.0415 - accuracy: 0.4511 - auc: 0.6376 - f1_score: 0.4491 - val_loss: 1.0492 - val_accuracy: 0.4325 - val_auc: 0.6260 - val_f1_score: 0.4301 Epoch 5/50 188/188 [==============================] - 14s 73ms/step - loss: 1.0400 - accuracy: 0.4521 - auc: 0.6393 - f1_score: 0.4499 - val_loss: 1.0482 - val_accuracy: 0.4360 - val_auc: 0.6264 - val_f1_score: 0.4323 Epoch 6/50 188/188 [==============================] - 13s 67ms/step - loss: 1.0382 - accuracy: 0.4539 - auc: 0.6422 - f1_score: 0.4512 - val_loss: 1.0472 - val_accuracy: 0.4376 - val_auc: 0.6294 - val_f1_score: 0.4356 Epoch 7/50 188/188 [==============================] - 12s 65ms/step - loss: 1.0351 - accuracy: 0.4589 - auc: 0.6461 - f1_score: 0.4552 - val_loss: 1.0476 - val_accuracy: 0.4363 - val_auc: 0.6284 - val_f1_score: 0.4350 Epoch 8/50 188/188 [==============================] - 12s 65ms/step - loss: 1.0341 - accuracy: 0.4604 - auc: 0.6472 - f1_score: 0.4575 - val_loss: 1.0481 - val_accuracy: 0.4394 - val_auc: 0.6285 - val_f1_score: 0.4379 Epoch 9/50 188/188 [==============================] - 12s 66ms/step - loss: 1.0324 - accuracy: 0.4626 - auc: 0.6495 - f1_score: 0.4602 - val_loss: 1.0476 - val_accuracy: 0.4385 - val_auc: 0.6292 - val_f1_score: 0.4349 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 151 0.429854 | 0.423773 | 0.443846 | 0.445443 | 0.634226 | 0.634307 | 0.434921 | 0.435411 | 1 | Simple | 5 | 7 | . 152 0.435427 | 0.429323 | 0.453635 | 0.454440 | 0.645088 | 0.644512 | 0.448329 | 0.448198 | 2 | Simple | 5 | 7 | . 153 0.437211 | 0.431107 | 0.458780 | 0.459331 | 0.651374 | 0.650569 | 0.448817 | 0.448099 | 3 | Simple | 5 | 7 | . 154 0.440201 | 0.433845 | 0.467282 | 0.466662 | 0.658935 | 0.657230 | 0.463241 | 0.461745 | 4 | Simple | 5 | 7 | . 155 0.440875 | 0.434492 | 0.475349 | 0.474356 | 0.662395 | 0.660562 | 0.471777 | 0.469987 | 5 | Simple | 5 | 7 | . 155 rows × 12 columns . Train shape: (83399, 6, 7) Test shape: (10292, 6, 7) Train shape: (83399, 6, 7) Test shape: (10292, 6, 7) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 6, 7)] 0 [] input_2 (InputLayer) [(None, 6, 7)] 0 [] simple_rnn (SimpleRNN) (None, 6, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 6, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 600) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 600) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1205) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 603000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 742,543 Trainable params: 742,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 17s 76ms/step - loss: 1.0715 - accuracy: 0.4063 - auc: 0.5898 - f1_score: 0.4380 - val_loss: 1.0565 - val_accuracy: 0.4289 - val_auc: 0.6176 - val_f1_score: 0.4209 Epoch 2/50 188/188 [==============================] - 13s 71ms/step - loss: 1.0521 - accuracy: 0.4348 - auc: 0.6219 - f1_score: 0.4275 - val_loss: 1.0516 - val_accuracy: 0.4361 - val_auc: 0.6237 - val_f1_score: 0.4332 Epoch 3/50 188/188 [==============================] - 13s 70ms/step - loss: 1.0457 - accuracy: 0.4414 - auc: 0.6313 - f1_score: 0.4364 - val_loss: 1.0496 - val_accuracy: 0.4394 - val_auc: 0.6264 - val_f1_score: 0.4273 Epoch 4/50 188/188 [==============================] - 13s 71ms/step - loss: 1.0427 - accuracy: 0.4458 - auc: 0.6348 - f1_score: 0.4401 - val_loss: 1.0490 - val_accuracy: 0.4408 - val_auc: 0.6278 - val_f1_score: 0.4349 Epoch 5/50 188/188 [==============================] - 14s 74ms/step - loss: 1.0393 - accuracy: 0.4498 - auc: 0.6391 - f1_score: 0.4453 - val_loss: 1.0481 - val_accuracy: 0.4390 - val_auc: 0.6289 - val_f1_score: 0.4365 Epoch 6/50 188/188 [==============================] - 13s 71ms/step - loss: 1.0372 - accuracy: 0.4524 - auc: 0.6423 - f1_score: 0.4479 - val_loss: 1.0471 - val_accuracy: 0.4447 - val_auc: 0.6314 - val_f1_score: 0.4398 Epoch 7/50 188/188 [==============================] - 14s 72ms/step - loss: 1.0350 - accuracy: 0.4544 - auc: 0.6450 - f1_score: 0.4506 - val_loss: 1.0472 - val_accuracy: 0.4387 - val_auc: 0.6303 - val_f1_score: 0.4351 Epoch 8/50 188/188 [==============================] - 13s 70ms/step - loss: 1.0327 - accuracy: 0.4591 - auc: 0.6483 - f1_score: 0.4569 - val_loss: 1.0476 - val_accuracy: 0.4379 - val_auc: 0.6303 - val_f1_score: 0.4361 Epoch 9/50 188/188 [==============================] - 13s 70ms/step - loss: 1.0308 - accuracy: 0.4585 - auc: 0.6504 - f1_score: 0.4553 - val_loss: 1.0478 - val_accuracy: 0.4468 - val_auc: 0.6308 - val_f1_score: 0.4435 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 152 0.435427 | 0.429323 | 0.453635 | 0.454440 | 0.645088 | 0.644512 | 0.448329 | 0.448198 | 2 | Simple | 5 | 7 | . 153 0.437211 | 0.431107 | 0.458780 | 0.459331 | 0.651374 | 0.650569 | 0.448817 | 0.448099 | 3 | Simple | 5 | 7 | . 154 0.440201 | 0.433845 | 0.467282 | 0.466662 | 0.658935 | 0.657230 | 0.463241 | 0.461745 | 4 | Simple | 5 | 7 | . 155 0.440875 | 0.434492 | 0.475349 | 0.474356 | 0.662395 | 0.660562 | 0.471777 | 0.469987 | 5 | Simple | 5 | 7 | . 156 0.442461 | 0.435934 | 0.478564 | 0.476610 | 0.667523 | 0.664923 | 0.475283 | 0.472490 | 6 | Simple | 5 | 7 | . 156 rows × 12 columns . Train shape: (83399, 7, 7) Test shape: (10292, 7, 7) Train shape: (83399, 7, 7) Test shape: (10292, 7, 7) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 7, 7)] 0 [] input_2 (InputLayer) [(None, 7, 7)] 0 [] simple_rnn (SimpleRNN) (None, 7, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 7, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 700) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 700) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1405) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 703000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 842,543 Trainable params: 842,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 20s 90ms/step - loss: 1.0770 - accuracy: 0.4060 - auc: 0.5822 - f1_score: 0.4430 - val_loss: 1.0588 - val_accuracy: 0.4307 - val_auc: 0.6150 - val_f1_score: 0.4268 Epoch 2/50 188/188 [==============================] - 16s 86ms/step - loss: 1.0525 - accuracy: 0.4350 - auc: 0.6226 - f1_score: 0.4308 - val_loss: 1.0531 - val_accuracy: 0.4329 - val_auc: 0.6224 - val_f1_score: 0.4285 Epoch 3/50 188/188 [==============================] - 16s 84ms/step - loss: 1.0461 - accuracy: 0.4411 - auc: 0.6306 - f1_score: 0.4368 - val_loss: 1.0509 - val_accuracy: 0.4347 - val_auc: 0.6257 - val_f1_score: 0.4285 Epoch 4/50 188/188 [==============================] - 16s 86ms/step - loss: 1.0419 - accuracy: 0.4493 - auc: 0.6369 - f1_score: 0.4456 - val_loss: 1.0483 - val_accuracy: 0.4436 - val_auc: 0.6290 - val_f1_score: 0.4431 Epoch 5/50 188/188 [==============================] - 16s 87ms/step - loss: 1.0386 - accuracy: 0.4516 - auc: 0.6408 - f1_score: 0.4480 - val_loss: 1.0490 - val_accuracy: 0.4378 - val_auc: 0.6282 - val_f1_score: 0.4318 Epoch 6/50 188/188 [==============================] - 16s 88ms/step - loss: 1.0361 - accuracy: 0.4558 - auc: 0.6443 - f1_score: 0.4521 - val_loss: 1.0479 - val_accuracy: 0.4326 - val_auc: 0.6275 - val_f1_score: 0.4253 Epoch 7/50 188/188 [==============================] - 16s 87ms/step - loss: 1.0329 - accuracy: 0.4583 - auc: 0.6482 - f1_score: 0.4545 - val_loss: 1.0477 - val_accuracy: 0.4392 - val_auc: 0.6293 - val_f1_score: 0.4341 Epoch 8/50 188/188 [==============================] - 16s 87ms/step - loss: 1.0310 - accuracy: 0.4634 - auc: 0.6512 - f1_score: 0.4605 - val_loss: 1.0477 - val_accuracy: 0.4438 - val_auc: 0.6306 - val_f1_score: 0.4374 Epoch 9/50 188/188 [==============================] - 17s 88ms/step - loss: 1.0283 - accuracy: 0.4644 - auc: 0.6540 - f1_score: 0.4605 - val_loss: 1.0469 - val_accuracy: 0.4349 - val_auc: 0.6306 - val_f1_score: 0.4332 Epoch 10/50 188/188 [==============================] - 17s 88ms/step - loss: 1.0263 - accuracy: 0.4666 - auc: 0.6561 - f1_score: 0.4633 - val_loss: 1.0487 - val_accuracy: 0.4397 - val_auc: 0.6300 - val_f1_score: 0.4343 Epoch 11/50 188/188 [==============================] - 16s 86ms/step - loss: 1.0231 - accuracy: 0.4723 - auc: 0.6603 - f1_score: 0.4693 - val_loss: 1.0476 - val_accuracy: 0.4382 - val_auc: 0.6301 - val_f1_score: 0.4372 Epoch 12/50 188/188 [==============================] - 16s 87ms/step - loss: 1.0202 - accuracy: 0.4737 - auc: 0.6633 - f1_score: 0.4711 - val_loss: 1.0488 - val_accuracy: 0.4423 - val_auc: 0.6316 - val_f1_score: 0.4392 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 153 0.437211 | 0.431107 | 0.458780 | 0.459331 | 0.651374 | 0.650569 | 0.448817 | 0.448099 | 3 | Simple | 5 | 7 | . 154 0.440201 | 0.433845 | 0.467282 | 0.466662 | 0.658935 | 0.657230 | 0.463241 | 0.461745 | 4 | Simple | 5 | 7 | . 155 0.440875 | 0.434492 | 0.475349 | 0.474356 | 0.662395 | 0.660562 | 0.471777 | 0.469987 | 5 | Simple | 5 | 7 | . 156 0.442461 | 0.435934 | 0.478564 | 0.476610 | 0.667523 | 0.664923 | 0.475283 | 0.472490 | 6 | Simple | 5 | 7 | . 157 0.451254 | 0.444210 | 0.496801 | 0.493232 | 0.683401 | 0.679221 | 0.494250 | 0.490033 | 7 | Simple | 5 | 7 | . 157 rows × 12 columns . Train shape: (83399, 8, 7) Test shape: (10292, 8, 7) Train shape: (83399, 8, 7) Test shape: (10292, 8, 7) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 8, 7)] 0 [] input_2 (InputLayer) [(None, 8, 7)] 0 [] simple_rnn (SimpleRNN) (None, 8, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 8, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 800) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 800) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1605) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 803000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 942,543 Trainable params: 942,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 21s 99ms/step - loss: 1.0682 - accuracy: 0.4142 - auc: 0.5974 - f1_score: 0.4515 - val_loss: 1.0564 - val_accuracy: 0.4258 - val_auc: 0.6149 - val_f1_score: 0.4048 Epoch 2/50 188/188 [==============================] - 18s 95ms/step - loss: 1.0489 - accuracy: 0.4375 - auc: 0.6261 - f1_score: 0.4225 - val_loss: 1.0517 - val_accuracy: 0.4387 - val_auc: 0.6243 - val_f1_score: 0.4270 Epoch 3/50 188/188 [==============================] - 17s 91ms/step - loss: 1.0432 - accuracy: 0.4442 - auc: 0.6341 - f1_score: 0.4354 - val_loss: 1.0500 - val_accuracy: 0.4398 - val_auc: 0.6273 - val_f1_score: 0.4305 Epoch 4/50 188/188 [==============================] - 17s 89ms/step - loss: 1.0386 - accuracy: 0.4503 - auc: 0.6401 - f1_score: 0.4421 - val_loss: 1.0482 - val_accuracy: 0.4438 - val_auc: 0.6299 - val_f1_score: 0.4405 Epoch 5/50 188/188 [==============================] - 18s 94ms/step - loss: 1.0353 - accuracy: 0.4536 - auc: 0.6449 - f1_score: 0.4483 - val_loss: 1.0473 - val_accuracy: 0.4436 - val_auc: 0.6301 - val_f1_score: 0.4416 Epoch 6/50 188/188 [==============================] - 17s 92ms/step - loss: 1.0323 - accuracy: 0.4579 - auc: 0.6481 - f1_score: 0.4527 - val_loss: 1.0484 - val_accuracy: 0.4426 - val_auc: 0.6283 - val_f1_score: 0.4380 Epoch 7/50 188/188 [==============================] - 17s 91ms/step - loss: 1.0305 - accuracy: 0.4597 - auc: 0.6511 - f1_score: 0.4549 - val_loss: 1.0489 - val_accuracy: 0.4454 - val_auc: 0.6300 - val_f1_score: 0.4409 Epoch 8/50 188/188 [==============================] - 17s 92ms/step - loss: 1.0280 - accuracy: 0.4640 - auc: 0.6540 - f1_score: 0.4594 - val_loss: 1.0493 - val_accuracy: 0.4435 - val_auc: 0.6301 - val_f1_score: 0.4425 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 154 0.440201 | 0.433845 | 0.467282 | 0.466662 | 0.658935 | 0.657230 | 0.463241 | 0.461745 | 4 | Simple | 5 | 7 | . 155 0.440875 | 0.434492 | 0.475349 | 0.474356 | 0.662395 | 0.660562 | 0.471777 | 0.469987 | 5 | Simple | 5 | 7 | . 156 0.442461 | 0.435934 | 0.478564 | 0.476610 | 0.667523 | 0.664923 | 0.475283 | 0.472490 | 6 | Simple | 5 | 7 | . 157 0.451254 | 0.444210 | 0.496801 | 0.493232 | 0.683401 | 0.679221 | 0.494250 | 0.490033 | 7 | Simple | 5 | 7 | . 158 0.445663 | 0.439072 | 0.478128 | 0.476257 | 0.670942 | 0.668244 | 0.476659 | 0.474131 | 8 | Simple | 5 | 7 | . 158 rows × 12 columns . Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 9, 7)] 0 [] input_2 (InputLayer) [(None, 9, 7)] 0 [] simple_rnn (SimpleRNN) (None, 9, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 9, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 900) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 900) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 1805) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 903000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,042,543 Trainable params: 1,042,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 22s 100ms/step - loss: 1.0718 - accuracy: 0.4035 - auc: 0.5892 - f1_score: 0.4423 - val_loss: 1.0575 - val_accuracy: 0.4294 - val_auc: 0.6151 - val_f1_score: 0.4082 Epoch 2/50 188/188 [==============================] - 19s 99ms/step - loss: 1.0508 - accuracy: 0.4354 - auc: 0.6238 - f1_score: 0.4294 - val_loss: 1.0526 - val_accuracy: 0.4384 - val_auc: 0.6245 - val_f1_score: 0.4177 Epoch 3/50 188/188 [==============================] - 19s 103ms/step - loss: 1.0452 - accuracy: 0.4433 - auc: 0.6318 - f1_score: 0.4386 - val_loss: 1.0493 - val_accuracy: 0.4414 - val_auc: 0.6276 - val_f1_score: 0.4359 Epoch 4/50 188/188 [==============================] - 20s 108ms/step - loss: 1.0408 - accuracy: 0.4476 - auc: 0.6367 - f1_score: 0.4436 - val_loss: 1.0482 - val_accuracy: 0.4385 - val_auc: 0.6295 - val_f1_score: 0.4349 Epoch 5/50 188/188 [==============================] - 19s 103ms/step - loss: 1.0372 - accuracy: 0.4540 - auc: 0.6431 - f1_score: 0.4504 - val_loss: 1.0470 - val_accuracy: 0.4465 - val_auc: 0.6310 - val_f1_score: 0.4395 Epoch 6/50 188/188 [==============================] - 18s 98ms/step - loss: 1.0337 - accuracy: 0.4544 - auc: 0.6464 - f1_score: 0.4498 - val_loss: 1.0474 - val_accuracy: 0.4447 - val_auc: 0.6308 - val_f1_score: 0.4360 Epoch 7/50 188/188 [==============================] - 19s 104ms/step - loss: 1.0306 - accuracy: 0.4626 - auc: 0.6509 - f1_score: 0.4596 - val_loss: 1.0479 - val_accuracy: 0.4376 - val_auc: 0.6297 - val_f1_score: 0.4349 Epoch 8/50 188/188 [==============================] - 19s 102ms/step - loss: 1.0276 - accuracy: 0.4639 - auc: 0.6543 - f1_score: 0.4604 - val_loss: 1.0498 - val_accuracy: 0.4385 - val_auc: 0.6287 - val_f1_score: 0.4330 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 155 0.440875 | 0.434492 | 0.475349 | 0.474356 | 0.662395 | 0.660562 | 0.471777 | 0.469987 | 5 | Simple | 5 | 7 | . 156 0.442461 | 0.435934 | 0.478564 | 0.476610 | 0.667523 | 0.664923 | 0.475283 | 0.472490 | 6 | Simple | 5 | 7 | . 157 0.451254 | 0.444210 | 0.496801 | 0.493232 | 0.683401 | 0.679221 | 0.494250 | 0.490033 | 7 | Simple | 5 | 7 | . 158 0.445663 | 0.439072 | 0.478128 | 0.476257 | 0.670942 | 0.668244 | 0.476659 | 0.474131 | 8 | Simple | 5 | 7 | . 159 0.445754 | 0.439133 | 0.479687 | 0.478423 | 0.671539 | 0.668756 | 0.474430 | 0.472257 | 9 | Simple | 5 | 7 | . 159 rows × 12 columns . Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 5) Test shape: (10292, 5) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 7)] 0 [] input_2 (InputLayer) [(None, 10, 7)] 0 [] simple_rnn (SimpleRNN) (None, 10, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 10, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 5)] 0 [] concatenate (Concatenate) (None, 2005) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1003000 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,142,543 Trainable params: 1,142,543 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 25s 116ms/step - loss: 1.0665 - accuracy: 0.4183 - auc: 0.5998 - f1_score: 0.4425 - val_loss: 1.0561 - val_accuracy: 0.4294 - val_auc: 0.6166 - val_f1_score: 0.4164 Epoch 2/50 188/188 [==============================] - 21s 112ms/step - loss: 1.0477 - accuracy: 0.4387 - auc: 0.6284 - f1_score: 0.4277 - val_loss: 1.0529 - val_accuracy: 0.4354 - val_auc: 0.6230 - val_f1_score: 0.4245 Epoch 3/50 188/188 [==============================] - 21s 111ms/step - loss: 1.0429 - accuracy: 0.4437 - auc: 0.6341 - f1_score: 0.4352 - val_loss: 1.0507 - val_accuracy: 0.4344 - val_auc: 0.6254 - val_f1_score: 0.4267 Epoch 4/50 188/188 [==============================] - 21s 111ms/step - loss: 1.0384 - accuracy: 0.4528 - auc: 0.6411 - f1_score: 0.4455 - val_loss: 1.0492 - val_accuracy: 0.4433 - val_auc: 0.6279 - val_f1_score: 0.4382 Epoch 5/50 188/188 [==============================] - 21s 113ms/step - loss: 1.0345 - accuracy: 0.4551 - auc: 0.6455 - f1_score: 0.4498 - val_loss: 1.0493 - val_accuracy: 0.4416 - val_auc: 0.6285 - val_f1_score: 0.4380 Epoch 6/50 188/188 [==============================] - 21s 112ms/step - loss: 1.0297 - accuracy: 0.4609 - auc: 0.6519 - f1_score: 0.4560 - val_loss: 1.0506 - val_accuracy: 0.4378 - val_auc: 0.6273 - val_f1_score: 0.4275 Epoch 7/50 188/188 [==============================] - 22s 119ms/step - loss: 1.0261 - accuracy: 0.4652 - auc: 0.6558 - f1_score: 0.4596 - val_loss: 1.0525 - val_accuracy: 0.4409 - val_auc: 0.6271 - val_f1_score: 0.4379 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 156 0.442461 | 0.435934 | 0.478564 | 0.476610 | 0.667523 | 0.664923 | 0.475283 | 0.472490 | 6 | Simple | 5 | 7 | . 157 0.451254 | 0.444210 | 0.496801 | 0.493232 | 0.683401 | 0.679221 | 0.494250 | 0.490033 | 7 | Simple | 5 | 7 | . 158 0.445663 | 0.439072 | 0.478128 | 0.476257 | 0.670942 | 0.668244 | 0.476659 | 0.474131 | 8 | Simple | 5 | 7 | . 159 0.445754 | 0.439133 | 0.479687 | 0.478423 | 0.671539 | 0.668756 | 0.474430 | 0.472257 | 9 | Simple | 5 | 7 | . 160 0.447580 | 0.440781 | 0.482924 | 0.480628 | 0.673020 | 0.669882 | 0.479771 | 0.476747 | 10 | Simple | 5 | 7 | . 160 rows × 12 columns . Train shape: (83399, 1, 7) Test shape: (10292, 1, 7) Train shape: (83399, 1, 7) Test shape: (10292, 1, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 1, 7)] 0 [] input_2 (InputLayer) [(None, 1, 7)] 0 [] lstm (LSTM) (None, 1, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 1, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 100) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 100) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 208) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 104500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 308,243 Trainable params: 308,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 10s 41ms/step - loss: 1.0815 - accuracy: 0.3735 - auc: 0.5607 - f1_score: 0.4216 - val_loss: 1.0754 - val_accuracy: 0.4255 - val_auc: 0.5937 - val_f1_score: 0.4141 Epoch 2/50 188/188 [==============================] - 7s 37ms/step - loss: 1.0718 - accuracy: 0.4268 - auc: 0.5962 - f1_score: 0.4176 - val_loss: 1.0729 - val_accuracy: 0.4297 - val_auc: 0.6002 - val_f1_score: 0.4251 Epoch 3/50 188/188 [==============================] - 7s 36ms/step - loss: 1.0679 - accuracy: 0.4361 - auc: 0.6061 - f1_score: 0.4273 - val_loss: 1.0688 - val_accuracy: 0.4257 - val_auc: 0.6065 - val_f1_score: 0.4088 Epoch 4/50 188/188 [==============================] - 7s 37ms/step - loss: 1.0601 - accuracy: 0.4364 - auc: 0.6170 - f1_score: 0.4240 - val_loss: 1.0590 - val_accuracy: 0.4363 - val_auc: 0.6184 - val_f1_score: 0.4262 Epoch 5/50 188/188 [==============================] - 7s 37ms/step - loss: 1.0523 - accuracy: 0.4366 - auc: 0.6241 - f1_score: 0.4244 - val_loss: 1.0549 - val_accuracy: 0.4336 - val_auc: 0.6205 - val_f1_score: 0.4194 Epoch 6/50 188/188 [==============================] - 7s 35ms/step - loss: 1.0497 - accuracy: 0.4370 - auc: 0.6262 - f1_score: 0.4215 - val_loss: 1.0541 - val_accuracy: 0.4348 - val_auc: 0.6223 - val_f1_score: 0.4205 Epoch 7/50 188/188 [==============================] - 6s 34ms/step - loss: 1.0493 - accuracy: 0.4397 - auc: 0.6265 - f1_score: 0.4241 - val_loss: 1.0536 - val_accuracy: 0.4336 - val_auc: 0.6230 - val_f1_score: 0.4223 Epoch 8/50 188/188 [==============================] - 6s 34ms/step - loss: 1.0485 - accuracy: 0.4384 - auc: 0.6279 - f1_score: 0.4264 - val_loss: 1.0538 - val_accuracy: 0.4350 - val_auc: 0.6223 - val_f1_score: 0.4285 Epoch 9/50 188/188 [==============================] - 6s 33ms/step - loss: 1.0480 - accuracy: 0.4395 - auc: 0.6283 - f1_score: 0.4287 - val_loss: 1.0536 - val_accuracy: 0.4341 - val_auc: 0.6227 - val_f1_score: 0.4193 Epoch 10/50 188/188 [==============================] - 7s 35ms/step - loss: 1.0477 - accuracy: 0.4392 - auc: 0.6292 - f1_score: 0.4268 - val_loss: 1.0533 - val_accuracy: 0.4350 - val_auc: 0.6233 - val_f1_score: 0.4253 Epoch 11/50 188/188 [==============================] - 6s 34ms/step - loss: 1.0474 - accuracy: 0.4420 - auc: 0.6297 - f1_score: 0.4301 - val_loss: 1.0537 - val_accuracy: 0.4338 - val_auc: 0.6222 - val_f1_score: 0.4261 Epoch 12/50 188/188 [==============================] - 7s 36ms/step - loss: 1.0467 - accuracy: 0.4408 - auc: 0.6306 - f1_score: 0.4296 - val_loss: 1.0536 - val_accuracy: 0.4339 - val_auc: 0.6225 - val_f1_score: 0.4249 Epoch 13/50 188/188 [==============================] - 6s 34ms/step - loss: 1.0470 - accuracy: 0.4394 - auc: 0.6296 - f1_score: 0.4263 - val_loss: 1.0531 - val_accuracy: 0.4350 - val_auc: 0.6240 - val_f1_score: 0.4263 Epoch 14/50 188/188 [==============================] - 7s 36ms/step - loss: 1.0462 - accuracy: 0.4417 - auc: 0.6310 - f1_score: 0.4323 - val_loss: 1.0532 - val_accuracy: 0.4339 - val_auc: 0.6234 - val_f1_score: 0.4271 Epoch 15/50 188/188 [==============================] - 7s 35ms/step - loss: 1.0456 - accuracy: 0.4426 - auc: 0.6321 - f1_score: 0.4321 - val_loss: 1.0533 - val_accuracy: 0.4362 - val_auc: 0.6232 - val_f1_score: 0.4265 Epoch 16/50 188/188 [==============================] - 7s 36ms/step - loss: 1.0453 - accuracy: 0.4432 - auc: 0.6326 - f1_score: 0.4342 - val_loss: 1.0534 - val_accuracy: 0.4348 - val_auc: 0.6230 - val_f1_score: 0.4262 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 157 0.451254 | 0.444210 | 0.496801 | 0.493232 | 0.683401 | 0.679221 | 0.494250 | 0.490033 | 7 | Simple | 5 | 7 | . 158 0.445663 | 0.439072 | 0.478128 | 0.476257 | 0.670942 | 0.668244 | 0.476659 | 0.474131 | 8 | Simple | 5 | 7 | . 159 0.445754 | 0.439133 | 0.479687 | 0.478423 | 0.671539 | 0.668756 | 0.474430 | 0.472257 | 9 | Simple | 5 | 7 | . 160 0.447580 | 0.440781 | 0.482924 | 0.480628 | 0.673020 | 0.669882 | 0.479771 | 0.476747 | 10 | Simple | 5 | 7 | . 161 0.430316 | 0.424255 | 0.445634 | 0.447266 | 0.635239 | 0.635285 | 0.436354 | 0.436744 | 1 | LSTM | 8 | 7 | . 161 rows × 12 columns . Train shape: (83399, 2, 7) Test shape: (10292, 2, 7) Train shape: (83399, 2, 7) Test shape: (10292, 2, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 2, 7)] 0 [] input_2 (InputLayer) [(None, 2, 7)] 0 [] lstm (LSTM) (None, 2, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 2, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 200) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 200) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 408) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 204500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 408,243 Trainable params: 408,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 13s 56ms/step - loss: 1.0700 - accuracy: 0.4210 - auc: 0.5977 - f1_score: 0.4199 - val_loss: 1.0563 - val_accuracy: 0.4293 - val_auc: 0.6188 - val_f1_score: 0.4203 Epoch 2/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0511 - accuracy: 0.4407 - auc: 0.6258 - f1_score: 0.4324 - val_loss: 1.0511 - val_accuracy: 0.4354 - val_auc: 0.6254 - val_f1_score: 0.4281 Epoch 3/50 188/188 [==============================] - 11s 59ms/step - loss: 1.0469 - accuracy: 0.4422 - auc: 0.6303 - f1_score: 0.4358 - val_loss: 1.0506 - val_accuracy: 0.4353 - val_auc: 0.6261 - val_f1_score: 0.4282 Epoch 4/50 188/188 [==============================] - 11s 58ms/step - loss: 1.0463 - accuracy: 0.4411 - auc: 0.6305 - f1_score: 0.4338 - val_loss: 1.0509 - val_accuracy: 0.4372 - val_auc: 0.6256 - val_f1_score: 0.4337 Epoch 5/50 188/188 [==============================] - 11s 57ms/step - loss: 1.0451 - accuracy: 0.4431 - auc: 0.6321 - f1_score: 0.4385 - val_loss: 1.0506 - val_accuracy: 0.4365 - val_auc: 0.6266 - val_f1_score: 0.4263 Epoch 6/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0448 - accuracy: 0.4454 - auc: 0.6332 - f1_score: 0.4398 - val_loss: 1.0503 - val_accuracy: 0.4366 - val_auc: 0.6264 - val_f1_score: 0.4309 Epoch 7/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0434 - accuracy: 0.4486 - auc: 0.6352 - f1_score: 0.4439 - val_loss: 1.0499 - val_accuracy: 0.4393 - val_auc: 0.6275 - val_f1_score: 0.4355 Epoch 8/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0433 - accuracy: 0.4464 - auc: 0.6352 - f1_score: 0.4418 - val_loss: 1.0493 - val_accuracy: 0.4378 - val_auc: 0.6284 - val_f1_score: 0.4378 Epoch 9/50 188/188 [==============================] - 10s 55ms/step - loss: 1.0426 - accuracy: 0.4466 - auc: 0.6360 - f1_score: 0.4435 - val_loss: 1.0496 - val_accuracy: 0.4399 - val_auc: 0.6280 - val_f1_score: 0.4378 Epoch 10/50 188/188 [==============================] - 10s 52ms/step - loss: 1.0417 - accuracy: 0.4482 - auc: 0.6375 - f1_score: 0.4446 - val_loss: 1.0499 - val_accuracy: 0.4369 - val_auc: 0.6276 - val_f1_score: 0.4358 Epoch 11/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0420 - accuracy: 0.4480 - auc: 0.6368 - f1_score: 0.4460 - val_loss: 1.0489 - val_accuracy: 0.4423 - val_auc: 0.6293 - val_f1_score: 0.4396 Epoch 12/50 188/188 [==============================] - 10s 52ms/step - loss: 1.0410 - accuracy: 0.4509 - auc: 0.6385 - f1_score: 0.4475 - val_loss: 1.0493 - val_accuracy: 0.4398 - val_auc: 0.6282 - val_f1_score: 0.4372 Epoch 13/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0412 - accuracy: 0.4481 - auc: 0.6380 - f1_score: 0.4447 - val_loss: 1.0491 - val_accuracy: 0.4363 - val_auc: 0.6287 - val_f1_score: 0.4339 Epoch 14/50 188/188 [==============================] - 10s 52ms/step - loss: 1.0404 - accuracy: 0.4506 - auc: 0.6390 - f1_score: 0.4472 - val_loss: 1.0493 - val_accuracy: 0.4381 - val_auc: 0.6287 - val_f1_score: 0.4341 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 158 0.445663 | 0.439072 | 0.478128 | 0.476257 | 0.670942 | 0.668244 | 0.476659 | 0.474131 | 8 | Simple | 5 | 7 | . 159 0.445754 | 0.439133 | 0.479687 | 0.478423 | 0.671539 | 0.668756 | 0.474430 | 0.472257 | 9 | Simple | 5 | 7 | . 160 0.447580 | 0.440781 | 0.482924 | 0.480628 | 0.673020 | 0.669882 | 0.479771 | 0.476747 | 10 | Simple | 5 | 7 | . 161 0.430316 | 0.424255 | 0.445634 | 0.447266 | 0.635239 | 0.635285 | 0.436354 | 0.436744 | 1 | LSTM | 8 | 7 | . 162 0.434370 | 0.428352 | 0.454071 | 0.455009 | 0.643919 | 0.643636 | 0.450414 | 0.450479 | 2 | LSTM | 8 | 7 | . 162 rows × 12 columns . Train shape: (83399, 3, 7) Test shape: (10292, 3, 7) Train shape: (83399, 3, 7) Test shape: (10292, 3, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 3, 7)] 0 [] input_2 (InputLayer) [(None, 3, 7)] 0 [] lstm (LSTM) (None, 3, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 3, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 300) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 300) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 608) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 304500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 508,243 Trainable params: 508,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 20s 89ms/step - loss: 1.0653 - accuracy: 0.4126 - auc: 0.6048 - f1_score: 0.4329 - val_loss: 1.0503 - val_accuracy: 0.4333 - val_auc: 0.6271 - val_f1_score: 0.4087 Epoch 2/50 188/188 [==============================] - 16s 85ms/step - loss: 1.0476 - accuracy: 0.4391 - auc: 0.6291 - f1_score: 0.4173 - val_loss: 1.0482 - val_accuracy: 0.4324 - val_auc: 0.6294 - val_f1_score: 0.4081 Epoch 3/50 188/188 [==============================] - 16s 83ms/step - loss: 1.0448 - accuracy: 0.4435 - auc: 0.6323 - f1_score: 0.4264 - val_loss: 1.0483 - val_accuracy: 0.4342 - val_auc: 0.6294 - val_f1_score: 0.4222 Epoch 4/50 188/188 [==============================] - 16s 83ms/step - loss: 1.0444 - accuracy: 0.4428 - auc: 0.6337 - f1_score: 0.4299 - val_loss: 1.0477 - val_accuracy: 0.4339 - val_auc: 0.6304 - val_f1_score: 0.4264 Epoch 5/50 188/188 [==============================] - 16s 83ms/step - loss: 1.0428 - accuracy: 0.4465 - auc: 0.6352 - f1_score: 0.4384 - val_loss: 1.0481 - val_accuracy: 0.4351 - val_auc: 0.6300 - val_f1_score: 0.4271 Epoch 6/50 188/188 [==============================] - 16s 84ms/step - loss: 1.0426 - accuracy: 0.4479 - auc: 0.6364 - f1_score: 0.4391 - val_loss: 1.0476 - val_accuracy: 0.4363 - val_auc: 0.6311 - val_f1_score: 0.4234 Epoch 7/50 188/188 [==============================] - 16s 83ms/step - loss: 1.0412 - accuracy: 0.4465 - auc: 0.6376 - f1_score: 0.4392 - val_loss: 1.0470 - val_accuracy: 0.4363 - val_auc: 0.6313 - val_f1_score: 0.4290 Epoch 8/50 188/188 [==============================] - 16s 83ms/step - loss: 1.0401 - accuracy: 0.4500 - auc: 0.6391 - f1_score: 0.4432 - val_loss: 1.0472 - val_accuracy: 0.4337 - val_auc: 0.6310 - val_f1_score: 0.4291 Epoch 9/50 188/188 [==============================] - 16s 83ms/step - loss: 1.0400 - accuracy: 0.4504 - auc: 0.6392 - f1_score: 0.4452 - val_loss: 1.0481 - val_accuracy: 0.4338 - val_auc: 0.6309 - val_f1_score: 0.4237 Epoch 10/50 188/188 [==============================] - 16s 84ms/step - loss: 1.0392 - accuracy: 0.4494 - auc: 0.6400 - f1_score: 0.4419 - val_loss: 1.0474 - val_accuracy: 0.4354 - val_auc: 0.6314 - val_f1_score: 0.4305 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 159 0.445754 | 0.439133 | 0.479687 | 0.478423 | 0.671539 | 0.668756 | 0.474430 | 0.472257 | 9 | Simple | 5 | 7 | . 160 0.447580 | 0.440781 | 0.482924 | 0.480628 | 0.673020 | 0.669882 | 0.479771 | 0.476747 | 10 | Simple | 5 | 7 | . 161 0.430316 | 0.424255 | 0.445634 | 0.447266 | 0.635239 | 0.635285 | 0.436354 | 0.436744 | 1 | LSTM | 8 | 7 | . 162 0.434370 | 0.428352 | 0.454071 | 0.455009 | 0.643919 | 0.643636 | 0.450414 | 0.450479 | 2 | LSTM | 8 | 7 | . 163 0.436295 | 0.430374 | 0.454550 | 0.455891 | 0.645891 | 0.645874 | 0.449897 | 0.450247 | 3 | LSTM | 8 | 7 | . 163 rows × 12 columns . Train shape: (83399, 4, 7) Test shape: (10292, 4, 7) Train shape: (83399, 4, 7) Test shape: (10292, 4, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 4, 7)] 0 [] input_2 (InputLayer) [(None, 4, 7)] 0 [] lstm (LSTM) (None, 4, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 4, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 400) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 400) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 808) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 404500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 608,243 Trainable params: 608,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 24s 111ms/step - loss: 1.0669 - accuracy: 0.4240 - auc: 0.6000 - f1_score: 0.4190 - val_loss: 1.0528 - val_accuracy: 0.4314 - val_auc: 0.6229 - val_f1_score: 0.3462 Epoch 2/50 188/188 [==============================] - 19s 102ms/step - loss: 1.0483 - accuracy: 0.4382 - auc: 0.6276 - f1_score: 0.3770 - val_loss: 1.0499 - val_accuracy: 0.4327 - val_auc: 0.6258 - val_f1_score: 0.3922 Epoch 3/50 188/188 [==============================] - 19s 101ms/step - loss: 1.0447 - accuracy: 0.4424 - auc: 0.6323 - f1_score: 0.4137 - val_loss: 1.0490 - val_accuracy: 0.4350 - val_auc: 0.6270 - val_f1_score: 0.4125 Epoch 4/50 188/188 [==============================] - 19s 100ms/step - loss: 1.0432 - accuracy: 0.4440 - auc: 0.6347 - f1_score: 0.4267 - val_loss: 1.0476 - val_accuracy: 0.4375 - val_auc: 0.6297 - val_f1_score: 0.4272 Epoch 5/50 188/188 [==============================] - 19s 102ms/step - loss: 1.0399 - accuracy: 0.4498 - auc: 0.6389 - f1_score: 0.4399 - val_loss: 1.0473 - val_accuracy: 0.4381 - val_auc: 0.6299 - val_f1_score: 0.4278 Epoch 6/50 188/188 [==============================] - 19s 102ms/step - loss: 1.0396 - accuracy: 0.4482 - auc: 0.6386 - f1_score: 0.4396 - val_loss: 1.0471 - val_accuracy: 0.4385 - val_auc: 0.6299 - val_f1_score: 0.4327 Epoch 7/50 188/188 [==============================] - 19s 100ms/step - loss: 1.0392 - accuracy: 0.4516 - auc: 0.6403 - f1_score: 0.4451 - val_loss: 1.0477 - val_accuracy: 0.4391 - val_auc: 0.6296 - val_f1_score: 0.4326 Epoch 8/50 188/188 [==============================] - 19s 104ms/step - loss: 1.0382 - accuracy: 0.4505 - auc: 0.6413 - f1_score: 0.4443 - val_loss: 1.0473 - val_accuracy: 0.4371 - val_auc: 0.6299 - val_f1_score: 0.4322 Epoch 9/50 188/188 [==============================] - 20s 105ms/step - loss: 1.0374 - accuracy: 0.4521 - auc: 0.6424 - f1_score: 0.4467 - val_loss: 1.0468 - val_accuracy: 0.4390 - val_auc: 0.6306 - val_f1_score: 0.4341 Epoch 10/50 188/188 [==============================] - 19s 100ms/step - loss: 1.0367 - accuracy: 0.4536 - auc: 0.6431 - f1_score: 0.4495 - val_loss: 1.0481 - val_accuracy: 0.4372 - val_auc: 0.6304 - val_f1_score: 0.4275 Epoch 11/50 188/188 [==============================] - 20s 106ms/step - loss: 1.0364 - accuracy: 0.4541 - auc: 0.6439 - f1_score: 0.4493 - val_loss: 1.0479 - val_accuracy: 0.4366 - val_auc: 0.6297 - val_f1_score: 0.4328 Epoch 12/50 188/188 [==============================] - 22s 118ms/step - loss: 1.0362 - accuracy: 0.4543 - auc: 0.6442 - f1_score: 0.4510 - val_loss: 1.0470 - val_accuracy: 0.4391 - val_auc: 0.6309 - val_f1_score: 0.4365 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 160 0.447580 | 0.440781 | 0.482924 | 0.480628 | 0.673020 | 0.669882 | 0.479771 | 0.476747 | 10 | Simple | 5 | 7 | . 161 0.430316 | 0.424255 | 0.445634 | 0.447266 | 0.635239 | 0.635285 | 0.436354 | 0.436744 | 1 | LSTM | 8 | 7 | . 162 0.434370 | 0.428352 | 0.454071 | 0.455009 | 0.643919 | 0.643636 | 0.450414 | 0.450479 | 2 | LSTM | 8 | 7 | . 163 0.436295 | 0.430374 | 0.454550 | 0.455891 | 0.645891 | 0.645874 | 0.449897 | 0.450247 | 3 | LSTM | 8 | 7 | . 164 0.437214 | 0.431174 | 0.460949 | 0.461379 | 0.650851 | 0.650392 | 0.458120 | 0.457724 | 4 | LSTM | 8 | 7 | . 164 rows × 12 columns . Train shape: (83399, 5, 7) Test shape: (10292, 5, 7) Train shape: (83399, 5, 7) Test shape: (10292, 5, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 5, 7)] 0 [] input_2 (InputLayer) [(None, 5, 7)] 0 [] lstm (LSTM) (None, 5, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 5, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 500) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 500) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1008) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 504500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 708,243 Trainable params: 708,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 27s 121ms/step - loss: 1.0732 - accuracy: 0.4215 - auc: 0.5862 - f1_score: 0.4253 - val_loss: 1.0646 - val_accuracy: 0.4357 - val_auc: 0.6042 - val_f1_score: 0.3984 Epoch 2/50 188/188 [==============================] - 22s 117ms/step - loss: 1.0591 - accuracy: 0.4427 - auc: 0.6158 - f1_score: 0.4278 - val_loss: 1.0578 - val_accuracy: 0.4380 - val_auc: 0.6176 - val_f1_score: 0.4361 Epoch 3/50 188/188 [==============================] - 21s 114ms/step - loss: 1.0515 - accuracy: 0.4451 - auc: 0.6270 - f1_score: 0.4452 - val_loss: 1.0488 - val_accuracy: 0.4337 - val_auc: 0.6275 - val_f1_score: 0.4343 Epoch 4/50 188/188 [==============================] - 22s 115ms/step - loss: 1.0434 - accuracy: 0.4486 - auc: 0.6358 - f1_score: 0.4485 - val_loss: 1.0465 - val_accuracy: 0.4428 - val_auc: 0.6312 - val_f1_score: 0.4396 Epoch 5/50 188/188 [==============================] - 22s 116ms/step - loss: 1.0410 - accuracy: 0.4508 - auc: 0.6385 - f1_score: 0.4484 - val_loss: 1.0464 - val_accuracy: 0.4393 - val_auc: 0.6307 - val_f1_score: 0.4372 Epoch 6/50 188/188 [==============================] - 23s 122ms/step - loss: 1.0388 - accuracy: 0.4529 - auc: 0.6410 - f1_score: 0.4503 - val_loss: 1.0460 - val_accuracy: 0.4417 - val_auc: 0.6314 - val_f1_score: 0.4398 Epoch 7/50 188/188 [==============================] - 22s 119ms/step - loss: 1.0380 - accuracy: 0.4537 - auc: 0.6422 - f1_score: 0.4508 - val_loss: 1.0456 - val_accuracy: 0.4385 - val_auc: 0.6317 - val_f1_score: 0.4354 Epoch 8/50 188/188 [==============================] - 23s 121ms/step - loss: 1.0371 - accuracy: 0.4544 - auc: 0.6433 - f1_score: 0.4514 - val_loss: 1.0460 - val_accuracy: 0.4374 - val_auc: 0.6309 - val_f1_score: 0.4360 Epoch 9/50 188/188 [==============================] - 22s 115ms/step - loss: 1.0359 - accuracy: 0.4566 - auc: 0.6451 - f1_score: 0.4547 - val_loss: 1.0461 - val_accuracy: 0.4391 - val_auc: 0.6311 - val_f1_score: 0.4387 Epoch 10/50 188/188 [==============================] - 22s 117ms/step - loss: 1.0346 - accuracy: 0.4563 - auc: 0.6463 - f1_score: 0.4536 - val_loss: 1.0463 - val_accuracy: 0.4362 - val_auc: 0.6311 - val_f1_score: 0.4350 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 161 0.430316 | 0.424255 | 0.445634 | 0.447266 | 0.635239 | 0.635285 | 0.436354 | 0.436744 | 1 | LSTM | 8 | 7 | . 162 0.434370 | 0.428352 | 0.454071 | 0.455009 | 0.643919 | 0.643636 | 0.450414 | 0.450479 | 2 | LSTM | 8 | 7 | . 163 0.436295 | 0.430374 | 0.454550 | 0.455891 | 0.645891 | 0.645874 | 0.449897 | 0.450247 | 3 | LSTM | 8 | 7 | . 164 0.437214 | 0.431174 | 0.460949 | 0.461379 | 0.650851 | 0.650392 | 0.458120 | 0.457724 | 4 | LSTM | 8 | 7 | . 165 0.436993 | 0.430871 | 0.461440 | 0.461624 | 0.652264 | 0.651544 | 0.459997 | 0.459480 | 5 | LSTM | 8 | 7 | . 165 rows × 12 columns . Train shape: (83399, 6, 7) Test shape: (10292, 6, 7) Train shape: (83399, 6, 7) Test shape: (10292, 6, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 6, 7)] 0 [] input_2 (InputLayer) [(None, 6, 7)] 0 [] lstm (LSTM) (None, 6, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 6, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 600) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 600) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1208) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 604500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 808,243 Trainable params: 808,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 31s 146ms/step - loss: 1.0636 - accuracy: 0.4287 - auc: 0.6093 - f1_score: 0.4371 - val_loss: 1.0484 - val_accuracy: 0.4421 - val_auc: 0.6290 - val_f1_score: 0.4253 Epoch 2/50 188/188 [==============================] - 26s 138ms/step - loss: 1.0428 - accuracy: 0.4458 - auc: 0.6349 - f1_score: 0.4330 - val_loss: 1.0459 - val_accuracy: 0.4398 - val_auc: 0.6315 - val_f1_score: 0.4243 Epoch 3/50 188/188 [==============================] - 28s 150ms/step - loss: 1.0410 - accuracy: 0.4470 - auc: 0.6370 - f1_score: 0.4359 - val_loss: 1.0452 - val_accuracy: 0.4434 - val_auc: 0.6329 - val_f1_score: 0.4307 Epoch 4/50 188/188 [==============================] - 28s 150ms/step - loss: 1.0387 - accuracy: 0.4513 - auc: 0.6403 - f1_score: 0.4400 - val_loss: 1.0446 - val_accuracy: 0.4454 - val_auc: 0.6338 - val_f1_score: 0.4376 Epoch 5/50 188/188 [==============================] - 26s 138ms/step - loss: 1.0383 - accuracy: 0.4520 - auc: 0.6414 - f1_score: 0.4445 - val_loss: 1.0451 - val_accuracy: 0.4445 - val_auc: 0.6335 - val_f1_score: 0.4359 Epoch 6/50 188/188 [==============================] - 26s 139ms/step - loss: 1.0370 - accuracy: 0.4524 - auc: 0.6427 - f1_score: 0.4450 - val_loss: 1.0441 - val_accuracy: 0.4444 - val_auc: 0.6349 - val_f1_score: 0.4410 Epoch 7/50 188/188 [==============================] - 27s 144ms/step - loss: 1.0359 - accuracy: 0.4557 - auc: 0.6443 - f1_score: 0.4491 - val_loss: 1.0440 - val_accuracy: 0.4444 - val_auc: 0.6350 - val_f1_score: 0.4361 Epoch 8/50 188/188 [==============================] - 27s 142ms/step - loss: 1.0344 - accuracy: 0.4555 - auc: 0.6457 - f1_score: 0.4476 - val_loss: 1.0450 - val_accuracy: 0.4448 - val_auc: 0.6339 - val_f1_score: 0.4385 Epoch 9/50 188/188 [==============================] - 26s 139ms/step - loss: 1.0332 - accuracy: 0.4581 - auc: 0.6479 - f1_score: 0.4535 - val_loss: 1.0446 - val_accuracy: 0.4417 - val_auc: 0.6336 - val_f1_score: 0.4381 Epoch 10/50 188/188 [==============================] - 26s 138ms/step - loss: 1.0322 - accuracy: 0.4592 - auc: 0.6490 - f1_score: 0.4549 - val_loss: 1.0452 - val_accuracy: 0.4409 - val_auc: 0.6335 - val_f1_score: 0.4351 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 162 0.434370 | 0.428352 | 0.454071 | 0.455009 | 0.643919 | 0.643636 | 0.450414 | 0.450479 | 2 | LSTM | 8 | 7 | . 163 0.436295 | 0.430374 | 0.454550 | 0.455891 | 0.645891 | 0.645874 | 0.449897 | 0.450247 | 3 | LSTM | 8 | 7 | . 164 0.437214 | 0.431174 | 0.460949 | 0.461379 | 0.650851 | 0.650392 | 0.458120 | 0.457724 | 4 | LSTM | 8 | 7 | . 165 0.436993 | 0.430871 | 0.461440 | 0.461624 | 0.652264 | 0.651544 | 0.459997 | 0.459480 | 5 | LSTM | 8 | 7 | . 166 0.438791 | 0.432752 | 0.464612 | 0.465339 | 0.654390 | 0.653797 | 0.459289 | 0.459105 | 6 | LSTM | 8 | 7 | . 166 rows × 12 columns . Train shape: (83399, 7, 7) Test shape: (10292, 7, 7) Train shape: (83399, 7, 7) Test shape: (10292, 7, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 7, 7)] 0 [] input_2 (InputLayer) [(None, 7, 7)] 0 [] lstm (LSTM) (None, 7, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 7, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 700) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 700) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1408) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 704500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 908,243 Trainable params: 908,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 35s 161ms/step - loss: 1.0637 - accuracy: 0.4211 - auc: 0.6056 - f1_score: 0.4389 - val_loss: 1.0492 - val_accuracy: 0.4386 - val_auc: 0.6281 - val_f1_score: 0.4204 Epoch 2/50 188/188 [==============================] - 29s 156ms/step - loss: 1.0433 - accuracy: 0.4466 - auc: 0.6351 - f1_score: 0.4339 - val_loss: 1.0457 - val_accuracy: 0.4456 - val_auc: 0.6326 - val_f1_score: 0.4379 Epoch 3/50 188/188 [==============================] - 28s 150ms/step - loss: 1.0400 - accuracy: 0.4498 - auc: 0.6391 - f1_score: 0.4442 - val_loss: 1.0460 - val_accuracy: 0.4408 - val_auc: 0.6328 - val_f1_score: 0.4261 Epoch 4/50 188/188 [==============================] - 29s 152ms/step - loss: 1.0377 - accuracy: 0.4543 - auc: 0.6424 - f1_score: 0.4482 - val_loss: 1.0447 - val_accuracy: 0.4470 - val_auc: 0.6342 - val_f1_score: 0.4433 Epoch 5/50 188/188 [==============================] - 29s 152ms/step - loss: 1.0360 - accuracy: 0.4562 - auc: 0.6446 - f1_score: 0.4515 - val_loss: 1.0446 - val_accuracy: 0.4465 - val_auc: 0.6348 - val_f1_score: 0.4426 Epoch 6/50 188/188 [==============================] - 30s 158ms/step - loss: 1.0344 - accuracy: 0.4567 - auc: 0.6463 - f1_score: 0.4536 - val_loss: 1.0445 - val_accuracy: 0.4466 - val_auc: 0.6350 - val_f1_score: 0.4409 Epoch 7/50 188/188 [==============================] - 29s 156ms/step - loss: 1.0332 - accuracy: 0.4604 - auc: 0.6485 - f1_score: 0.4571 - val_loss: 1.0443 - val_accuracy: 0.4477 - val_auc: 0.6352 - val_f1_score: 0.4445 Epoch 8/50 188/188 [==============================] - 30s 158ms/step - loss: 1.0324 - accuracy: 0.4608 - auc: 0.6494 - f1_score: 0.4579 - val_loss: 1.0438 - val_accuracy: 0.4451 - val_auc: 0.6356 - val_f1_score: 0.4403 Epoch 9/50 188/188 [==============================] - 29s 157ms/step - loss: 1.0319 - accuracy: 0.4617 - auc: 0.6497 - f1_score: 0.4588 - val_loss: 1.0443 - val_accuracy: 0.4486 - val_auc: 0.6360 - val_f1_score: 0.4431 Epoch 10/50 188/188 [==============================] - 29s 156ms/step - loss: 1.0294 - accuracy: 0.4647 - auc: 0.6533 - f1_score: 0.4610 - val_loss: 1.0446 - val_accuracy: 0.4484 - val_auc: 0.6351 - val_f1_score: 0.4495 Epoch 11/50 188/188 [==============================] - 29s 154ms/step - loss: 1.0286 - accuracy: 0.4663 - auc: 0.6542 - f1_score: 0.4639 - val_loss: 1.0452 - val_accuracy: 0.4434 - val_auc: 0.6340 - val_f1_score: 0.4403 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 163 0.436295 | 0.430374 | 0.454550 | 0.455891 | 0.645891 | 0.645874 | 0.449897 | 0.450247 | 3 | LSTM | 8 | 7 | . 164 0.437214 | 0.431174 | 0.460949 | 0.461379 | 0.650851 | 0.650392 | 0.458120 | 0.457724 | 4 | LSTM | 8 | 7 | . 165 0.436993 | 0.430871 | 0.461440 | 0.461624 | 0.652264 | 0.651544 | 0.459997 | 0.459480 | 5 | LSTM | 8 | 7 | . 166 0.438791 | 0.432752 | 0.464612 | 0.465339 | 0.654390 | 0.653797 | 0.459289 | 0.459105 | 6 | LSTM | 8 | 7 | . 167 0.442015 | 0.435781 | 0.476711 | 0.475503 | 0.663594 | 0.662060 | 0.473321 | 0.471299 | 7 | LSTM | 8 | 7 | . 167 rows × 12 columns . Train shape: (83399, 8, 7) Test shape: (10292, 8, 7) Train shape: (83399, 8, 7) Test shape: (10292, 8, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 8, 7)] 0 [] input_2 (InputLayer) [(None, 8, 7)] 0 [] lstm (LSTM) (None, 8, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 8, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 800) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 800) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1608) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 804500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,008,243 Trainable params: 1,008,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 41s 184ms/step - loss: 1.0650 - accuracy: 0.4128 - auc: 0.6021 - f1_score: 0.4376 - val_loss: 1.0488 - val_accuracy: 0.4356 - val_auc: 0.6281 - val_f1_score: 0.4075 Epoch 2/50 188/188 [==============================] - 35s 187ms/step - loss: 1.0437 - accuracy: 0.4424 - auc: 0.6326 - f1_score: 0.4118 - val_loss: 1.0465 - val_accuracy: 0.4382 - val_auc: 0.6312 - val_f1_score: 0.4146 Epoch 3/50 188/188 [==============================] - 35s 184ms/step - loss: 1.0406 - accuracy: 0.4480 - auc: 0.6370 - f1_score: 0.4279 - val_loss: 1.0456 - val_accuracy: 0.4408 - val_auc: 0.6321 - val_f1_score: 0.4238 Epoch 4/50 188/188 [==============================] - 33s 178ms/step - loss: 1.0372 - accuracy: 0.4511 - auc: 0.6418 - f1_score: 0.4367 - val_loss: 1.0446 - val_accuracy: 0.4427 - val_auc: 0.6335 - val_f1_score: 0.4343 Epoch 5/50 188/188 [==============================] - 34s 180ms/step - loss: 1.0366 - accuracy: 0.4514 - auc: 0.6423 - f1_score: 0.4405 - val_loss: 1.0451 - val_accuracy: 0.4392 - val_auc: 0.6330 - val_f1_score: 0.4279 Epoch 6/50 188/188 [==============================] - 33s 177ms/step - loss: 1.0350 - accuracy: 0.4529 - auc: 0.6445 - f1_score: 0.4414 - val_loss: 1.0453 - val_accuracy: 0.4415 - val_auc: 0.6333 - val_f1_score: 0.4338 Epoch 7/50 188/188 [==============================] - 34s 179ms/step - loss: 1.0335 - accuracy: 0.4552 - auc: 0.6464 - f1_score: 0.4474 - val_loss: 1.0448 - val_accuracy: 0.4434 - val_auc: 0.6342 - val_f1_score: 0.4372 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 164 0.437214 | 0.431174 | 0.460949 | 0.461379 | 0.650851 | 0.650392 | 0.458120 | 0.457724 | 4 | LSTM | 8 | 7 | . 165 0.436993 | 0.430871 | 0.461440 | 0.461624 | 0.652264 | 0.651544 | 0.459997 | 0.459480 | 5 | LSTM | 8 | 7 | . 166 0.438791 | 0.432752 | 0.464612 | 0.465339 | 0.654390 | 0.653797 | 0.459289 | 0.459105 | 6 | LSTM | 8 | 7 | . 167 0.442015 | 0.435781 | 0.476711 | 0.475503 | 0.663594 | 0.662060 | 0.473321 | 0.471299 | 7 | LSTM | 8 | 7 | . 168 0.438048 | 0.432084 | 0.461331 | 0.462369 | 0.653282 | 0.652929 | 0.454237 | 0.454276 | 8 | LSTM | 8 | 7 | . 168 rows × 12 columns . Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 9, 7)] 0 [] input_2 (InputLayer) [(None, 9, 7)] 0 [] lstm (LSTM) (None, 9, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 9, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 900) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 900) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1808) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 904500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,108,243 Trainable params: 1,108,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 44s 209ms/step - loss: 1.0708 - accuracy: 0.4169 - auc: 0.5963 - f1_score: 0.4343 - val_loss: 1.0481 - val_accuracy: 0.4418 - val_auc: 0.6296 - val_f1_score: 0.4350 Epoch 2/50 188/188 [==============================] - 38s 203ms/step - loss: 1.0458 - accuracy: 0.4446 - auc: 0.6322 - f1_score: 0.4403 - val_loss: 1.0457 - val_accuracy: 0.4450 - val_auc: 0.6326 - val_f1_score: 0.4312 Epoch 3/50 188/188 [==============================] - 36s 194ms/step - loss: 1.0410 - accuracy: 0.4500 - auc: 0.6387 - f1_score: 0.4440 - val_loss: 1.0435 - val_accuracy: 0.4486 - val_auc: 0.6355 - val_f1_score: 0.4473 Epoch 4/50 188/188 [==============================] - 36s 193ms/step - loss: 1.0380 - accuracy: 0.4525 - auc: 0.6421 - f1_score: 0.4479 - val_loss: 1.0445 - val_accuracy: 0.4471 - val_auc: 0.6347 - val_f1_score: 0.4336 Epoch 5/50 188/188 [==============================] - 37s 196ms/step - loss: 1.0361 - accuracy: 0.4573 - auc: 0.6449 - f1_score: 0.4526 - val_loss: 1.0442 - val_accuracy: 0.4450 - val_auc: 0.6354 - val_f1_score: 0.4417 Epoch 6/50 188/188 [==============================] - 38s 201ms/step - loss: 1.0340 - accuracy: 0.4600 - auc: 0.6477 - f1_score: 0.4573 - val_loss: 1.0449 - val_accuracy: 0.4448 - val_auc: 0.6351 - val_f1_score: 0.4318 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 165 0.436993 | 0.430871 | 0.461440 | 0.461624 | 0.652264 | 0.651544 | 0.459997 | 0.459480 | 5 | LSTM | 8 | 7 | . 166 0.438791 | 0.432752 | 0.464612 | 0.465339 | 0.654390 | 0.653797 | 0.459289 | 0.459105 | 6 | LSTM | 8 | 7 | . 167 0.442015 | 0.435781 | 0.476711 | 0.475503 | 0.663594 | 0.662060 | 0.473321 | 0.471299 | 7 | LSTM | 8 | 7 | . 168 0.438048 | 0.432084 | 0.461331 | 0.462369 | 0.653282 | 0.652929 | 0.454237 | 0.454276 | 8 | LSTM | 8 | 7 | . 169 0.441689 | 0.435859 | 0.467380 | 0.468720 | 0.656002 | 0.655920 | 0.454019 | 0.454023 | 9 | LSTM | 8 | 7 | . 169 rows × 12 columns . Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 7)] 0 [] input_2 (InputLayer) [(None, 10, 7)] 0 [] lstm (LSTM) (None, 10, 100) 42800 [&#39;input_1[0][0]&#39;] lstm_1 (LSTM) (None, 10, 100) 42800 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;lstm[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;lstm_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 2008) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1004500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,208,243 Trainable params: 1,208,243 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 48s 226ms/step - loss: 1.0618 - accuracy: 0.4230 - auc: 0.6053 - f1_score: 0.4403 - val_loss: 1.0506 - val_accuracy: 0.4339 - val_auc: 0.6232 - val_f1_score: 0.3898 Epoch 2/50 188/188 [==============================] - 41s 219ms/step - loss: 1.0452 - accuracy: 0.4411 - auc: 0.6292 - f1_score: 0.4002 - val_loss: 1.0473 - val_accuracy: 0.4348 - val_auc: 0.6277 - val_f1_score: 0.3796 Epoch 3/50 188/188 [==============================] - 43s 230ms/step - loss: 1.0411 - accuracy: 0.4458 - auc: 0.6357 - f1_score: 0.4045 - val_loss: 1.0472 - val_accuracy: 0.4371 - val_auc: 0.6303 - val_f1_score: 0.3921 Epoch 4/50 188/188 [==============================] - 42s 225ms/step - loss: 1.0390 - accuracy: 0.4482 - auc: 0.6389 - f1_score: 0.4141 - val_loss: 1.0456 - val_accuracy: 0.4400 - val_auc: 0.6328 - val_f1_score: 0.4087 Epoch 5/50 188/188 [==============================] - 42s 223ms/step - loss: 1.0369 - accuracy: 0.4486 - auc: 0.6416 - f1_score: 0.4195 - val_loss: 1.0452 - val_accuracy: 0.4423 - val_auc: 0.6343 - val_f1_score: 0.4232 Epoch 6/50 188/188 [==============================] - 44s 233ms/step - loss: 1.0342 - accuracy: 0.4549 - auc: 0.6457 - f1_score: 0.4353 - val_loss: 1.0449 - val_accuracy: 0.4439 - val_auc: 0.6345 - val_f1_score: 0.4177 Epoch 7/50 188/188 [==============================] - 43s 227ms/step - loss: 1.0334 - accuracy: 0.4547 - auc: 0.6465 - f1_score: 0.4374 - val_loss: 1.0430 - val_accuracy: 0.4492 - val_auc: 0.6369 - val_f1_score: 0.4368 Epoch 8/50 188/188 [==============================] - 42s 226ms/step - loss: 1.0312 - accuracy: 0.4572 - auc: 0.6491 - f1_score: 0.4442 - val_loss: 1.0439 - val_accuracy: 0.4486 - val_auc: 0.6355 - val_f1_score: 0.4376 Epoch 9/50 188/188 [==============================] - 42s 223ms/step - loss: 1.0292 - accuracy: 0.4601 - auc: 0.6521 - f1_score: 0.4479 - val_loss: 1.0447 - val_accuracy: 0.4448 - val_auc: 0.6343 - val_f1_score: 0.4332 Epoch 10/50 188/188 [==============================] - 41s 220ms/step - loss: 1.0277 - accuracy: 0.4628 - auc: 0.6540 - f1_score: 0.4526 - val_loss: 1.0440 - val_accuracy: 0.4508 - val_auc: 0.6354 - val_f1_score: 0.4404 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 166 0.438791 | 0.432752 | 0.464612 | 0.465339 | 0.654390 | 0.653797 | 0.459289 | 0.459105 | 6 | LSTM | 8 | 7 | . 167 0.442015 | 0.435781 | 0.476711 | 0.475503 | 0.663594 | 0.662060 | 0.473321 | 0.471299 | 7 | LSTM | 8 | 7 | . 168 0.438048 | 0.432084 | 0.461331 | 0.462369 | 0.653282 | 0.652929 | 0.454237 | 0.454276 | 8 | LSTM | 8 | 7 | . 169 0.441689 | 0.435859 | 0.467380 | 0.468720 | 0.656002 | 0.655920 | 0.454019 | 0.454023 | 9 | LSTM | 8 | 7 | . 170 0.441167 | 0.434844 | 0.474618 | 0.474767 | 0.665433 | 0.663710 | 0.462702 | 0.461737 | 10 | LSTM | 8 | 7 | . 170 rows × 12 columns . Train shape: (83399, 1, 7) Test shape: (10292, 1, 7) Train shape: (83399, 1, 7) Test shape: (10292, 1, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 1, 7)] 0 [] input_2 (InputLayer) [(None, 1, 7)] 0 [] simple_rnn (SimpleRNN) (None, 1, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 1, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 100) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 100) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 208) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 104500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 244,043 Trainable params: 244,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 10s 38ms/step - loss: 1.0742 - accuracy: 0.4020 - auc: 0.5869 - f1_score: 0.4394 - val_loss: 1.0573 - val_accuracy: 0.4288 - val_auc: 0.6185 - val_f1_score: 0.3862 Epoch 2/50 188/188 [==============================] - 6s 33ms/step - loss: 1.0568 - accuracy: 0.4270 - auc: 0.6155 - f1_score: 0.4032 - val_loss: 1.0551 - val_accuracy: 0.4335 - val_auc: 0.6211 - val_f1_score: 0.3944 Epoch 3/50 188/188 [==============================] - 6s 34ms/step - loss: 1.0526 - accuracy: 0.4301 - auc: 0.6212 - f1_score: 0.4108 - val_loss: 1.0541 - val_accuracy: 0.4339 - val_auc: 0.6226 - val_f1_score: 0.4044 Epoch 4/50 188/188 [==============================] - 7s 38ms/step - loss: 1.0513 - accuracy: 0.4332 - auc: 0.6232 - f1_score: 0.4167 - val_loss: 1.0540 - val_accuracy: 0.4320 - val_auc: 0.6229 - val_f1_score: 0.4020 Epoch 5/50 188/188 [==============================] - 7s 38ms/step - loss: 1.0502 - accuracy: 0.4368 - auc: 0.6247 - f1_score: 0.4185 - val_loss: 1.0541 - val_accuracy: 0.4366 - val_auc: 0.6231 - val_f1_score: 0.4178 Epoch 6/50 188/188 [==============================] - 7s 37ms/step - loss: 1.0493 - accuracy: 0.4371 - auc: 0.6261 - f1_score: 0.4226 - val_loss: 1.0541 - val_accuracy: 0.4357 - val_auc: 0.6233 - val_f1_score: 0.4076 Epoch 7/50 188/188 [==============================] - 7s 37ms/step - loss: 1.0491 - accuracy: 0.4379 - auc: 0.6270 - f1_score: 0.4220 - val_loss: 1.0538 - val_accuracy: 0.4339 - val_auc: 0.6229 - val_f1_score: 0.4141 Epoch 8/50 188/188 [==============================] - 6s 34ms/step - loss: 1.0478 - accuracy: 0.4389 - auc: 0.6282 - f1_score: 0.4247 - val_loss: 1.0549 - val_accuracy: 0.4345 - val_auc: 0.6219 - val_f1_score: 0.4163 Epoch 9/50 188/188 [==============================] - 7s 35ms/step - loss: 1.0473 - accuracy: 0.4418 - auc: 0.6297 - f1_score: 0.4296 - val_loss: 1.0538 - val_accuracy: 0.4342 - val_auc: 0.6229 - val_f1_score: 0.4184 Epoch 10/50 188/188 [==============================] - 7s 37ms/step - loss: 1.0467 - accuracy: 0.4420 - auc: 0.6301 - f1_score: 0.4306 - val_loss: 1.0536 - val_accuracy: 0.4369 - val_auc: 0.6237 - val_f1_score: 0.4234 Epoch 11/50 188/188 [==============================] - 6s 33ms/step - loss: 1.0470 - accuracy: 0.4412 - auc: 0.6300 - f1_score: 0.4304 - val_loss: 1.0535 - val_accuracy: 0.4348 - val_auc: 0.6235 - val_f1_score: 0.4226 Epoch 12/50 188/188 [==============================] - 6s 33ms/step - loss: 1.0462 - accuracy: 0.4433 - auc: 0.6313 - f1_score: 0.4354 - val_loss: 1.0541 - val_accuracy: 0.4333 - val_auc: 0.6226 - val_f1_score: 0.4203 Epoch 13/50 188/188 [==============================] - 6s 34ms/step - loss: 1.0463 - accuracy: 0.4416 - auc: 0.6311 - f1_score: 0.4331 - val_loss: 1.0544 - val_accuracy: 0.4355 - val_auc: 0.6228 - val_f1_score: 0.4251 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 167 0.442015 | 0.435781 | 0.476711 | 0.475503 | 0.663594 | 0.662060 | 0.473321 | 0.471299 | 7 | LSTM | 8 | 7 | . 168 0.438048 | 0.432084 | 0.461331 | 0.462369 | 0.653282 | 0.652929 | 0.454237 | 0.454276 | 8 | LSTM | 8 | 7 | . 169 0.441689 | 0.435859 | 0.467380 | 0.468720 | 0.656002 | 0.655920 | 0.454019 | 0.454023 | 9 | LSTM | 8 | 7 | . 170 0.441167 | 0.434844 | 0.474618 | 0.474767 | 0.665433 | 0.663710 | 0.462702 | 0.461737 | 10 | LSTM | 8 | 7 | . 171 0.432137 | 0.426055 | 0.448392 | 0.449677 | 0.637223 | 0.637144 | 0.437986 | 0.438061 | 1 | Simple | 8 | 7 | . 171 rows × 12 columns . Train shape: (83399, 2, 7) Test shape: (10292, 2, 7) Train shape: (83399, 2, 7) Test shape: (10292, 2, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 2, 7)] 0 [] input_2 (InputLayer) [(None, 2, 7)] 0 [] simple_rnn (SimpleRNN) (None, 2, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 2, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 200) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 200) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 408) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 204500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 344,043 Trainable params: 344,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 12s 48ms/step - loss: 1.0876 - accuracy: 0.3592 - auc: 0.5468 - f1_score: 0.4010 - val_loss: 1.0774 - val_accuracy: 0.3838 - val_auc: 0.5811 - val_f1_score: 0.3205 Epoch 2/50 188/188 [==============================] - 8s 45ms/step - loss: 1.0756 - accuracy: 0.3843 - auc: 0.5831 - f1_score: 0.3368 - val_loss: 1.0710 - val_accuracy: 0.3946 - val_auc: 0.5953 - val_f1_score: 0.3542 Epoch 3/50 188/188 [==============================] - 8s 44ms/step - loss: 1.0698 - accuracy: 0.3957 - auc: 0.5964 - f1_score: 0.3693 - val_loss: 1.0682 - val_accuracy: 0.3968 - val_auc: 0.6020 - val_f1_score: 0.3760 Epoch 4/50 188/188 [==============================] - 8s 44ms/step - loss: 1.0662 - accuracy: 0.4032 - auc: 0.6045 - f1_score: 0.3930 - val_loss: 1.0652 - val_accuracy: 0.3984 - val_auc: 0.6044 - val_f1_score: 0.3861 Epoch 5/50 188/188 [==============================] - 8s 44ms/step - loss: 1.0627 - accuracy: 0.4119 - auc: 0.6101 - f1_score: 0.4096 - val_loss: 1.0635 - val_accuracy: 0.4132 - val_auc: 0.6103 - val_f1_score: 0.4059 Epoch 6/50 188/188 [==============================] - 8s 43ms/step - loss: 1.0586 - accuracy: 0.4258 - auc: 0.6171 - f1_score: 0.4139 - val_loss: 1.0590 - val_accuracy: 0.4354 - val_auc: 0.6167 - val_f1_score: 0.3969 Epoch 7/50 188/188 [==============================] - 8s 44ms/step - loss: 1.0527 - accuracy: 0.4388 - auc: 0.6243 - f1_score: 0.4132 - val_loss: 1.0536 - val_accuracy: 0.4374 - val_auc: 0.6229 - val_f1_score: 0.4079 Epoch 8/50 188/188 [==============================] - 8s 44ms/step - loss: 1.0476 - accuracy: 0.4411 - auc: 0.6295 - f1_score: 0.4158 - val_loss: 1.0517 - val_accuracy: 0.4398 - val_auc: 0.6251 - val_f1_score: 0.4276 Epoch 9/50 188/188 [==============================] - 8s 44ms/step - loss: 1.0449 - accuracy: 0.4445 - auc: 0.6327 - f1_score: 0.4277 - val_loss: 1.0525 - val_accuracy: 0.4375 - val_auc: 0.6237 - val_f1_score: 0.4157 Epoch 10/50 188/188 [==============================] - 8s 43ms/step - loss: 1.0439 - accuracy: 0.4457 - auc: 0.6345 - f1_score: 0.4297 - val_loss: 1.0509 - val_accuracy: 0.4415 - val_auc: 0.6261 - val_f1_score: 0.4288 Epoch 11/50 188/188 [==============================] - 8s 45ms/step - loss: 1.0425 - accuracy: 0.4465 - auc: 0.6361 - f1_score: 0.4314 - val_loss: 1.0511 - val_accuracy: 0.4347 - val_auc: 0.6253 - val_f1_score: 0.4161 Epoch 12/50 188/188 [==============================] - 8s 45ms/step - loss: 1.0423 - accuracy: 0.4481 - auc: 0.6368 - f1_score: 0.4342 - val_loss: 1.0502 - val_accuracy: 0.4391 - val_auc: 0.6272 - val_f1_score: 0.4278 Epoch 13/50 188/188 [==============================] - 8s 44ms/step - loss: 1.0416 - accuracy: 0.4484 - auc: 0.6373 - f1_score: 0.4371 - val_loss: 1.0500 - val_accuracy: 0.4403 - val_auc: 0.6273 - val_f1_score: 0.4264 Epoch 14/50 188/188 [==============================] - 8s 44ms/step - loss: 1.0402 - accuracy: 0.4498 - auc: 0.6392 - f1_score: 0.4397 - val_loss: 1.0503 - val_accuracy: 0.4396 - val_auc: 0.6277 - val_f1_score: 0.4284 Epoch 15/50 188/188 [==============================] - 8s 43ms/step - loss: 1.0395 - accuracy: 0.4512 - auc: 0.6399 - f1_score: 0.4411 - val_loss: 1.0500 - val_accuracy: 0.4408 - val_auc: 0.6274 - val_f1_score: 0.4347 Epoch 16/50 188/188 [==============================] - 8s 44ms/step - loss: 1.0394 - accuracy: 0.4533 - auc: 0.6409 - f1_score: 0.4424 - val_loss: 1.0521 - val_accuracy: 0.4405 - val_auc: 0.6249 - val_f1_score: 0.4358 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 168 0.438048 | 0.432084 | 0.461331 | 0.462369 | 0.653282 | 0.652929 | 0.454237 | 0.454276 | 8 | LSTM | 8 | 7 | . 169 0.441689 | 0.435859 | 0.467380 | 0.468720 | 0.656002 | 0.655920 | 0.454019 | 0.454023 | 9 | LSTM | 8 | 7 | . 170 0.441167 | 0.434844 | 0.474618 | 0.474767 | 0.665433 | 0.663710 | 0.462702 | 0.461737 | 10 | LSTM | 8 | 7 | . 171 0.432137 | 0.426055 | 0.448392 | 0.449677 | 0.637223 | 0.637144 | 0.437986 | 0.438061 | 1 | Simple | 8 | 7 | . 172 0.434884 | 0.428571 | 0.461592 | 0.461419 | 0.648309 | 0.647022 | 0.457222 | 0.456181 | 2 | Simple | 8 | 7 | . 172 rows × 12 columns . Train shape: (83399, 3, 7) Test shape: (10292, 3, 7) Train shape: (83399, 3, 7) Test shape: (10292, 3, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 3, 7)] 0 [] input_2 (InputLayer) [(None, 3, 7)] 0 [] simple_rnn (SimpleRNN) (None, 3, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 3, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 300) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 300) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 608) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 304500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 444,043 Trainable params: 444,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 15s 60ms/step - loss: 1.0857 - accuracy: 0.3679 - auc: 0.5639 - f1_score: 0.4189 - val_loss: 1.0670 - val_accuracy: 0.3898 - val_auc: 0.5994 - val_f1_score: 0.3111 Epoch 2/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0691 - accuracy: 0.3822 - auc: 0.5939 - f1_score: 0.3146 - val_loss: 1.0616 - val_accuracy: 0.3899 - val_auc: 0.6090 - val_f1_score: 0.3402 Epoch 3/50 188/188 [==============================] - 10s 54ms/step - loss: 1.0624 - accuracy: 0.3868 - auc: 0.6053 - f1_score: 0.3605 - val_loss: 1.0587 - val_accuracy: 0.4017 - val_auc: 0.6131 - val_f1_score: 0.4000 Epoch 4/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0576 - accuracy: 0.4081 - auc: 0.6135 - f1_score: 0.4074 - val_loss: 1.0548 - val_accuracy: 0.4287 - val_auc: 0.6191 - val_f1_score: 0.4049 Epoch 5/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0532 - accuracy: 0.4341 - auc: 0.6207 - f1_score: 0.4196 - val_loss: 1.0532 - val_accuracy: 0.4341 - val_auc: 0.6212 - val_f1_score: 0.4043 Epoch 6/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0499 - accuracy: 0.4407 - auc: 0.6251 - f1_score: 0.4238 - val_loss: 1.0524 - val_accuracy: 0.4348 - val_auc: 0.6224 - val_f1_score: 0.4070 Epoch 7/50 188/188 [==============================] - 10s 52ms/step - loss: 1.0468 - accuracy: 0.4446 - auc: 0.6290 - f1_score: 0.4259 - val_loss: 1.0522 - val_accuracy: 0.4372 - val_auc: 0.6231 - val_f1_score: 0.4106 Epoch 8/50 188/188 [==============================] - 10s 55ms/step - loss: 1.0456 - accuracy: 0.4451 - auc: 0.6305 - f1_score: 0.4273 - val_loss: 1.0517 - val_accuracy: 0.4323 - val_auc: 0.6229 - val_f1_score: 0.4087 Epoch 9/50 188/188 [==============================] - 10s 52ms/step - loss: 1.0434 - accuracy: 0.4460 - auc: 0.6337 - f1_score: 0.4298 - val_loss: 1.0505 - val_accuracy: 0.4390 - val_auc: 0.6273 - val_f1_score: 0.4183 Epoch 10/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0425 - accuracy: 0.4488 - auc: 0.6363 - f1_score: 0.4351 - val_loss: 1.0515 - val_accuracy: 0.4347 - val_auc: 0.6264 - val_f1_score: 0.4141 Epoch 11/50 188/188 [==============================] - 10s 54ms/step - loss: 1.0398 - accuracy: 0.4526 - auc: 0.6397 - f1_score: 0.4386 - val_loss: 1.0491 - val_accuracy: 0.4359 - val_auc: 0.6292 - val_f1_score: 0.4219 Epoch 12/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0391 - accuracy: 0.4517 - auc: 0.6402 - f1_score: 0.4392 - val_loss: 1.0489 - val_accuracy: 0.4357 - val_auc: 0.6295 - val_f1_score: 0.4170 Epoch 13/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0375 - accuracy: 0.4526 - auc: 0.6428 - f1_score: 0.4436 - val_loss: 1.0501 - val_accuracy: 0.4371 - val_auc: 0.6293 - val_f1_score: 0.4227 Epoch 14/50 188/188 [==============================] - 10s 54ms/step - loss: 1.0364 - accuracy: 0.4558 - auc: 0.6450 - f1_score: 0.4458 - val_loss: 1.0501 - val_accuracy: 0.4366 - val_auc: 0.6293 - val_f1_score: 0.4204 Epoch 15/50 188/188 [==============================] - 10s 53ms/step - loss: 1.0354 - accuracy: 0.4551 - auc: 0.6452 - f1_score: 0.4464 - val_loss: 1.0483 - val_accuracy: 0.4373 - val_auc: 0.6314 - val_f1_score: 0.4301 Epoch 16/50 188/188 [==============================] - 10s 54ms/step - loss: 1.0342 - accuracy: 0.4552 - auc: 0.6463 - f1_score: 0.4461 - val_loss: 1.0495 - val_accuracy: 0.4433 - val_auc: 0.6304 - val_f1_score: 0.4350 Epoch 17/50 188/188 [==============================] - 11s 57ms/step - loss: 1.0331 - accuracy: 0.4576 - auc: 0.6478 - f1_score: 0.4513 - val_loss: 1.0502 - val_accuracy: 0.4332 - val_auc: 0.6290 - val_f1_score: 0.4223 Epoch 18/50 188/188 [==============================] - 10s 55ms/step - loss: 1.0334 - accuracy: 0.4590 - auc: 0.6479 - f1_score: 0.4512 - val_loss: 1.0499 - val_accuracy: 0.4360 - val_auc: 0.6279 - val_f1_score: 0.4223 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 169 0.441689 | 0.435859 | 0.467380 | 0.468720 | 0.656002 | 0.655920 | 0.454019 | 0.454023 | 9 | LSTM | 8 | 7 | . 170 0.441167 | 0.434844 | 0.474618 | 0.474767 | 0.665433 | 0.663710 | 0.462702 | 0.461737 | 10 | LSTM | 8 | 7 | . 171 0.432137 | 0.426055 | 0.448392 | 0.449677 | 0.637223 | 0.637144 | 0.437986 | 0.438061 | 1 | Simple | 8 | 7 | . 172 0.434884 | 0.428571 | 0.461592 | 0.461419 | 0.648309 | 0.647022 | 0.457222 | 0.456181 | 2 | Simple | 8 | 7 | . 173 0.439088 | 0.432631 | 0.472841 | 0.471886 | 0.662121 | 0.660001 | 0.460382 | 0.458165 | 3 | Simple | 8 | 7 | . 173 rows × 12 columns . Train shape: (83399, 4, 7) Test shape: (10292, 4, 7) Train shape: (83399, 4, 7) Test shape: (10292, 4, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 4, 7)] 0 [] input_2 (InputLayer) [(None, 4, 7)] 0 [] simple_rnn (SimpleRNN) (None, 4, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 4, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 400) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 400) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 808) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 404500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 544,043 Trainable params: 544,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 17s 70ms/step - loss: 1.0831 - accuracy: 0.3963 - auc: 0.5622 - f1_score: 0.4201 - val_loss: 1.0713 - val_accuracy: 0.4234 - val_auc: 0.6031 - val_f1_score: 0.3971 Epoch 2/50 188/188 [==============================] - 12s 63ms/step - loss: 1.0592 - accuracy: 0.4277 - auc: 0.6131 - f1_score: 0.4017 - val_loss: 1.0551 - val_accuracy: 0.4282 - val_auc: 0.6185 - val_f1_score: 0.3939 Epoch 3/50 188/188 [==============================] - 12s 63ms/step - loss: 1.0495 - accuracy: 0.4376 - auc: 0.6265 - f1_score: 0.4093 - val_loss: 1.0509 - val_accuracy: 0.4336 - val_auc: 0.6242 - val_f1_score: 0.4114 Epoch 4/50 188/188 [==============================] - 12s 62ms/step - loss: 1.0452 - accuracy: 0.4428 - auc: 0.6323 - f1_score: 0.4225 - val_loss: 1.0495 - val_accuracy: 0.4373 - val_auc: 0.6267 - val_f1_score: 0.4189 Epoch 5/50 188/188 [==============================] - 11s 60ms/step - loss: 1.0423 - accuracy: 0.4468 - auc: 0.6355 - f1_score: 0.4328 - val_loss: 1.0479 - val_accuracy: 0.4386 - val_auc: 0.6284 - val_f1_score: 0.4246 Epoch 6/50 188/188 [==============================] - 11s 61ms/step - loss: 1.0401 - accuracy: 0.4496 - auc: 0.6389 - f1_score: 0.4379 - val_loss: 1.0475 - val_accuracy: 0.4359 - val_auc: 0.6292 - val_f1_score: 0.4248 Epoch 7/50 188/188 [==============================] - 11s 60ms/step - loss: 1.0389 - accuracy: 0.4530 - auc: 0.6399 - f1_score: 0.4422 - val_loss: 1.0480 - val_accuracy: 0.4375 - val_auc: 0.6286 - val_f1_score: 0.4309 Epoch 8/50 188/188 [==============================] - 12s 62ms/step - loss: 1.0371 - accuracy: 0.4533 - auc: 0.6422 - f1_score: 0.4421 - val_loss: 1.0488 - val_accuracy: 0.4380 - val_auc: 0.6283 - val_f1_score: 0.4301 Epoch 9/50 188/188 [==============================] - 11s 61ms/step - loss: 1.0356 - accuracy: 0.4557 - auc: 0.6451 - f1_score: 0.4479 - val_loss: 1.0480 - val_accuracy: 0.4366 - val_auc: 0.6282 - val_f1_score: 0.4286 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 170 0.441167 | 0.434844 | 0.474618 | 0.474767 | 0.665433 | 0.663710 | 0.462702 | 0.461737 | 10 | LSTM | 8 | 7 | . 171 0.432137 | 0.426055 | 0.448392 | 0.449677 | 0.637223 | 0.637144 | 0.437986 | 0.438061 | 1 | Simple | 8 | 7 | . 172 0.434884 | 0.428571 | 0.461592 | 0.461419 | 0.648309 | 0.647022 | 0.457222 | 0.456181 | 2 | Simple | 8 | 7 | . 173 0.439088 | 0.432631 | 0.472841 | 0.471886 | 0.662121 | 0.660001 | 0.460382 | 0.458165 | 3 | Simple | 8 | 7 | . 174 0.438077 | 0.431860 | 0.464241 | 0.464800 | 0.654350 | 0.653258 | 0.455784 | 0.455303 | 4 | Simple | 8 | 7 | . 174 rows × 12 columns . Train shape: (83399, 5, 7) Test shape: (10292, 5, 7) Train shape: (83399, 5, 7) Test shape: (10292, 5, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 5, 7)] 0 [] input_2 (InputLayer) [(None, 5, 7)] 0 [] simple_rnn (SimpleRNN) (None, 5, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 5, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 500) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 500) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1008) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 504500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 644,043 Trainable params: 644,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 16s 70ms/step - loss: 1.0678 - accuracy: 0.4105 - auc: 0.5973 - f1_score: 0.4331 - val_loss: 1.0545 - val_accuracy: 0.4255 - val_auc: 0.6198 - val_f1_score: 0.3913 Epoch 2/50 188/188 [==============================] - 12s 64ms/step - loss: 1.0505 - accuracy: 0.4375 - auc: 0.6246 - f1_score: 0.4198 - val_loss: 1.0501 - val_accuracy: 0.4391 - val_auc: 0.6274 - val_f1_score: 0.4171 Epoch 3/50 188/188 [==============================] - 12s 65ms/step - loss: 1.0451 - accuracy: 0.4422 - auc: 0.6319 - f1_score: 0.4284 - val_loss: 1.0481 - val_accuracy: 0.4414 - val_auc: 0.6297 - val_f1_score: 0.4296 Epoch 4/50 188/188 [==============================] - 12s 66ms/step - loss: 1.0410 - accuracy: 0.4499 - auc: 0.6381 - f1_score: 0.4391 - val_loss: 1.0487 - val_accuracy: 0.4378 - val_auc: 0.6294 - val_f1_score: 0.4258 Epoch 5/50 188/188 [==============================] - 13s 69ms/step - loss: 1.0387 - accuracy: 0.4506 - auc: 0.6405 - f1_score: 0.4399 - val_loss: 1.0468 - val_accuracy: 0.4411 - val_auc: 0.6307 - val_f1_score: 0.4327 Epoch 6/50 188/188 [==============================] - 12s 64ms/step - loss: 1.0361 - accuracy: 0.4539 - auc: 0.6445 - f1_score: 0.4469 - val_loss: 1.0459 - val_accuracy: 0.4412 - val_auc: 0.6316 - val_f1_score: 0.4373 Epoch 7/50 188/188 [==============================] - 12s 66ms/step - loss: 1.0352 - accuracy: 0.4543 - auc: 0.6456 - f1_score: 0.4497 - val_loss: 1.0467 - val_accuracy: 0.4405 - val_auc: 0.6306 - val_f1_score: 0.4333 Epoch 8/50 188/188 [==============================] - 13s 67ms/step - loss: 1.0320 - accuracy: 0.4599 - auc: 0.6492 - f1_score: 0.4545 - val_loss: 1.0476 - val_accuracy: 0.4436 - val_auc: 0.6308 - val_f1_score: 0.4395 Epoch 9/50 188/188 [==============================] - 13s 68ms/step - loss: 1.0314 - accuracy: 0.4591 - auc: 0.6496 - f1_score: 0.4555 - val_loss: 1.0482 - val_accuracy: 0.4361 - val_auc: 0.6286 - val_f1_score: 0.4293 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 171 0.432137 | 0.426055 | 0.448392 | 0.449677 | 0.637223 | 0.637144 | 0.437986 | 0.438061 | 1 | Simple | 8 | 7 | . 172 0.434884 | 0.428571 | 0.461592 | 0.461419 | 0.648309 | 0.647022 | 0.457222 | 0.456181 | 2 | Simple | 8 | 7 | . 173 0.439088 | 0.432631 | 0.472841 | 0.471886 | 0.662121 | 0.660001 | 0.460382 | 0.458165 | 3 | Simple | 8 | 7 | . 174 0.438077 | 0.431860 | 0.464241 | 0.464800 | 0.654350 | 0.653258 | 0.455784 | 0.455303 | 4 | Simple | 8 | 7 | . 175 0.441899 | 0.435564 | 0.472874 | 0.472494 | 0.664032 | 0.662458 | 0.465522 | 0.464089 | 5 | Simple | 8 | 7 | . 175 rows × 12 columns . Train shape: (83399, 6, 7) Test shape: (10292, 6, 7) Train shape: (83399, 6, 7) Test shape: (10292, 6, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 6, 7)] 0 [] input_2 (InputLayer) [(None, 6, 7)] 0 [] simple_rnn (SimpleRNN) (None, 6, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 6, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 600) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 600) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1208) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 604500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 744,043 Trainable params: 744,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 19s 83ms/step - loss: 1.0703 - accuracy: 0.4115 - auc: 0.5918 - f1_score: 0.4304 - val_loss: 1.0559 - val_accuracy: 0.4342 - val_auc: 0.6179 - val_f1_score: 0.4292 Epoch 2/50 188/188 [==============================] - 14s 76ms/step - loss: 1.0510 - accuracy: 0.4355 - auc: 0.6236 - f1_score: 0.4203 - val_loss: 1.0510 - val_accuracy: 0.4384 - val_auc: 0.6250 - val_f1_score: 0.4286 Epoch 3/50 188/188 [==============================] - 14s 77ms/step - loss: 1.0446 - accuracy: 0.4451 - auc: 0.6327 - f1_score: 0.4331 - val_loss: 1.0490 - val_accuracy: 0.4408 - val_auc: 0.6274 - val_f1_score: 0.4352 Epoch 4/50 188/188 [==============================] - 15s 79ms/step - loss: 1.0421 - accuracy: 0.4463 - auc: 0.6358 - f1_score: 0.4355 - val_loss: 1.0487 - val_accuracy: 0.4388 - val_auc: 0.6285 - val_f1_score: 0.4328 Epoch 5/50 188/188 [==============================] - 17s 89ms/step - loss: 1.0389 - accuracy: 0.4512 - auc: 0.6399 - f1_score: 0.4421 - val_loss: 1.0477 - val_accuracy: 0.4424 - val_auc: 0.6291 - val_f1_score: 0.4390 Epoch 6/50 188/188 [==============================] - 16s 83ms/step - loss: 1.0363 - accuracy: 0.4531 - auc: 0.6427 - f1_score: 0.4438 - val_loss: 1.0472 - val_accuracy: 0.4423 - val_auc: 0.6300 - val_f1_score: 0.4392 Epoch 7/50 188/188 [==============================] - 19s 99ms/step - loss: 1.0336 - accuracy: 0.4570 - auc: 0.6467 - f1_score: 0.4503 - val_loss: 1.0464 - val_accuracy: 0.4438 - val_auc: 0.6314 - val_f1_score: 0.4418 Epoch 8/50 188/188 [==============================] - 17s 89ms/step - loss: 1.0317 - accuracy: 0.4580 - auc: 0.6485 - f1_score: 0.4517 - val_loss: 1.0481 - val_accuracy: 0.4414 - val_auc: 0.6292 - val_f1_score: 0.4381 Epoch 9/50 188/188 [==============================] - 15s 82ms/step - loss: 1.0301 - accuracy: 0.4601 - auc: 0.6509 - f1_score: 0.4529 - val_loss: 1.0453 - val_accuracy: 0.4421 - val_auc: 0.6322 - val_f1_score: 0.4412 Epoch 10/50 188/188 [==============================] - 15s 81ms/step - loss: 1.0283 - accuracy: 0.4642 - auc: 0.6529 - f1_score: 0.4583 - val_loss: 1.0460 - val_accuracy: 0.4442 - val_auc: 0.6319 - val_f1_score: 0.4439 Epoch 11/50 188/188 [==============================] - 15s 82ms/step - loss: 1.0270 - accuracy: 0.4638 - auc: 0.6548 - f1_score: 0.4578 - val_loss: 1.0472 - val_accuracy: 0.4424 - val_auc: 0.6316 - val_f1_score: 0.4402 Epoch 12/50 188/188 [==============================] - 17s 88ms/step - loss: 1.0254 - accuracy: 0.4661 - auc: 0.6558 - f1_score: 0.4609 - val_loss: 1.0469 - val_accuracy: 0.4399 - val_auc: 0.6303 - val_f1_score: 0.4391 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 172 0.434884 | 0.428571 | 0.461592 | 0.461419 | 0.648309 | 0.647022 | 0.457222 | 0.456181 | 2 | Simple | 8 | 7 | . 173 0.439088 | 0.432631 | 0.472841 | 0.471886 | 0.662121 | 0.660001 | 0.460382 | 0.458165 | 3 | Simple | 8 | 7 | . 174 0.438077 | 0.431860 | 0.464241 | 0.464800 | 0.654350 | 0.653258 | 0.455784 | 0.455303 | 4 | Simple | 8 | 7 | . 175 0.441899 | 0.435564 | 0.472874 | 0.472494 | 0.664032 | 0.662458 | 0.465522 | 0.464089 | 5 | Simple | 8 | 7 | . 176 0.444031 | 0.437242 | 0.482227 | 0.479923 | 0.672538 | 0.669067 | 0.481344 | 0.478470 | 6 | Simple | 8 | 7 | . 176 rows × 12 columns . Train shape: (83399, 7, 7) Test shape: (10292, 7, 7) Train shape: (83399, 7, 7) Test shape: (10292, 7, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 7, 7)] 0 [] input_2 (InputLayer) [(None, 7, 7)] 0 [] simple_rnn (SimpleRNN) (None, 7, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 7, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 700) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 700) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1408) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 704500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 844,043 Trainable params: 844,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 23s 97ms/step - loss: 1.0771 - accuracy: 0.3976 - auc: 0.5819 - f1_score: 0.4450 - val_loss: 1.0593 - val_accuracy: 0.4308 - val_auc: 0.6133 - val_f1_score: 0.4112 Epoch 2/50 188/188 [==============================] - 18s 97ms/step - loss: 1.0526 - accuracy: 0.4321 - auc: 0.6210 - f1_score: 0.4242 - val_loss: 1.0532 - val_accuracy: 0.4336 - val_auc: 0.6212 - val_f1_score: 0.4160 Epoch 3/50 188/188 [==============================] - 17s 93ms/step - loss: 1.0465 - accuracy: 0.4393 - auc: 0.6303 - f1_score: 0.4329 - val_loss: 1.0501 - val_accuracy: 0.4445 - val_auc: 0.6258 - val_f1_score: 0.4277 Epoch 4/50 188/188 [==============================] - 18s 95ms/step - loss: 1.0421 - accuracy: 0.4473 - auc: 0.6367 - f1_score: 0.4391 - val_loss: 1.0494 - val_accuracy: 0.4386 - val_auc: 0.6266 - val_f1_score: 0.4219 Epoch 5/50 188/188 [==============================] - 20s 106ms/step - loss: 1.0384 - accuracy: 0.4502 - auc: 0.6409 - f1_score: 0.4440 - val_loss: 1.0483 - val_accuracy: 0.4427 - val_auc: 0.6289 - val_f1_score: 0.4242 Epoch 6/50 188/188 [==============================] - 15s 82ms/step - loss: 1.0351 - accuracy: 0.4538 - auc: 0.6446 - f1_score: 0.4482 - val_loss: 1.0483 - val_accuracy: 0.4471 - val_auc: 0.6306 - val_f1_score: 0.4364 Epoch 7/50 188/188 [==============================] - 15s 81ms/step - loss: 1.0324 - accuracy: 0.4596 - auc: 0.6492 - f1_score: 0.4544 - val_loss: 1.0468 - val_accuracy: 0.4438 - val_auc: 0.6309 - val_f1_score: 0.4328 Epoch 8/50 188/188 [==============================] - 16s 86ms/step - loss: 1.0309 - accuracy: 0.4610 - auc: 0.6508 - f1_score: 0.4557 - val_loss: 1.0497 - val_accuracy: 0.4382 - val_auc: 0.6273 - val_f1_score: 0.4252 Epoch 9/50 188/188 [==============================] - 16s 85ms/step - loss: 1.0295 - accuracy: 0.4629 - auc: 0.6521 - f1_score: 0.4569 - val_loss: 1.0474 - val_accuracy: 0.4409 - val_auc: 0.6294 - val_f1_score: 0.4276 Epoch 10/50 188/188 [==============================] - 16s 84ms/step - loss: 1.0252 - accuracy: 0.4661 - auc: 0.6569 - f1_score: 0.4606 - val_loss: 1.0493 - val_accuracy: 0.4414 - val_auc: 0.6289 - val_f1_score: 0.4274 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 173 0.439088 | 0.432631 | 0.472841 | 0.471886 | 0.662121 | 0.660001 | 0.460382 | 0.458165 | 3 | Simple | 8 | 7 | . 174 0.438077 | 0.431860 | 0.464241 | 0.464800 | 0.654350 | 0.653258 | 0.455784 | 0.455303 | 4 | Simple | 8 | 7 | . 175 0.441899 | 0.435564 | 0.472874 | 0.472494 | 0.664032 | 0.662458 | 0.465522 | 0.464089 | 5 | Simple | 8 | 7 | . 176 0.444031 | 0.437242 | 0.482227 | 0.479923 | 0.672538 | 0.669067 | 0.481344 | 0.478470 | 6 | Simple | 8 | 7 | . 177 0.447461 | 0.440868 | 0.484178 | 0.482863 | 0.674146 | 0.671411 | 0.470896 | 0.468189 | 7 | Simple | 8 | 7 | . 177 rows × 12 columns . Train shape: (83399, 8, 7) Test shape: (10292, 8, 7) Train shape: (83399, 8, 7) Test shape: (10292, 8, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 8, 7)] 0 [] input_2 (InputLayer) [(None, 8, 7)] 0 [] simple_rnn (SimpleRNN) (None, 8, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 8, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 800) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 800) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1608) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 804500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 944,043 Trainable params: 944,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 22s 100ms/step - loss: 1.0711 - accuracy: 0.4033 - auc: 0.5912 - f1_score: 0.4362 - val_loss: 1.0597 - val_accuracy: 0.4234 - val_auc: 0.6136 - val_f1_score: 0.3696 Epoch 2/50 188/188 [==============================] - 18s 96ms/step - loss: 1.0507 - accuracy: 0.4348 - auc: 0.6235 - f1_score: 0.4109 - val_loss: 1.0535 - val_accuracy: 0.4312 - val_auc: 0.6212 - val_f1_score: 0.4131 Epoch 3/50 188/188 [==============================] - 18s 97ms/step - loss: 1.0447 - accuracy: 0.4429 - auc: 0.6327 - f1_score: 0.4284 - val_loss: 1.0507 - val_accuracy: 0.4411 - val_auc: 0.6268 - val_f1_score: 0.4227 Epoch 4/50 188/188 [==============================] - 17s 93ms/step - loss: 1.0405 - accuracy: 0.4500 - auc: 0.6387 - f1_score: 0.4388 - val_loss: 1.0510 - val_accuracy: 0.4378 - val_auc: 0.6261 - val_f1_score: 0.4245 Epoch 5/50 188/188 [==============================] - 19s 101ms/step - loss: 1.0371 - accuracy: 0.4513 - auc: 0.6425 - f1_score: 0.4420 - val_loss: 1.0494 - val_accuracy: 0.4433 - val_auc: 0.6280 - val_f1_score: 0.4274 Epoch 6/50 188/188 [==============================] - 20s 104ms/step - loss: 1.0332 - accuracy: 0.4545 - auc: 0.6469 - f1_score: 0.4446 - val_loss: 1.0486 - val_accuracy: 0.4410 - val_auc: 0.6284 - val_f1_score: 0.4252 Epoch 7/50 188/188 [==============================] - 16s 86ms/step - loss: 1.0315 - accuracy: 0.4583 - auc: 0.6493 - f1_score: 0.4490 - val_loss: 1.0493 - val_accuracy: 0.4380 - val_auc: 0.6288 - val_f1_score: 0.4199 Epoch 8/50 188/188 [==============================] - 17s 93ms/step - loss: 1.0293 - accuracy: 0.4601 - auc: 0.6520 - f1_score: 0.4521 - val_loss: 1.0482 - val_accuracy: 0.4362 - val_auc: 0.6280 - val_f1_score: 0.4219 Epoch 9/50 188/188 [==============================] - 17s 88ms/step - loss: 1.0259 - accuracy: 0.4650 - auc: 0.6563 - f1_score: 0.4574 - val_loss: 1.0494 - val_accuracy: 0.4396 - val_auc: 0.6288 - val_f1_score: 0.4318 Epoch 10/50 188/188 [==============================] - 17s 90ms/step - loss: 1.0237 - accuracy: 0.4683 - auc: 0.6588 - f1_score: 0.4622 - val_loss: 1.0490 - val_accuracy: 0.4411 - val_auc: 0.6280 - val_f1_score: 0.4322 Epoch 11/50 188/188 [==============================] - 17s 89ms/step - loss: 1.0208 - accuracy: 0.4712 - auc: 0.6620 - f1_score: 0.4648 - val_loss: 1.0521 - val_accuracy: 0.4336 - val_auc: 0.6249 - val_f1_score: 0.4271 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 174 0.438077 | 0.431860 | 0.464241 | 0.464800 | 0.654350 | 0.653258 | 0.455784 | 0.455303 | 4 | Simple | 8 | 7 | . 175 0.441899 | 0.435564 | 0.472874 | 0.472494 | 0.664032 | 0.662458 | 0.465522 | 0.464089 | 5 | Simple | 8 | 7 | . 176 0.444031 | 0.437242 | 0.482227 | 0.479923 | 0.672538 | 0.669067 | 0.481344 | 0.478470 | 6 | Simple | 8 | 7 | . 177 0.447461 | 0.440868 | 0.484178 | 0.482863 | 0.674146 | 0.671411 | 0.470896 | 0.468189 | 7 | Simple | 8 | 7 | . 178 0.448383 | 0.441318 | 0.490936 | 0.488175 | 0.682273 | 0.678204 | 0.484347 | 0.480575 | 8 | Simple | 8 | 7 | . 178 rows × 12 columns . Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 9, 7)] 0 [] input_2 (InputLayer) [(None, 9, 7)] 0 [] simple_rnn (SimpleRNN) (None, 9, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 9, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 900) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 900) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1808) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 904500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,044,043 Trainable params: 1,044,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 24s 112ms/step - loss: 1.0848 - accuracy: 0.3709 - auc: 0.5587 - f1_score: 0.4355 - val_loss: 1.0751 - val_accuracy: 0.3823 - val_auc: 0.5831 - val_f1_score: 0.3282 Epoch 2/50 188/188 [==============================] - 22s 119ms/step - loss: 1.0704 - accuracy: 0.3884 - auc: 0.5892 - f1_score: 0.3321 - val_loss: 1.0709 - val_accuracy: 0.3896 - val_auc: 0.5918 - val_f1_score: 0.3315 Epoch 3/50 188/188 [==============================] - 20s 107ms/step - loss: 1.0648 - accuracy: 0.3961 - auc: 0.6009 - f1_score: 0.3526 - val_loss: 1.0693 - val_accuracy: 0.3831 - val_auc: 0.5934 - val_f1_score: 0.3512 Epoch 4/50 188/188 [==============================] - 21s 109ms/step - loss: 1.0597 - accuracy: 0.4009 - auc: 0.6095 - f1_score: 0.3643 - val_loss: 1.0660 - val_accuracy: 0.3906 - val_auc: 0.5989 - val_f1_score: 0.3555 Epoch 5/50 188/188 [==============================] - 20s 106ms/step - loss: 1.0550 - accuracy: 0.4103 - auc: 0.6187 - f1_score: 0.3881 - val_loss: 1.0643 - val_accuracy: 0.4050 - val_auc: 0.6040 - val_f1_score: 0.3896 Epoch 6/50 188/188 [==============================] - 19s 103ms/step - loss: 1.0512 - accuracy: 0.4212 - auc: 0.6245 - f1_score: 0.4070 - val_loss: 1.0630 - val_accuracy: 0.4040 - val_auc: 0.6052 - val_f1_score: 0.3960 Epoch 7/50 188/188 [==============================] - 20s 107ms/step - loss: 1.0457 - accuracy: 0.4306 - auc: 0.6328 - f1_score: 0.4241 - val_loss: 1.0619 - val_accuracy: 0.4121 - val_auc: 0.6094 - val_f1_score: 0.4066 Epoch 8/50 188/188 [==============================] - 20s 104ms/step - loss: 1.0419 - accuracy: 0.4376 - auc: 0.6385 - f1_score: 0.4350 - val_loss: 1.0617 - val_accuracy: 0.4271 - val_auc: 0.6128 - val_f1_score: 0.4208 Epoch 9/50 188/188 [==============================] - 20s 105ms/step - loss: 1.0377 - accuracy: 0.4525 - auc: 0.6459 - f1_score: 0.4513 - val_loss: 1.0611 - val_accuracy: 0.4314 - val_auc: 0.6143 - val_f1_score: 0.4195 Epoch 10/50 188/188 [==============================] - 19s 101ms/step - loss: 1.0307 - accuracy: 0.4658 - auc: 0.6542 - f1_score: 0.4587 - val_loss: 1.0563 - val_accuracy: 0.4347 - val_auc: 0.6202 - val_f1_score: 0.4139 Epoch 11/50 188/188 [==============================] - 20s 105ms/step - loss: 1.0227 - accuracy: 0.4711 - auc: 0.6613 - f1_score: 0.4617 - val_loss: 1.0537 - val_accuracy: 0.4359 - val_auc: 0.6240 - val_f1_score: 0.4123 Epoch 12/50 188/188 [==============================] - 20s 106ms/step - loss: 1.0175 - accuracy: 0.4772 - auc: 0.6667 - f1_score: 0.4691 - val_loss: 1.0551 - val_accuracy: 0.4333 - val_auc: 0.6229 - val_f1_score: 0.4173 Epoch 13/50 188/188 [==============================] - 20s 104ms/step - loss: 1.0122 - accuracy: 0.4831 - auc: 0.6728 - f1_score: 0.4769 - val_loss: 1.0560 - val_accuracy: 0.4349 - val_auc: 0.6242 - val_f1_score: 0.4282 Epoch 14/50 188/188 [==============================] - 19s 103ms/step - loss: 1.0081 - accuracy: 0.4878 - auc: 0.6770 - f1_score: 0.4827 - val_loss: 1.0582 - val_accuracy: 0.4355 - val_auc: 0.6219 - val_f1_score: 0.4118 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 175 0.441899 | 0.435564 | 0.472874 | 0.472494 | 0.664032 | 0.662458 | 0.465522 | 0.464089 | 5 | Simple | 8 | 7 | . 176 0.444031 | 0.437242 | 0.482227 | 0.479923 | 0.672538 | 0.669067 | 0.481344 | 0.478470 | 6 | Simple | 8 | 7 | . 177 0.447461 | 0.440868 | 0.484178 | 0.482863 | 0.674146 | 0.671411 | 0.470896 | 0.468189 | 7 | Simple | 8 | 7 | . 178 0.448383 | 0.441318 | 0.490936 | 0.488175 | 0.682273 | 0.678204 | 0.484347 | 0.480575 | 8 | Simple | 8 | 7 | . 179 0.459260 | 0.451711 | 0.511080 | 0.507385 | 0.701745 | 0.696496 | 0.491997 | 0.486663 | 9 | Simple | 8 | 7 | . 179 rows × 12 columns . Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 7)] 0 [] input_2 (InputLayer) [(None, 10, 7)] 0 [] simple_rnn (SimpleRNN) (None, 10, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 10, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 2008) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1004500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,144,043 Trainable params: 1,144,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 25s 118ms/step - loss: 1.0724 - accuracy: 0.4037 - auc: 0.5888 - f1_score: 0.4524 - val_loss: 1.0573 - val_accuracy: 0.4235 - val_auc: 0.6146 - val_f1_score: 0.4219 Epoch 2/50 188/188 [==============================] - 21s 110ms/step - loss: 1.0494 - accuracy: 0.4368 - auc: 0.6260 - f1_score: 0.4356 - val_loss: 1.0506 - val_accuracy: 0.4405 - val_auc: 0.6270 - val_f1_score: 0.4369 Epoch 3/50 188/188 [==============================] - 20s 108ms/step - loss: 1.0422 - accuracy: 0.4492 - auc: 0.6360 - f1_score: 0.4479 - val_loss: 1.0493 - val_accuracy: 0.4421 - val_auc: 0.6285 - val_f1_score: 0.4425 Epoch 4/50 188/188 [==============================] - 21s 110ms/step - loss: 1.0381 - accuracy: 0.4532 - auc: 0.6414 - f1_score: 0.4510 - val_loss: 1.0490 - val_accuracy: 0.4414 - val_auc: 0.6300 - val_f1_score: 0.4395 Epoch 5/50 188/188 [==============================] - 20s 108ms/step - loss: 1.0337 - accuracy: 0.4581 - auc: 0.6476 - f1_score: 0.4563 - val_loss: 1.0483 - val_accuracy: 0.4440 - val_auc: 0.6310 - val_f1_score: 0.4438 Epoch 6/50 188/188 [==============================] - 20s 109ms/step - loss: 1.0301 - accuracy: 0.4612 - auc: 0.6514 - f1_score: 0.4597 - val_loss: 1.0464 - val_accuracy: 0.4453 - val_auc: 0.6322 - val_f1_score: 0.4456 Epoch 7/50 188/188 [==============================] - 20s 107ms/step - loss: 1.0263 - accuracy: 0.4672 - auc: 0.6558 - f1_score: 0.4655 - val_loss: 1.0475 - val_accuracy: 0.4462 - val_auc: 0.6322 - val_f1_score: 0.4461 Epoch 8/50 188/188 [==============================] - 23s 123ms/step - loss: 1.0234 - accuracy: 0.4714 - auc: 0.6597 - f1_score: 0.4695 - val_loss: 1.0462 - val_accuracy: 0.4457 - val_auc: 0.6334 - val_f1_score: 0.4456 Epoch 9/50 188/188 [==============================] - 21s 113ms/step - loss: 1.0187 - accuracy: 0.4770 - auc: 0.6649 - f1_score: 0.4756 - val_loss: 1.0486 - val_accuracy: 0.4372 - val_auc: 0.6298 - val_f1_score: 0.4376 Epoch 10/50 188/188 [==============================] - 21s 110ms/step - loss: 1.0142 - accuracy: 0.4805 - auc: 0.6693 - f1_score: 0.4799 - val_loss: 1.0503 - val_accuracy: 0.4393 - val_auc: 0.6295 - val_f1_score: 0.4389 Epoch 11/50 188/188 [==============================] - 22s 116ms/step - loss: 1.0112 - accuracy: 0.4835 - auc: 0.6734 - f1_score: 0.4829 - val_loss: 1.0492 - val_accuracy: 0.4392 - val_auc: 0.6299 - val_f1_score: 0.4392 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 176 0.444031 | 0.437242 | 0.482227 | 0.479923 | 0.672538 | 0.669067 | 0.481344 | 0.478470 | 6 | Simple | 8 | 7 | . 177 0.447461 | 0.440868 | 0.484178 | 0.482863 | 0.674146 | 0.671411 | 0.470896 | 0.468189 | 7 | Simple | 8 | 7 | . 178 0.448383 | 0.441318 | 0.490936 | 0.488175 | 0.682273 | 0.678204 | 0.484347 | 0.480575 | 8 | Simple | 8 | 7 | . 179 0.459260 | 0.451711 | 0.511080 | 0.507385 | 0.701745 | 0.696496 | 0.491997 | 0.486663 | 9 | Simple | 8 | 7 | . 180 0.454417 | 0.446841 | 0.511266 | 0.505680 | 0.698243 | 0.692201 | 0.511400 | 0.505325 | 10 | Simple | 8 | 7 | . 180 rows × 12 columns . . El resultado se condensó en el siguiente dataframe: . display(Report) . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h . 1 0.409215 | 0.402452 | 0.390826 | 0.394498 | 0.569866 | 0.570228 | 0.354709 | 0.356641 | 1 | LSTM | 2 | 3 | . 2 0.412872 | 0.406182 | 0.401225 | 0.404161 | 0.582815 | 0.582820 | 0.366837 | 0.368093 | 2 | LSTM | 2 | 3 | . 3 0.414844 | 0.408316 | 0.408670 | 0.411257 | 0.591682 | 0.592314 | 0.384350 | 0.385402 | 3 | LSTM | 2 | 3 | . 4 0.417667 | 0.411080 | 0.419287 | 0.420617 | 0.602573 | 0.602214 | 0.407251 | 0.407376 | 4 | LSTM | 2 | 3 | . 5 0.419681 | 0.413222 | 0.421249 | 0.423352 | 0.605344 | 0.605543 | 0.404745 | 0.405495 | 5 | LSTM | 2 | 3 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 176 0.444031 | 0.437242 | 0.482227 | 0.479923 | 0.672538 | 0.669067 | 0.481344 | 0.478470 | 6 | Simple | 8 | 7 | . 177 0.447461 | 0.440868 | 0.484178 | 0.482863 | 0.674146 | 0.671411 | 0.470896 | 0.468189 | 7 | Simple | 8 | 7 | . 178 0.448383 | 0.441318 | 0.490936 | 0.488175 | 0.682273 | 0.678204 | 0.484347 | 0.480575 | 8 | Simple | 8 | 7 | . 179 0.459260 | 0.451711 | 0.511080 | 0.507385 | 0.701745 | 0.696496 | 0.491997 | 0.486663 | 9 | Simple | 8 | 7 | . 180 0.454417 | 0.446841 | 0.511266 | 0.505680 | 0.698243 | 0.692201 | 0.511400 | 0.505325 | 10 | Simple | 8 | 7 | . 180 rows × 12 columns . . A continuación podemos ver una visualización de esta tabla. Se pueden ver los resultados en función de: el numero de partidos considerados (eje x), el tipo de red recurrente (tipo de RNN), el número de variables históricas por partido (# V x $P_h$), y el número de variables para el partido a modelar (# V x $P_m$). A través de ello vemos que el mejor resultado se obtiene para una red con: . Tipo de red recurrente: Simple | Número de partidos a considerar: 9 o 10 (a priori elegiría 9, para tener menos parámetros) | Features por cada partidos del historial (para la RNN): &#39;play_home&#39;, &#39;is_cup&#39;, &#39;rating_diff&#39;, &#39;goal_diff&#39;, &#39;coach_continuity&#39;, &#39;relevance&#39;, &#39;is_friendly&#39; | Features del partido a modelar: &#39;Rating_diff&#39;, &#39;EqA_Local&#39;, &#39;is_cup&#39;, &#39;Equipo_A_coach_continuity&#39;, &#39;Equipo_B_coach_continuity&#39;, &#39;diff_num_partidos_diez_dias&#39;, &#39;diff_num_partidos_tres_semanas&#39;, &#39;is_friendly&#39; | . Algunas observaciones que podemos hacer son: . La precisión lograda por la red con RNN LSTM parece crecer de forma más &quot;suave&quot; a medida que considero más encuentros | Si miramos a las cuatro curvas con menor precisión podemos ver una comparación entre considerar la diferencia de gol (rojo para la LSTM, verde para la Simple) o simplemente el resultado nominal (azul para la LSTM, cyan para la Simple). En ambos casos, considerar la diferencia de gol se ve reflejado en una mejora en los resultados del modelo. Esto tiene bastante sentido si se lo piensa, dado que la diferencia de gol no solo codifica la información cualitativa del resultado (Victoria, Derrota o Empate) sino que también la cuantitativa. Deinitivamente parece razonable pensar que un equipo que gana todos sus partidos anteriores por goleada tiene más chances de ganar el siguiente encuentro que uno que lo ha hecho por la mínima. | . fffmp.plot_report_table(Report,&#39;accuracy test&#39;,&#39;Test Accuracy&#39;,[&#39;LSTM&#39;,&#39;Simple&#39;],[3,2,7],[2,5,8]) . Finalmente, hay una última cosa que quise probar: el efecto del batch size. Para el entrenamiento de los 180 modelos elegí un batch size relativamente grande para reducir los tiempos de entrenamiento. Esperaría que reducir el mismo permitiera mejorar la precisión final del modelo, sin embargo he ledio que tamaños muy pequeños de batch pueden hacer que finalmente no converja al mínimo global. . Para analizar esto utilizaré 7 valores de batch size para los cuales entrenaré modelos con los parámetros seleccionados en el paso anterior. Aprovecharé igualmente la oportunidad para terminar de decidir que número de partidos considerar para el modelo final: $9$ o $10$. . Report2=pd.DataFrame() . index=0 for n_partidos in [9,10]: for bsz in [16,32,128,400,512,1024,2048]: M_A,M_A_test=fffmp.generate_input_for_RNN(X_train,X_test,F_h_3,[&#39;Equipo_A&#39;],n_partidos,standarize=True) M_B,M_B_test=fffmp.generate_input_for_RNN(X_train,X_test,F_h_3,[&#39;Equipo_B&#39;],n_partidos,standarize=True) H_Features=[] A_train,A_test=fffmp.generate_input_for_NN(X_train,X_test,H_Features,N_Features_3,standarize=True) fffmp.clean_all_models() time_steps=n_partidos predictors=len(F_h_3) tipo_RNN=&#39;Simple&#39; recurrent_units=100 dense_units=[500,200,80,20,10] dense_drop_out=0.1 out_shape=3 input_shape_history=(time_steps,predictors) input_shape_now=A_train.shape[1] metrics=[&#39;accuracy&#39;,&#39;AUC&#39;,F1] IFA=fffmp.Create_Mix_Model(tipo_RNN ,recurrent_units, dense_units,dense_drop_out, out_shape, input_shape_history,input_shape_now,metrics) batch_size = bsz epochs = 50 validation_split=0.1 y_train_pred,y_test_pred,Results=fffmp.Full_train_and_Report(IFA,[M_A,M_B,A_train],y_train,[M_A_test,M_B_test,A_test],y_test,batch_size,epochs,validation_split,num_classes=3,history_plot=False,confusion_matrix=False,Report_print=False) index=index+1 name=str(index) Report2=fffmp.Append_line_to_report_table_2(Report2,Results,name,tipo_de_RNN,n_partidos,len(F_h),len(N_Features),batch_size) . Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 9, 7)] 0 [] input_2 (InputLayer) [(None, 9, 7)] 0 [] simple_rnn (SimpleRNN) (None, 9, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 9, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 900) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 900) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1808) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 904500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,044,043 Trainable params: 1,044,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 4692/4692 [==============================] - 112s 23ms/step - loss: 1.0633 - accuracy: 0.4204 - auc: 0.6039 - f1_score: 0.4484 - val_loss: 1.0532 - val_accuracy: 0.4303 - val_auc: 0.6210 - val_f1_score: 0.4132 Epoch 2/50 4692/4692 [==============================] - 99s 21ms/step - loss: 1.0460 - accuracy: 0.4422 - auc: 0.6304 - f1_score: 0.4385 - val_loss: 1.0509 - val_accuracy: 0.4414 - val_auc: 0.6271 - val_f1_score: 0.4413 Epoch 3/50 4692/4692 [==============================] - 113s 24ms/step - loss: 1.0410 - accuracy: 0.4471 - auc: 0.6370 - f1_score: 0.4446 - val_loss: 1.0489 - val_accuracy: 0.4329 - val_auc: 0.6253 - val_f1_score: 0.4325 Epoch 4/50 4692/4692 [==============================] - 105s 22ms/step - loss: 1.0367 - accuracy: 0.4522 - auc: 0.6422 - f1_score: 0.4494 - val_loss: 1.0512 - val_accuracy: 0.4372 - val_auc: 0.6248 - val_f1_score: 0.4377 Epoch 5/50 4692/4692 [==============================] - 103s 22ms/step - loss: 1.0329 - accuracy: 0.4548 - auc: 0.6471 - f1_score: 0.4510 - val_loss: 1.0500 - val_accuracy: 0.4367 - val_auc: 0.6252 - val_f1_score: 0.4289 Epoch 6/50 4692/4692 [==============================] - 101s 22ms/step - loss: 1.0297 - accuracy: 0.4588 - auc: 0.6509 - f1_score: 0.4546 - val_loss: 1.0491 - val_accuracy: 0.4385 - val_auc: 0.6276 - val_f1_score: 0.4349 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h Batch_size . 187 0.441131 | 0.434578 | 0.473245 | 0.47216 | 0.666454 | 0.664029 | 0.469595 | 0.467718 | 9 | Simple | 8 | 7 | 16 | . Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 9, 7)] 0 [] input_2 (InputLayer) [(None, 9, 7)] 0 [] simple_rnn (SimpleRNN) (None, 9, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 9, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 900) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 900) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1808) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 904500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,044,043 Trainable params: 1,044,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 2346/2346 [==============================] - 72s 29ms/step - loss: 1.0583 - accuracy: 0.4255 - auc: 0.6125 - f1_score: 0.4458 - val_loss: 1.0538 - val_accuracy: 0.4333 - val_auc: 0.6209 - val_f1_score: 0.4321 Epoch 2/50 2346/2346 [==============================] - 69s 30ms/step - loss: 1.0464 - accuracy: 0.4417 - auc: 0.6302 - f1_score: 0.4386 - val_loss: 1.0490 - val_accuracy: 0.4393 - val_auc: 0.6269 - val_f1_score: 0.4340 Epoch 3/50 2346/2346 [==============================] - 68s 29ms/step - loss: 1.0402 - accuracy: 0.4465 - auc: 0.6381 - f1_score: 0.4430 - val_loss: 1.0484 - val_accuracy: 0.4392 - val_auc: 0.6277 - val_f1_score: 0.4343 Epoch 4/50 2346/2346 [==============================] - 68s 29ms/step - loss: 1.0368 - accuracy: 0.4521 - auc: 0.6422 - f1_score: 0.4489 - val_loss: 1.0484 - val_accuracy: 0.4372 - val_auc: 0.6278 - val_f1_score: 0.4375 Epoch 5/50 2346/2346 [==============================] - 71s 30ms/step - loss: 1.0315 - accuracy: 0.4573 - auc: 0.6486 - f1_score: 0.4557 - val_loss: 1.0494 - val_accuracy: 0.4438 - val_auc: 0.6296 - val_f1_score: 0.4376 Epoch 6/50 2346/2346 [==============================] - 72s 31ms/step - loss: 1.0272 - accuracy: 0.4617 - auc: 0.6534 - f1_score: 0.4607 - val_loss: 1.0507 - val_accuracy: 0.4412 - val_auc: 0.6257 - val_f1_score: 0.4407 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h Batch_size . 187 0.441131 | 0.434578 | 0.473245 | 0.472160 | 0.666454 | 0.664029 | 0.469595 | 0.467718 | 9 | Simple | 8 | 7 | 16 | . 188 0.442311 | 0.435448 | 0.478902 | 0.477179 | 0.672710 | 0.669219 | 0.477678 | 0.475327 | 9 | Simple | 8 | 7 | 32 | . Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 9, 7)] 0 [] input_2 (InputLayer) [(None, 9, 7)] 0 [] simple_rnn (SimpleRNN) (None, 9, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 9, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 900) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 900) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1808) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 904500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,044,043 Trainable params: 1,044,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 587/587 [==============================] - 33s 51ms/step - loss: 1.0649 - accuracy: 0.4171 - auc: 0.6015 - f1_score: 0.4478 - val_loss: 1.0536 - val_accuracy: 0.4317 - val_auc: 0.6196 - val_f1_score: 0.4285 Epoch 2/50 587/587 [==============================] - 28s 48ms/step - loss: 1.0467 - accuracy: 0.4407 - auc: 0.6298 - f1_score: 0.4362 - val_loss: 1.0506 - val_accuracy: 0.4376 - val_auc: 0.6235 - val_f1_score: 0.4326 Epoch 3/50 587/587 [==============================] - 37s 63ms/step - loss: 1.0394 - accuracy: 0.4499 - auc: 0.6391 - f1_score: 0.4457 - val_loss: 1.0491 - val_accuracy: 0.4381 - val_auc: 0.6270 - val_f1_score: 0.4318 Epoch 4/50 587/587 [==============================] - 35s 60ms/step - loss: 1.0353 - accuracy: 0.4552 - auc: 0.6443 - f1_score: 0.4516 - val_loss: 1.0506 - val_accuracy: 0.4331 - val_auc: 0.6261 - val_f1_score: 0.4306 Epoch 5/50 587/587 [==============================] - 32s 55ms/step - loss: 1.0324 - accuracy: 0.4574 - auc: 0.6483 - f1_score: 0.4540 - val_loss: 1.0494 - val_accuracy: 0.4380 - val_auc: 0.6277 - val_f1_score: 0.4352 Epoch 6/50 587/587 [==============================] - 36s 61ms/step - loss: 1.0270 - accuracy: 0.4640 - auc: 0.6544 - f1_score: 0.4609 - val_loss: 1.0496 - val_accuracy: 0.4421 - val_auc: 0.6295 - val_f1_score: 0.4418 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h Batch_size . 187 0.441131 | 0.434578 | 0.473245 | 0.472160 | 0.666454 | 0.664029 | 0.469595 | 0.467718 | 9 | Simple | 8 | 7 | 16 | . 188 0.442311 | 0.435448 | 0.478902 | 0.477179 | 0.672710 | 0.669219 | 0.477678 | 0.475327 | 9 | Simple | 8 | 7 | 32 | . 189 0.446093 | 0.439337 | 0.480308 | 0.478325 | 0.672880 | 0.669636 | 0.479657 | 0.477065 | 9 | Simple | 8 | 7 | 128 | . Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 9, 7)] 0 [] input_2 (InputLayer) [(None, 9, 7)] 0 [] simple_rnn (SimpleRNN) (None, 9, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 9, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 900) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 900) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1808) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 904500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,044,043 Trainable params: 1,044,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 22s 103ms/step - loss: 1.0849 - accuracy: 0.3706 - auc: 0.5502 - f1_score: 0.4271 - val_loss: 1.0712 - val_accuracy: 0.4155 - val_auc: 0.5979 - val_f1_score: 0.4133 Epoch 2/50 188/188 [==============================] - 19s 101ms/step - loss: 1.0597 - accuracy: 0.4232 - auc: 0.6096 - f1_score: 0.4180 - val_loss: 1.0550 - val_accuracy: 0.4297 - val_auc: 0.6197 - val_f1_score: 0.4082 Epoch 3/50 188/188 [==============================] - 19s 100ms/step - loss: 1.0497 - accuracy: 0.4352 - auc: 0.6246 - f1_score: 0.4189 - val_loss: 1.0502 - val_accuracy: 0.4373 - val_auc: 0.6270 - val_f1_score: 0.4162 Epoch 4/50 188/188 [==============================] - 19s 101ms/step - loss: 1.0439 - accuracy: 0.4413 - auc: 0.6326 - f1_score: 0.4235 - val_loss: 1.0494 - val_accuracy: 0.4408 - val_auc: 0.6280 - val_f1_score: 0.4219 Epoch 5/50 188/188 [==============================] - 20s 107ms/step - loss: 1.0394 - accuracy: 0.4464 - auc: 0.6387 - f1_score: 0.4321 - val_loss: 1.0489 - val_accuracy: 0.4463 - val_auc: 0.6292 - val_f1_score: 0.4359 Epoch 6/50 188/188 [==============================] - 21s 113ms/step - loss: 1.0353 - accuracy: 0.4512 - auc: 0.6440 - f1_score: 0.4364 - val_loss: 1.0489 - val_accuracy: 0.4343 - val_auc: 0.6270 - val_f1_score: 0.4182 Epoch 7/50 188/188 [==============================] - 21s 110ms/step - loss: 1.0328 - accuracy: 0.4538 - auc: 0.6467 - f1_score: 0.4393 - val_loss: 1.0501 - val_accuracy: 0.4368 - val_auc: 0.6274 - val_f1_score: 0.4222 Epoch 8/50 188/188 [==============================] - 20s 106ms/step - loss: 1.0295 - accuracy: 0.4568 - auc: 0.6507 - f1_score: 0.4427 - val_loss: 1.0493 - val_accuracy: 0.4418 - val_auc: 0.6297 - val_f1_score: 0.4335 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h Batch_size . 187 0.441131 | 0.434578 | 0.473245 | 0.472160 | 0.666454 | 0.664029 | 0.469595 | 0.467718 | 9 | Simple | 8 | 7 | 16 | . 188 0.442311 | 0.435448 | 0.478902 | 0.477179 | 0.672710 | 0.669219 | 0.477678 | 0.475327 | 9 | Simple | 8 | 7 | 32 | . 189 0.446093 | 0.439337 | 0.480308 | 0.478325 | 0.672880 | 0.669636 | 0.479657 | 0.477065 | 9 | Simple | 8 | 7 | 128 | . 190 0.443027 | 0.436428 | 0.474978 | 0.473915 | 0.667663 | 0.665021 | 0.464835 | 0.462748 | 9 | Simple | 8 | 7 | 400 | . Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 9, 7)] 0 [] input_2 (InputLayer) [(None, 9, 7)] 0 [] simple_rnn (SimpleRNN) (None, 9, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 9, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 900) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 900) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1808) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 904500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,044,043 Trainable params: 1,044,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 147/147 [==============================] - 21s 125ms/step - loss: 1.0777 - accuracy: 0.3938 - auc: 0.5798 - f1_score: 0.4332 - val_loss: 1.0619 - val_accuracy: 0.4209 - val_auc: 0.6059 - val_f1_score: 0.3650 Epoch 2/50 147/147 [==============================] - 18s 124ms/step - loss: 1.0532 - accuracy: 0.4310 - auc: 0.6198 - f1_score: 0.4129 - val_loss: 1.0565 - val_accuracy: 0.4265 - val_auc: 0.6149 - val_f1_score: 0.3995 Epoch 3/50 147/147 [==============================] - 19s 127ms/step - loss: 1.0462 - accuracy: 0.4406 - auc: 0.6303 - f1_score: 0.4286 - val_loss: 1.0530 - val_accuracy: 0.4331 - val_auc: 0.6216 - val_f1_score: 0.4096 Epoch 4/50 147/147 [==============================] - 22s 146ms/step - loss: 1.0406 - accuracy: 0.4482 - auc: 0.6377 - f1_score: 0.4399 - val_loss: 1.0506 - val_accuracy: 0.4359 - val_auc: 0.6248 - val_f1_score: 0.4134 Epoch 5/50 147/147 [==============================] - 19s 132ms/step - loss: 1.0365 - accuracy: 0.4511 - auc: 0.6422 - f1_score: 0.4422 - val_loss: 1.0512 - val_accuracy: 0.4356 - val_auc: 0.6265 - val_f1_score: 0.4173 Epoch 6/50 147/147 [==============================] - 21s 141ms/step - loss: 1.0330 - accuracy: 0.4559 - auc: 0.6473 - f1_score: 0.4484 - val_loss: 1.0489 - val_accuracy: 0.4368 - val_auc: 0.6281 - val_f1_score: 0.4220 Epoch 7/50 147/147 [==============================] - 19s 131ms/step - loss: 1.0293 - accuracy: 0.4599 - auc: 0.6519 - f1_score: 0.4542 - val_loss: 1.0489 - val_accuracy: 0.4433 - val_auc: 0.6294 - val_f1_score: 0.4344 Epoch 8/50 147/147 [==============================] - 19s 131ms/step - loss: 1.0272 - accuracy: 0.4625 - auc: 0.6547 - f1_score: 0.4574 - val_loss: 1.0500 - val_accuracy: 0.4376 - val_auc: 0.6278 - val_f1_score: 0.4289 Epoch 9/50 147/147 [==============================] - 17s 113ms/step - loss: 1.0230 - accuracy: 0.4679 - auc: 0.6591 - f1_score: 0.4639 - val_loss: 1.0485 - val_accuracy: 0.4440 - val_auc: 0.6309 - val_f1_score: 0.4378 Epoch 10/50 147/147 [==============================] - 18s 124ms/step - loss: 1.0203 - accuracy: 0.4705 - auc: 0.6626 - f1_score: 0.4672 - val_loss: 1.0512 - val_accuracy: 0.4381 - val_auc: 0.6283 - val_f1_score: 0.4317 Epoch 11/50 147/147 [==============================] - 20s 136ms/step - loss: 1.0171 - accuracy: 0.4762 - auc: 0.6668 - f1_score: 0.4732 - val_loss: 1.0496 - val_accuracy: 0.4429 - val_auc: 0.6293 - val_f1_score: 0.4406 Epoch 12/50 147/147 [==============================] - 18s 120ms/step - loss: 1.0128 - accuracy: 0.4787 - auc: 0.6708 - f1_score: 0.4764 - val_loss: 1.0534 - val_accuracy: 0.4335 - val_auc: 0.6274 - val_f1_score: 0.4308 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h Batch_size . 187 0.441131 | 0.434578 | 0.473245 | 0.472160 | 0.666454 | 0.664029 | 0.469595 | 0.467718 | 9 | Simple | 8 | 7 | 16 | . 188 0.442311 | 0.435448 | 0.478902 | 0.477179 | 0.672710 | 0.669219 | 0.477678 | 0.475327 | 9 | Simple | 8 | 7 | 32 | . 189 0.446093 | 0.439337 | 0.480308 | 0.478325 | 0.672880 | 0.669636 | 0.479657 | 0.477065 | 9 | Simple | 8 | 7 | 128 | . 190 0.443027 | 0.436428 | 0.474978 | 0.473915 | 0.667663 | 0.665021 | 0.464835 | 0.462748 | 9 | Simple | 8 | 7 | 400 | . 191 0.456781 | 0.449321 | 0.501564 | 0.496869 | 0.694333 | 0.688926 | 0.498937 | 0.493470 | 9 | Simple | 8 | 7 | 512 | . Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 9, 7)] 0 [] input_2 (InputLayer) [(None, 9, 7)] 0 [] simple_rnn (SimpleRNN) (None, 9, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 9, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 900) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 900) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1808) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 904500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,044,043 Trainable params: 1,044,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 74/74 [==============================] - 21s 245ms/step - loss: 1.0715 - accuracy: 0.4061 - auc: 0.5895 - f1_score: 0.4525 - val_loss: 1.0560 - val_accuracy: 0.4278 - val_auc: 0.6171 - val_f1_score: 0.4215 Epoch 2/50 74/74 [==============================] - 15s 199ms/step - loss: 1.0514 - accuracy: 0.4345 - auc: 0.6220 - f1_score: 0.4320 - val_loss: 1.0518 - val_accuracy: 0.4381 - val_auc: 0.6235 - val_f1_score: 0.4361 Epoch 3/50 74/74 [==============================] - 15s 203ms/step - loss: 1.0461 - accuracy: 0.4410 - auc: 0.6303 - f1_score: 0.4379 - val_loss: 1.0506 - val_accuracy: 0.4366 - val_auc: 0.6251 - val_f1_score: 0.4338 Epoch 4/50 74/74 [==============================] - 16s 223ms/step - loss: 1.0434 - accuracy: 0.4448 - auc: 0.6338 - f1_score: 0.4430 - val_loss: 1.0487 - val_accuracy: 0.4351 - val_auc: 0.6268 - val_f1_score: 0.4344 Epoch 5/50 74/74 [==============================] - 15s 204ms/step - loss: 1.0403 - accuracy: 0.4491 - auc: 0.6383 - f1_score: 0.4475 - val_loss: 1.0479 - val_accuracy: 0.4409 - val_auc: 0.6290 - val_f1_score: 0.4341 Epoch 6/50 74/74 [==============================] - 14s 190ms/step - loss: 1.0352 - accuracy: 0.4539 - auc: 0.6444 - f1_score: 0.4522 - val_loss: 1.0471 - val_accuracy: 0.4397 - val_auc: 0.6297 - val_f1_score: 0.4391 Epoch 7/50 74/74 [==============================] - 14s 185ms/step - loss: 1.0332 - accuracy: 0.4577 - auc: 0.6475 - f1_score: 0.4550 - val_loss: 1.0461 - val_accuracy: 0.4442 - val_auc: 0.6321 - val_f1_score: 0.4433 Epoch 8/50 74/74 [==============================] - 14s 194ms/step - loss: 1.0309 - accuracy: 0.4611 - auc: 0.6501 - f1_score: 0.4590 - val_loss: 1.0472 - val_accuracy: 0.4420 - val_auc: 0.6311 - val_f1_score: 0.4385 Epoch 9/50 74/74 [==============================] - 15s 199ms/step - loss: 1.0274 - accuracy: 0.4642 - auc: 0.6542 - f1_score: 0.4623 - val_loss: 1.0461 - val_accuracy: 0.4453 - val_auc: 0.6320 - val_f1_score: 0.4456 Epoch 10/50 74/74 [==============================] - 15s 201ms/step - loss: 1.0251 - accuracy: 0.4687 - auc: 0.6572 - f1_score: 0.4669 - val_loss: 1.0485 - val_accuracy: 0.4440 - val_auc: 0.6307 - val_f1_score: 0.4411 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h Batch_size . 187 0.441131 | 0.434578 | 0.473245 | 0.472160 | 0.666454 | 0.664029 | 0.469595 | 0.467718 | 9 | Simple | 8 | 7 | 16 | . 188 0.442311 | 0.435448 | 0.478902 | 0.477179 | 0.672710 | 0.669219 | 0.477678 | 0.475327 | 9 | Simple | 8 | 7 | 32 | . 189 0.446093 | 0.439337 | 0.480308 | 0.478325 | 0.672880 | 0.669636 | 0.479657 | 0.477065 | 9 | Simple | 8 | 7 | 128 | . 190 0.443027 | 0.436428 | 0.474978 | 0.473915 | 0.667663 | 0.665021 | 0.464835 | 0.462748 | 9 | Simple | 8 | 7 | 400 | . 191 0.456781 | 0.449321 | 0.501564 | 0.496869 | 0.694333 | 0.688926 | 0.498937 | 0.493470 | 9 | Simple | 8 | 7 | 512 | . 192 0.447441 | 0.440803 | 0.485399 | 0.483510 | 0.674612 | 0.671808 | 0.482636 | 0.480019 | 9 | Simple | 8 | 7 | 1024 | . Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 9, 7) Test shape: (10292, 9, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 9, 7)] 0 [] input_2 (InputLayer) [(None, 9, 7)] 0 [] simple_rnn (SimpleRNN) (None, 9, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 9, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 900) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 900) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 1808) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 904500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,044,043 Trainable params: 1,044,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 37/37 [==============================] - 16s 346ms/step - loss: 1.0914 - accuracy: 0.3702 - auc: 0.5444 - f1_score: 0.4270 - val_loss: 1.0764 - val_accuracy: 0.4055 - val_auc: 0.5880 - val_f1_score: 0.3882 Epoch 2/50 37/37 [==============================] - 13s 342ms/step - loss: 1.0693 - accuracy: 0.4153 - auc: 0.5985 - f1_score: 0.4068 - val_loss: 1.0645 - val_accuracy: 0.4191 - val_auc: 0.6064 - val_f1_score: 0.4067 Epoch 3/50 37/37 [==============================] - 12s 328ms/step - loss: 1.0582 - accuracy: 0.4291 - auc: 0.6151 - f1_score: 0.4196 - val_loss: 1.0582 - val_accuracy: 0.4249 - val_auc: 0.6141 - val_f1_score: 0.3989 Epoch 4/50 37/37 [==============================] - 12s 314ms/step - loss: 1.0518 - accuracy: 0.4363 - auc: 0.6234 - f1_score: 0.4250 - val_loss: 1.0547 - val_accuracy: 0.4344 - val_auc: 0.6190 - val_f1_score: 0.4162 Epoch 5/50 37/37 [==============================] - 13s 359ms/step - loss: 1.0474 - accuracy: 0.4389 - auc: 0.6288 - f1_score: 0.4273 - val_loss: 1.0530 - val_accuracy: 0.4373 - val_auc: 0.6221 - val_f1_score: 0.4218 Epoch 6/50 37/37 [==============================] - 12s 329ms/step - loss: 1.0442 - accuracy: 0.4476 - auc: 0.6343 - f1_score: 0.4351 - val_loss: 1.0511 - val_accuracy: 0.4365 - val_auc: 0.6244 - val_f1_score: 0.4235 Epoch 7/50 37/37 [==============================] - 11s 309ms/step - loss: 1.0413 - accuracy: 0.4475 - auc: 0.6377 - f1_score: 0.4363 - val_loss: 1.0503 - val_accuracy: 0.4359 - val_auc: 0.6252 - val_f1_score: 0.4237 Epoch 8/50 37/37 [==============================] - 11s 310ms/step - loss: 1.0397 - accuracy: 0.4499 - auc: 0.6398 - f1_score: 0.4381 - val_loss: 1.0494 - val_accuracy: 0.4390 - val_auc: 0.6269 - val_f1_score: 0.4264 Epoch 9/50 37/37 [==============================] - 13s 355ms/step - loss: 1.0379 - accuracy: 0.4532 - auc: 0.6428 - f1_score: 0.4417 - val_loss: 1.0488 - val_accuracy: 0.4423 - val_auc: 0.6282 - val_f1_score: 0.4315 Epoch 10/50 37/37 [==============================] - 12s 326ms/step - loss: 1.0346 - accuracy: 0.4560 - auc: 0.6461 - f1_score: 0.4463 - val_loss: 1.0476 - val_accuracy: 0.4406 - val_auc: 0.6293 - val_f1_score: 0.4301 Epoch 11/50 37/37 [==============================] - 12s 327ms/step - loss: 1.0322 - accuracy: 0.4597 - auc: 0.6496 - f1_score: 0.4518 - val_loss: 1.0488 - val_accuracy: 0.4405 - val_auc: 0.6292 - val_f1_score: 0.4309 Epoch 12/50 37/37 [==============================] - 12s 316ms/step - loss: 1.0299 - accuracy: 0.4604 - auc: 0.6515 - f1_score: 0.4519 - val_loss: 1.0480 - val_accuracy: 0.4436 - val_auc: 0.6300 - val_f1_score: 0.4306 Epoch 13/50 37/37 [==============================] - 12s 324ms/step - loss: 1.0288 - accuracy: 0.4634 - auc: 0.6533 - f1_score: 0.4541 - val_loss: 1.0472 - val_accuracy: 0.4422 - val_auc: 0.6302 - val_f1_score: 0.4334 Epoch 14/50 37/37 [==============================] - 12s 333ms/step - loss: 1.0263 - accuracy: 0.4671 - auc: 0.6566 - f1_score: 0.4598 - val_loss: 1.0463 - val_accuracy: 0.4475 - val_auc: 0.6319 - val_f1_score: 0.4410 Epoch 15/50 37/37 [==============================] - 12s 337ms/step - loss: 1.0251 - accuracy: 0.4668 - auc: 0.6579 - f1_score: 0.4593 - val_loss: 1.0470 - val_accuracy: 0.4429 - val_auc: 0.6319 - val_f1_score: 0.4350 Epoch 16/50 37/37 [==============================] - 12s 318ms/step - loss: 1.0225 - accuracy: 0.4690 - auc: 0.6604 - f1_score: 0.4630 - val_loss: 1.0462 - val_accuracy: 0.4464 - val_auc: 0.6323 - val_f1_score: 0.4403 Epoch 17/50 37/37 [==============================] - 14s 371ms/step - loss: 1.0197 - accuracy: 0.4741 - auc: 0.6642 - f1_score: 0.4688 - val_loss: 1.0472 - val_accuracy: 0.4454 - val_auc: 0.6326 - val_f1_score: 0.4422 Epoch 18/50 37/37 [==============================] - 13s 345ms/step - loss: 1.0184 - accuracy: 0.4759 - auc: 0.6658 - f1_score: 0.4713 - val_loss: 1.0467 - val_accuracy: 0.4442 - val_auc: 0.6328 - val_f1_score: 0.4407 Epoch 19/50 37/37 [==============================] - 12s 316ms/step - loss: 1.0162 - accuracy: 0.4790 - auc: 0.6684 - f1_score: 0.4744 - val_loss: 1.0481 - val_accuracy: 0.4402 - val_auc: 0.6307 - val_f1_score: 0.4356 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h Batch_size . 187 0.441131 | 0.434578 | 0.473245 | 0.472160 | 0.666454 | 0.664029 | 0.469595 | 0.467718 | 9 | Simple | 8 | 7 | 16 | . 188 0.442311 | 0.435448 | 0.478902 | 0.477179 | 0.672710 | 0.669219 | 0.477678 | 0.475327 | 9 | Simple | 8 | 7 | 32 | . 189 0.446093 | 0.439337 | 0.480308 | 0.478325 | 0.672880 | 0.669636 | 0.479657 | 0.477065 | 9 | Simple | 8 | 7 | 128 | . 190 0.443027 | 0.436428 | 0.474978 | 0.473915 | 0.667663 | 0.665021 | 0.464835 | 0.462748 | 9 | Simple | 8 | 7 | 400 | . 191 0.456781 | 0.449321 | 0.501564 | 0.496869 | 0.694333 | 0.688926 | 0.498937 | 0.493470 | 9 | Simple | 8 | 7 | 512 | . 192 0.447441 | 0.440803 | 0.485399 | 0.483510 | 0.674612 | 0.671808 | 0.482636 | 0.480019 | 9 | Simple | 8 | 7 | 1024 | . 193 0.450135 | 0.442987 | 0.497422 | 0.493428 | 0.687756 | 0.683027 | 0.493345 | 0.488634 | 9 | Simple | 8 | 7 | 2048 | . Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 7)] 0 [] input_2 (InputLayer) [(None, 10, 7)] 0 [] simple_rnn (SimpleRNN) (None, 10, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 10, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 2008) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1004500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,144,043 Trainable params: 1,144,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 4692/4692 [==============================] - 117s 24ms/step - loss: 1.0617 - accuracy: 0.4217 - auc: 0.6066 - f1_score: 0.4583 - val_loss: 1.0544 - val_accuracy: 0.4345 - val_auc: 0.6204 - val_f1_score: 0.4273 Epoch 2/50 4692/4692 [==============================] - 111s 24ms/step - loss: 1.0468 - accuracy: 0.4382 - auc: 0.6287 - f1_score: 0.4380 - val_loss: 1.0520 - val_accuracy: 0.4362 - val_auc: 0.6239 - val_f1_score: 0.4339 Epoch 3/50 4692/4692 [==============================] - 112s 24ms/step - loss: 1.0410 - accuracy: 0.4475 - auc: 0.6375 - f1_score: 0.4468 - val_loss: 1.0512 - val_accuracy: 0.4398 - val_auc: 0.6259 - val_f1_score: 0.4352 Epoch 4/50 4692/4692 [==============================] - 110s 23ms/step - loss: 1.0359 - accuracy: 0.4526 - auc: 0.6435 - f1_score: 0.4508 - val_loss: 1.0483 - val_accuracy: 0.4397 - val_auc: 0.6281 - val_f1_score: 0.4351 Epoch 5/50 4692/4692 [==============================] - 108s 23ms/step - loss: 1.0317 - accuracy: 0.4572 - auc: 0.6486 - f1_score: 0.4558 - val_loss: 1.0492 - val_accuracy: 0.4399 - val_auc: 0.6279 - val_f1_score: 0.4350 Epoch 6/50 4692/4692 [==============================] - 113s 24ms/step - loss: 1.0264 - accuracy: 0.4615 - auc: 0.6543 - f1_score: 0.4601 - val_loss: 1.0501 - val_accuracy: 0.4384 - val_auc: 0.6257 - val_f1_score: 0.4382 Epoch 7/50 4692/4692 [==============================] - 109s 23ms/step - loss: 1.0210 - accuracy: 0.4693 - auc: 0.6608 - f1_score: 0.4681 - val_loss: 1.0510 - val_accuracy: 0.4374 - val_auc: 0.6260 - val_f1_score: 0.4346 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h Batch_size . 187 0.441131 | 0.434578 | 0.473245 | 0.472160 | 0.666454 | 0.664029 | 0.469595 | 0.467718 | 9 | Simple | 8 | 7 | 16 | . 188 0.442311 | 0.435448 | 0.478902 | 0.477179 | 0.672710 | 0.669219 | 0.477678 | 0.475327 | 9 | Simple | 8 | 7 | 32 | . 189 0.446093 | 0.439337 | 0.480308 | 0.478325 | 0.672880 | 0.669636 | 0.479657 | 0.477065 | 9 | Simple | 8 | 7 | 128 | . 190 0.443027 | 0.436428 | 0.474978 | 0.473915 | 0.667663 | 0.665021 | 0.464835 | 0.462748 | 9 | Simple | 8 | 7 | 400 | . 191 0.456781 | 0.449321 | 0.501564 | 0.496869 | 0.694333 | 0.688926 | 0.498937 | 0.493470 | 9 | Simple | 8 | 7 | 512 | . 192 0.447441 | 0.440803 | 0.485399 | 0.483510 | 0.674612 | 0.671808 | 0.482636 | 0.480019 | 9 | Simple | 8 | 7 | 1024 | . 193 0.450135 | 0.442987 | 0.497422 | 0.493428 | 0.687756 | 0.683027 | 0.493345 | 0.488634 | 9 | Simple | 8 | 7 | 2048 | . 194 0.448821 | 0.441714 | 0.490696 | 0.487371 | 0.682879 | 0.678741 | 0.487946 | 0.483883 | 10 | Simple | 8 | 7 | 16 | . Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 7)] 0 [] input_2 (InputLayer) [(None, 10, 7)] 0 [] simple_rnn (SimpleRNN) (None, 10, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 10, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 2008) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1004500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,144,043 Trainable params: 1,144,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 2346/2346 [==============================] - 70s 29ms/step - loss: 1.0621 - accuracy: 0.4179 - auc: 0.6059 - f1_score: 0.4509 - val_loss: 1.0565 - val_accuracy: 0.4302 - val_auc: 0.6199 - val_f1_score: 0.4152 Epoch 2/50 2346/2346 [==============================] - 66s 28ms/step - loss: 1.0466 - accuracy: 0.4425 - auc: 0.6299 - f1_score: 0.4335 - val_loss: 1.0520 - val_accuracy: 0.4251 - val_auc: 0.6211 - val_f1_score: 0.4215 Epoch 3/50 2346/2346 [==============================] - 62s 26ms/step - loss: 1.0392 - accuracy: 0.4481 - auc: 0.6394 - f1_score: 0.4424 - val_loss: 1.0522 - val_accuracy: 0.4382 - val_auc: 0.6253 - val_f1_score: 0.4333 Epoch 4/50 2346/2346 [==============================] - 56s 24ms/step - loss: 1.0361 - accuracy: 0.4506 - auc: 0.6429 - f1_score: 0.4446 - val_loss: 1.0487 - val_accuracy: 0.4361 - val_auc: 0.6266 - val_f1_score: 0.4333 Epoch 5/50 2346/2346 [==============================] - 56s 24ms/step - loss: 1.0324 - accuracy: 0.4574 - auc: 0.6479 - f1_score: 0.4523 - val_loss: 1.0498 - val_accuracy: 0.4418 - val_auc: 0.6272 - val_f1_score: 0.4403 Epoch 6/50 2346/2346 [==============================] - 55s 24ms/step - loss: 1.0280 - accuracy: 0.4628 - auc: 0.6529 - f1_score: 0.4592 - val_loss: 1.0491 - val_accuracy: 0.4400 - val_auc: 0.6287 - val_f1_score: 0.4389 Epoch 7/50 2346/2346 [==============================] - 56s 24ms/step - loss: 1.0233 - accuracy: 0.4666 - auc: 0.6581 - f1_score: 0.4641 - val_loss: 1.0509 - val_accuracy: 0.4373 - val_auc: 0.6251 - val_f1_score: 0.4350 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h Batch_size . 187 0.441131 | 0.434578 | 0.473245 | 0.472160 | 0.666454 | 0.664029 | 0.469595 | 0.467718 | 9 | Simple | 8 | 7 | 16 | . 188 0.442311 | 0.435448 | 0.478902 | 0.477179 | 0.672710 | 0.669219 | 0.477678 | 0.475327 | 9 | Simple | 8 | 7 | 32 | . 189 0.446093 | 0.439337 | 0.480308 | 0.478325 | 0.672880 | 0.669636 | 0.479657 | 0.477065 | 9 | Simple | 8 | 7 | 128 | . 190 0.443027 | 0.436428 | 0.474978 | 0.473915 | 0.667663 | 0.665021 | 0.464835 | 0.462748 | 9 | Simple | 8 | 7 | 400 | . 191 0.456781 | 0.449321 | 0.501564 | 0.496869 | 0.694333 | 0.688926 | 0.498937 | 0.493470 | 9 | Simple | 8 | 7 | 512 | . 192 0.447441 | 0.440803 | 0.485399 | 0.483510 | 0.674612 | 0.671808 | 0.482636 | 0.480019 | 9 | Simple | 8 | 7 | 1024 | . 193 0.450135 | 0.442987 | 0.497422 | 0.493428 | 0.687756 | 0.683027 | 0.493345 | 0.488634 | 9 | Simple | 8 | 7 | 2048 | . 194 0.448821 | 0.441714 | 0.490696 | 0.487371 | 0.682879 | 0.678741 | 0.487946 | 0.483883 | 10 | Simple | 8 | 7 | 16 | . 195 0.443511 | 0.436343 | 0.484538 | 0.480040 | 0.674689 | 0.669694 | 0.483001 | 0.478206 | 10 | Simple | 8 | 7 | 32 | . Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 7)] 0 [] input_2 (InputLayer) [(None, 10, 7)] 0 [] simple_rnn (SimpleRNN) (None, 10, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 10, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 2008) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1004500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,144,043 Trainable params: 1,144,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 587/587 [==============================] - 29s 45ms/step - loss: 1.0637 - accuracy: 0.4174 - auc: 0.6031 - f1_score: 0.4491 - val_loss: 1.0537 - val_accuracy: 0.4338 - val_auc: 0.6210 - val_f1_score: 0.4320 Epoch 2/50 587/587 [==============================] - 25s 43ms/step - loss: 1.0461 - accuracy: 0.4421 - auc: 0.6308 - f1_score: 0.4367 - val_loss: 1.0521 - val_accuracy: 0.4423 - val_auc: 0.6252 - val_f1_score: 0.4387 Epoch 3/50 587/587 [==============================] - 27s 46ms/step - loss: 1.0400 - accuracy: 0.4481 - auc: 0.6383 - f1_score: 0.4445 - val_loss: 1.0506 - val_accuracy: 0.4416 - val_auc: 0.6271 - val_f1_score: 0.4403 Epoch 4/50 587/587 [==============================] - 27s 46ms/step - loss: 1.0352 - accuracy: 0.4536 - auc: 0.6439 - f1_score: 0.4507 - val_loss: 1.0491 - val_accuracy: 0.4438 - val_auc: 0.6303 - val_f1_score: 0.4415 Epoch 5/50 587/587 [==============================] - 27s 46ms/step - loss: 1.0301 - accuracy: 0.4599 - auc: 0.6504 - f1_score: 0.4558 - val_loss: 1.0500 - val_accuracy: 0.4406 - val_auc: 0.6299 - val_f1_score: 0.4377 Epoch 6/50 587/587 [==============================] - 26s 44ms/step - loss: 1.0262 - accuracy: 0.4644 - auc: 0.6553 - f1_score: 0.4617 - val_loss: 1.0497 - val_accuracy: 0.4384 - val_auc: 0.6282 - val_f1_score: 0.4372 Epoch 7/50 587/587 [==============================] - 26s 44ms/step - loss: 1.0230 - accuracy: 0.4673 - auc: 0.6587 - f1_score: 0.4645 - val_loss: 1.0487 - val_accuracy: 0.4421 - val_auc: 0.6308 - val_f1_score: 0.4409 Epoch 8/50 587/587 [==============================] - 25s 43ms/step - loss: 1.0188 - accuracy: 0.4726 - auc: 0.6633 - f1_score: 0.4710 - val_loss: 1.0493 - val_accuracy: 0.4446 - val_auc: 0.6308 - val_f1_score: 0.4406 Epoch 9/50 587/587 [==============================] - 26s 44ms/step - loss: 1.0139 - accuracy: 0.4792 - auc: 0.6692 - f1_score: 0.4774 - val_loss: 1.0498 - val_accuracy: 0.4373 - val_auc: 0.6292 - val_f1_score: 0.4364 Epoch 10/50 587/587 [==============================] - 26s 44ms/step - loss: 1.0093 - accuracy: 0.4825 - auc: 0.6734 - f1_score: 0.4810 - val_loss: 1.0527 - val_accuracy: 0.4451 - val_auc: 0.6305 - val_f1_score: 0.4449 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h Batch_size . 187 0.441131 | 0.434578 | 0.473245 | 0.472160 | 0.666454 | 0.664029 | 0.469595 | 0.467718 | 9 | Simple | 8 | 7 | 16 | . 188 0.442311 | 0.435448 | 0.478902 | 0.477179 | 0.672710 | 0.669219 | 0.477678 | 0.475327 | 9 | Simple | 8 | 7 | 32 | . 189 0.446093 | 0.439337 | 0.480308 | 0.478325 | 0.672880 | 0.669636 | 0.479657 | 0.477065 | 9 | Simple | 8 | 7 | 128 | . 190 0.443027 | 0.436428 | 0.474978 | 0.473915 | 0.667663 | 0.665021 | 0.464835 | 0.462748 | 9 | Simple | 8 | 7 | 400 | . 191 0.456781 | 0.449321 | 0.501564 | 0.496869 | 0.694333 | 0.688926 | 0.498937 | 0.493470 | 9 | Simple | 8 | 7 | 512 | . 192 0.447441 | 0.440803 | 0.485399 | 0.483510 | 0.674612 | 0.671808 | 0.482636 | 0.480019 | 9 | Simple | 8 | 7 | 1024 | . 193 0.450135 | 0.442987 | 0.497422 | 0.493428 | 0.687756 | 0.683027 | 0.493345 | 0.488634 | 9 | Simple | 8 | 7 | 2048 | . 194 0.448821 | 0.441714 | 0.490696 | 0.487371 | 0.682879 | 0.678741 | 0.487946 | 0.483883 | 10 | Simple | 8 | 7 | 16 | . 195 0.443511 | 0.436343 | 0.484538 | 0.480040 | 0.674689 | 0.669694 | 0.483001 | 0.478206 | 10 | Simple | 8 | 7 | 32 | . 196 0.459900 | 0.451976 | 0.511004 | 0.505062 | 0.700253 | 0.693634 | 0.511145 | 0.504673 | 10 | Simple | 8 | 7 | 128 | . Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 7)] 0 [] input_2 (InputLayer) [(None, 10, 7)] 0 [] simple_rnn (SimpleRNN) (None, 10, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 10, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 2008) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1004500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,144,043 Trainable params: 1,144,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 188/188 [==============================] - 22s 105ms/step - loss: 1.0841 - accuracy: 0.3700 - auc: 0.5683 - f1_score: 0.4450 - val_loss: 1.0717 - val_accuracy: 0.3778 - val_auc: 0.5892 - val_f1_score: 0.3202 Epoch 2/50 188/188 [==============================] - 19s 99ms/step - loss: 1.0670 - accuracy: 0.3826 - auc: 0.5981 - f1_score: 0.3450 - val_loss: 1.0665 - val_accuracy: 0.3765 - val_auc: 0.6002 - val_f1_score: 0.3600 Epoch 3/50 188/188 [==============================] - 19s 99ms/step - loss: 1.0582 - accuracy: 0.4004 - auc: 0.6125 - f1_score: 0.3956 - val_loss: 1.0607 - val_accuracy: 0.4303 - val_auc: 0.6102 - val_f1_score: 0.3923 Epoch 4/50 188/188 [==============================] - 19s 99ms/step - loss: 1.0505 - accuracy: 0.4353 - auc: 0.6233 - f1_score: 0.4198 - val_loss: 1.0562 - val_accuracy: 0.4315 - val_auc: 0.6163 - val_f1_score: 0.3852 Epoch 5/50 188/188 [==============================] - 19s 100ms/step - loss: 1.0442 - accuracy: 0.4453 - auc: 0.6313 - f1_score: 0.4248 - val_loss: 1.0540 - val_accuracy: 0.4388 - val_auc: 0.6197 - val_f1_score: 0.4087 Epoch 6/50 188/188 [==============================] - 20s 105ms/step - loss: 1.0383 - accuracy: 0.4513 - auc: 0.6389 - f1_score: 0.4311 - val_loss: 1.0536 - val_accuracy: 0.4399 - val_auc: 0.6223 - val_f1_score: 0.4096 Epoch 7/50 188/188 [==============================] - 19s 103ms/step - loss: 1.0337 - accuracy: 0.4545 - auc: 0.6458 - f1_score: 0.4369 - val_loss: 1.0508 - val_accuracy: 0.4450 - val_auc: 0.6276 - val_f1_score: 0.4128 Epoch 8/50 188/188 [==============================] - 19s 102ms/step - loss: 1.0290 - accuracy: 0.4607 - auc: 0.6515 - f1_score: 0.4459 - val_loss: 1.0494 - val_accuracy: 0.4422 - val_auc: 0.6278 - val_f1_score: 0.4220 Epoch 9/50 188/188 [==============================] - 19s 102ms/step - loss: 1.0260 - accuracy: 0.4648 - auc: 0.6558 - f1_score: 0.4555 - val_loss: 1.0495 - val_accuracy: 0.4438 - val_auc: 0.6285 - val_f1_score: 0.4221 Epoch 10/50 188/188 [==============================] - 19s 100ms/step - loss: 1.0213 - accuracy: 0.4700 - auc: 0.6610 - f1_score: 0.4600 - val_loss: 1.0512 - val_accuracy: 0.4394 - val_auc: 0.6275 - val_f1_score: 0.4244 Epoch 11/50 188/188 [==============================] - 19s 102ms/step - loss: 1.0173 - accuracy: 0.4731 - auc: 0.6653 - f1_score: 0.4650 - val_loss: 1.0510 - val_accuracy: 0.4416 - val_auc: 0.6282 - val_f1_score: 0.4293 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h Batch_size . 187 0.441131 | 0.434578 | 0.473245 | 0.472160 | 0.666454 | 0.664029 | 0.469595 | 0.467718 | 9 | Simple | 8 | 7 | 16 | . 188 0.442311 | 0.435448 | 0.478902 | 0.477179 | 0.672710 | 0.669219 | 0.477678 | 0.475327 | 9 | Simple | 8 | 7 | 32 | . 189 0.446093 | 0.439337 | 0.480308 | 0.478325 | 0.672880 | 0.669636 | 0.479657 | 0.477065 | 9 | Simple | 8 | 7 | 128 | . 190 0.443027 | 0.436428 | 0.474978 | 0.473915 | 0.667663 | 0.665021 | 0.464835 | 0.462748 | 9 | Simple | 8 | 7 | 400 | . 191 0.456781 | 0.449321 | 0.501564 | 0.496869 | 0.694333 | 0.688926 | 0.498937 | 0.493470 | 9 | Simple | 8 | 7 | 512 | . 192 0.447441 | 0.440803 | 0.485399 | 0.483510 | 0.674612 | 0.671808 | 0.482636 | 0.480019 | 9 | Simple | 8 | 7 | 1024 | . 193 0.450135 | 0.442987 | 0.497422 | 0.493428 | 0.687756 | 0.683027 | 0.493345 | 0.488634 | 9 | Simple | 8 | 7 | 2048 | . 194 0.448821 | 0.441714 | 0.490696 | 0.487371 | 0.682879 | 0.678741 | 0.487946 | 0.483883 | 10 | Simple | 8 | 7 | 16 | . 195 0.443511 | 0.436343 | 0.484538 | 0.480040 | 0.674689 | 0.669694 | 0.483001 | 0.478206 | 10 | Simple | 8 | 7 | 32 | . 196 0.459900 | 0.451976 | 0.511004 | 0.505062 | 0.700253 | 0.693634 | 0.511145 | 0.504673 | 10 | Simple | 8 | 7 | 128 | . 197 0.449845 | 0.442440 | 0.501510 | 0.497780 | 0.690488 | 0.685359 | 0.490910 | 0.485880 | 10 | Simple | 8 | 7 | 400 | . Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 7)] 0 [] input_2 (InputLayer) [(None, 10, 7)] 0 [] simple_rnn (SimpleRNN) (None, 10, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 10, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 2008) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1004500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,144,043 Trainable params: 1,144,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 147/147 [==============================] - 20s 124ms/step - loss: 1.0701 - accuracy: 0.4071 - auc: 0.5927 - f1_score: 0.4456 - val_loss: 1.0597 - val_accuracy: 0.4192 - val_auc: 0.6106 - val_f1_score: 0.3781 Epoch 2/50 147/147 [==============================] - 17s 116ms/step - loss: 1.0513 - accuracy: 0.4345 - auc: 0.6227 - f1_score: 0.4189 - val_loss: 1.0553 - val_accuracy: 0.4281 - val_auc: 0.6187 - val_f1_score: 0.4006 Epoch 3/50 147/147 [==============================] - 17s 115ms/step - loss: 1.0448 - accuracy: 0.4420 - auc: 0.6323 - f1_score: 0.4304 - val_loss: 1.0540 - val_accuracy: 0.4319 - val_auc: 0.6199 - val_f1_score: 0.4197 Epoch 4/50 147/147 [==============================] - 17s 113ms/step - loss: 1.0385 - accuracy: 0.4483 - auc: 0.6398 - f1_score: 0.4403 - val_loss: 1.0515 - val_accuracy: 0.4368 - val_auc: 0.6244 - val_f1_score: 0.4299 Epoch 5/50 147/147 [==============================] - 17s 113ms/step - loss: 1.0367 - accuracy: 0.4512 - auc: 0.6424 - f1_score: 0.4444 - val_loss: 1.0504 - val_accuracy: 0.4400 - val_auc: 0.6258 - val_f1_score: 0.4358 Epoch 6/50 147/147 [==============================] - 18s 120ms/step - loss: 1.0317 - accuracy: 0.4589 - auc: 0.6490 - f1_score: 0.4537 - val_loss: 1.0496 - val_accuracy: 0.4416 - val_auc: 0.6282 - val_f1_score: 0.4364 Epoch 7/50 147/147 [==============================] - 17s 116ms/step - loss: 1.0265 - accuracy: 0.4645 - auc: 0.6555 - f1_score: 0.4609 - val_loss: 1.0516 - val_accuracy: 0.4442 - val_auc: 0.6262 - val_f1_score: 0.4355 Epoch 8/50 147/147 [==============================] - 17s 113ms/step - loss: 1.0233 - accuracy: 0.4681 - auc: 0.6594 - f1_score: 0.4643 - val_loss: 1.0523 - val_accuracy: 0.4387 - val_auc: 0.6255 - val_f1_score: 0.4325 Epoch 9/50 147/147 [==============================] - 17s 113ms/step - loss: 1.0201 - accuracy: 0.4745 - auc: 0.6630 - f1_score: 0.4717 - val_loss: 1.0505 - val_accuracy: 0.4369 - val_auc: 0.6276 - val_f1_score: 0.4311 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h Batch_size . 187 0.441131 | 0.434578 | 0.473245 | 0.472160 | 0.666454 | 0.664029 | 0.469595 | 0.467718 | 9 | Simple | 8 | 7 | 16 | . 188 0.442311 | 0.435448 | 0.478902 | 0.477179 | 0.672710 | 0.669219 | 0.477678 | 0.475327 | 9 | Simple | 8 | 7 | 32 | . 189 0.446093 | 0.439337 | 0.480308 | 0.478325 | 0.672880 | 0.669636 | 0.479657 | 0.477065 | 9 | Simple | 8 | 7 | 128 | . 190 0.443027 | 0.436428 | 0.474978 | 0.473915 | 0.667663 | 0.665021 | 0.464835 | 0.462748 | 9 | Simple | 8 | 7 | 400 | . 191 0.456781 | 0.449321 | 0.501564 | 0.496869 | 0.694333 | 0.688926 | 0.498937 | 0.493470 | 9 | Simple | 8 | 7 | 512 | . 192 0.447441 | 0.440803 | 0.485399 | 0.483510 | 0.674612 | 0.671808 | 0.482636 | 0.480019 | 9 | Simple | 8 | 7 | 1024 | . 193 0.450135 | 0.442987 | 0.497422 | 0.493428 | 0.687756 | 0.683027 | 0.493345 | 0.488634 | 9 | Simple | 8 | 7 | 2048 | . 194 0.448821 | 0.441714 | 0.490696 | 0.487371 | 0.682879 | 0.678741 | 0.487946 | 0.483883 | 10 | Simple | 8 | 7 | 16 | . 195 0.443511 | 0.436343 | 0.484538 | 0.480040 | 0.674689 | 0.669694 | 0.483001 | 0.478206 | 10 | Simple | 8 | 7 | 32 | . 196 0.459900 | 0.451976 | 0.511004 | 0.505062 | 0.700253 | 0.693634 | 0.511145 | 0.504673 | 10 | Simple | 8 | 7 | 128 | . 197 0.449845 | 0.442440 | 0.501510 | 0.497780 | 0.690488 | 0.685359 | 0.490910 | 0.485880 | 10 | Simple | 8 | 7 | 400 | . 198 0.450055 | 0.442938 | 0.497825 | 0.494075 | 0.686454 | 0.681993 | 0.493459 | 0.488841 | 10 | Simple | 8 | 7 | 512 | . Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 7)] 0 [] input_2 (InputLayer) [(None, 10, 7)] 0 [] simple_rnn (SimpleRNN) (None, 10, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 10, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 2008) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1004500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,144,043 Trainable params: 1,144,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 74/74 [==============================] - 17s 196ms/step - loss: 1.0857 - accuracy: 0.3809 - auc: 0.5550 - f1_score: 0.4414 - val_loss: 1.0718 - val_accuracy: 0.4206 - val_auc: 0.5938 - val_f1_score: 0.4183 Epoch 2/50 74/74 [==============================] - 18s 246ms/step - loss: 1.0642 - accuracy: 0.4290 - auc: 0.6056 - f1_score: 0.4272 - val_loss: 1.0591 - val_accuracy: 0.4306 - val_auc: 0.6151 - val_f1_score: 0.4280 Epoch 3/50 74/74 [==============================] - 17s 228ms/step - loss: 1.0520 - accuracy: 0.4395 - auc: 0.6253 - f1_score: 0.4389 - val_loss: 1.0521 - val_accuracy: 0.4343 - val_auc: 0.6227 - val_f1_score: 0.4315 Epoch 4/50 74/74 [==============================] - 16s 210ms/step - loss: 1.0441 - accuracy: 0.4473 - auc: 0.6346 - f1_score: 0.4462 - val_loss: 1.0499 - val_accuracy: 0.4393 - val_auc: 0.6260 - val_f1_score: 0.4355 Epoch 5/50 74/74 [==============================] - 15s 199ms/step - loss: 1.0395 - accuracy: 0.4502 - auc: 0.6405 - f1_score: 0.4480 - val_loss: 1.0483 - val_accuracy: 0.4433 - val_auc: 0.6287 - val_f1_score: 0.4373 Epoch 6/50 74/74 [==============================] - 15s 199ms/step - loss: 1.0366 - accuracy: 0.4561 - auc: 0.6445 - f1_score: 0.4540 - val_loss: 1.0468 - val_accuracy: 0.4429 - val_auc: 0.6299 - val_f1_score: 0.4408 Epoch 7/50 74/74 [==============================] - 15s 200ms/step - loss: 1.0318 - accuracy: 0.4632 - auc: 0.6501 - f1_score: 0.4618 - val_loss: 1.0474 - val_accuracy: 0.4417 - val_auc: 0.6303 - val_f1_score: 0.4407 Epoch 8/50 74/74 [==============================] - 16s 213ms/step - loss: 1.0287 - accuracy: 0.4670 - auc: 0.6541 - f1_score: 0.4656 - val_loss: 1.0472 - val_accuracy: 0.4415 - val_auc: 0.6307 - val_f1_score: 0.4398 Epoch 9/50 74/74 [==============================] - 15s 198ms/step - loss: 1.0256 - accuracy: 0.4715 - auc: 0.6579 - f1_score: 0.4698 - val_loss: 1.0481 - val_accuracy: 0.4408 - val_auc: 0.6301 - val_f1_score: 0.4413 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h Batch_size . 187 0.441131 | 0.434578 | 0.473245 | 0.472160 | 0.666454 | 0.664029 | 0.469595 | 0.467718 | 9 | Simple | 8 | 7 | 16 | . 188 0.442311 | 0.435448 | 0.478902 | 0.477179 | 0.672710 | 0.669219 | 0.477678 | 0.475327 | 9 | Simple | 8 | 7 | 32 | . 189 0.446093 | 0.439337 | 0.480308 | 0.478325 | 0.672880 | 0.669636 | 0.479657 | 0.477065 | 9 | Simple | 8 | 7 | 128 | . 190 0.443027 | 0.436428 | 0.474978 | 0.473915 | 0.667663 | 0.665021 | 0.464835 | 0.462748 | 9 | Simple | 8 | 7 | 400 | . 191 0.456781 | 0.449321 | 0.501564 | 0.496869 | 0.694333 | 0.688926 | 0.498937 | 0.493470 | 9 | Simple | 8 | 7 | 512 | . 192 0.447441 | 0.440803 | 0.485399 | 0.483510 | 0.674612 | 0.671808 | 0.482636 | 0.480019 | 9 | Simple | 8 | 7 | 1024 | . 193 0.450135 | 0.442987 | 0.497422 | 0.493428 | 0.687756 | 0.683027 | 0.493345 | 0.488634 | 9 | Simple | 8 | 7 | 2048 | . 194 0.448821 | 0.441714 | 0.490696 | 0.487371 | 0.682879 | 0.678741 | 0.487946 | 0.483883 | 10 | Simple | 8 | 7 | 16 | . 195 0.443511 | 0.436343 | 0.484538 | 0.480040 | 0.674689 | 0.669694 | 0.483001 | 0.478206 | 10 | Simple | 8 | 7 | 32 | . 196 0.459900 | 0.451976 | 0.511004 | 0.505062 | 0.700253 | 0.693634 | 0.511145 | 0.504673 | 10 | Simple | 8 | 7 | 128 | . 197 0.449845 | 0.442440 | 0.501510 | 0.497780 | 0.690488 | 0.685359 | 0.490910 | 0.485880 | 10 | Simple | 8 | 7 | 400 | . 198 0.450055 | 0.442938 | 0.497825 | 0.494075 | 0.686454 | 0.681993 | 0.493459 | 0.488841 | 10 | Simple | 8 | 7 | 512 | . 199 0.446104 | 0.439218 | 0.489334 | 0.486293 | 0.676767 | 0.673071 | 0.489919 | 0.486513 | 10 | Simple | 8 | 7 | 1024 | . Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 7)] 0 [] input_2 (InputLayer) [(None, 10, 7)] 0 [] simple_rnn (SimpleRNN) (None, 10, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 10, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 2008) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1004500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,144,043 Trainable params: 1,144,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 37/37 [==============================] - 16s 365ms/step - loss: 1.0839 - accuracy: 0.3832 - auc: 0.5671 - f1_score: 0.4423 - val_loss: 1.0659 - val_accuracy: 0.4182 - val_auc: 0.6016 - val_f1_score: 0.4021 Epoch 2/50 37/37 [==============================] - 13s 347ms/step - loss: 1.0592 - accuracy: 0.4237 - auc: 0.6109 - f1_score: 0.4114 - val_loss: 1.0595 - val_accuracy: 0.4308 - val_auc: 0.6124 - val_f1_score: 0.4074 Epoch 3/50 37/37 [==============================] - 13s 348ms/step - loss: 1.0521 - accuracy: 0.4328 - auc: 0.6215 - f1_score: 0.4221 - val_loss: 1.0569 - val_accuracy: 0.4323 - val_auc: 0.6174 - val_f1_score: 0.4189 Epoch 4/50 37/37 [==============================] - 13s 347ms/step - loss: 1.0474 - accuracy: 0.4375 - auc: 0.6276 - f1_score: 0.4293 - val_loss: 1.0562 - val_accuracy: 0.4313 - val_auc: 0.6196 - val_f1_score: 0.4128 Epoch 5/50 37/37 [==============================] - 13s 350ms/step - loss: 1.0449 - accuracy: 0.4401 - auc: 0.6315 - f1_score: 0.4326 - val_loss: 1.0541 - val_accuracy: 0.4337 - val_auc: 0.6217 - val_f1_score: 0.4201 Epoch 6/50 37/37 [==============================] - 15s 398ms/step - loss: 1.0421 - accuracy: 0.4431 - auc: 0.6347 - f1_score: 0.4356 - val_loss: 1.0524 - val_accuracy: 0.4381 - val_auc: 0.6245 - val_f1_score: 0.4256 Epoch 7/50 37/37 [==============================] - 14s 370ms/step - loss: 1.0385 - accuracy: 0.4476 - auc: 0.6394 - f1_score: 0.4419 - val_loss: 1.0516 - val_accuracy: 0.4375 - val_auc: 0.6257 - val_f1_score: 0.4272 Epoch 8/50 37/37 [==============================] - 13s 358ms/step - loss: 1.0365 - accuracy: 0.4529 - auc: 0.6428 - f1_score: 0.4480 - val_loss: 1.0519 - val_accuracy: 0.4379 - val_auc: 0.6253 - val_f1_score: 0.4290 Epoch 9/50 37/37 [==============================] - 14s 372ms/step - loss: 1.0344 - accuracy: 0.4560 - auc: 0.6453 - f1_score: 0.4508 - val_loss: 1.0509 - val_accuracy: 0.4374 - val_auc: 0.6273 - val_f1_score: 0.4248 Epoch 10/50 37/37 [==============================] - 15s 406ms/step - loss: 1.0315 - accuracy: 0.4580 - auc: 0.6486 - f1_score: 0.4536 - val_loss: 1.0495 - val_accuracy: 0.4420 - val_auc: 0.6292 - val_f1_score: 0.4346 Epoch 11/50 37/37 [==============================] - 15s 394ms/step - loss: 1.0290 - accuracy: 0.4623 - auc: 0.6525 - f1_score: 0.4578 - val_loss: 1.0497 - val_accuracy: 0.4417 - val_auc: 0.6286 - val_f1_score: 0.4331 Epoch 12/50 37/37 [==============================] - 14s 371ms/step - loss: 1.0260 - accuracy: 0.4635 - auc: 0.6550 - f1_score: 0.4597 - val_loss: 1.0496 - val_accuracy: 0.4422 - val_auc: 0.6291 - val_f1_score: 0.4345 Epoch 13/50 37/37 [==============================] - 15s 397ms/step - loss: 1.0245 - accuracy: 0.4671 - auc: 0.6574 - f1_score: 0.4633 - val_loss: 1.0518 - val_accuracy: 0.4399 - val_auc: 0.6285 - val_f1_score: 0.4310 . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test Partidos Considerados RNN N_Features_m N_Features_h Batch_size . 187 0.441131 | 0.434578 | 0.473245 | 0.472160 | 0.666454 | 0.664029 | 0.469595 | 0.467718 | 9 | Simple | 8 | 7 | 16 | . 188 0.442311 | 0.435448 | 0.478902 | 0.477179 | 0.672710 | 0.669219 | 0.477678 | 0.475327 | 9 | Simple | 8 | 7 | 32 | . 189 0.446093 | 0.439337 | 0.480308 | 0.478325 | 0.672880 | 0.669636 | 0.479657 | 0.477065 | 9 | Simple | 8 | 7 | 128 | . 190 0.443027 | 0.436428 | 0.474978 | 0.473915 | 0.667663 | 0.665021 | 0.464835 | 0.462748 | 9 | Simple | 8 | 7 | 400 | . 191 0.456781 | 0.449321 | 0.501564 | 0.496869 | 0.694333 | 0.688926 | 0.498937 | 0.493470 | 9 | Simple | 8 | 7 | 512 | . 192 0.447441 | 0.440803 | 0.485399 | 0.483510 | 0.674612 | 0.671808 | 0.482636 | 0.480019 | 9 | Simple | 8 | 7 | 1024 | . 193 0.450135 | 0.442987 | 0.497422 | 0.493428 | 0.687756 | 0.683027 | 0.493345 | 0.488634 | 9 | Simple | 8 | 7 | 2048 | . 194 0.448821 | 0.441714 | 0.490696 | 0.487371 | 0.682879 | 0.678741 | 0.487946 | 0.483883 | 10 | Simple | 8 | 7 | 16 | . 195 0.443511 | 0.436343 | 0.484538 | 0.480040 | 0.674689 | 0.669694 | 0.483001 | 0.478206 | 10 | Simple | 8 | 7 | 32 | . 196 0.459900 | 0.451976 | 0.511004 | 0.505062 | 0.700253 | 0.693634 | 0.511145 | 0.504673 | 10 | Simple | 8 | 7 | 128 | . 197 0.449845 | 0.442440 | 0.501510 | 0.497780 | 0.690488 | 0.685359 | 0.490910 | 0.485880 | 10 | Simple | 8 | 7 | 400 | . 198 0.450055 | 0.442938 | 0.497825 | 0.494075 | 0.686454 | 0.681993 | 0.493459 | 0.488841 | 10 | Simple | 8 | 7 | 512 | . 199 0.446104 | 0.439218 | 0.489334 | 0.486293 | 0.676767 | 0.673071 | 0.489919 | 0.486513 | 10 | Simple | 8 | 7 | 1024 | . 200 0.449941 | 0.443273 | 0.483142 | 0.481716 | 0.675012 | 0.672317 | 0.474202 | 0.471665 | 10 | Simple | 8 | 7 | 2048 | . . Si bien la tendencia no es estremadamente clara, de las pruebas realizadas podemos ver que el mejor conjunto de parámetros es: . Tipo de red recurrente: Simple | Número de partidos a considerar: 10 | Features por cada partidos del historial (para la RNN): &#39;play_home&#39;, &#39;is_cup&#39;, &#39;rating_diff&#39;, &#39;goal_diff&#39;, &#39;coach_continuity&#39;, &#39;relevance&#39;, &#39;is_friendly&#39; | Features del partido a modelar: &#39;Rating_diff&#39;, &#39;EqA_Local&#39;, &#39;is_cup&#39;, &#39;Equipo_A_coach_continuity&#39;, &#39;Equipo_B_coach_continuity&#39;, &#39;diff_num_partidos_diez_dias&#39;, &#39;diff_num_partidos_tres_semanas&#39;, &#39;is_friendly&#39; | Batch size: 128 | . Entrenemos entonces un último modelo con estos parámetros para analizar más en detalle su rendimiento: . n_partidos=10 M_A,M_A_test=fffmp.generate_input_for_RNN(X_train,X_test,F_h_3,[&#39;Equipo_A&#39;],n_partidos,standarize=True) M_B,M_B_test=fffmp.generate_input_for_RNN(X_train,X_test,F_h_3,[&#39;Equipo_B&#39;],n_partidos,standarize=True) H_Features=[] A_train,A_test=fffmp.generate_input_for_NN(X_train,X_test,H_Features,N_Features_3,standarize=True) fffmp.clean_all_models() time_steps=n_partidos predictors=len(F_h_3) tipo_RNN=&#39;Simple&#39; recurrent_units=100 dense_units=[500,200,80,20,10] dense_drop_out=0.1 out_shape=3 input_shape_history=(time_steps,predictors) input_shape_now=A_train.shape[1] metrics=[&#39;accuracy&#39;,&#39;AUC&#39;,F1] IFA=fffmp.Create_Mix_Model(tipo_RNN ,recurrent_units, dense_units,dense_drop_out, out_shape, input_shape_history,input_shape_now,metrics) batch_size = 128 epochs = 50 validation_split=0.1 y_train_pred,y_test_pred,Results=fffmp.Full_train_and_Report(IFA,[M_A,M_B,A_train],y_train,[M_A_test,M_B_test,A_test],y_test,batch_size,epochs,validation_split,num_classes=3,history_plot=True,confusion_matrix=True,Report_print=False) . . Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 10, 7) Test shape: (10292, 10, 7) Train shape: (83399, 8) Test shape: (10292, 8) Model: &#34;Modelo_IFA&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_1 (InputLayer) [(None, 10, 7)] 0 [] input_2 (InputLayer) [(None, 10, 7)] 0 [] simple_rnn (SimpleRNN) (None, 10, 100) 10700 [&#39;input_1[0][0]&#39;] simple_rnn_1 (SimpleRNN) (None, 10, 100) 10700 [&#39;input_2[0][0]&#39;] reshape (Reshape) (None, 1000) 0 [&#39;simple_rnn[0][0]&#39;] reshape_1 (Reshape) (None, 1000) 0 [&#39;simple_rnn_1[0][0]&#39;] input_3 (InputLayer) [(None, 8)] 0 [] concatenate (Concatenate) (None, 2008) 0 [&#39;reshape[0][0]&#39;, &#39;reshape_1[0][0]&#39;, &#39;input_3[0][0]&#39;] dense (Dense) (None, 500) 1004500 [&#39;concatenate[0][0]&#39;] dropout (Dropout) (None, 500) 0 [&#39;dense[0][0]&#39;] dense_1 (Dense) (None, 200) 100200 [&#39;dropout[0][0]&#39;] dropout_1 (Dropout) (None, 200) 0 [&#39;dense_1[0][0]&#39;] dense_2 (Dense) (None, 80) 16080 [&#39;dropout_1[0][0]&#39;] dropout_2 (Dropout) (None, 80) 0 [&#39;dense_2[0][0]&#39;] dense_3 (Dense) (None, 20) 1620 [&#39;dropout_2[0][0]&#39;] dropout_3 (Dropout) (None, 20) 0 [&#39;dense_3[0][0]&#39;] dense_4 (Dense) (None, 10) 210 [&#39;dropout_3[0][0]&#39;] dense_5 (Dense) (None, 3) 33 [&#39;dense_4[0][0]&#39;] ================================================================================================== Total params: 1,144,043 Trainable params: 1,144,043 Non-trainable params: 0 __________________________________________________________________________________________________ Epoch 1/50 587/587 [==============================] - 40s 63ms/step - loss: 1.0693 - accuracy: 0.4092 - auc: 0.5944 - f1_score: 0.4479 - val_loss: 1.0561 - val_accuracy: 0.4307 - val_auc: 0.6174 - val_f1_score: 0.4179 Epoch 2/50 587/587 [==============================] - 37s 63ms/step - loss: 1.0470 - accuracy: 0.4383 - auc: 0.6287 - f1_score: 0.4344 - val_loss: 1.0512 - val_accuracy: 0.4374 - val_auc: 0.6233 - val_f1_score: 0.4271 Epoch 3/50 587/587 [==============================] - 39s 67ms/step - loss: 1.0407 - accuracy: 0.4478 - auc: 0.6375 - f1_score: 0.4433 - val_loss: 1.0494 - val_accuracy: 0.4361 - val_auc: 0.6257 - val_f1_score: 0.4349 Epoch 4/50 587/587 [==============================] - 38s 64ms/step - loss: 1.0352 - accuracy: 0.4545 - auc: 0.6448 - f1_score: 0.4518 - val_loss: 1.0486 - val_accuracy: 0.4440 - val_auc: 0.6276 - val_f1_score: 0.4385 Epoch 5/50 587/587 [==============================] - 35s 59ms/step - loss: 1.0299 - accuracy: 0.4620 - auc: 0.6514 - f1_score: 0.4602 - val_loss: 1.0480 - val_accuracy: 0.4411 - val_auc: 0.6298 - val_f1_score: 0.4362 Epoch 6/50 587/587 [==============================] - 34s 58ms/step - loss: 1.0261 - accuracy: 0.4651 - auc: 0.6557 - f1_score: 0.4619 - val_loss: 1.0481 - val_accuracy: 0.4456 - val_auc: 0.6304 - val_f1_score: 0.4428 Epoch 7/50 587/587 [==============================] - 35s 59ms/step - loss: 1.0215 - accuracy: 0.4714 - auc: 0.6608 - f1_score: 0.4688 - val_loss: 1.0486 - val_accuracy: 0.4422 - val_auc: 0.6296 - val_f1_score: 0.4410 Epoch 8/50 587/587 [==============================] - 36s 61ms/step - loss: 1.0169 - accuracy: 0.4752 - auc: 0.6661 - f1_score: 0.4730 - val_loss: 1.0487 - val_accuracy: 0.4494 - val_auc: 0.6299 - val_f1_score: 0.4457 . pd.DataFrame(Results, index=[1,]) . . loss train loss test accuracy train accuracy test auc train auc test f1_score train f1_score test . 1 0.451779 | 0.444569 | 0.503722 | 0.499809 | 0.691521 | 0.68665 | 0.500161 | 0.49546 | . Finalmente, hemos obtenido un modelo con una precisión de practicamente 0.5 (considerando la prueba realizada sobre el dataset de test). Esto es una mejora considerable en relación a un clasificador aleatorio donde la precisión esperada es de 0.33 .",
            "url": "https://faegru.github.io/FMP_UB_final_project_2022/2022/06/30/5_Modelado_de_los_datos.html",
            "relUrl": "/2022/06/30/5_Modelado_de_los_datos.html",
            "date": " • Jun 30, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "4) ANALISIS DEL DATASET FINAL",
            "content": "La mayoria de las funciones utilizadas en este projecto están en el modulo: . import Functions_for_FMP as fffmp . CARGA DE DATOS . Empezamos, como siempre, cargando los datos. Pero, en esta oportunidad, cargaremos el dataset generado en el bloque 2). . data_final=&#39;FMP_final&#39; FMP = pd.read_pickle(data_final) . fffmp.check_NaNs(FMP) . No hay missing values en el dataset :) . display(FMP) . id target is_cup home_team_history_is_play_home_1 home_team_history_is_play_home_2 home_team_history_is_play_home_3 home_team_history_is_play_home_4 home_team_history_is_play_home_5 home_team_history_is_play_home_6 home_team_history_is_play_home_7 home_team_history_is_play_home_8 home_team_history_is_play_home_9 home_team_history_is_play_home_10 home_team_history_is_cup_1 home_team_history_is_cup_2 home_team_history_is_cup_3 home_team_history_is_cup_4 home_team_history_is_cup_5 home_team_history_is_cup_6 home_team_history_is_cup_7 home_team_history_is_cup_8 home_team_history_is_cup_9 home_team_history_is_cup_10 away_team_history_is_play_home_1 away_team_history_is_play_home_2 away_team_history_is_play_home_3 away_team_history_is_play_home_4 away_team_history_is_play_home_5 away_team_history_is_play_home_6 away_team_history_is_play_home_7 away_team_history_is_play_home_8 away_team_history_is_play_home_9 away_team_history_is_play_home_10 away_team_history_is_cup_1 away_team_history_is_cup_2 away_team_history_is_cup_3 away_team_history_is_cup_4 away_team_history_is_cup_5 away_team_history_is_cup_6 away_team_history_is_cup_7 away_team_history_is_cup_8 away_team_history_is_cup_9 away_team_history_is_cup_10 home_rating_diff_1 home_rating_diff_2 home_rating_diff_3 home_rating_diff_4 home_rating_diff_5 home_rating_diff_6 home_rating_diff_7 home_rating_diff_8 home_rating_diff_9 home_rating_diff_10 away_rating_diff_1 away_rating_diff_2 away_rating_diff_3 away_rating_diff_4 away_rating_diff_5 away_rating_diff_6 away_rating_diff_7 away_rating_diff_8 away_rating_diff_9 away_rating_diff_10 Rating_diff home_goal_diff_1 home_goal_diff_2 home_goal_diff_3 home_goal_diff_4 home_goal_diff_5 home_goal_diff_6 home_goal_diff_7 home_goal_diff_8 home_goal_diff_9 home_goal_diff_10 away_goal_diff_1 away_goal_diff_2 away_goal_diff_3 away_goal_diff_4 away_goal_diff_5 away_goal_diff_6 away_goal_diff_7 away_goal_diff_8 away_goal_diff_9 away_goal_diff_10 home_coach_continuity_1 home_coach_continuity_2 home_coach_continuity_3 home_coach_continuity_4 home_coach_continuity_5 home_coach_continuity_6 home_coach_continuity_7 home_coach_continuity_8 home_coach_continuity_9 home_coach_continuity home_coach_continuity_10 away_coach_continuity_1 away_coach_continuity_2 away_coach_continuity_3 away_coach_continuity_4 away_coach_continuity_5 away_coach_continuity_6 away_coach_continuity_7 away_coach_continuity_8 away_coach_continuity_9 away_coach_continuity away_coach_continuity_10 home_partidos_tres_semanas home_partidos_diez_dias home_partidos_cuatro_dias away_partidos_tres_semanas away_partidos_diez_dias away_partidos_cuatro_dias diff_num_partidos_tres_semanas diff_num_partidos_diez_dias diff_num_partidos_cuatro_dias home_relevance_1 home_relevance_2 home_relevance_3 home_relevance_4 home_relevance_5 home_relevance_6 home_relevance_7 home_relevance_8 home_relevance_9 home_relevance_10 away_relevance_1 away_relevance_2 away_relevance_3 away_relevance_4 away_relevance_5 away_relevance_6 away_relevance_7 away_relevance_8 away_relevance_9 away_relevance_10 home_outcome_V_1 home_outcome_D_1 home_outcome_V_2 home_outcome_D_2 home_outcome_V_3 home_outcome_D_3 home_outcome_V_4 home_outcome_D_4 home_outcome_V_5 home_outcome_D_5 home_outcome_V_6 home_outcome_D_6 home_outcome_V_7 home_outcome_D_7 home_outcome_V_8 home_outcome_D_8 home_outcome_V_9 home_outcome_D_9 home_outcome_V_10 home_outcome_D_10 away_outcome_V_1 away_outcome_D_1 away_outcome_V_2 away_outcome_D_2 away_outcome_V_3 away_outcome_D_3 away_outcome_V_4 away_outcome_D_4 away_outcome_V_5 away_outcome_D_5 away_outcome_V_6 away_outcome_D_6 away_outcome_V_7 away_outcome_D_7 away_outcome_V_8 away_outcome_D_8 away_outcome_V_9 away_outcome_D_9 away_outcome_V_10 away_outcome_D_10 home_is_friendly_1 home_is_friendly_2 home_is_friendly_3 home_is_friendly_4 home_is_friendly_5 home_is_friendly_6 home_is_friendly_7 home_is_friendly_8 home_is_friendly_9 home_is_friendly_10 away_is_friendly_1 away_is_friendly_2 away_is_friendly_3 away_is_friendly_4 away_is_friendly_5 away_is_friendly_6 away_is_friendly_7 away_is_friendly_8 away_is_friendly_9 away_is_friendly_10 is_friendly home_result_ponderado_1 home_result_ponderado_2 home_result_ponderado_3 home_result_ponderado_4 home_result_ponderado_5 home_result_ponderado_6 home_result_ponderado_7 home_result_ponderado_8 home_result_ponderado_9 home_result_ponderado_10 away_result_ponderado_1 away_result_ponderado_2 away_result_ponderado_3 away_result_ponderado_4 away_result_ponderado_5 away_result_ponderado_6 away_result_ponderado_7 away_result_ponderado_8 away_result_ponderado_9 away_result_ponderado_10 . 0 11906497 | away | 0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | -1.342980 | 2.030337 | -0.796066 | 3.485692 | 1.398131 | 1.959759 | -4.030432 | 5.093217 | -0.487941 | 3.651948 | -0.655225 | 9.005604 | 6.260047 | 4.982057 | 8.195400 | -1.206981 | 1.859646 | 9.929757 | 7.913075 | 1.239743 | -3.218928 | -1.0 | 2.0 | -1.0 | -4.0 | 2.0 | 0.0 | 0.0 | 2.0 | 0.0 | 3.0 | -1.0 | 2.0 | -1.0 | 1.0 | 1.0 | -1.0 | 0.0 | 2.0 | 2.0 | 2.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 2.0 | 1.0 | 0.0 | 3.0 | 1.0 | 0.0 | -1.0 | 0.0 | 0.0 | 5 | 20 | 27 | 32 | 42 | 57 | 63 | 69 | 76 | 90 | 7 | 16 | 20 | 28 | 32 | 39 | 43 | 50 | 55 | 60 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.183486 | 0.458626 | -0.114532 | -1.657239 | 0.307454 | -0.008029 | -0.018004 | 1.191019 | -0.002609 | 1.277268 | -0.096775 | 2.126546 | -0.775091 | 0.571638 | 0.948841 | -0.166340 | -0.007594 | 2.347528 | 1.865301 | 0.269580 | . 1 11984383 | home | 0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 9.997190 | -0.153606 | 5.810161 | -0.033087 | 3.685993 | 2.520600 | 0.976328 | 9.513444 | 2.707193 | 3.916450 | -0.881175 | -2.148550 | -4.238788 | 0.145350 | 4.425333 | -0.976328 | -1.943804 | -0.007279 | -3.834623 | -5.890736 | 2.893940 | -2.0 | -2.0 | 4.0 | -1.0 | -1.0 | 1.0 | -1.0 | 2.0 | -1.0 | 0.0 | 1.0 | -1.0 | -4.0 | 0.0 | -1.0 | 1.0 | -4.0 | 0.0 | -1.0 | 3.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 3.0 | 2.0 | 1.0 | 3.0 | 2.0 | 1.0 | 0.0 | 0.0 | 0.0 | 3 | 7 | 21 | 28 | 35 | 38 | 41 | 44 | 56 | 62 | 3 | 7 | 21 | 28 | 34 | 41 | 45 | 63 | 71 | 77 | 0 | 1 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 1 | 1 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -2.449570 | -0.065908 | 2.749671 | -0.018337 | -0.450559 | 0.282696 | -0.108928 | 2.247980 | -0.327153 | -0.016532 | 0.116627 | -0.285051 | -2.137610 | -0.000143 | -0.543773 | 0.127797 | -1.010141 | -0.000520 | -0.497628 | 2.166224 | . 2 11983301 | draw | 0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | -1.088475 | 5.692117 | 0.391980 | 2.249836 | -3.912490 | 3.762830 | -2.639839 | 9.112116 | -2.128075 | 1.532352 | 2.892081 | -2.847612 | 4.490550 | 1.803989 | 1.790383 | 3.918600 | 2.639839 | 2.319737 | 1.151759 | 6.159063 | -1.936780 | 2.0 | 2.0 | -1.0 | 1.0 | -1.0 | 0.0 | 0.0 | 1.0 | -2.0 | 0.0 | 2.0 | -1.0 | 0.0 | 2.0 | 1.0 | 1.0 | 0.0 | 1.0 | 4.0 | 0.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 2.0 | 2.0 | 1.0 | 2.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 2 | 9 | 27 | 35 | 41 | 45 | 56 | 63 | 69 | 73 | 9 | 20 | 35 | 41 | 45 | 49 | 56 | 63 | 69 | 73 | 1 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0.287141 | 1.334228 | -0.035255 | 0.250912 | -0.507446 | -0.015865 | -0.011961 | 1.056451 | -0.555203 | -0.006171 | 0.664686 | -0.373188 | -0.019027 | 0.404502 | 0.196978 | 0.446802 | -0.010984 | 0.259117 | 0.501601 | -0.026278 | . 3 11983471 | away | 0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.000000 | -0.163546 | 3.748775 | 3.382067 | 0.296500 | 3.746475 | -0.026269 | 8.459475 | 1.716836 | 3.508762 | 0.000000 | -1.646854 | 3.836917 | -3.382067 | 2.604050 | -0.296250 | -3.497111 | 0.928375 | -2.725695 | -2.332587 | 1.948494 | 0.0 | 1.0 | 4.0 | 0.0 | -1.0 | 1.0 | 1.0 | 0.0 | -1.0 | 0.0 | 0.0 | -2.0 | 1.0 | 0.0 | 5.0 | 0.0 | 1.0 | -1.0 | 1.0 | -1.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 3.0 | 2.0 | 1.0 | 2.0 | 2.0 | 1.0 | 1.0 | 0.0 | 0.0 | 3 | 7 | 20 | 26 | 29 | 35 | 41 | 56 | 64 | 66 | 3 | 7 | 22 | 26 | 30 | 36 | 42 | 56 | 59 | 65 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.000488 | 0.032387 | 1.754879 | -0.014210 | -0.023217 | 0.426597 | 0.016272 | -0.036276 | -0.202291 | -0.014760 | -0.000488 | -0.435951 | 0.437214 | -0.015186 | 1.505773 | -0.001776 | 0.423703 | -0.102883 | 0.333149 | -0.308254 | . 4 11883005 | home | 0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.760229 | 2.777133 | -0.958567 | 3.247532 | -2.595750 | 7.854948 | -0.296412 | 2.539583 | -0.512550 | 6.050450 | 0.774210 | -0.007142 | 0.361725 | 3.602960 | -4.391750 | 3.172159 | -5.302729 | 0.526319 | 3.559067 | -2.741227 | 0.456468 | -1.0 | 1.0 | 1.0 | 2.0 | 0.0 | 1.0 | 1.0 | 0.0 | -1.0 | 0.0 | 3.0 | -1.0 | 0.0 | 1.0 | 0.0 | 2.0 | -2.0 | 1.0 | 4.0 | 0.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 1 | 1 | 3.0 | 2.0 | 1.0 | 3.0 | 2.0 | 1.0 | 0.0 | 0.0 | 0.0 | 3 | 7 | 20 | 28 | 34 | 38 | 41 | 55 | 59 | 63 | 3 | 6 | 20 | 28 | 35 | 38 | 41 | 56 | 59 | 62 | 0 | 1 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.081683 | 0.312809 | 0.125712 | 0.749681 | -0.011769 | 0.908877 | 0.047984 | -0.010548 | -0.078787 | -0.025806 | 0.238832 | -0.015066 | -0.001084 | 0.409750 | -0.019574 | 0.731658 | -1.341916 | 0.048594 | 1.663329 | -0.012401 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 110933 18030016 | draw | 0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 4.314395 | 3.097305 | -1.018100 | 2.500928 | 4.521543 | 4.543730 | -1.999606 | 0.715786 | 0.236309 | 0.972825 | -2.231214 | -6.059825 | -3.341627 | -1.723150 | -0.445700 | -3.777150 | -0.336883 | 0.480100 | 1.219725 | 4.648450 | 0.000000 | 4.0 | 0.0 | -2.0 | 0.0 | -1.0 | 3.0 | 3.0 | 1.0 | -2.0 | 2.0 | 2.0 | -1.0 | 0.0 | 1.0 | -1.0 | 1.0 | 1.0 | 0.0 | -1.0 | 1.0 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 2.0 | 1.0 | 0.0 | 2.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 7 | 12 | 141 | 142 | 148 | 151 | 155 | 158 | 161 | 166 | 8 | 15 | 61 | 64 | 141 | 143 | 147 | 152 | 154 | 157 | 1 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 2.027838 | -0.012972 | -0.280139 | -0.010381 | -0.555903 | 1.599069 | 0.762104 | 0.070835 | -0.030718 | 0.205755 | 0.560392 | -0.778178 | -0.015011 | 0.215463 | -0.070359 | 0.456576 | 0.052734 | -0.001598 | -0.139616 | 0.532477 | . 110934 18030096 | away | 0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | -1.531022 | 5.721350 | 8.418071 | 6.470581 | 1.865955 | -7.140900 | -1.218767 | 1.557886 | -12.441148 | 10.097321 | -1.250494 | -3.458150 | 0.664461 | -0.759332 | -11.728517 | -12.716384 | 5.605381 | 6.632644 | -7.996775 | -1.669872 | 1.758697 | -1.0 | 1.0 | 3.0 | 2.0 | 8.0 | 0.0 | -3.0 | 3.0 | -1.0 | 0.0 | 0.0 | -1.0 | 2.0 | -1.0 | -3.0 | -3.0 | -1.0 | 1.0 | 0.0 | 2.0 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 2.0 | 1.0 | 0.0 | 2.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 6 | 21 | 27 | 46 | 50 | 57 | 64 | 120 | 122 | 124 | 6 | 20 | 26 | 41 | 47 | 120 | 122 | 124 | 127 | 129 | 0 | 1 | 1 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 1 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.207194 | 0.658421 | 2.997131 | 1.520373 | 1.700141 | -0.031522 | -0.491907 | 0.521623 | -1.582725 | -0.043394 | -0.005923 | -0.450163 | 0.132019 | -0.109901 | -4.375715 | -4.740775 | -0.692552 | 0.765395 | -0.035241 | 0.426164 | . 110935 17715497 | draw | 0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 2.019156 | -1.600320 | 4.409308 | -1.214033 | 3.572422 | -0.831350 | 3.157175 | 2.964567 | -1.796125 | 0.782550 | 3.839781 | 5.507413 | 5.618307 | -1.072485 | 5.490396 | -0.282014 | 4.877673 | 2.145550 | -3.490375 | -0.990867 | -0.967183 | 0.0 | -1.0 | 2.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | -3.0 | 0.0 | 0.0 | 1.0 | 2.0 | 0.0 | 1.0 | 3.0 | 1.0 | 2.0 | 1.0 | -1.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 1 | 4.0 | 4.0 | 1.0 | 4.0 | 4.0 | 1.0 | 0.0 | 0.0 | 0.0 | 2 | 5 | 8 | 9 | 47 | 51 | 55 | 61 | 135 | 139 | 2 | 6 | 8 | 9 | 47 | 51 | 55 | 62 | 142 | 145 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.008287 | -0.215931 | 1.027484 | -0.005764 | 0.406166 | -0.004101 | -0.013232 | -0.012395 | -0.705266 | -0.002913 | -0.016199 | 0.633308 | 1.316578 | -0.005149 | 0.631310 | 0.142308 | 0.559385 | 0.486176 | 0.422912 | -0.139092 | . 110936 17944153 | away | 0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.685053 | 0.483100 | -0.914850 | -1.181650 | 1.605083 | 1.526717 | 1.056593 | -0.252250 | -4.249755 | 2.833663 | -0.721922 | -1.544379 | -0.983140 | 0.661400 | -1.600300 | 1.017229 | -1.910996 | -2.063026 | 0.873972 | -2.219119 | 0.981163 | 0.0 | -2.0 | 0.0 | 1.0 | 0.0 | 1.0 | -3.0 | -2.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 2.0 | -1.0 | -2.0 | 0.0 | -1.0 | 2.0 | 0.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 3.0 | 1.0 | 0.0 | 3.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 7 | 12 | 18 | 28 | 34 | 75 | 78 | 83 | 101 | 106 | 6 | 13 | 19 | 26 | 31 | 75 | 79 | 84 | 96 | 102 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.002489 | -0.091875 | -0.004464 | 0.151899 | -0.006487 | 0.166027 | -0.348937 | -0.090353 | -0.018957 | 0.319445 | -0.003626 | -0.007200 | -0.004761 | 0.131287 | -0.215929 | -0.224238 | -0.008793 | -0.274268 | 0.182118 | -0.010132 | . 110937 17786297 | home | 0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.176178 | 3.723710 | -3.523262 | 2.112239 | 1.595383 | 1.261392 | 1.785570 | -1.355685 | 2.002817 | -1.703872 | 0.247417 | -2.152850 | -4.360537 | -1.550680 | 0.018106 | -5.484850 | -1.279433 | 0.290300 | -1.478107 | -0.511200 | 1.250977 | -1.0 | 0.0 | -1.0 | 0.0 | 2.0 | 0.0 | -1.0 | 2.0 | 1.0 | 3.0 | 0.0 | 1.0 | -1.0 | 1.0 | 1.0 | 0.0 | -1.0 | 0.0 | -1.0 | -5.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 3.0 | 1.0 | 0.0 | 5.0 | 3.0 | 1.0 | -2.0 | -2.0 | -1.0 | 5 | 12 | 19 | 26 | 34 | 40 | 44 | 47 | 55 | 62 | 2 | 5 | 8 | 12 | 19 | 27 | 34 | 39 | 46 | 54 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.008047 | -0.015695 | -0.458373 | -0.008691 | 0.354621 | -0.004994 | -0.210956 | 0.351036 | 0.221915 | 0.655388 | -0.000587 | 0.265905 | -0.563935 | 0.195218 | 0.011063 | -0.024325 | -0.175474 | -0.000773 | -0.200523 | -0.382244 | . 102912 rows × 216 columns . . fffmp.Print_features(FMP) . Today Features id target is_cup Rating_diff home_coach_continuity away_coach_continuity home_partidos_tres_semanas home_partidos_diez_dias home_partidos_cuatro_dias away_partidos_tres_semanas away_partidos_diez_dias away_partidos_cuatro_dias diff_num_partidos_tres_semanas diff_num_partidos_diez_dias diff_num_partidos_cuatro_dias is_friendly Historic Features home/away_team_history_is_play_home_i home/away_team_history_is_cup_i home/away_rating_diff_i home/away_goal_diff_i home/away_coach_continuity_i home/away_relevance_i home/away_outcome_V_i home/away_outcome_D_i home/away_is_friendly_i home/away_result_ponderado_i . . AN&#193;LISIS Y VISUALIZACI&#211;N . La idea para este bloque es analizar y ganar un poco de intuición acerca de algunas de estas nuevas variables o features generadas . 1) Distribuci&#243;n de la variable diferencia de gol . Comencé por estudiar el histograma de la diferencia de gol. Dado que correspondía a la resta de dos variables de Poisson, esperába que estuviera representado por una distribución de Skellam, cosa que pude comprobar al generar la curva correspondiente a los momentos del dataset. . Features=[&#39;goal_diff&#39;] Type=[&#39;historic&#39;] n_bin=np.arange(-18,21+2)-0.5 Dist=&#39;Skellam&#39; y_label=&#39;Probabilidad&#39; x_label=&#39;Diferencia de Gol&#39; alignment=&#39;mid&#39; fffmp.Plot_one_distribution(FMP,Features,Type,n_bin,Dist,x_label,y_label,alignment) . . Tanto la simetría de la distribución (cuantificada de cierta forma por el skewness) como el hecho de que la media sea en la practica cero, son buenas señales. Nos dan una idea de que el dataset esta balanceado, habiendo tanto equipos de menor rendimiento (diferencia negativa) como de mayor (diferencia positiva). . Debe notarse que en este set de datos, tenemos mezclados tanto partidos de local y visitante. . Si analizamos el efecto de la localía encontramos nuevamente dos distribuciones de Skellam, pero en este caso con medias desplazada de cero y distintas. Efectivamente, cuando tomamos &quot;local-visitante&quot; (&quot;visitante-local&quot;) la distribución esta centrada en un valor positivo (negativo). . Feature=&#39;goal_diff&#39; Condition=&#39;team_history_is_play_home&#39; n_bin_local=np.arange(-14,21+2)-0.5 n_bin_visitante=np.arange(-18,15+2)-0.5 n_bin=[n_bin_local,n_bin_visitante] Dist=&#39;Skellam&#39; y_label=&#39;Probabilidad&#39; x_label=&#39;Diferencia de Gol&#39; alignment=&#39;mid&#39; Cond_Labels=[&#39;Local&#39;,&#39;Visitante&#39;] Text_box_pos=[0.7,0.1] fffmp.Plot_distribution_por_Condicion(FMP,Feature,Condition,Cond_Labels,n_bin,Dist,x_label,y_label,alignment,Text_box_pos) . . Haciendo ingeniería inversa, en base a $ mu$ u $ sigma$, podemos intentar recuperar los valores medios esperados para los goles anotados de local y visitante. . 1) Para la curva &quot;local&quot;: . $ mu_{gol ,local}= frac{ sigma^2+ mu}{2}=2.000$ . $ mu_{gol ,visitante}= frac{ sigma^2- mu}{2}=1.687$ . 2) Para la curva &quot;visitante&quot;: . $ mu_{gol ,visitante}= frac{ sigma^2+ mu}{2}=1.703$ . $ mu_{gol ,local}= frac{ sigma^2- mu}{2}=1.946$ . Sorpresivamente, si bien se mantiene una diferencia de aproximadamente $0.3$, los valores son sensiblemente más grandes comparados a los obtenidos en primera instancia. . De hecho, si hacemos lo mismo para la distribución que no distingue locales de visitates, los valores medios hayados tambien son mas grandes de los esperados (aunque ahora alrrededor del mismo valor): . $ mu_{gol ,equipo}= frac{ sigma^2+ mu}{2}=1.880$ . $ mu_{gol ,oponente}= frac{ sigma^2- mu}{2}=1.844$ . En principio dudé del proceso realizado para completar los valores faltantes. Sin embargo, si volvemos al dataset solo con la corrección de los valores faltantes y graficamos las distribuciones, recuperamos las originales sin sensibles alteraciones: . data_clean=&#39;FMP_clean&#39; fmp_aux = pd.read_pickle(data_clean) Features_Team=&#39;team_history_goal&#39; Features_Opponent=&#39;team_history_opponent_goal&#39; Condition=&#39;team_history_is_play_home&#39; n_bin_local=np.arange(0,21+2)-0.5 n_bin_visitante=np.arange(0,15+2)-0.5 n_bin=[n_bin_local,n_bin_visitante] Dist=&#39;Poisson&#39; y_label=&#39;Probabilidad&#39; x_label=&#39;Goles&#39; alignment=&#39;mid&#39; Cond_Labels=[&#39;Local&#39;,&#39;Visitante&#39;] fffmp.Plot_distribution_por_Condicion_team_and_opp(fmp_aux,Features_Team,Features_Opponent,Condition,Cond_Labels,n_bin,Dist,x_label,y_label,alignment) del(fmp_aux) . . Tampoco espero errores en la forma de tratar las variables (correspondiente al bloque 3)). Para calcular la diferencia de gol el proceso es bastante directo, por lo que no hay mucho espacio para errores. . De esta forma, la explicación que encuentro es que variables no son independientes. De cierta forma podría tener sentido, estamos haciendo una resta entre eventos relacionados, que suceden en un mismo partidos. La performance de un equipo afecta a la otra! . Al menos eso pensé hasta ver que la correlación entre los goles anotados por un de un equipo y otro no parece muy alta: . data_clean=&#39;FMP_clean&#39; fmp_aux = pd.read_pickle(data_clean) X_feature=[&#39;team_history_goal&#39;] Y_feature=[&#39;team_history_opponent_goal&#39;] Plot_labels=[&#39;Goles equipo&#39;,&#39;Goles oponente&#39;] alpha=0.006 fffmp.Correlacion_X_vs_Y_his(fmp_aux,X_feature,Y_feature,Plot_labels,alpha) del(fmp_aux)#borramos de la memora el dataset para no llenar la memoria. . . Si bien hay una correlacion negativa, es muy pequeña. . De esta forma, esto es algo que aún no termino de entender bien. Pienso que quizás va por este lado, incluso el gráfico parece sugerirlo también. . Por otro lado, podemos ver el efecto de jugar copa o liga en la diferencia de goles observada. . Feature=&#39;goal_diff&#39; Condition=&#39;team_history_is_cup&#39; n_bin_copa=np.arange(-13,21+2)-0.5 n_bin_liga=np.arange(-18,18+2)-0.5 n_bin=[n_bin_copa,n_bin_liga] Dist=&#39;Skellam&#39; y_label=&#39;Probabilidad&#39; x_label=&#39;Diferencia de Gol&#39; alignment=&#39;mid&#39; Cond_Labels=[&#39;Copa&#39;,&#39;Liga&#39;] Text_box_pos=[0.7,0.1] fffmp.Plot_distribution_por_Condicion(FMP,Feature,Condition,Cond_Labels,n_bin,Dist,x_label,y_label,alignment,Text_box_pos) . . Encontramos una leve diferencia entre ambas distribuciones que suguieren una tendencia a partidos con mayor diferencia de gol (dado el mayor $ sigma$), que quizás se pueda entender al ser partidos de eliminción. Es importante notar, de cualquier forma, que el numero de muestras para partidos de copa es un orden de magnitud menor, y por tanto quizas no haya tanta estadística. . 2) Correlaci&#243;n de la diferencia de gol con la diferencia de rating y el resultado ponderado . En el dataset original ya havíamos explorado la relacion entre los goles anotados y el rating de un equipo. Ahora queremos ver quan relacionada están la diferencia en el marcador con la diferencia del rating. En principio uno esperaría una correlación más bien alta, en caso de que los ratings generados tengan sentido alguno. . Y_feature=[&#39;goal_diff&#39;] X_feature=[&#39;rating_diff&#39;] Plot_labels=[&#39;Rating&#39;,&#39;Goles&#39;] alpha=0.1 text_x_pos=0.2 fffmp.Correlacion_X_vs_Y_his(FMP,X_feature,Y_feature,Plot_labels,alpha,text_x_pos) . . Tal como era de esperarse hay una correlación positiva importante entre estas dos variables. Incluso mayor que para la encontrada entre goles anotados y rating ($0.391$). . Si vamos luego a el resultado ponderado, este está forzadamente correlacionado con la diferencia de gol por definicion. De esta forma, tal como podemos ver, la correlación es mucho más alta. . Y_feature=[&#39;goal_diff&#39;] X_feature=[&#39;result_ponderado&#39;] Plot_labels=[&#39;Resultado Ponderado&#39;,&#39;Goles&#39;] alpha=0.1 text_x_pos=0.2 fffmp.Correlacion_X_vs_Y_his(FMP,X_feature,Y_feature,Plot_labels,alpha,text_x_pos) . . Tengo que admitir que igualmente no me esperaba esa forma en la nube de puntos. . 3) Distribuci&#243;n de la variable diferencia de rating y resultado ponderado . Solo por curiosidad, veamos decidí también dar una mirada a la distribución de esta variable. . Features=[&#39;rating_diff&#39;] Type=[&#39;historic&#39;] n_bin=120 Dist=&#39;Unknown&#39; y_label=&#39;Densidad de Probabilidad&#39; x_label=&#39;Diferencia de Rating&#39; alignment=&#39;mid&#39; text_x_pos=0.1 fffmp.Plot_one_distribution(FMP,Features,Type,n_bin,Dist,x_label,y_label,alignment,text_x_pos) . . La naturaleza de distribución esta vez no la vamos investigar. Pero al menos podemos ver que esta centrada en cero, lo que da signos de un dataset balanceado. . ¿Qué pasa si miramos el &quot;Resultado Ponderado&quot;? Aquí la distruibución está más condensada alrrededor de cero, pero aun luce bastante balanceda. . Features=[&#39;result_ponderado&#39;] Type=[&#39;historic&#39;] n_bin=120 Dist=&#39;Unknown&#39; y_label=&#39;Densidad de Probabilidad&#39; x_label=&#39;Diferencia de Rating&#39; alignment=&#39;mid&#39; text_x_pos=0.1 fffmp.Plot_one_distribution(FMP,Features,Type,n_bin,Dist,x_label,y_label,alignment,text_x_pos) . . Features=[&#39;result_ponderado&#39;] Type=[&#39;historic&#39;] n_bin=500 Dist=&#39;Unknown&#39; y_label=&#39;Densidad de Probabilidad&#39; x_label=&#39;Diferencia de Rating&#39; alignment=&#39;mid&#39; text_x_pos=0.65 x_lim=(-10,10) fffmp.Plot_one_distribution(FMP,Features,Type,n_bin,Dist,x_label,y_label,alignment,text_x_pos,x_lim) . . 4) Distribuciones relativas a la acumulaci&#243;n de partidos . Otro aspecto que agregamos fue el featurte de la acumulación de partidos. Este trata de capturar el desgaste acumuldo relativo entre dos equipos. Cómo habíamos explicado, si es positivo (negativo), el equipo local (visitante) tiene desventaja. Veamos que tal luce el histograma: . A tres semanas: Empezaremos por mirar de forma separada los datos para el equipo local y visitante. Vemos que ambos histogramas indistinguibles en la practica, y pueden ser bien descriptos por una distribución de Poisson. Esto tiene sentido por la naturaleza del fenómeno, donde podemos definir una cantidad &quot;media&quot; de partidos por ventana de tiempo. . Features=[&#39;home_partidos_tres_semanas&#39;] Type=[&#39;match&#39;] n_bin=np.arange(0,10+2)-0.5 Dist=&#39;Poisson&#39; y_label=&#39;Probabilidad&#39; x_label=&#39;Partidos acumulados en 3 semanas - local&#39; alignment=&#39;mid&#39; text_x_pos=0.65 fffmp.Plot_one_distribution(FMP,Features,Type,n_bin,Dist,x_label,y_label,alignment,text_x_pos) . . Features=[&#39;away_partidos_tres_semanas&#39;] Type=[&#39;match&#39;] n_bin=np.arange(0,10+2)-0.5 Dist=&#39;Poisson&#39; y_label=&#39;Probabilidad&#39; x_label=&#39;Partidos acumulados en 3 semanas - visitante&#39; alignment=&#39;mid&#39; text_x_pos=0.65 fffmp.Plot_one_distribution(FMP,Features,Type,n_bin,Dist,x_label,y_label,alignment,text_x_pos) . . Decidí entonces juntar ambos datasets en uno solo. Podemos ver que en una ventana de 21 días, los equipos juegan una media de 2.34 partidos, lo que parece un valor razonable, aunque un poco por debajo de lo esperado. . Features=[&#39;home_partidos_tres_semanas&#39;,&#39;away_partidos_tres_semanas&#39;] Type=[&#39;match&#39;,&#39;match&#39;] n_bin=np.arange(0,10+2)-0.5 Dist=&#39;Poisson&#39; y_label=&#39;Probabilidad&#39; x_label=&#39;Partidos acumulados en 3 semanas&#39; alignment=&#39;mid&#39; text_x_pos=0.65 fffmp.Plot_one_distribution(FMP,Features,Type,n_bin,Dist,x_label,y_label,alignment,text_x_pos) . . Si miramos ahora a la diferencia de partidos acumulados, su distribución, si bien parecería a primera vista poder estar descripta por una distribución de de Skellam, muestra sensibles diferencias con esta. Lo mismo pasa a 10 días y a 3 días. . Features=[&#39;diff_num_partidos_tres_semanas&#39;] Type=[&#39;match&#39;] n_bin=np.arange(-9,9+2)-0.5 Dist=&#39;Skellam&#39; y_label=&#39;Probabilidad&#39; x_label=&#39;Diferencia de partidos acumulados en 3 semanas&#39; alignment=&#39;mid&#39; text_x_pos=0.65 fffmp.Plot_one_distribution(FMP,Features,Type,n_bin,Dist,x_label,y_label,alignment,text_x_pos) . . A diez días: . Features=[&#39;diff_num_partidos_diez_dias&#39;] Type=[&#39;match&#39;] n_bin=np.arange(-5,5+2)-0.5 Dist=&#39;Skellam&#39; y_label=&#39;Probabilidad&#39; x_label=&#39;Diferencia de partidos acumulados en 10 días&#39; alignment=&#39;mid&#39; text_x_pos=0.65 fffmp.Plot_one_distribution(FMP,Features,Type,n_bin,Dist,x_label,y_label,alignment,text_x_pos) . . A tres días: . Features=[&#39;diff_num_partidos_cuatro_dias&#39;] Type=[&#39;match&#39;] n_bin=np.arange(-3,3+2)-0.5 Dist=&#39;Skellam&#39; y_label=&#39;Probabilidad&#39; x_label=&#39;Diferencia de partidos acumulados en 3 días&#39; alignment=&#39;mid&#39; text_x_pos=0.65 fffmp.Plot_one_distribution(FMP,Features,Type,n_bin,Dist,x_label,y_label,alignment,text_x_pos) . . La razón detras de ello podría estar relacionada con el hecho de que al mirar los partidos acumulados, estamos observando el resultado de todas las ligas en conjunto. Sin embargo, cuando miramos la diferencia, este valor corresponde a equipos de una misma liga, y, por tanto, con calendarios similares. Esto llevaría a que la diferencia de partidos acumulados de zero más veces de las esperadas, lo que puede explicar la marcada diferencia encontrada en zero entre el histograma y la distribuciñon propuesta. . 5) Efecto del cambio de entrenador . Dejamos un poco de lado las distribuciones, para analizar el efecto (si lo hay) del cambio de entrenador en el rendimiento de un equipo. . Para analizar ello calculamos el porcentage medio de victorias, derrotas y empates que presentaron los equipos con cambio de entrenador, en los partidos alrededor de dicho suceso. . fffmp.Trainer_effect_on_the_outcome(FMP,5) . . Condición Muestras % Local % Victorias % Empates: % Derrotas . 0 General | 1852416 | 50.08 | 36.90 | 25.11 | 38.00 | . 1 5 partidos antes de un cambio de entrenador | 22516 | 50.31 | 37.66 | 25.13 | 37.21 | . 2 4 partidos antes de un cambio de entrenador | 28387 | 50.16 | 37.34 | 27.37 | 35.29 | . 3 3 partidos antes de un cambio de entrenador | 34295 | 50.05 | 38.02 | 26.03 | 35.95 | . 4 2 partidos antes de un cambio de entrenador | 40212 | 49.93 | 38.32 | 26.28 | 35.40 | . 5 1 partidos antes de un cambio de entrenador | 46115 | 49.86 | 38.51 | 26.28 | 35.21 | . 6 En el partido de un cambio de entrenador | 51953 | 49.83 | 39.27 | 25.53 | 35.20 | . 7 1 partidos después de un cambio de entrenador | 46563 | 49.74 | 44.74 | 24.10 | 31.16 | . 8 2 partidos después de un cambio de entrenador | 40956 | 49.65 | 45.10 | 24.41 | 30.49 | . 9 3 partidos después de un cambio de entrenador | 35234 | 49.55 | 44.06 | 24.24 | 31.71 | . 10 4 partidos después de un cambio de entrenador | 29437 | 49.46 | 43.24 | 24.85 | 31.91 | . 11 5 partidos después de un cambio de entrenador | 23566 | 49.43 | 41.92 | 25.86 | 32.22 | . De forma bastante interesante, sí se pueden ver una mejora en el rendimiento alrrededor de dicho evento. Aunque dicho efecto o boost parece ir decreciendo a medida pasan los partidos. . 6) Impacto de distintas variables en la probabilidad de los resultados . El objetivo final de este proyecto no es otro que intentar modelar la probabilidad de cada uno de los tres resultados posibles (Victoria local, Victoria visitante y Empate) en función de las variables del dataset. En ese sentido, resulta de interés evaluar como estas alteran las probabilidades de los resultados. . Para ver ello, analizaremos como se desvía la distribución de resultados (victorias locales, victorias visitantes, y empates) para los partidos a modelar, en función de diversas condiciones. Debe notarse que los porcentajes originales no son las probabilidades de cada resultado, sino simplemente su ocurrencia en el dataset. . A) Partidos acumulados . Empezaremos por mirar el efecto de la acumulación de partidos, concentrándonos en el efecto de que el local o visitante acumule más partidos. . Si miramos en una ventana de tres semanas: . variable=&#39;target&#39; variable_condicional=&#39;diff_num_partidos_tres_semanas&#39; condicion_numerica=0 x_label=&#39;Resultado&#39; tipo_de_condición=&#39;&gt;&lt;_value&#39; fffmp.Histograma_condicional_numerica(FMP,variable,variable_condicional,tipo_de_condición,condicion_numerica,x_label) . . Podemos ver que acumular más partidos esta correlacionado con un aumento en las probabilides de ganar. Esto es bastante anti-intuitivo, y, de hecho, estaba convencido que el efecto sería el contrario. Creo que quizás podría explicarse considerando que los equipos que participan en más competiciones (y por tanto juegan más partidos), suelen mostrar un mejor nivel y por tanto ser más proclives a ganar. . Si llevamos el umbral un poco más lejos podemos ver que esta tendencia no hace más que acentuarse: . variable=&#39;target&#39; variable_condicional=&#39;diff_num_partidos_tres_semanas&#39; condicion_numerica=1 x_label=&#39;Resultado&#39; tipo_de_condición=&#39;&gt;&lt;_value&#39; fffmp.Histograma_condicional_numerica(FMP,variable,variable_condicional,tipo_de_condición,condicion_numerica,x_label) . . variable=&#39;target&#39; variable_condicional=&#39;diff_num_partidos_tres_semanas&#39; condicion_numerica=4 x_label=&#39;Resultado&#39; tipo_de_condición=&#39;&gt;&lt;_value&#39; fffmp.Histograma_condicional_numerica(FMP,variable,variable_condicional,tipo_de_condición,condicion_numerica,x_label) . . Aunque se debe notar que a medida que lo hacemos el numero de muestras se ve reducido drásticamente. . Por completitud, podemos mirar también lo que ocurre para ventanas de 4 y 10 días . variable=&#39;target&#39; variable_condicional=&#39;diff_num_partidos_cuatro_dias&#39; condicion_numerica=1 x_label=&#39;Resultado&#39; tipo_de_condición=&#39;&gt;&lt;_value&#39; fffmp.Histograma_condicional_numerica(FMP,variable,variable_condicional,tipo_de_condición,condicion_numerica,x_label,&#39;lower right&#39;) . . variable=&#39;target&#39; variable_condicional=&#39;diff_num_partidos_diez_dias&#39; condicion_numerica=1 x_label=&#39;Resultado&#39; tipo_de_condición=&#39;&gt;&lt;_value&#39; fffmp.Histograma_condicional_numerica(FMP,variable,variable_condicional,tipo_de_condición,condicion_numerica,x_label) . . Efectivamente, la tendencia es la misma sin importar la ventana de tiempo considerada para calcular la acumulación de partidos. . B) Cambio de entrenador . Podemos hacer un análisis similar poniendo el foco en la continuidad del entrenador: . variable=&#39;target&#39; variable_condicional=&#39;home_coach_continuity&#39; condicion_numerica=1 x_label=&#39;Resultado&#39; tipo_de_condición=&#39;bool&#39; fffmp.Histograma_condicional_numerica(FMP,variable,variable_condicional,tipo_de_condición,condicion_numerica,x_label) . . variable=&#39;target&#39; variable_condicional=&#39;away_coach_continuity&#39; condicion_numerica=1 x_label=&#39;Resultado&#39; tipo_de_condición=&#39;bool&#39; fffmp.Histograma_condicional_numerica(FMP,variable,variable_condicional,tipo_de_condición,condicion_numerica,x_label) . . Tal como vemos, la continuidad de un entrenador parece correlacionarse con una mayor probabilidad de ganar. Esto se ve razonable si pensamos que los cambios de entrenadores suelen estar relacionados con malos resultados. . Pese a ello, puede que este resultado sea confuso después de lo visto en el punto 5. ¿No habíamos dicho que el cambio de entrenador tenía un efecto positivo? Sí, pero ese efecto es relativo. Un equipo incrementa su probababilidad de ganar gracias a un cambio de entrenador (vemos que la ocurrencia de victorias es mayor después de dicho cambio que antes del mismo), sin embargo eso no implica que vaya a tener mejores resultados que los equipos donde no fue necesario dicho cambio. . Algo que es importante recordar es que los valores surgidos del análisis no son las probabilidades de cada evento, sino su ocurrencia en el dataset. Y por tanto, al ambos análisis haber sido realizados sobre partes del dataset distintas (en el punto 5 utilizamos los datos del historial de partidos y aquí los resultados de los partidos a modelar), los valores absolutos no son comparables. . C) Tipo de competici&#243;n . Podemos analizar también como el tipo de competición influye en la distribución de resultados: . variable=&#39;target&#39; variable_condicional=&#39;is_cup&#39; condicion_numerica=1 x_label=&#39;Resultado&#39; tipo_de_condición=&#39;bool&#39; fffmp.Histograma_condicional_numerica(FMP,variable,variable_condicional,tipo_de_condición,condicion_numerica,x_label) . . Se puede ver como hay un mayor porcentaje de victorias visitantes en los partidos de copa comparados a los de liga. Eso puede deberse a que muchas veces se juegan en campo neutral. . D) Diferencia de rating . Veamos ahora como la diferencia de rating medio entre el equipo visitante y local esta relacionado con el resultado: . variable=&#39;target&#39; variable_condicional=&#39;Rating_diff&#39; condicion_numerica=0 x_label=&#39;Resultado&#39; tipo_de_condición=&#39;&gt;&lt;_value&#39; fffmp.Histograma_condicional_numerica(FMP,variable,variable_condicional,tipo_de_condición,condicion_numerica,x_label) . . Como es de esperarse, el equipo con mayor rating tiene una mayor probabilidad de victoria (Recordemos que $ Delta Rating= Rating_{medio}(local)-Rating_{medio}(visitante)$). . Esto se ve aún más exacerbado al mirar diferencias de rating mayores. . variable=&#39;target&#39; variable_condicional=&#39;Rating_diff&#39; condicion_numerica=4 x_label=&#39;Resultado&#39; tipo_de_condición=&#39;&gt;&lt;_value&#39; fffmp.Histograma_condicional_numerica(FMP,variable,variable_condicional,tipo_de_condición,condicion_numerica,x_label) . . Como último comentario, es interesante notar como diferencias de rating altas se relacionan con una reducción en la probabilidad de observar empates. . E) Resultados en partidos anteriores . Una cosa bastante interesante de preguntarnos es cómo se altera la distribución de resultados para un equipo que ganó una cantidad $n$ de los últimos diéz partidos. . Empecemos por un casi simple, un equipo que ganó $10$ de los ultimos $10$ encuentros: . variable=&#39;target&#39; variable_condicional=&#39;home_outcome_V&#39; x_label=&#39;Resultado&#39; tipo_de_condición=&#39;bool&#39; n=10 fffmp.Histograma_historic_condition_n_times(FMP,variable,variable_condicional,n,x_label,legend_pos=&#39;best&#39;) . . variable=&#39;target&#39; variable_condicional=&#39;away_outcome_V&#39; x_label=&#39;Resultado&#39; tipo_de_condición=&#39;bool&#39; n=10 fffmp.Histograma_historic_condition_n_times(FMP,variable,variable_condicional,n,x_label,legend_pos=&#39;lower right&#39;) . . Tal como era de esperarse, las probabilidades de victoria se ven sensiblemente incrementadas. Para nuestro dataset: . Para un local, pasamos de alrededor de un $42 %$ a un $75 %$ de victorias. | Mientras que para un visitante de alrededor de un $31 %$ a un $62 %$ de victorias. | . Esto indicaría un incremento a casi el doble de probabilidades de ganar!! . ¿Qué pasa si reducimos esa condición? Evidentemente, un equipo que ganó $0$ encuentros debería tener mayores probabilidades de perder, por ejemplo. . variable=&#39;target&#39; variable_condicional=&#39;home_outcome_V&#39; x_label=&#39;Resultado&#39; tipo_de_condición=&#39;bool&#39; n=0 fffmp.Histograma_historic_condition_n_times(FMP,variable,variable_condicional,n,x_label,legend_pos=&#39;lower right&#39;) . . variable=&#39;target&#39; variable_condicional=&#39;away_outcome_V&#39; x_label=&#39;Resultado&#39; tipo_de_condición=&#39;bool&#39; n=0 fffmp.Histograma_historic_condition_n_times(FMP,variable,variable_condicional,n,x_label,legend_pos=&#39;best&#39;) . . Tal como era de esperarse: . Para un local, pasamos de alrededor de un $42 %$ a un $28 %$ de victorias | Mientras que para un visitante de alrededor de un $31 %$ a un $20 %$ de victorias. | . Cabe preguntarse también para que numero de partidos pasamos de incrementar a reducir nuestras chances de ganar el partido. A priori uno podría pensar que tiene que ser para $n=5$, sin embargo la barrera esta en $n=4$: . variable=&#39;target&#39; variable_condicional=&#39;home_outcome_V&#39; x_label=&#39;Resultado&#39; tipo_de_condición=&#39;bool&#39; n=4 fffmp.Histograma_historic_condition_n_times(FMP,variable,variable_condicional,n,x_label,legend_pos=&#39;best&#39;) . . variable=&#39;target&#39; variable_condicional=&#39;away_outcome_V&#39; x_label=&#39;Resultado&#39; tipo_de_condición=&#39;bool&#39; n=4 fffmp.Histograma_historic_condition_n_times(FMP,variable,variable_condicional,n,x_label,legend_pos=&#39;best&#39;) . . 7) Matrrices de Correlaci&#243;n . Cómo última cosa a analizar, quise darle una mirada a las matrices de correlación. . Para ello comenzamos por revisar cuales son las variables o features del dataset . fffmp.Print_features(FMP) . Today Features id target is_cup Rating_diff home_coach_continuity away_coach_continuity home_partidos_tres_semanas home_partidos_diez_dias home_partidos_cuatro_dias away_partidos_tres_semanas away_partidos_diez_dias away_partidos_cuatro_dias diff_num_partidos_tres_semanas diff_num_partidos_diez_dias diff_num_partidos_cuatro_dias is_friendly Historic Features home/away_team_history_is_play_home_i home/away_team_history_is_cup_i home/away_rating_diff_i home/away_goal_diff_i home/away_coach_continuity_i home/away_relevance_i home/away_outcome_V_i home/away_outcome_D_i home/away_is_friendly_i home/away_result_ponderado_i . . Dado que tenemos más de 200 columnas, dividiremos el análisis en distintas partes. Las Today Features (Match_day_Features en adelante) las representaremos todas juntas, mientras que para las Historic Features haremos graficos individuales para que sea más accesible la visualización. . Es importante también mencionar que se representará la matriz de correlación $M$ como $sign(M) , sqrt{abs(M)}$, para facilitar el análisis. Cómo referencia, adjuntamos un tabla de valores de referencia: . real=np.array([0.0001,0.001,0.01,0.02,0.03,0.05,0.1,0.25,0.3,0.5,0.8,1]) scale=np.sqrt(real) display(pd.DataFrame({&#39;Original&#39;:real,&#39;Transformado&#39;:scale})) . . Original Transformado . 0 0.0001 | 0.010000 | . 1 0.0010 | 0.031623 | . 2 0.0100 | 0.100000 | . 3 0.0200 | 0.141421 | . 4 0.0300 | 0.173205 | . 5 0.0500 | 0.223607 | . 6 0.1000 | 0.316228 | . 7 0.2500 | 0.500000 | . 8 0.3000 | 0.547723 | . 9 0.5000 | 0.707107 | . 10 0.8000 | 0.894427 | . 11 1.0000 | 1.000000 | . A) Variables del d&#237;a del partido . tipo=&#39;Match_day_Features&#39; fffmp.Matrices_de_correlacion_All_Features(FMP,tipo) . . Observaciones: . En general no hay variables que muestren una alta correlacion con los targets. La mayor correlacion la encontramos para el la diferencia de rating que muestra un $0.25$ de valor real. | Se puede observar un bloque altamente correlacionado en el centro que corresponde a las variables de acumulación de partidos. Esto tiene sentido por como estan definidas. | . B) Diferencia de gol en los partidos anteriores . historic_feature=[&#39;goal_diff&#39;,&#39;rating_diff&#39;,&#39;coach_continuity&#39;,&#39;team_history_is_play_home&#39;,&#39;team_history_is_cup&#39;,&#39;result_ponderado&#39;] tipo=&#39;Historicas&#39; fffmp.Matrices_de_correlacion_All_Features(FMP,tipo,historic_feature[0]) . . Observaciones: . Como era de esperarse, resultados positivos en partidos anteriores aumentan la probabilidad de una victoria en el partido del día, y visceversa. | Esta correlacion también se ve reflejada entre partidos del historial. Mas aún, parecería haber una mayor correlacion dependiendo de la cercanía entre los partidos (i.e. los valores cercanos a la diagonal son ligeramente más grandes). | . C) Diferencia de rating en los partidos anteriores . historic_feature=[&#39;goal_diff&#39;,&#39;rating_diff&#39;,&#39;coach_continuity&#39;,&#39;team_history_is_play_home&#39;,&#39;team_history_is_cup&#39;,&#39;result_ponderado&#39;] tipo=&#39;Historicas&#39; fffmp.Matrices_de_correlacion_All_Features(FMP,tipo,historic_feature[1]) . . Observaciones: . La situación aqui es similar a lo visto para la diferencia de gol. Diferencias de rating altas en partidos anteriores se relacionan con mayores probabilidades de victoria. | Además, de forma similar a lo visto para la diferencia de gol, las diferencias de rating historicas estan correlacionadas: un equipo que muestra una diferencia positiva para un partido tendrá mas chances de mostrar una diferencia positiva para otro. Estos valores, vale la pena notar son bastante altos para lo visto en general ($0.3$). | . D) Resultado ponderado . historic_feature=[&#39;goal_diff&#39;,&#39;rating_diff&#39;,&#39;coach_continuity&#39;,&#39;team_history_is_play_home&#39;,&#39;team_history_is_cup&#39;,&#39;result_ponderado&#39;] tipo=&#39;Historicas&#39; fffmp.Matrices_de_correlacion_All_Features(FMP,tipo,historic_feature[5]) . . Observaciones: . Lo visto aqui es muy similar a lo obtenido para la diferencia de rating y de goal. Podríamos verlo como un punto medio entre ellos. | . 5) Continuidad del Entrenador . historic_feature=[&#39;goal_diff&#39;,&#39;rating_diff&#39;,&#39;coach_continuity&#39;,&#39;team_history_is_play_home&#39;,&#39;team_history_is_cup&#39;,&#39;result_ponderado&#39;] tipo=&#39;Historicas&#39; fffmp.Matrices_de_correlacion_All_Features(FMP,tipo,historic_feature[2]) . . Aquí no parece haber realmente ningún patron importante... .",
            "url": "https://faegru.github.io/FMP_UB_final_project_2022/2022/06/29/4_Analisis_del_Dataset_Final.html",
            "relUrl": "/2022/06/29/4_Analisis_del_Dataset_Final.html",
            "date": " • Jun 29, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "3) TRATAMIENTO DE VARIABLES",
            "content": "La mayoria de las funciones utilizadas en este projecto están en el modulo: . import Functions_for_FMP as fffmp . CARGA DE DATOS . Empezamos, como siempre, cargando los datos. Pero, en esta oportunidad, cargaremos el dataset generado en el bloque 2). . data_clean=&#39;FMP_clean&#39; FMP = pd.read_pickle(data_clean) . fffmp.check_NaNs(FMP) . No hay missing values en el dataset :) . display(FMP) . id target home_team_name away_team_name match_date league_name league_id is_cup home_team_coach_id away_team_coach_id home_team_history_match_date_1 home_team_history_match_date_2 home_team_history_match_date_3 home_team_history_match_date_4 home_team_history_match_date_5 home_team_history_match_date_6 home_team_history_match_date_7 home_team_history_match_date_8 home_team_history_match_date_9 home_team_history_match_date_10 home_team_history_is_play_home_1 home_team_history_is_play_home_2 home_team_history_is_play_home_3 home_team_history_is_play_home_4 home_team_history_is_play_home_5 home_team_history_is_play_home_6 home_team_history_is_play_home_7 home_team_history_is_play_home_8 home_team_history_is_play_home_9 home_team_history_is_play_home_10 home_team_history_is_cup_1 home_team_history_is_cup_2 home_team_history_is_cup_3 home_team_history_is_cup_4 home_team_history_is_cup_5 home_team_history_is_cup_6 home_team_history_is_cup_7 home_team_history_is_cup_8 home_team_history_is_cup_9 home_team_history_is_cup_10 home_team_history_goal_1 home_team_history_goal_2 home_team_history_goal_3 home_team_history_goal_4 home_team_history_goal_5 home_team_history_goal_6 home_team_history_goal_7 home_team_history_goal_8 home_team_history_goal_9 home_team_history_goal_10 home_team_history_opponent_goal_1 home_team_history_opponent_goal_2 home_team_history_opponent_goal_3 home_team_history_opponent_goal_4 home_team_history_opponent_goal_5 home_team_history_opponent_goal_6 home_team_history_opponent_goal_7 home_team_history_opponent_goal_8 home_team_history_opponent_goal_9 home_team_history_opponent_goal_10 home_team_history_rating_1 home_team_history_rating_2 home_team_history_rating_3 home_team_history_rating_4 home_team_history_rating_5 home_team_history_rating_6 home_team_history_rating_7 home_team_history_rating_8 home_team_history_rating_9 home_team_history_rating_10 home_team_history_opponent_rating_1 home_team_history_opponent_rating_2 home_team_history_opponent_rating_3 home_team_history_opponent_rating_4 home_team_history_opponent_rating_5 home_team_history_opponent_rating_6 home_team_history_opponent_rating_7 home_team_history_opponent_rating_8 home_team_history_opponent_rating_9 home_team_history_opponent_rating_10 home_team_history_coach_1 home_team_history_coach_2 home_team_history_coach_3 home_team_history_coach_4 home_team_history_coach_5 home_team_history_coach_6 home_team_history_coach_7 home_team_history_coach_8 home_team_history_coach_9 home_team_history_coach_10 home_team_history_league_id_1 home_team_history_league_id_2 home_team_history_league_id_3 home_team_history_league_id_4 home_team_history_league_id_5 home_team_history_league_id_6 home_team_history_league_id_7 home_team_history_league_id_8 home_team_history_league_id_9 home_team_history_league_id_10 away_team_history_match_date_1 away_team_history_match_date_2 away_team_history_match_date_3 away_team_history_match_date_4 away_team_history_match_date_5 away_team_history_match_date_6 away_team_history_match_date_7 away_team_history_match_date_8 away_team_history_match_date_9 away_team_history_match_date_10 away_team_history_is_play_home_1 away_team_history_is_play_home_2 away_team_history_is_play_home_3 away_team_history_is_play_home_4 away_team_history_is_play_home_5 away_team_history_is_play_home_6 away_team_history_is_play_home_7 away_team_history_is_play_home_8 away_team_history_is_play_home_9 away_team_history_is_play_home_10 away_team_history_is_cup_1 away_team_history_is_cup_2 away_team_history_is_cup_3 away_team_history_is_cup_4 away_team_history_is_cup_5 away_team_history_is_cup_6 away_team_history_is_cup_7 away_team_history_is_cup_8 away_team_history_is_cup_9 away_team_history_is_cup_10 away_team_history_goal_1 away_team_history_goal_2 away_team_history_goal_3 away_team_history_goal_4 away_team_history_goal_5 away_team_history_goal_6 away_team_history_goal_7 away_team_history_goal_8 away_team_history_goal_9 away_team_history_goal_10 away_team_history_opponent_goal_1 away_team_history_opponent_goal_2 away_team_history_opponent_goal_3 away_team_history_opponent_goal_4 away_team_history_opponent_goal_5 away_team_history_opponent_goal_6 away_team_history_opponent_goal_7 away_team_history_opponent_goal_8 away_team_history_opponent_goal_9 away_team_history_opponent_goal_10 away_team_history_rating_1 away_team_history_rating_2 away_team_history_rating_3 away_team_history_rating_4 away_team_history_rating_5 away_team_history_rating_6 away_team_history_rating_7 away_team_history_rating_8 away_team_history_rating_9 away_team_history_rating_10 away_team_history_opponent_rating_1 away_team_history_opponent_rating_2 away_team_history_opponent_rating_3 away_team_history_opponent_rating_4 away_team_history_opponent_rating_5 away_team_history_opponent_rating_6 away_team_history_opponent_rating_7 away_team_history_opponent_rating_8 away_team_history_opponent_rating_9 away_team_history_opponent_rating_10 away_team_history_coach_1 away_team_history_coach_2 away_team_history_coach_3 away_team_history_coach_4 away_team_history_coach_5 away_team_history_coach_6 away_team_history_coach_7 away_team_history_coach_8 away_team_history_coach_9 away_team_history_coach_10 away_team_history_league_id_1 away_team_history_league_id_2 away_team_history_league_id_3 away_team_history_league_id_4 away_team_history_league_id_5 away_team_history_league_id_6 away_team_history_league_id_7 away_team_history_league_id_8 away_team_history_league_id_9 away_team_history_league_id_10 home_team_median_rating away_team_median_rating . 0 11906497 | away | Newell&#39;s Old Boys | River Plate | 2019-12-01 00:45:00 | Superliga | 636.0 | 0 | 468196.0 | 468200.0 | 2019-11-26 00:10:00 | 2019-11-10 18:30:00 | 2019-11-03 18:30:00 | 2019-10-29 22:10:00 | 2019-10-19 20:45:00 | 2019-10-04 22:00:00 | 2019-09-28 23:00:00 | 2019-09-22 14:00:00 | 2019-09-15 18:30:00 | 2019-09-01 16:15:00 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 2.0 | 0.0 | 0.0 | 3.0 | 0.0 | 1.0 | 2.0 | 1.0 | 4.0 | 1.0 | 0.0 | 1.0 | 4.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 3.856860 | 5.724370 | 4.335091 | 6.678853 | 5.478300 | 5.858534 | 3.641945 | 7.957243 | 4.326252 | 7.106259 | 5.199840 | 3.694033 | 5.131156 | 3.193161 | 4.080169 | 3.898775 | 7.672377 | 2.864026 | 4.814193 | 3.454310 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 636 | 636 | 636 | 636 | 636 | 636 | 636 | 636 | 636 | 636 | 2019-11-23 20:00:00 | 2019-11-15 00:10:00 | 2019-11-10 14:00:00 | 2019-11-02 23:00:00 | 2019-10-30 00:20:00 | 2019-10-23 00:30:00 | 2019-10-18 22:00:00 | 2019-10-11 23:30:00 | 2019-10-06 20:45:00 | 2019-10-02 00:30:00 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 2.0 | 0.0 | 2.0 | 2.0 | 0.0 | 3.0 | 2.0 | 2.0 | 2.0 | 2.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 3.0 | 0.0 | 0.0 | 0.0 | 4.598000 | 11.825567 | 9.374867 | 8.265660 | 10.769583 | 4.680350 | 6.429871 | 12.773025 | 10.970814 | 5.924407 | 5.253225 | 2.819962 | 3.114820 | 3.283603 | 2.574183 | 5.887331 | 4.570225 | 2.843268 | 3.057739 | 4.684664 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 1122 | 642 | 636 | 636 | 636 | 1122 | 636 | 642 | 636 | 1122 | 5.601335 | 8.820263 | . 1 11984383 | home | Real Estelí | Deportivo Las Sabanas | 2019-12-01 01:00:00 | Primera Division | 752.0 | 0 | 516788.0 | 22169161.0 | 2019-11-27 21:00:00 | 2019-11-24 01:00:00 | 2019-11-10 01:00:00 | 2019-11-02 21:30:00 | 2019-10-27 01:00:00 | 2019-10-24 01:00:00 | 2019-10-21 00:00:00 | 2019-10-18 01:00:00 | 2019-10-06 01:00:00 | 2019-09-29 21:00:00 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 4.0 | 0.0 | 0.0 | 2.0 | 0.0 | 2.0 | 1.0 | 0.0 | 2.0 | 2.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 2.0 | 0.0 | 13.668800 | 5.967622 | 9.130611 | 5.732981 | 7.804064 | 6.743764 | 6.237028 | 12.616250 | 8.334650 | 8.172615 | 3.671610 | 6.121228 | 3.320450 | 5.766069 | 4.118071 | 4.223164 | 5.260700 | 3.102806 | 5.627457 | 4.256165 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 752 | 752 | 752 | 752 | 752 | 752 | 752 | 752 | 752 | 752 | 2019-11-27 21:00:00 | 2019-11-23 23:00:00 | 2019-11-09 22:00:00 | 2019-11-02 21:00:00 | 2019-10-28 00:00:00 | 2019-10-21 00:00:00 | 2019-10-16 21:00:00 | 2019-09-29 01:00:00 | 2019-09-20 21:30:00 | 2019-09-15 01:00:00 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 4.0 | 0.0 | 2.0 | 4.0 | 1.0 | 1.0 | 0.0 | 4.0 | 0.0 | 1.0 | 1.0 | 6.000588 | 4.692008 | 4.461575 | 5.301500 | 8.290211 | 5.260700 | 4.928100 | 5.708921 | 4.125842 | 4.103719 | 6.881762 | 6.840558 | 8.700363 | 5.156150 | 3.864878 | 6.237028 | 6.871904 | 5.716200 | 7.960465 | 9.994456 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 752 | 752 | 752 | 752 | 752 | 752 | 752 | 752 | 752 | 752 | 7.988340 | 5.094400 | . 2 11983301 | draw | UPNFM | Marathón | 2019-12-01 01:00:00 | Liga Nacional | 734.0 | 0 | 2510608.0 | 456313.0 | 2019-11-28 01:15:00 | 2019-11-21 01:30:00 | 2019-11-03 21:30:00 | 2019-10-27 01:00:00 | 2019-10-20 22:00:00 | 2019-10-17 01:00:00 | 2019-10-05 21:00:00 | 2019-09-29 01:00:00 | 2019-09-22 22:00:00 | 2019-09-19 01:00:00 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 3.0 | 2.0 | 2.0 | 1.0 | 0.0 | 2.0 | 4.0 | 3.0 | 1.0 | 1.0 | 1.0 | 0.0 | 3.0 | 0.0 | 1.0 | 2.0 | 4.0 | 2.0 | 3.0 | 1.0 | 5.736719 | 9.745283 | 5.685920 | 6.975000 | 3.864360 | 7.930120 | 4.650054 | 12.803284 | 5.094975 | 5.961407 | 6.825194 | 4.053167 | 5.293940 | 4.725164 | 7.776850 | 4.167290 | 7.289893 | 3.691168 | 7.223050 | 4.429055 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 734 | 734 | 734 | 734 | 734 | 734 | 734 | 734 | 734 | 734 | 2019-11-21 01:30:00 | 2019-11-10 22:00:00 | 2019-10-26 21:00:00 | 2019-10-20 23:00:00 | 2019-10-16 21:30:00 | 2019-10-12 21:00:00 | 2019-10-05 21:00:00 | 2019-09-28 22:00:00 | 2019-09-22 22:00:00 | 2019-09-18 21:30:00 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 3.0 | 0.0 | 0.0 | 4.0 | 1.0 | 3.0 | 4.0 | 2.0 | 4.0 | 0.0 | 1.0 | 1.0 | 0.0 | 2.0 | 0.0 | 2.0 | 4.0 | 1.0 | 0.0 | 0.0 | 8.379419 | 4.850100 | 8.676865 | 6.987061 | 7.966967 | 7.972809 | 7.289893 | 7.604720 | 6.451019 | 10.021854 | 5.487338 | 7.697712 | 4.186315 | 5.183071 | 6.176583 | 4.054209 | 4.650054 | 5.284983 | 5.299259 | 3.862791 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 734 | 734 | 734 | 734 | 734 | 734 | 734 | 734 | 734 | 734 | 5.849063 | 7.785843 | . 3 11983471 | away | León | Morelia | 2019-12-01 01:00:00 | Liga MX | 743.0 | 0 | 1552508.0 | 465797.0 | 2019-11-28 01:00:00 | 2019-11-23 03:10:00 | 2019-11-10 03:00:00 | 2019-11-04 02:00:00 | 2019-11-01 03:00:00 | 2019-10-27 01:00:00 | 2019-10-20 17:00:00 | 2019-10-05 22:00:00 | 2019-09-28 00:00:00 | 2019-09-25 02:00:00 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 3.0 | 2.0 | 4.0 | 1.0 | 0.0 | 3.0 | 2.0 | 1.0 | 1.0 | 1.0 | 3.0 | 1.0 | 0.0 | 1.0 | 1.0 | 2.0 | 1.0 | 1.0 | 2.0 | 1.0 | 5.998800 | 5.860496 | 8.256900 | 8.342183 | 6.163600 | 8.097475 | 5.796913 | 10.739525 | 7.261250 | 7.982087 | 5.998800 | 6.024042 | 4.508125 | 4.960117 | 5.867100 | 4.351000 | 5.823181 | 2.280050 | 5.544414 | 4.473325 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 743 | 743 | 743 | 743 | 743 | 743 | 743 | 743 | 743 | 743 | 2019-11-28 01:00:00 | 2019-11-23 23:00:00 | 2019-11-09 01:00:00 | 2019-11-04 02:00:00 | 2019-11-01 01:00:00 | 2019-10-26 00:00:00 | 2019-10-19 22:00:00 | 2019-10-05 02:00:00 | 2019-10-02 02:00:00 | 2019-09-26 02:06:00 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 3.0 | 1.0 | 3.0 | 1.0 | 6.0 | 2.0 | 3.0 | 2.0 | 1.0 | 2.0 | 3.0 | 3.0 | 2.0 | 1.0 | 1.0 | 2.0 | 2.0 | 3.0 | 0.0 | 3.0 | 5.998800 | 4.901579 | 8.413533 | 4.960117 | 7.482900 | 5.912175 | 3.986478 | 6.515762 | 4.575759 | 5.434175 | 5.998800 | 6.548433 | 4.576617 | 8.342183 | 4.878850 | 6.208425 | 7.483589 | 5.587387 | 7.301455 | 7.766762 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 743 | 743 | 743 | 743 | 743 | 743 | 743 | 743 | 746 | 743 | 7.621669 | 5.673175 | . 4 11883005 | home | Cobán Imperial | Iztapa | 2019-12-01 01:00:00 | Liga Nacional | 705.0 | 0 | 429958.0 | 426870.0 | 2019-11-27 18:00:00 | 2019-11-24 01:00:00 | 2019-11-10 02:00:00 | 2019-11-03 01:00:00 | 2019-10-27 20:30:00 | 2019-10-24 00:00:00 | 2019-10-20 18:00:00 | 2019-10-06 17:00:00 | 2019-10-02 21:30:00 | 2019-09-29 01:00:00 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 3.0 | 2.0 | 2.0 | 1.0 | 3.0 | 3.0 | 1.0 | 1.0 | 1.0 | 2.0 | 2.0 | 1.0 | 0.0 | 1.0 | 2.0 | 2.0 | 1.0 | 2.0 | 1.0 | 6.295743 | 7.625358 | 5.320906 | 7.425725 | 4.854167 | 10.857700 | 5.756838 | 7.079583 | 5.653375 | 9.926950 | 5.535514 | 4.848225 | 6.279472 | 4.178193 | 7.449917 | 3.002752 | 6.053250 | 4.540000 | 6.165925 | 3.876500 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 705 | 705 | 705 | 705 | 705 | 705 | 705 | 705 | 705 | 705 | 2019-11-27 19:00:00 | 2019-11-24 21:00:00 | 2019-11-10 19:30:00 | 2019-11-02 19:00:00 | 2019-10-26 21:00:00 | 2019-10-23 19:00:00 | 2019-10-20 17:30:00 | 2019-10-05 19:00:00 | 2019-10-02 19:00:00 | 2019-09-29 18:00:00 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 4.0 | 1.0 | 0.0 | 1.0 | 1.0 | 3.0 | 0.0 | 2.0 | 4.0 | 2.0 | 1.0 | 2.0 | 0.0 | 0.0 | 1.0 | 1.0 | 2.0 | 1.0 | 0.0 | 2.0 | 6.349390 | 5.894700 | 6.113000 | 7.766560 | 4.168200 | 7.231370 | 3.632279 | 6.414396 | 7.972750 | 4.290735 | 5.575180 | 5.901842 | 5.751275 | 4.163600 | 8.559950 | 4.059211 | 8.935007 | 5.888077 | 4.413683 | 7.031962 | 426870.0 | 426870.0 | 426870.0 | 426870.0 | 426870.0 | 426870.0 | 426870.0 | 37261558.0 | 37261558.0 | 37261558.0 | 705 | 705 | 705 | 705 | 705 | 705 | 705 | 705 | 705 | 705 | 6.687663 | 6.231195 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 110933 18030016 | draw | Zamora Fútbol Club | Hermanos Colmenares | 2021-04-30 23:00:00 | Primera Division | 800.0 | 0 | 7708122.0 | 37564088.0 | 2021-04-23 23:00:00 | 2021-04-18 23:00:00 | 2020-12-10 21:00:00 | 2020-12-09 00:00:00 | 2020-12-03 21:00:00 | 2020-11-30 00:00:00 | 2020-11-26 21:00:00 | 2020-11-23 01:00:00 | 2020-11-20 21:00:00 | 2020-11-15 21:00:00 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 4.0 | 0.0 | 1.0 | 1.0 | 0.0 | 4.0 | 3.0 | 1.0 | 1.0 | 2.0 | 0.0 | 0.0 | 3.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 3.0 | 0.0 | 8.399605 | 7.089190 | 4.675287 | 6.718459 | 8.415071 | 7.993363 | 4.642833 | 5.924607 | 5.088036 | 5.807075 | 4.085210 | 3.991885 | 5.693388 | 4.217531 | 3.893529 | 3.449633 | 6.642439 | 5.208821 | 4.851727 | 4.834250 | 7708122.0 | 7708122.0 | 232533.0 | 232533.0 | 232533.0 | 232533.0 | 232533.0 | 232533.0 | 232533.0 | 232533.0 | 800 | 800 | 800 | 800 | 800 | 800 | 800 | 800 | 800 | 800 | 2021-04-22 22:15:00 | 2021-04-15 22:00:00 | 2021-02-28 20:00:00 | 2021-02-25 20:00:00 | 2020-12-10 19:00:00 | 2020-12-08 13:00:00 | 2020-12-04 19:30:00 | 2020-11-29 16:00:00 | 2020-11-27 19:30:00 | 2020-11-24 19:30:00 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 4.0 | 1.0 | 2.0 | 2.0 | 0.0 | 2.0 | 1.0 | 1.0 | 2.0 | 2.0 | 2.0 | 2.0 | 2.0 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 3.0 | 1.0 | 5.008125 | 3.272463 | 3.717115 | 5.238575 | 5.311650 | 3.935375 | 5.538133 | 6.713300 | 7.004975 | 7.872750 | 7.239339 | 9.332287 | 7.058742 | 6.961725 | 5.757350 | 7.712525 | 5.875017 | 6.233200 | 5.785250 | 3.224300 | 37564088.0 | 37564088.0 | -1.0 | -1.0 | -1.0 | -1.0 | -1.0 | -1.0 | -1.0 | -1.0 | 800 | 800 | 1101 | 1101 | 803 | 803 | 803 | 803 | 803 | 803 | 6.321533 | 5.275113 | . 110934 18030096 | away | Royal Pari | Oriente Petrolero | 2021-04-30 23:00:00 | Liga De Futbol Prof | 1098.0 | 0 | 465833.0 | 16488543.0 | 2021-04-23 23:30:00 | 2021-04-09 19:00:00 | 2021-04-03 00:00:00 | 2021-03-15 19:00:00 | 2021-03-11 19:00:00 | 2021-03-04 00:30:00 | 2021-02-25 00:30:00 | 2020-12-31 19:00:00 | 2020-12-29 19:00:00 | 2020-12-27 19:00:00 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 3.0 | 3.0 | 4.0 | 8.0 | 1.0 | 1.0 | 3.0 | 1.0 | 1.0 | 2.0 | 2.0 | 0.0 | 2.0 | 0.0 | 1.0 | 4.0 | 0.0 | 2.0 | 1.0 | 6.040300 | 10.020550 | 12.860092 | 11.139392 | 7.818325 | 2.744600 | 4.725100 | 7.664328 | 3.824074 | 14.587612 | 7.571322 | 4.299200 | 4.442021 | 4.668812 | 5.952370 | 9.885500 | 5.943867 | 6.106442 | 16.265222 | 4.490291 | 465833.0 | 465833.0 | 465833.0 | 465833.0 | 465833.0 | 465833.0 | 465833.0 | 15083408.0 | 15083408.0 | 15083408.0 | 1098 | 1098 | 1098 | 1098 | 1098 | 1122 | 1122 | 1098 | 1098 | 1098 | 2021-04-24 20:00:00 | 2021-04-10 21:15:00 | 2021-04-04 19:00:00 | 2021-03-20 22:00:00 | 2021-03-14 21:15:00 | 2020-12-31 19:00:00 | 2020-12-29 19:00:00 | 2020-12-27 19:00:00 | 2020-12-24 16:00:00 | 2020-12-22 21:15:00 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 4.0 | 0.0 | 2.0 | 1.0 | 0.0 | 1.0 | 2.0 | 2.0 | 0.0 | 2.0 | 2.0 | 1.0 | 5.0 | 4.0 | 1.0 | 0.0 | 2.0 | 0.0 | 6.171106 | 5.009241 | 6.848221 | 5.794154 | 3.647533 | 3.127178 | 10.115545 | 10.518444 | 4.145661 | 6.377816 | 7.421600 | 8.467391 | 6.183761 | 6.553486 | 15.376050 | 15.843563 | 4.510164 | 3.885800 | 12.142436 | 8.047688 | 16488543.0 | 16488543.0 | 16488543.0 | 16488543.0 | 16488543.0 | 471810.0 | 471810.0 | 471810.0 | 471810.0 | 471810.0 | 1098 | 1098 | 1098 | 1098 | 1098 | 1098 | 1098 | 1098 | 1098 | 1098 | 7.741326 | 5.982630 | . 110935 17715497 | draw | São Bernardo | Água Santa | 2021-04-30 23:00:00 | Paulista A2 | 1314.0 | 0 | 8416491.0 | 528562.0 | 2021-04-28 23:00:00 | 2021-04-25 01:00:00 | 2021-04-22 23:00:00 | 2021-04-21 01:00:00 | 2021-03-14 18:00:00 | 2021-03-10 18:00:00 | 2021-03-06 18:00:00 | 2021-02-28 18:00:00 | 2020-12-16 22:00:00 | 2020-12-12 18:00:00 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 2.0 | 1.0 | 1.0 | 0.0 | 1.0 | 2.0 | 0.0 | 1.0 | 1.0 | 2.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 2.0 | 3.0 | 1.0 | 6.000775 | 4.526330 | 7.443283 | 4.315928 | 6.756878 | 4.644605 | 7.546083 | 7.061783 | 4.466550 | 5.604375 | 3.981619 | 6.126650 | 3.033975 | 5.529961 | 3.184456 | 5.475955 | 4.388908 | 4.097217 | 6.262675 | 4.821825 | 8416491.0 | 8416491.0 | 8416491.0 | 8416491.0 | 8416491.0 | 8416491.0 | 8416491.0 | 8416491.0 | 883181.0 | 883181.0 | 1314 | 1314 | 1314 | 1314 | 1314 | 1314 | 1314 | 1314 | 1746 | 1746 | 2021-04-28 23:00:00 | 2021-04-24 23:00:00 | 2021-04-22 23:00:00 | 2021-04-21 01:00:00 | 2021-03-14 18:00:00 | 2021-03-10 22:00:00 | 2021-03-06 18:00:00 | 2021-02-27 19:00:00 | 2020-12-09 18:00:00 | 2020-12-06 18:00:00 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 2.0 | 0.0 | 1.0 | 3.0 | 1.0 | 2.0 | 2.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 6.921617 | 8.577671 | 8.155264 | 4.232500 | 8.495162 | 4.670143 | 8.135642 | 6.617900 | 3.881263 | 5.310150 | 3.081836 | 3.070258 | 2.536957 | 5.304985 | 3.004767 | 4.952157 | 3.257969 | 4.472350 | 7.371638 | 6.301017 | 528562.0 | 528562.0 | 528562.0 | 528562.0 | 528562.0 | 528562.0 | 528562.0 | 528562.0 | 896682.0 | 896682.0 | 1314 | 1314 | 1314 | 1314 | 1314 | 1314 | 1314 | 1314 | 1746 | 1746 | 5.802575 | 6.769758 | . 110936 17944153 | away | Everton | La Serena | 2021-05-01 00:00:00 | Primera Division | 663.0 | 0 | 6973085.0 | 471757.0 | 2021-04-24 00:00:00 | 2021-04-18 19:00:00 | 2021-04-12 19:00:00 | 2021-04-02 19:00:00 | 2021-03-27 19:00:00 | 2021-02-14 13:30:00 | 2021-02-11 21:30:00 | 2021-02-06 20:00:00 | 2021-01-19 22:15:00 | 2021-01-14 20:00:00 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 2.0 | 1.0 | 1.0 | 0.0 | 1.0 | 1.0 | 2.0 | 1.0 | 2.0 | 1.0 | 1.0 | 1.0 | 0.0 | 3.0 | 3.0 | 1.0 | 1.0 | 6.067230 | 5.688200 | 4.704490 | 5.210350 | 6.451883 | 6.283628 | 6.234132 | 5.700200 | 3.996717 | 7.312802 | 5.382177 | 5.205100 | 5.619340 | 6.392000 | 4.846800 | 4.756911 | 5.177539 | 5.952450 | 8.246471 | 4.479139 | 6973085.0 | 6973085.0 | 6973085.0 | 6973085.0 | 6973085.0 | 6973085.0 | 6973085.0 | 6973085.0 | 896760.0 | 896760.0 | 663 | 663 | 663 | 663 | 663 | 663 | 663 | 663 | 663 | 663 | 2021-04-24 19:30:00 | 2021-04-17 22:00:00 | 2021-04-11 19:00:00 | 2021-04-04 21:00:00 | 2021-03-30 23:00:00 | 2021-02-14 21:00:00 | 2021-02-10 21:30:00 | 2021-02-05 20:00:00 | 2021-01-24 20:00:00 | 2021-01-18 20:00:00 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 2.0 | 1.0 | 0.0 | 1.0 | 1.0 | 2.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 2.0 | 2.0 | 1.0 | 2.0 | 0.0 | 0.0 | 5.166822 | 4.803368 | 4.574750 | 4.851700 | 5.065750 | 6.052547 | 4.467189 | 4.663733 | 6.091328 | 4.953404 | 5.888744 | 6.347747 | 5.557890 | 4.190300 | 6.666050 | 5.035318 | 6.378186 | 6.726760 | 5.217356 | 7.172523 | 471757.0 | 471757.0 | 471757.0 | 471757.0 | 471757.0 | 471757.0 | 471757.0 | 471757.0 | 471757.0 | 470515.0 | 663 | 663 | 663 | 663 | 663 | 663 | 663 | 663 | 663 | 663 | 5.883715 | 4.902552 | . 110937 17786297 | home | Colón | Arsenal de Sarandi | 2021-05-01 00:00:00 | Superliga | 636.0 | 0 | 213970.0 | 470859.0 | 2021-04-25 18:45:00 | 2021-04-19 00:00:00 | 2021-04-12 00:00:00 | 2021-04-04 19:15:00 | 2021-03-27 17:00:00 | 2021-03-21 19:15:00 | 2021-03-17 20:15:00 | 2021-03-14 00:30:00 | 2021-03-06 22:20:00 | 2021-02-27 20:10:00 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 2.0 | 2.0 | 0.0 | 3.0 | 0.0 | 0.0 | 2.0 | 2.0 | 3.0 | 2.0 | 2.0 | 3.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 5.673139 | 7.972250 | 4.034900 | 7.055806 | 6.790717 | 6.033171 | 6.282770 | 4.652362 | 7.283950 | 4.716803 | 5.496961 | 4.248540 | 7.558162 | 4.943567 | 5.195333 | 4.771779 | 4.497200 | 6.008047 | 5.281133 | 6.420675 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 636 | 636 | 636 | 636 | 636 | 636 | 642 | 636 | 636 | 636 | 2021-04-28 00:30:00 | 2021-04-25 16:30:00 | 2021-04-22 22:15:00 | 2021-04-18 16:30:00 | 2021-04-11 14:00:00 | 2021-04-04 00:00:00 | 2021-03-27 21:30:00 | 2021-03-22 22:00:00 | 2021-03-15 22:15:00 | 2021-03-07 20:10:00 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 2.0 | 3.0 | 0.0 | 2.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 2.0 | 1.0 | 2.0 | 0.0 | 3.0 | 0.0 | 2.0 | 5.0 | 5.580400 | 4.627278 | 4.094762 | 4.880070 | 5.694806 | 4.488244 | 4.937108 | 6.074100 | 4.634711 | 4.933917 | 5.332983 | 6.780128 | 8.455300 | 6.430750 | 5.676700 | 9.973094 | 6.216542 | 5.783800 | 6.112818 | 5.445117 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 1116 | 636 | 1116 | 636 | 636 | 636 | 636 | 636 | 636 | 636 | 6.157970 | 4.906993 | . 102912 rows × 192 columns . . fffmp.Print_features(FMP) . Today Features id target home_team_name away_team_name match_date league_name league_id is_cup home_team_coach_id away_team_coach_id home_team_median_rating away_team_median_rating Historic Features home/away_team_history_match_date_i home/away_team_history_is_play_home_i home/away_team_history_is_cup_i home/away_team_history_goal_i home/away_team_history_opponent_goal_i home/away_team_history_rating_i home/away_team_history_opponent_rating_i home/away_team_history_coach_i home/away_team_history_league_id_i . . TRATAMIENTO, COMBINACI&#211;N Y GENERACION DE VARIABLES . 1) Diferencia de Rating . El rating es una variable calculada por el proveedor de los datos (Octosport) y corresponde a la fuerza relativa calculada antes del partido.Por si solo, y de forma aislada, no nos da ninguna información. Sin embargo, al comparar los ratings de los dos equipos que juegan un partido, nos podemos dar una idea de quién es el &quot;favorito&quot; a ganar. Es por eso, que decidí combinar los ratings para los distintos partidos, generando una unica variable llamada &quot;home(away)_rating_diff_i&quot; que es la diferencia de el rating de cada equipo (away o home) contra su oponente. . Esperamos que esta variable nos de información hacerca de cuan sorprendente es un resultado respecto a lo esperado. . for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(1,11): new_label=t+&#39;_rating_diff_{}&#39;.format(i) ranting=t+&#39;_team_history_rating_{}&#39;.format(i) op_ranting=t+&#39;_team_history_opponent_rating_{}&#39;.format(i) FMP[new_label]=FMP[ranting]-FMP[op_ranting] FMP=FMP.drop(columns=[ranting,op_ranting]) . . Se procedió de manera análoga para el partido a modelar, utilizando el rating medio calculado. Sin embargo, en este caso tuvimos que tener un cuidado especial. Sabemos que los ratings medios solo tienen sentido dentro de una liga. Luego, para los casos en los que los equipos pertenezcan a distintas ligas, la diferencia de rating la fijamos a $0$. . for t in [&#39;home&#39;,&#39;away&#39;]: C=[] for i in range(1,11): C.append(t+&#39;_team_history_league_id_{}&#39;.format(i)) FMP[t+&#39;_liga&#39;]=FMP[C].mode(axis=1)[0] h=&#39;home_team_median_rating&#39; a=&#39;away_team_median_rating&#39; FMP[&#39;Rating_diff&#39;]=(FMP[h]-FMP[a])*(FMP[&#39;away_liga&#39;]==FMP[&#39;home_liga&#39;]).astype(&#39;int&#39;)*(FMP[&#39;home_liga&#39;]!=-1).astype(&#39;int&#39;) FMP=FMP.drop(columns=[h,a,&#39;home_liga&#39;,&#39;away_liga&#39;]) . . Finalmente, eliminamos las columnas correspondientes a ratings. . 2) Diferencia de gol . De nuevo, la información más relevante para nosotros no serán los goles anotados, sinó la diferencia de goles para cada partido. Para calcular esa variable simplemente restamos los goles anotados por cada equipo (away o home) contra su oponente. . for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(1,11): new_label=t+&#39;_goal_diff_{}&#39;.format(i) goal=t+&#39;_team_history_goal_{}&#39;.format(i) op_goal=t+&#39;_team_history_opponent_goal_{}&#39;.format(i) FMP[new_label] = FMP[goal]-FMP[op_goal] FMP=FMP.drop(columns=[goal,op_goal]) . . Finalmente, eliminamos las columnas correspondientes a goles anotados. . 3) Continuidad del entrenador . Los cambios de entrenador muchas veces tienen un efecto animico que se traslada a los resultados. Por esta razón decidí utilizar utilizar las variables de &quot;coach_id&quot;, para generar una variable nueva bool que para cada partido indique si hubo o no un cambio de entrenador. La nueva variable llamada &quot;home(away)_coach_continuity_i&quot; surge de comparar el identificador del entrenador en partidos consecutivos, cuando haya un cambio de entrenador valdrá $0$, y si se mantiene el mismo $1$. . (Para el partido más antiguo, $i=10$, presupondré continuidad) . for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(1,10): new_label=t+&#39;_coach_continuity_{}&#39;.format(i) c=t+&#39;_team_history_coach_{}&#39;.format(i) a=t+&#39;_team_history_coach_{}&#39;.format(i+1) FMP[new_label] = ( (FMP[c]==FMP[a]) | ( (FMP[c]==-1) | (FMP[a]==-1) ) ).astype(&#39;int&#39;) #para el partido a predecir new_label=t+&#39;_coach_continuity&#39; c=t+&#39;_team_coach_id&#39; a=t+&#39;_team_history_coach_{}&#39;.format(1) FMP[new_label] = ( (FMP[c]==FMP[a]) | ( (FMP[c]==-1) | (FMP[a]==-1) ) ).astype(&#39;int&#39;) #para el partido más antíguo i=10 new_label=t+&#39;_coach_continuity_{}&#39;.format(10) FMP[new_label] = np.ones(len(FMP)).astype(&#39;int&#39;) for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(1,11): c=t+&#39;_team_history_coach_{}&#39;.format(i) FMP=FMP.drop(columns=[c]) c=t+&#39;_team_coach_id&#39; FMP=FMP.drop(columns=[c]) . . Finalmente, eliminamos las columnas correspondientes al identificador de entrenador. . 4) Acumulaci&#243;n de partidos . La idea aquí fue utilizar las fechas de los partidos para generar una variable que cuantifique la acumulación de partidos. Eso no solo puede tener efectos en el cansancio de los jugadores, sino también puede obligar a una mayor rotación de jugadores. De esta forma, esperamos que pueda impactar de alguna manera en el rendimiento de los equipos. . Lo que nos importará aquí, nuevamente, no será el valor absoluto, sino el diferencial entre ambos equipos. Despues de todo, si ambos estan expuestos al mismo ritmo de juegos, este factor ya pierde importancia. . Para ello, entonces, comencé por calcular el número de partidos jugados en los últimos $21$, $10$ y $4$ días, considerando los $10$ encuentros que tenemos disponibles. . new_label_1_i=&#39;_partidos_tres_semanas&#39; new_label_2_i=&#39;_partidos_diez_dias&#39; new_label_3_i=&#39;_partidos_cuatro_dias&#39; for t in [&#39;home&#39;,&#39;away&#39;]: FMP[t+new_label_1_i]=np.zeros(len(FMP)) FMP[t+new_label_2_i]=np.zeros(len(FMP)) FMP[t+new_label_3_i]=np.zeros(len(FMP)) d0=&#39;match_date&#39; h=&#39;home&#39; a=&#39;away&#39; for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(1,11): di=t+&#39;_team_history_match_date_{}&#39;.format(i) FMP[t+new_label_1_i]=FMP[t+new_label_1_i]+ ((FMP[d0]-FMP[di]).dt.days&lt;=21).astype(&#39;int&#39;) FMP[t+new_label_2_i]=FMP[t+new_label_2_i]+ ((FMP[d0]-FMP[di]).dt.days&lt;=10).astype(&#39;int&#39;) FMP[t+new_label_3_i]=FMP[t+new_label_3_i]+ ((FMP[d0]-FMP[di]).dt.days&lt;=4).astype(&#39;int&#39;) . . Luego, generé las variables diferenciales, a través de restar los partidos acumulados para cada ventana temporal. . new_label_1=&#39;diff_num_partidos_tres_semanas&#39; new_label_2=&#39;diff_num_partidos_diez_dias&#39; new_label_3=&#39;diff_num_partidos_cuatro_dias&#39; FMP[new_label_1]=FMP[h+new_label_1_i]-FMP[a+new_label_1_i] FMP[new_label_2]=FMP[h+new_label_2_i]-FMP[a+new_label_2_i] FMP[new_label_3]=FMP[h+new_label_3_i]-FMP[a+new_label_3_i] . Esperamos que valores positivos (negativos) sean perjudiciales para el equipo local (visitante). . 5) Antig&#252;edad de los partidos . La importancia, influencia o peso de un resultado del pasado puede depender de que tan lejos en el tiempo este. Partidos de temporadas anteriores, o incluso de antes de un corte por fecha FIFA, pueden tener menor importancia. . Para tratar de capturar ello, se utilizó las fechas de los partidos para calcular (en días) cuanto tiempo pasó desde que se jugaron hasta el día del partido a modelar. . d=&#39;match_date&#39; for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(1,11): new_label=t+&#39;_relevance_{}&#39;.format(i) c=t+&#39;_team_history_match_date_{}&#39;.format(i) FMP[new_label]= (FMP[d]-FMP[c]).dt.days . . Una vez hecho eso, eliminé las varuables de fechas del dataset. . d=&#39;match_date&#39; FMP=FMP.drop(columns=[d]) for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(1,11): c=t+&#39;_team_history_match_date_{}&#39;.format(i) FMP=FMP.drop(columns=[c]) . . 6) Resultado nominal de los partidos del historial . De los partidos $i in[1,10]$ tenemos la diferencia de gol, pero no el resultado nominal (i.e.: empate (E), victoria (V), derrota (D). Agregaremos esta variable porque nos será de utilidad a la hora de evaluar modelos o hacer verificaciones. . Nota: La idea no es utilizar la diferencia de goles y este resultado nominal al mismo tiempo. Esta variables estan altamente correlacionadas, por lo cual no tendría sentido. Simplemente la queremos para ver cuánto mejor es tener la diferencia de gol, o si al final con tener el resultado nominal es suficiente. . Creé esta variable directamente como un one-hot encoding. Así, tendremos las variables $D_i$ y $V_i$, que tomaran valores $0$ o $1$. Cuando ambas son 0, quedará implicito el empate. . for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(1,11): new_label_V=t+&#39;_outcome_V_{}&#39;.format(i) new_label_D=t+&#39;_outcome_D_{}&#39;.format(i) x1=t+&#39;_goal_diff_{}&#39;.format(i) FMP[new_label_V]=(FMP[x1]&gt;0).astype(&#39;int&#39;) FMP[new_label_D]=(FMP[x1]&lt;0).astype(&#39;int&#39;) . . 7) Partidos amistosos . Otra cosa que puede ser interesante de tener es información sobre si un partido es o no un amistosos. Es sabido que estos partidos pueden no ser muy representativos del verdadero potencial de un equipo. . Para agregar esta variable, lo primero que hice fue identificar los &quot;ids&quot; de las competiciones amistosas a traves de mirar su nombre. Dado que necesitaba el nombre de las competiciones, solo usé los datos de los partidos a modelar. . print(&#39;Ligas amistosas EN: &#39;,FMP.league_name[FMP[&#39;league_name&#39;].str.contains(&#39;riend&#39;)].unique()) print(&#39;Ligas amistosas ES: &#39;,FMP.league_id[FMP[&#39;league_name&#39;].str.contains(&#39;mist&#39;)].unique()) Friendly_competitions_ids=FMP.league_id[FMP[&#39;league_name&#39;].str.contains(&#39;riend&#39;)].unique() . . Ligas amistosas EN: [&#39;Club Friendlies&#39; &#39;Friendly International&#39; &#39;Friendly International Women&#39; &#39;Club Friendlies Women&#39; &#39;Friendly International U19&#39; &#39;Friendly International U23&#39;] Ligas amistosas ES: [] . Luego, mirando al identificador de competición para cada partico, generé la variable &quot;is_friendly&quot; para codificar si un partido es amistoso ($1$) o no ($0$). . for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(1,11): league_id=t+&#39;_team_history_league_id_{}&#39;.format(i) amistoso=t+&#39;_is_friendly_{}&#39;.format(i) FMP[amistoso]=(FMP[league_id].isin(Friendly_competitions_ids)).astype(&#39;int&#39;) . . league_id=&#39;league_id&#39; amistoso=&#39;is_friendly&#39; FMP[amistoso]=(FMP[league_id].isin(Friendly_competitions_ids)).astype(&#39;int&#39;) . . 8) Resultado ponderado . Finalmente, y como un intento de mejorar el poder predictivo de mi modelo, se me ocurrió combinar las variables de diferencia de gol y diferencia de rating, para generar una variable que unifique el resultado de un partido con el nivel de &quot;sorpresa&quot; que conllevaba. A esa variable la llamé &quot;home(away)_result_ponderado_i&quot; y la definí como: . $Resultado ;Ponderado:= , ,| Delta Ratting_{std}| ,x , Delta Goal_{std}$ . donde &quot;$std$&quot; refiere a que la variable esta normalizada, y $ Delta$ refiere a la diferencia. . Resultados posteriores me idicaron que no era muy útil, pero la dejo aquí como parte del trabajo. . R=[] G=[] for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(1,11): g=t+&#39;_goal_diff_{}&#39;.format(i) r=t+&#39;_rating_diff_{}&#39;.format(i) G.append(g) R.append(r) m_g=np.mean(FMP[G].to_numpy()) m_r=np.mean(FMP[R].to_numpy()) std_g=np.std(FMP[G].to_numpy()) std_r=np.std(FMP[R].to_numpy()) for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(1,11): new_label=t+&#39;_result_ponderado_{}&#39;.format(i) g=t+&#39;_goal_diff_{}&#39;.format(i) r=t+&#39;_rating_diff_{}&#39;.format(i) FMP[new_label] = np.abs((FMP[r]-m_r)/std_r)*((FMP[g]-m_g)/std_g) . . 10) Eliminaci&#243;n de features . Finalmenete eliminé del dataset las variables o features que no iba a utilizar. . FMP=FMP.drop(columns=[&#39;home_team_name&#39;,&#39;away_team_name&#39;,&#39;league_name&#39;,&#39;league_id&#39;]) for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(1,11): l=t+&#39;_team_history_league_id_{}&#39;.format(i) FMP=FMP.drop(columns=[l]) . . VERIFICACI&#211;N Y GUARDADO DEL DATASET . Una vez terminado el proceso, verificamos el resultado y si efectivamente corregimos todos los valores faltantes. . display(FMP) . id target is_cup home_team_history_is_play_home_1 home_team_history_is_play_home_2 home_team_history_is_play_home_3 home_team_history_is_play_home_4 home_team_history_is_play_home_5 home_team_history_is_play_home_6 home_team_history_is_play_home_7 home_team_history_is_play_home_8 home_team_history_is_play_home_9 home_team_history_is_play_home_10 home_team_history_is_cup_1 home_team_history_is_cup_2 home_team_history_is_cup_3 home_team_history_is_cup_4 home_team_history_is_cup_5 home_team_history_is_cup_6 home_team_history_is_cup_7 home_team_history_is_cup_8 home_team_history_is_cup_9 home_team_history_is_cup_10 away_team_history_is_play_home_1 away_team_history_is_play_home_2 away_team_history_is_play_home_3 away_team_history_is_play_home_4 away_team_history_is_play_home_5 away_team_history_is_play_home_6 away_team_history_is_play_home_7 away_team_history_is_play_home_8 away_team_history_is_play_home_9 away_team_history_is_play_home_10 away_team_history_is_cup_1 away_team_history_is_cup_2 away_team_history_is_cup_3 away_team_history_is_cup_4 away_team_history_is_cup_5 away_team_history_is_cup_6 away_team_history_is_cup_7 away_team_history_is_cup_8 away_team_history_is_cup_9 away_team_history_is_cup_10 home_rating_diff_1 home_rating_diff_2 home_rating_diff_3 home_rating_diff_4 home_rating_diff_5 home_rating_diff_6 home_rating_diff_7 home_rating_diff_8 home_rating_diff_9 home_rating_diff_10 away_rating_diff_1 away_rating_diff_2 away_rating_diff_3 away_rating_diff_4 away_rating_diff_5 away_rating_diff_6 away_rating_diff_7 away_rating_diff_8 away_rating_diff_9 away_rating_diff_10 Rating_diff home_goal_diff_1 home_goal_diff_2 home_goal_diff_3 home_goal_diff_4 home_goal_diff_5 home_goal_diff_6 home_goal_diff_7 home_goal_diff_8 home_goal_diff_9 home_goal_diff_10 away_goal_diff_1 away_goal_diff_2 away_goal_diff_3 away_goal_diff_4 away_goal_diff_5 away_goal_diff_6 away_goal_diff_7 away_goal_diff_8 away_goal_diff_9 away_goal_diff_10 home_coach_continuity_1 home_coach_continuity_2 home_coach_continuity_3 home_coach_continuity_4 home_coach_continuity_5 home_coach_continuity_6 home_coach_continuity_7 home_coach_continuity_8 home_coach_continuity_9 home_coach_continuity home_coach_continuity_10 away_coach_continuity_1 away_coach_continuity_2 away_coach_continuity_3 away_coach_continuity_4 away_coach_continuity_5 away_coach_continuity_6 away_coach_continuity_7 away_coach_continuity_8 away_coach_continuity_9 away_coach_continuity away_coach_continuity_10 home_partidos_tres_semanas home_partidos_diez_dias home_partidos_cuatro_dias away_partidos_tres_semanas away_partidos_diez_dias away_partidos_cuatro_dias diff_num_partidos_tres_semanas diff_num_partidos_diez_dias diff_num_partidos_cuatro_dias home_relevance_1 home_relevance_2 home_relevance_3 home_relevance_4 home_relevance_5 home_relevance_6 home_relevance_7 home_relevance_8 home_relevance_9 home_relevance_10 away_relevance_1 away_relevance_2 away_relevance_3 away_relevance_4 away_relevance_5 away_relevance_6 away_relevance_7 away_relevance_8 away_relevance_9 away_relevance_10 home_outcome_V_1 home_outcome_D_1 home_outcome_V_2 home_outcome_D_2 home_outcome_V_3 home_outcome_D_3 home_outcome_V_4 home_outcome_D_4 home_outcome_V_5 home_outcome_D_5 home_outcome_V_6 home_outcome_D_6 home_outcome_V_7 home_outcome_D_7 home_outcome_V_8 home_outcome_D_8 home_outcome_V_9 home_outcome_D_9 home_outcome_V_10 home_outcome_D_10 away_outcome_V_1 away_outcome_D_1 away_outcome_V_2 away_outcome_D_2 away_outcome_V_3 away_outcome_D_3 away_outcome_V_4 away_outcome_D_4 away_outcome_V_5 away_outcome_D_5 away_outcome_V_6 away_outcome_D_6 away_outcome_V_7 away_outcome_D_7 away_outcome_V_8 away_outcome_D_8 away_outcome_V_9 away_outcome_D_9 away_outcome_V_10 away_outcome_D_10 home_is_friendly_1 home_is_friendly_2 home_is_friendly_3 home_is_friendly_4 home_is_friendly_5 home_is_friendly_6 home_is_friendly_7 home_is_friendly_8 home_is_friendly_9 home_is_friendly_10 away_is_friendly_1 away_is_friendly_2 away_is_friendly_3 away_is_friendly_4 away_is_friendly_5 away_is_friendly_6 away_is_friendly_7 away_is_friendly_8 away_is_friendly_9 away_is_friendly_10 is_friendly home_result_ponderado_1 home_result_ponderado_2 home_result_ponderado_3 home_result_ponderado_4 home_result_ponderado_5 home_result_ponderado_6 home_result_ponderado_7 home_result_ponderado_8 home_result_ponderado_9 home_result_ponderado_10 away_result_ponderado_1 away_result_ponderado_2 away_result_ponderado_3 away_result_ponderado_4 away_result_ponderado_5 away_result_ponderado_6 away_result_ponderado_7 away_result_ponderado_8 away_result_ponderado_9 away_result_ponderado_10 . 0 11906497 | away | 0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | -1.342980 | 2.030337 | -0.796066 | 3.485692 | 1.398131 | 1.959759 | -4.030432 | 5.093217 | -0.487941 | 3.651948 | -0.655225 | 9.005604 | 6.260047 | 4.982057 | 8.195400 | -1.206981 | 1.859646 | 9.929757 | 7.913075 | 1.239743 | -3.218928 | -1.0 | 2.0 | -1.0 | -4.0 | 2.0 | 0.0 | 0.0 | 2.0 | 0.0 | 3.0 | -1.0 | 2.0 | -1.0 | 1.0 | 1.0 | -1.0 | 0.0 | 2.0 | 2.0 | 2.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 2.0 | 1.0 | 0.0 | 3.0 | 1.0 | 0.0 | -1.0 | 0.0 | 0.0 | 5 | 20 | 27 | 32 | 42 | 57 | 63 | 69 | 76 | 90 | 7 | 16 | 20 | 28 | 32 | 39 | 43 | 50 | 55 | 60 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.183486 | 0.458626 | -0.114532 | -1.657239 | 0.307454 | -0.008029 | -0.018004 | 1.191019 | -0.002609 | 1.277268 | -0.096775 | 2.126546 | -0.775091 | 0.571638 | 0.948841 | -0.166340 | -0.007594 | 2.347528 | 1.865301 | 0.269580 | . 1 11984383 | home | 0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 9.997190 | -0.153606 | 5.810161 | -0.033087 | 3.685993 | 2.520600 | 0.976328 | 9.513444 | 2.707193 | 3.916450 | -0.881175 | -2.148550 | -4.238788 | 0.145350 | 4.425333 | -0.976328 | -1.943804 | -0.007279 | -3.834623 | -5.890736 | 2.893940 | -2.0 | -2.0 | 4.0 | -1.0 | -1.0 | 1.0 | -1.0 | 2.0 | -1.0 | 0.0 | 1.0 | -1.0 | -4.0 | 0.0 | -1.0 | 1.0 | -4.0 | 0.0 | -1.0 | 3.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 3.0 | 2.0 | 1.0 | 3.0 | 2.0 | 1.0 | 0.0 | 0.0 | 0.0 | 3 | 7 | 21 | 28 | 35 | 38 | 41 | 44 | 56 | 62 | 3 | 7 | 21 | 28 | 34 | 41 | 45 | 63 | 71 | 77 | 0 | 1 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 1 | 1 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -2.449570 | -0.065908 | 2.749671 | -0.018337 | -0.450559 | 0.282696 | -0.108928 | 2.247980 | -0.327153 | -0.016532 | 0.116627 | -0.285051 | -2.137610 | -0.000143 | -0.543773 | 0.127797 | -1.010141 | -0.000520 | -0.497628 | 2.166224 | . 2 11983301 | draw | 0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | -1.088475 | 5.692117 | 0.391980 | 2.249836 | -3.912490 | 3.762830 | -2.639839 | 9.112116 | -2.128075 | 1.532352 | 2.892081 | -2.847612 | 4.490550 | 1.803989 | 1.790383 | 3.918600 | 2.639839 | 2.319737 | 1.151759 | 6.159063 | -1.936780 | 2.0 | 2.0 | -1.0 | 1.0 | -1.0 | 0.0 | 0.0 | 1.0 | -2.0 | 0.0 | 2.0 | -1.0 | 0.0 | 2.0 | 1.0 | 1.0 | 0.0 | 1.0 | 4.0 | 0.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 2.0 | 2.0 | 1.0 | 2.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 2 | 9 | 27 | 35 | 41 | 45 | 56 | 63 | 69 | 73 | 9 | 20 | 35 | 41 | 45 | 49 | 56 | 63 | 69 | 73 | 1 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0.287141 | 1.334228 | -0.035255 | 0.250912 | -0.507446 | -0.015865 | -0.011961 | 1.056451 | -0.555203 | -0.006171 | 0.664686 | -0.373188 | -0.019027 | 0.404502 | 0.196978 | 0.446802 | -0.010984 | 0.259117 | 0.501601 | -0.026278 | . 3 11983471 | away | 0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.000000 | -0.163546 | 3.748775 | 3.382067 | 0.296500 | 3.746475 | -0.026269 | 8.459475 | 1.716836 | 3.508762 | 0.000000 | -1.646854 | 3.836917 | -3.382067 | 2.604050 | -0.296250 | -3.497111 | 0.928375 | -2.725695 | -2.332587 | 1.948494 | 0.0 | 1.0 | 4.0 | 0.0 | -1.0 | 1.0 | 1.0 | 0.0 | -1.0 | 0.0 | 0.0 | -2.0 | 1.0 | 0.0 | 5.0 | 0.0 | 1.0 | -1.0 | 1.0 | -1.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 3.0 | 2.0 | 1.0 | 2.0 | 2.0 | 1.0 | 1.0 | 0.0 | 0.0 | 3 | 7 | 20 | 26 | 29 | 35 | 41 | 56 | 64 | 66 | 3 | 7 | 22 | 26 | 30 | 36 | 42 | 56 | 59 | 65 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.000488 | 0.032387 | 1.754879 | -0.014210 | -0.023217 | 0.426597 | 0.016272 | -0.036276 | -0.202291 | -0.014760 | -0.000488 | -0.435951 | 0.437214 | -0.015186 | 1.505773 | -0.001776 | 0.423703 | -0.102883 | 0.333149 | -0.308254 | . 4 11883005 | home | 0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.760229 | 2.777133 | -0.958567 | 3.247532 | -2.595750 | 7.854948 | -0.296412 | 2.539583 | -0.512550 | 6.050450 | 0.774210 | -0.007142 | 0.361725 | 3.602960 | -4.391750 | 3.172159 | -5.302729 | 0.526319 | 3.559067 | -2.741227 | 0.456468 | -1.0 | 1.0 | 1.0 | 2.0 | 0.0 | 1.0 | 1.0 | 0.0 | -1.0 | 0.0 | 3.0 | -1.0 | 0.0 | 1.0 | 0.0 | 2.0 | -2.0 | 1.0 | 4.0 | 0.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 1 | 1 | 3.0 | 2.0 | 1.0 | 3.0 | 2.0 | 1.0 | 0.0 | 0.0 | 0.0 | 3 | 7 | 20 | 28 | 34 | 38 | 41 | 55 | 59 | 63 | 3 | 6 | 20 | 28 | 35 | 38 | 41 | 56 | 59 | 62 | 0 | 1 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.081683 | 0.312809 | 0.125712 | 0.749681 | -0.011769 | 0.908877 | 0.047984 | -0.010548 | -0.078787 | -0.025806 | 0.238832 | -0.015066 | -0.001084 | 0.409750 | -0.019574 | 0.731658 | -1.341916 | 0.048594 | 1.663329 | -0.012401 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 110933 18030016 | draw | 0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 4.314395 | 3.097305 | -1.018100 | 2.500928 | 4.521543 | 4.543730 | -1.999606 | 0.715786 | 0.236309 | 0.972825 | -2.231214 | -6.059825 | -3.341627 | -1.723150 | -0.445700 | -3.777150 | -0.336883 | 0.480100 | 1.219725 | 4.648450 | 0.000000 | 4.0 | 0.0 | -2.0 | 0.0 | -1.0 | 3.0 | 3.0 | 1.0 | -2.0 | 2.0 | 2.0 | -1.0 | 0.0 | 1.0 | -1.0 | 1.0 | 1.0 | 0.0 | -1.0 | 1.0 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 2.0 | 1.0 | 0.0 | 2.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 7 | 12 | 141 | 142 | 148 | 151 | 155 | 158 | 161 | 166 | 8 | 15 | 61 | 64 | 141 | 143 | 147 | 152 | 154 | 157 | 1 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 2.027838 | -0.012972 | -0.280139 | -0.010381 | -0.555903 | 1.599069 | 0.762104 | 0.070835 | -0.030718 | 0.205755 | 0.560392 | -0.778178 | -0.015011 | 0.215463 | -0.070359 | 0.456576 | 0.052734 | -0.001598 | -0.139616 | 0.532477 | . 110934 18030096 | away | 0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | -1.531022 | 5.721350 | 8.418071 | 6.470581 | 1.865955 | -7.140900 | -1.218767 | 1.557886 | -12.441148 | 10.097321 | -1.250494 | -3.458150 | 0.664461 | -0.759332 | -11.728517 | -12.716384 | 5.605381 | 6.632644 | -7.996775 | -1.669872 | 1.758697 | -1.0 | 1.0 | 3.0 | 2.0 | 8.0 | 0.0 | -3.0 | 3.0 | -1.0 | 0.0 | 0.0 | -1.0 | 2.0 | -1.0 | -3.0 | -3.0 | -1.0 | 1.0 | 0.0 | 2.0 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 2.0 | 1.0 | 0.0 | 2.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 6 | 21 | 27 | 46 | 50 | 57 | 64 | 120 | 122 | 124 | 6 | 20 | 26 | 41 | 47 | 120 | 122 | 124 | 127 | 129 | 0 | 1 | 1 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 1 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.207194 | 0.658421 | 2.997131 | 1.520373 | 1.700141 | -0.031522 | -0.491907 | 0.521623 | -1.582725 | -0.043394 | -0.005923 | -0.450163 | 0.132019 | -0.109901 | -4.375715 | -4.740775 | -0.692552 | 0.765395 | -0.035241 | 0.426164 | . 110935 17715497 | draw | 0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 2.019156 | -1.600320 | 4.409308 | -1.214033 | 3.572422 | -0.831350 | 3.157175 | 2.964567 | -1.796125 | 0.782550 | 3.839781 | 5.507413 | 5.618307 | -1.072485 | 5.490396 | -0.282014 | 4.877673 | 2.145550 | -3.490375 | -0.990867 | -0.967183 | 0.0 | -1.0 | 2.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | -3.0 | 0.0 | 0.0 | 1.0 | 2.0 | 0.0 | 1.0 | 3.0 | 1.0 | 2.0 | 1.0 | -1.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 1 | 4.0 | 4.0 | 1.0 | 4.0 | 4.0 | 1.0 | 0.0 | 0.0 | 0.0 | 2 | 5 | 8 | 9 | 47 | 51 | 55 | 61 | 135 | 139 | 2 | 6 | 8 | 9 | 47 | 51 | 55 | 62 | 142 | 145 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.008287 | -0.215931 | 1.027484 | -0.005764 | 0.406166 | -0.004101 | -0.013232 | -0.012395 | -0.705266 | -0.002913 | -0.016199 | 0.633308 | 1.316578 | -0.005149 | 0.631310 | 0.142308 | 0.559385 | 0.486176 | 0.422912 | -0.139092 | . 110936 17944153 | away | 0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.685053 | 0.483100 | -0.914850 | -1.181650 | 1.605083 | 1.526717 | 1.056593 | -0.252250 | -4.249755 | 2.833663 | -0.721922 | -1.544379 | -0.983140 | 0.661400 | -1.600300 | 1.017229 | -1.910996 | -2.063026 | 0.873972 | -2.219119 | 0.981163 | 0.0 | -2.0 | 0.0 | 1.0 | 0.0 | 1.0 | -3.0 | -2.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 2.0 | -1.0 | -2.0 | 0.0 | -1.0 | 2.0 | 0.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 3.0 | 1.0 | 0.0 | 3.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 7 | 12 | 18 | 28 | 34 | 75 | 78 | 83 | 101 | 106 | 6 | 13 | 19 | 26 | 31 | 75 | 79 | 84 | 96 | 102 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.002489 | -0.091875 | -0.004464 | 0.151899 | -0.006487 | 0.166027 | -0.348937 | -0.090353 | -0.018957 | 0.319445 | -0.003626 | -0.007200 | -0.004761 | 0.131287 | -0.215929 | -0.224238 | -0.008793 | -0.274268 | 0.182118 | -0.010132 | . 110937 17786297 | home | 0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.176178 | 3.723710 | -3.523262 | 2.112239 | 1.595383 | 1.261392 | 1.785570 | -1.355685 | 2.002817 | -1.703872 | 0.247417 | -2.152850 | -4.360537 | -1.550680 | 0.018106 | -5.484850 | -1.279433 | 0.290300 | -1.478107 | -0.511200 | 1.250977 | -1.0 | 0.0 | -1.0 | 0.0 | 2.0 | 0.0 | -1.0 | 2.0 | 1.0 | 3.0 | 0.0 | 1.0 | -1.0 | 1.0 | 1.0 | 0.0 | -1.0 | 0.0 | -1.0 | -5.0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 3.0 | 1.0 | 0.0 | 5.0 | 3.0 | 1.0 | -2.0 | -2.0 | -1.0 | 5 | 12 | 19 | 26 | 34 | 40 | 44 | 47 | 55 | 62 | 2 | 5 | 8 | 12 | 19 | 27 | 34 | 39 | 46 | 54 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | -0.008047 | -0.015695 | -0.458373 | -0.008691 | 0.354621 | -0.004994 | -0.210956 | 0.351036 | 0.221915 | 0.655388 | -0.000587 | 0.265905 | -0.563935 | 0.195218 | 0.011063 | -0.024325 | -0.175474 | -0.000773 | -0.200523 | -0.382244 | . 102912 rows × 216 columns . . fffmp.check_NaNs(FMP) . No hay missing values en el dataset :) . FMP.describe() . id is_cup home_team_history_is_play_home_1 home_team_history_is_play_home_2 home_team_history_is_play_home_3 home_team_history_is_play_home_4 home_team_history_is_play_home_5 home_team_history_is_play_home_6 home_team_history_is_play_home_7 home_team_history_is_play_home_8 home_team_history_is_play_home_9 home_team_history_is_play_home_10 home_team_history_is_cup_1 home_team_history_is_cup_2 home_team_history_is_cup_3 home_team_history_is_cup_4 home_team_history_is_cup_5 home_team_history_is_cup_6 home_team_history_is_cup_7 home_team_history_is_cup_8 home_team_history_is_cup_9 home_team_history_is_cup_10 away_team_history_is_play_home_1 away_team_history_is_play_home_2 away_team_history_is_play_home_3 away_team_history_is_play_home_4 away_team_history_is_play_home_5 away_team_history_is_play_home_6 away_team_history_is_play_home_7 away_team_history_is_play_home_8 away_team_history_is_play_home_9 away_team_history_is_play_home_10 away_team_history_is_cup_1 away_team_history_is_cup_2 away_team_history_is_cup_3 away_team_history_is_cup_4 away_team_history_is_cup_5 away_team_history_is_cup_6 away_team_history_is_cup_7 away_team_history_is_cup_8 away_team_history_is_cup_9 away_team_history_is_cup_10 home_rating_diff_1 home_rating_diff_2 home_rating_diff_3 home_rating_diff_4 home_rating_diff_5 home_rating_diff_6 home_rating_diff_7 home_rating_diff_8 home_rating_diff_9 home_rating_diff_10 away_rating_diff_1 away_rating_diff_2 away_rating_diff_3 away_rating_diff_4 away_rating_diff_5 away_rating_diff_6 away_rating_diff_7 away_rating_diff_8 away_rating_diff_9 away_rating_diff_10 Rating_diff home_goal_diff_1 home_goal_diff_2 home_goal_diff_3 home_goal_diff_4 home_goal_diff_5 home_goal_diff_6 home_goal_diff_7 home_goal_diff_8 home_goal_diff_9 home_goal_diff_10 away_goal_diff_1 away_goal_diff_2 away_goal_diff_3 away_goal_diff_4 away_goal_diff_5 away_goal_diff_6 away_goal_diff_7 away_goal_diff_8 away_goal_diff_9 away_goal_diff_10 home_coach_continuity_1 home_coach_continuity_2 home_coach_continuity_3 home_coach_continuity_4 home_coach_continuity_5 home_coach_continuity_6 home_coach_continuity_7 home_coach_continuity_8 home_coach_continuity_9 home_coach_continuity home_coach_continuity_10 away_coach_continuity_1 away_coach_continuity_2 away_coach_continuity_3 away_coach_continuity_4 away_coach_continuity_5 away_coach_continuity_6 away_coach_continuity_7 away_coach_continuity_8 away_coach_continuity_9 away_coach_continuity away_coach_continuity_10 home_partidos_tres_semanas home_partidos_diez_dias home_partidos_cuatro_dias away_partidos_tres_semanas away_partidos_diez_dias away_partidos_cuatro_dias diff_num_partidos_tres_semanas diff_num_partidos_diez_dias diff_num_partidos_cuatro_dias home_relevance_1 home_relevance_2 home_relevance_3 home_relevance_4 home_relevance_5 home_relevance_6 home_relevance_7 home_relevance_8 home_relevance_9 home_relevance_10 away_relevance_1 away_relevance_2 away_relevance_3 away_relevance_4 away_relevance_5 away_relevance_6 away_relevance_7 away_relevance_8 away_relevance_9 away_relevance_10 home_outcome_V_1 home_outcome_D_1 home_outcome_V_2 home_outcome_D_2 home_outcome_V_3 home_outcome_D_3 home_outcome_V_4 home_outcome_D_4 home_outcome_V_5 home_outcome_D_5 home_outcome_V_6 home_outcome_D_6 home_outcome_V_7 home_outcome_D_7 home_outcome_V_8 home_outcome_D_8 home_outcome_V_9 home_outcome_D_9 home_outcome_V_10 home_outcome_D_10 away_outcome_V_1 away_outcome_D_1 away_outcome_V_2 away_outcome_D_2 away_outcome_V_3 away_outcome_D_3 away_outcome_V_4 away_outcome_D_4 away_outcome_V_5 away_outcome_D_5 away_outcome_V_6 away_outcome_D_6 away_outcome_V_7 away_outcome_D_7 away_outcome_V_8 away_outcome_D_8 away_outcome_V_9 away_outcome_D_9 away_outcome_V_10 away_outcome_D_10 home_is_friendly_1 home_is_friendly_2 home_is_friendly_3 home_is_friendly_4 home_is_friendly_5 home_is_friendly_6 home_is_friendly_7 home_is_friendly_8 home_is_friendly_9 home_is_friendly_10 away_is_friendly_1 away_is_friendly_2 away_is_friendly_3 away_is_friendly_4 away_is_friendly_5 away_is_friendly_6 away_is_friendly_7 away_is_friendly_8 away_is_friendly_9 away_is_friendly_10 is_friendly home_result_ponderado_1 home_result_ponderado_2 home_result_ponderado_3 home_result_ponderado_4 home_result_ponderado_5 home_result_ponderado_6 home_result_ponderado_7 home_result_ponderado_8 home_result_ponderado_9 home_result_ponderado_10 away_result_ponderado_1 away_result_ponderado_2 away_result_ponderado_3 away_result_ponderado_4 away_result_ponderado_5 away_result_ponderado_6 away_result_ponderado_7 away_result_ponderado_8 away_result_ponderado_9 away_result_ponderado_10 . count 1.029120e+05 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.0 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.0 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.00000 | 102912.00000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | 102912.000000 | . mean 1.516931e+07 | 0.078951 | 0.302239 | 0.569525 | 0.464358 | 0.518968 | 0.486590 | 0.507084 | 0.497104 | 0.502624 | 0.500155 | 0.498834 | 0.080865 | 0.081516 | 0.081701 | 0.083868 | 0.084713 | 0.084363 | 0.085753 | 0.084344 | 0.087045 | 0.087045 | 0.699928 | 0.432739 | 0.537061 | 0.481645 | 0.514750 | 0.494452 | 0.504431 | 0.500136 | 0.501458 | 0.501982 | 0.080486 | 0.081186 | 0.082381 | 0.083314 | 0.083975 | 0.084597 | 0.084849 | 0.087346 | 0.085704 | 0.086161 | -0.394143 | 0.294506 | 0.018481 | 0.170037 | 0.079823 | 0.161983 | 0.126812 | 0.147109 | 0.147481 | 0.150208 | 0.565778 | -0.106649 | 0.169554 | 0.018543 | 0.135792 | 0.080830 | 0.119207 | 0.113629 | 0.116414 | 0.131678 | -0.031571 | -0.073072 | 0.074326 | 0.012146 | 0.050383 | 0.031950 | 0.038907 | 0.039976 | 0.044961 | 0.054309 | 0.045369 | 0.125690 | -0.018637 | 0.046875 | 0.011622 | 0.034768 | 0.030152 | 0.035525 | 0.040870 | 0.036186 | 0.051704 | 0.971947 | 0.971189 | 0.971490 | 0.971247 | 0.971549 | 0.971995 | 0.972792 | 0.972054 | 0.974434 | 0.972462 | 1.0 | 0.971325 | 0.971451 | 0.971014 | 0.971344 | 0.971403 | 0.971675 | 0.971607 | 0.973463 | 0.973191 | 0.971694 | 1.0 | 2.578232 | 1.196906 | 0.346364 | 2.560663 | 1.190065 | 0.345140 | 0.017568 | 0.006841 | 0.001224 | 15.350610 | 31.355002 | 47.238971 | 63.658660 | 79.898117 | 95.969673 | 111.693272 | 127.060479 | 142.037090 | 156.617790 | 16.002954 | 32.237902 | 48.618324 | 65.063472 | 81.343002 | 97.412022 | 113.198305 | 128.668124 | 143.540355 | 158.011874 | 0.356460 | 0.392821 | 0.389653 | 0.359336 | 0.375923 | 0.372940 | 0.383221 | 0.366527 | 0.379198 | 0.368801 | 0.381258 | 0.369306 | 0.380957 | 0.368441 | 0.382676 | 0.368072 | 0.384095 | 0.365885 | 0.379829 | 0.368626 | 0.401498 | 0.346704 | 0.368664 | 0.380267 | 0.382181 | 0.365419 | 0.375777 | 0.371900 | 0.380335 | 0.368995 | 0.378654 | 0.368839 | 0.379722 | 0.369869 | 0.380247 | 0.368052 | 0.379266 | 0.369014 | 0.384882 | 0.365400 | 0.036322 | 0.035963 | 0.035749 | 0.03639 | 0.03606 | 0.035409 | 0.035807 | 0.034690 | 0.033563 | 0.033456 | 0.034359 | 0.034680 | 0.035059 | 0.035117 | 0.035487 | 0.035778 | 0.034398 | 0.034583 | 0.034117 | 0.032950 | 0.035662 | -0.059622 | 0.036854 | -0.001005 | 0.023669 | 0.008540 | 0.019404 | 0.021877 | 0.021122 | 0.031768 | 0.028575 | 0.065620 | -0.025219 | 0.014876 | -0.007048 | 0.014815 | 0.010526 | 0.012616 | 0.020670 | 0.016776 | 0.024924 | . std 2.543251e+06 | 0.269663 | 0.459230 | 0.495145 | 0.498730 | 0.499643 | 0.499823 | 0.499952 | 0.499994 | 0.499996 | 0.500002 | 0.500001 | 0.272629 | 0.273628 | 0.273910 | 0.277191 | 0.278456 | 0.277933 | 0.280000 | 0.277904 | 0.281903 | 0.281903 | 0.458291 | 0.495458 | 0.498627 | 0.499665 | 0.499785 | 0.499972 | 0.499983 | 0.500002 | 0.500000 | 0.499998 | 0.272046 | 0.273122 | 0.274946 | 0.276357 | 0.277351 | 0.278282 | 0.278659 | 0.282343 | 0.279928 | 0.280603 | 4.259312 | 4.255393 | 4.310000 | 4.300438 | 4.283735 | 4.275579 | 4.238197 | 4.223138 | 4.174742 | 4.160745 | 4.246269 | 4.300447 | 4.266503 | 4.300473 | 4.295541 | 4.250217 | 4.232218 | 4.191230 | 4.162143 | 4.125029 | 1.739056 | 1.951692 | 1.944489 | 1.944870 | 1.953835 | 1.943336 | 1.945038 | 1.927537 | 1.927017 | 1.915603 | 1.912434 | 1.934712 | 1.947021 | 1.944128 | 1.942979 | 1.940245 | 1.927532 | 1.936210 | 1.920762 | 1.914633 | 1.909751 | 0.165125 | 0.167276 | 0.166425 | 0.167112 | 0.166260 | 0.164986 | 0.162689 | 0.164820 | 0.157836 | 0.163646 | 0.0 | 0.166892 | 0.166535 | 0.167768 | 0.166837 | 0.166672 | 0.165901 | 0.166094 | 0.160727 | 0.161527 | 0.165846 | 0.0 | 1.478627 | 0.842160 | 0.483451 | 1.493942 | 0.842428 | 0.481973 | 1.092109 | 0.730705 | 0.450910 | 39.166087 | 56.334206 | 69.488178 | 81.711961 | 91.933562 | 100.637086 | 108.051915 | 114.529867 | 119.926236 | 124.688772 | 40.641315 | 57.757177 | 71.529540 | 83.535386 | 93.645826 | 102.229620 | 109.743617 | 116.100228 | 121.588609 | 126.202126 | 0.478956 | 0.488380 | 0.487674 | 0.479808 | 0.484363 | 0.483589 | 0.486174 | 0.481858 | 0.485190 | 0.482482 | 0.485698 | 0.482619 | 0.485624 | 0.482384 | 0.486043 | 0.482283 | 0.486383 | 0.481680 | 0.485347 | 0.482434 | 0.490204 | 0.475923 | 0.482445 | 0.485455 | 0.485923 | 0.481550 | 0.484325 | 0.483314 | 0.485471 | 0.482535 | 0.485054 | 0.482493 | 0.485320 | 0.482771 | 0.485450 | 0.482278 | 0.485207 | 0.482540 | 0.486570 | 0.481544 | 0.187092 | 0.186198 | 0.185665 | 0.18726 | 0.18644 | 0.184812 | 0.185810 | 0.182994 | 0.180101 | 0.179824 | 0.182152 | 0.182969 | 0.183930 | 0.184077 | 0.185007 | 0.185737 | 0.182251 | 0.182722 | 0.181529 | 0.178508 | 0.185446 | 1.561069 | 1.557825 | 1.571715 | 1.590611 | 1.577140 | 1.565274 | 1.524642 | 1.488342 | 1.460350 | 1.461085 | 1.555907 | 1.573923 | 1.562262 | 1.583201 | 1.564396 | 1.524333 | 1.518281 | 1.498851 | 1.473139 | 1.433616 | . min 1.142829e+07 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | -27.859271 | -28.824800 | -42.194200 | -42.194200 | -34.774350 | -34.774350 | -37.012150 | -34.774350 | -31.520250 | -34.222450 | -34.774350 | -42.194200 | -34.774350 | -39.563125 | -31.520250 | -28.383250 | -34.222450 | -31.520250 | -37.012150 | -31.520250 | -16.529505 | -18.000000 | -17.000000 | -14.000000 | -18.000000 | -18.000000 | -18.000000 | -15.000000 | -18.000000 | -14.000000 | -14.000000 | -14.000000 | -14.000000 | -17.000000 | -15.000000 | -18.000000 | -13.000000 | -18.000000 | -14.000000 | -18.000000 | -18.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 1.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 1.0 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | -9.000000 | -6.000000 | -3.000000 | 0.000000 | 1.000000 | 3.000000 | 5.000000 | 7.000000 | 9.000000 | 10.000000 | 13.000000 | 15.000000 | 16.000000 | 0.000000 | 1.000000 | 3.000000 | 5.000000 | 6.000000 | 9.000000 | 11.000000 | 13.000000 | 14.000000 | 16.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | -39.620467 | -39.620467 | -39.389820 | -39.389820 | -44.181826 | -38.644625 | -38.644625 | -32.785759 | -38.644625 | -44.181826 | -39.389820 | -41.104695 | -45.863722 | -38.644625 | -38.732701 | -44.181826 | -44.181826 | -44.181826 | -44.181826 | -38.644625 | . 25% 1.199884e+07 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | -2.725407 | -1.986919 | -2.327425 | -2.152577 | -2.232318 | -2.165743 | -2.169334 | -2.159075 | -2.146147 | -2.138725 | -1.652012 | -2.444846 | -2.111221 | -2.291856 | -2.182500 | -2.223903 | -2.181620 | -2.170103 | -2.151976 | -2.135724 | -0.750357 | -1.000000 | -1.000000 | -1.000000 | -1.000000 | -1.000000 | -1.000000 | -1.000000 | -1.000000 | -1.000000 | -1.000000 | -1.000000 | -1.000000 | -1.000000 | -1.000000 | -1.000000 | -1.000000 | -1.000000 | -1.000000 | -1.000000 | -1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.0 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.0 | 2.000000 | 1.000000 | 0.000000 | 2.000000 | 1.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 4.000000 | 9.000000 | 15.000000 | 21.000000 | 28.000000 | 35.000000 | 43.000000 | 51.000000 | 59.000000 | 68.000000 | 4.000000 | 10.000000 | 15.000000 | 21.000000 | 28.000000 | 35.000000 | 43.000000 | 51.000000 | 59.000000 | 68.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | -0.304026 | -0.221226 | -0.257643 | -0.237091 | -0.245282 | -0.242260 | -0.238946 | -0.236844 | -0.232724 | -0.235926 | -0.189296 | -0.270996 | -0.231277 | -0.252819 | -0.241872 | -0.243435 | -0.242594 | -0.237407 | -0.236913 | -0.232907 | . 50% 1.674703e+07 | 0.000000 | 0.000000 | 1.000000 | 0.000000 | 1.000000 | 0.000000 | 1.000000 | 0.000000 | 1.000000 | 1.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 1.000000 | 0.000000 | 1.000000 | 0.000000 | 1.000000 | 0.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | -0.476023 | 0.265662 | -0.015728 | 0.096164 | 0.007124 | 0.062324 | 0.022843 | 0.072491 | 0.062911 | 0.063629 | 0.570247 | -0.159600 | 0.142912 | 0.000000 | 0.049693 | 0.009385 | 0.040306 | 0.024421 | 0.032521 | 0.051309 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.0 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.0 | 3.000000 | 1.000000 | 0.000000 | 3.000000 | 1.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 6.000000 | 14.000000 | 21.000000 | 30.000000 | 41.000000 | 50.000000 | 63.000000 | 76.000000 | 88.000000 | 101.000000 | 6.000000 | 14.000000 | 21.000000 | 31.000000 | 41.000000 | 50.000000 | 63.000000 | 76.000000 | 89.000000 | 102.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | -0.009664 | -0.006704 | -0.007861 | -0.007274 | -0.007572 | -0.007518 | -0.007423 | -0.007421 | -0.007149 | -0.007601 | -0.005776 | -0.008493 | -0.007244 | -0.007786 | -0.007499 | -0.007511 | -0.007557 | -0.007395 | -0.007583 | -0.007106 | . 75% 1.724159e+07 | 0.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 1.785165 | 2.601439 | 2.285667 | 2.468955 | 2.349619 | 2.449614 | 2.376600 | 2.407696 | 2.373881 | 2.377904 | 2.857529 | 2.144885 | 2.457119 | 2.286016 | 2.427957 | 2.332124 | 2.384460 | 2.345789 | 2.340452 | 2.347288 | 0.655124 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.0 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.0 | 4.000000 | 2.000000 | 1.000000 | 4.000000 | 2.000000 | 1.000000 | 1.000000 | 0.000000 | 0.000000 | 8.000000 | 21.000000 | 36.000000 | 58.000000 | 84.000000 | 111.000000 | 137.000000 | 167.000000 | 195.250000 | 223.000000 | 8.000000 | 21.000000 | 38.000000 | 62.000000 | 88.000000 | 113.000000 | 140.000000 | 170.000000 | 199.000000 | 225.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 0.000000 | 0.000000 | 0.000000 | 0.00000 | 0.00000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.196709 | 0.267164 | 0.236621 | 0.255955 | 0.242455 | 0.250624 | 0.246080 | 0.251995 | 0.251957 | 0.244260 | 0.292039 | 0.222799 | 0.253621 | 0.236539 | 0.248465 | 0.240889 | 0.246907 | 0.243335 | 0.240668 | 0.249626 | . max 1.805384e+07 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 42.194200 | 34.774350 | 42.194200 | 34.222450 | 34.774350 | 39.563125 | 39.563125 | 39.563125 | 39.563125 | 37.012150 | 34.774350 | 42.194200 | 31.520250 | 42.194200 | 42.194200 | 34.774350 | 34.222450 | 37.257650 | 37.012150 | 37.257650 | 16.886328 | 18.000000 | 18.000000 | 18.000000 | 21.000000 | 18.000000 | 21.000000 | 15.000000 | 18.000000 | 21.000000 | 18.000000 | 17.000000 | 15.000000 | 18.000000 | 18.000000 | 21.000000 | 15.000000 | 21.000000 | 21.000000 | 18.000000 | 21.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.0 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.0 | 10.000000 | 7.000000 | 3.000000 | 10.000000 | 6.000000 | 3.000000 | 9.000000 | 6.000000 | 3.000000 | 710.000000 | 715.000000 | 721.000000 | 791.000000 | 822.000000 | 835.000000 | 842.000000 | 849.000000 | 856.000000 | 862.000000 | 644.000000 | 729.000000 | 743.000000 | 761.000000 | 767.000000 | 774.000000 | 781.000000 | 795.000000 | 801.000000 | 812.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.00000 | 1.00000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 38.807459 | 38.990364 | 38.990364 | 54.351853 | 38.990364 | 54.351853 | 40.534672 | 38.807459 | 54.351853 | 38.087965 | 38.990364 | 38.807459 | 38.807459 | 45.267065 | 54.351853 | 38.445670 | 54.351853 | 54.351853 | 38.807459 | 54.351853 | . . fffmp.Print_features(FMP) . Today Features id target is_cup Rating_diff home_coach_continuity away_coach_continuity home_partidos_tres_semanas home_partidos_diez_dias home_partidos_cuatro_dias away_partidos_tres_semanas away_partidos_diez_dias away_partidos_cuatro_dias diff_num_partidos_tres_semanas diff_num_partidos_diez_dias diff_num_partidos_cuatro_dias is_friendly Historic Features home/away_team_history_is_play_home_i home/away_team_history_is_cup_i home/away_rating_diff_i home/away_goal_diff_i home/away_coach_continuity_i home/away_relevance_i home/away_outcome_V_i home/away_outcome_D_i home/away_is_friendly_i home/away_result_ponderado_i . . Y, finalmente, procedemos a guardar el dataset resultante para poder cargarlo en otros notebooks. . data_clean=&#39;FMP_final&#39; FMP.to_pickle(data_clean) .",
            "url": "https://faegru.github.io/FMP_UB_final_project_2022/2022/06/29/3_Tratamiento_de_Variables.html",
            "relUrl": "/2022/06/29/3_Tratamiento_de_Variables.html",
            "date": " • Jun 29, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "2) CORRECCIÓN DE LOS DATOS ORIGINALES",
            "content": "La mayoria de las funciones utilizadas en este projecto están en el modulo: . import Functions_for_FMP as fffmp . CARGA DE DATOS ORIGINALES . FMP = pd.read_csv(&#39;Dataset/train.csv&#39;,index_col=False) . display(FMP) . id target home_team_name away_team_name match_date league_name league_id is_cup home_team_coach_id away_team_coach_id home_team_history_match_date_1 home_team_history_match_date_2 home_team_history_match_date_3 home_team_history_match_date_4 home_team_history_match_date_5 home_team_history_match_date_6 home_team_history_match_date_7 home_team_history_match_date_8 home_team_history_match_date_9 home_team_history_match_date_10 home_team_history_is_play_home_1 home_team_history_is_play_home_2 home_team_history_is_play_home_3 home_team_history_is_play_home_4 home_team_history_is_play_home_5 home_team_history_is_play_home_6 home_team_history_is_play_home_7 home_team_history_is_play_home_8 home_team_history_is_play_home_9 home_team_history_is_play_home_10 home_team_history_is_cup_1 home_team_history_is_cup_2 home_team_history_is_cup_3 home_team_history_is_cup_4 home_team_history_is_cup_5 home_team_history_is_cup_6 home_team_history_is_cup_7 home_team_history_is_cup_8 home_team_history_is_cup_9 home_team_history_is_cup_10 home_team_history_goal_1 home_team_history_goal_2 home_team_history_goal_3 home_team_history_goal_4 home_team_history_goal_5 home_team_history_goal_6 home_team_history_goal_7 home_team_history_goal_8 home_team_history_goal_9 home_team_history_goal_10 home_team_history_opponent_goal_1 home_team_history_opponent_goal_2 home_team_history_opponent_goal_3 home_team_history_opponent_goal_4 home_team_history_opponent_goal_5 home_team_history_opponent_goal_6 home_team_history_opponent_goal_7 home_team_history_opponent_goal_8 home_team_history_opponent_goal_9 home_team_history_opponent_goal_10 home_team_history_rating_1 home_team_history_rating_2 home_team_history_rating_3 home_team_history_rating_4 home_team_history_rating_5 home_team_history_rating_6 home_team_history_rating_7 home_team_history_rating_8 home_team_history_rating_9 home_team_history_rating_10 home_team_history_opponent_rating_1 home_team_history_opponent_rating_2 home_team_history_opponent_rating_3 home_team_history_opponent_rating_4 home_team_history_opponent_rating_5 home_team_history_opponent_rating_6 home_team_history_opponent_rating_7 home_team_history_opponent_rating_8 home_team_history_opponent_rating_9 home_team_history_opponent_rating_10 home_team_history_coach_1 home_team_history_coach_2 home_team_history_coach_3 home_team_history_coach_4 home_team_history_coach_5 home_team_history_coach_6 home_team_history_coach_7 home_team_history_coach_8 home_team_history_coach_9 home_team_history_coach_10 home_team_history_league_id_1 home_team_history_league_id_2 home_team_history_league_id_3 home_team_history_league_id_4 home_team_history_league_id_5 home_team_history_league_id_6 home_team_history_league_id_7 home_team_history_league_id_8 home_team_history_league_id_9 home_team_history_league_id_10 away_team_history_match_date_1 away_team_history_match_date_2 away_team_history_match_date_3 away_team_history_match_date_4 away_team_history_match_date_5 away_team_history_match_date_6 away_team_history_match_date_7 away_team_history_match_date_8 away_team_history_match_date_9 away_team_history_match_date_10 away_team_history_is_play_home_1 away_team_history_is_play_home_2 away_team_history_is_play_home_3 away_team_history_is_play_home_4 away_team_history_is_play_home_5 away_team_history_is_play_home_6 away_team_history_is_play_home_7 away_team_history_is_play_home_8 away_team_history_is_play_home_9 away_team_history_is_play_home_10 away_team_history_is_cup_1 away_team_history_is_cup_2 away_team_history_is_cup_3 away_team_history_is_cup_4 away_team_history_is_cup_5 away_team_history_is_cup_6 away_team_history_is_cup_7 away_team_history_is_cup_8 away_team_history_is_cup_9 away_team_history_is_cup_10 away_team_history_goal_1 away_team_history_goal_2 away_team_history_goal_3 away_team_history_goal_4 away_team_history_goal_5 away_team_history_goal_6 away_team_history_goal_7 away_team_history_goal_8 away_team_history_goal_9 away_team_history_goal_10 away_team_history_opponent_goal_1 away_team_history_opponent_goal_2 away_team_history_opponent_goal_3 away_team_history_opponent_goal_4 away_team_history_opponent_goal_5 away_team_history_opponent_goal_6 away_team_history_opponent_goal_7 away_team_history_opponent_goal_8 away_team_history_opponent_goal_9 away_team_history_opponent_goal_10 away_team_history_rating_1 away_team_history_rating_2 away_team_history_rating_3 away_team_history_rating_4 away_team_history_rating_5 away_team_history_rating_6 away_team_history_rating_7 away_team_history_rating_8 away_team_history_rating_9 away_team_history_rating_10 away_team_history_opponent_rating_1 away_team_history_opponent_rating_2 away_team_history_opponent_rating_3 away_team_history_opponent_rating_4 away_team_history_opponent_rating_5 away_team_history_opponent_rating_6 away_team_history_opponent_rating_7 away_team_history_opponent_rating_8 away_team_history_opponent_rating_9 away_team_history_opponent_rating_10 away_team_history_coach_1 away_team_history_coach_2 away_team_history_coach_3 away_team_history_coach_4 away_team_history_coach_5 away_team_history_coach_6 away_team_history_coach_7 away_team_history_coach_8 away_team_history_coach_9 away_team_history_coach_10 away_team_history_league_id_1 away_team_history_league_id_2 away_team_history_league_id_3 away_team_history_league_id_4 away_team_history_league_id_5 away_team_history_league_id_6 away_team_history_league_id_7 away_team_history_league_id_8 away_team_history_league_id_9 away_team_history_league_id_10 . 0 11906497 | away | Newell&#39;s Old Boys | River Plate | 2019-12-01 00:45:00 | Superliga | 636 | False | 468196.0 | 468200.0 | 2019-11-26 00:10:00 | 2019-11-10 18:30:00 | 2019-11-03 18:30:00 | 2019-10-29 22:10:00 | 2019-10-19 20:45:00 | 2019-10-04 22:00:00 | 2019-09-28 23:00:00 | 2019-09-22 14:00:00 | 2019-09-15 18:30:00 | 2019-09-01 16:15:00 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 2.0 | 0.0 | 0.0 | 3.0 | 0.0 | 1.0 | 2.0 | 1.0 | 4.0 | 1.0 | 0.0 | 1.0 | 4.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 3.856860 | 5.724370 | 4.335091 | 6.678853 | 5.478300 | 5.858534 | 3.641945 | 7.957243 | 4.326252 | 7.106259 | 5.199840 | 3.694033 | 5.131156 | 3.193161 | 4.080169 | 3.898775 | 7.672377 | 2.864026 | 4.814193 | 3.454310 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 636.0 | 636.0 | 636.0 | 636.0 | 636.0 | 636.0 | 636.0 | 636.0 | 636.0 | 636.0 | 2019-11-23 20:00:00 | 2019-11-15 00:10:00 | 2019-11-10 14:00:00 | 2019-11-02 23:00:00 | 2019-10-30 00:20:00 | 2019-10-23 00:30:00 | 2019-10-18 22:00:00 | 2019-10-11 23:30:00 | 2019-10-06 20:45:00 | 2019-10-02 00:30:00 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 2.0 | 0.0 | 2.0 | 2.0 | 0.0 | 3.0 | 2.0 | 2.0 | 2.0 | 2.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 3.0 | 0.0 | 0.0 | 0.0 | 4.598000 | 11.825567 | 9.374867 | 8.265660 | 10.769583 | 4.680350 | 6.429871 | 12.773025 | 10.970814 | 5.924407 | 5.253225 | 2.819962 | 3.114820 | 3.283603 | 2.574183 | 5.887331 | 4.570225 | 2.843268 | 3.057739 | 4.684664 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 1122.0 | 642.0 | 636.0 | 636.0 | 636.0 | 1122.0 | 636.0 | 642.0 | 636.0 | 1122.0 | . 1 11984383 | home | Real Estelí | Deportivo Las Sabanas | 2019-12-01 01:00:00 | Primera Division | 752 | False | 516788.0 | 22169161.0 | 2019-11-27 21:00:00 | 2019-11-24 01:00:00 | 2019-11-10 01:00:00 | 2019-11-02 21:30:00 | 2019-10-27 01:00:00 | 2019-10-24 01:00:00 | 2019-10-21 00:00:00 | 2019-10-18 01:00:00 | 2019-10-06 01:00:00 | 2019-09-29 21:00:00 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 4.0 | 0.0 | 0.0 | 2.0 | 0.0 | 2.0 | 1.0 | 0.0 | 2.0 | 2.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 2.0 | 0.0 | 13.668800 | 5.967622 | 9.130611 | 5.732981 | 7.804064 | 6.743764 | 6.237028 | 12.616250 | 8.334650 | 8.172615 | 3.671610 | 6.121228 | 3.320450 | 5.766069 | 4.118071 | 4.223164 | 5.260700 | 3.102806 | 5.627457 | 4.256165 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 752.0 | 752.0 | 752.0 | 752.0 | 752.0 | 752.0 | 752.0 | 752.0 | 752.0 | 752.0 | 2019-11-27 21:00:00 | 2019-11-23 23:00:00 | 2019-11-09 22:00:00 | 2019-11-02 21:00:00 | 2019-10-28 00:00:00 | 2019-10-21 00:00:00 | 2019-10-16 21:00:00 | 2019-09-29 01:00:00 | 2019-09-20 21:30:00 | 2019-09-15 01:00:00 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 4.0 | 0.0 | 2.0 | 4.0 | 1.0 | 1.0 | 0.0 | 4.0 | 0.0 | 1.0 | 1.0 | 6.000588 | 4.692008 | 4.461575 | 5.301500 | 8.290211 | 5.260700 | 4.928100 | 5.708921 | 4.125842 | 4.103719 | 6.881762 | 6.840558 | 8.700363 | 5.156150 | 3.864878 | 6.237028 | 6.871904 | 5.716200 | 7.960465 | 9.994456 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 752.0 | 752.0 | 752.0 | 752.0 | 752.0 | 752.0 | 752.0 | 752.0 | 752.0 | 752.0 | . 2 11983301 | draw | UPNFM | Marathón | 2019-12-01 01:00:00 | Liga Nacional | 734 | False | 2510608.0 | 456313.0 | 2019-11-28 01:15:00 | 2019-11-21 01:30:00 | 2019-11-03 21:30:00 | 2019-10-27 01:00:00 | 2019-10-20 22:00:00 | 2019-10-17 01:00:00 | 2019-10-05 21:00:00 | 2019-09-29 01:00:00 | 2019-09-22 22:00:00 | 2019-09-19 01:00:00 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 3.0 | 2.0 | 2.0 | 1.0 | 0.0 | 2.0 | 4.0 | 3.0 | 1.0 | 1.0 | 1.0 | 0.0 | 3.0 | 0.0 | 1.0 | 2.0 | 4.0 | 2.0 | 3.0 | 1.0 | 5.736719 | 9.745283 | 5.685920 | 6.975000 | 3.864360 | 7.930120 | 4.650054 | 12.803284 | 5.094975 | 5.961407 | 6.825194 | 4.053167 | 5.293940 | 4.725164 | 7.776850 | 4.167290 | 7.289893 | 3.691168 | 7.223050 | 4.429055 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 734.0 | 734.0 | 734.0 | 734.0 | 734.0 | 734.0 | 734.0 | 734.0 | 734.0 | 734.0 | 2019-11-21 01:30:00 | 2019-11-10 22:00:00 | 2019-10-26 21:00:00 | 2019-10-20 23:00:00 | 2019-10-16 21:30:00 | 2019-10-12 21:00:00 | 2019-10-05 21:00:00 | 2019-09-28 22:00:00 | 2019-09-22 22:00:00 | 2019-09-18 21:30:00 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 3.0 | 0.0 | 0.0 | 4.0 | 1.0 | 3.0 | 4.0 | 2.0 | 4.0 | 0.0 | 1.0 | 1.0 | 0.0 | 2.0 | 0.0 | 2.0 | 4.0 | 1.0 | 0.0 | 0.0 | 8.379419 | 4.850100 | 8.676865 | 6.987061 | 7.966967 | 7.972809 | 7.289893 | 7.604720 | 6.451019 | 10.021854 | 5.487338 | 7.697712 | 4.186315 | 5.183071 | 6.176583 | 4.054209 | 4.650054 | 5.284983 | 5.299259 | 3.862791 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 734.0 | 734.0 | 734.0 | 734.0 | 734.0 | 734.0 | 734.0 | 734.0 | 734.0 | 734.0 | . 3 11983471 | away | León | Morelia | 2019-12-01 01:00:00 | Liga MX | 743 | False | 1552508.0 | 465797.0 | 2019-11-28 01:00:00 | 2019-11-23 03:10:00 | 2019-11-10 03:00:00 | 2019-11-04 02:00:00 | 2019-11-01 03:00:00 | 2019-10-27 01:00:00 | 2019-10-20 17:00:00 | 2019-10-05 22:00:00 | 2019-09-28 00:00:00 | 2019-09-25 02:00:00 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 3.0 | 2.0 | 4.0 | 1.0 | 0.0 | 3.0 | 2.0 | 1.0 | 1.0 | 1.0 | 3.0 | 1.0 | 0.0 | 1.0 | 1.0 | 2.0 | 1.0 | 1.0 | 2.0 | 1.0 | 5.998800 | 5.860496 | 8.256900 | 8.342183 | 6.163600 | 8.097475 | 5.796913 | 10.739525 | 7.261250 | 7.982087 | 5.998800 | 6.024042 | 4.508125 | 4.960117 | 5.867100 | 4.351000 | 5.823181 | 2.280050 | 5.544414 | 4.473325 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 743.0 | 743.0 | 743.0 | 743.0 | 743.0 | 743.0 | 743.0 | 743.0 | 743.0 | 743.0 | 2019-11-28 01:00:00 | 2019-11-23 23:00:00 | 2019-11-09 01:00:00 | 2019-11-04 02:00:00 | 2019-11-01 01:00:00 | 2019-10-26 00:00:00 | 2019-10-19 22:00:00 | 2019-10-05 02:00:00 | 2019-10-02 02:00:00 | 2019-09-26 02:06:00 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 3.0 | 1.0 | 3.0 | 1.0 | 6.0 | 2.0 | 3.0 | 2.0 | 1.0 | 2.0 | 3.0 | 3.0 | 2.0 | 1.0 | 1.0 | 2.0 | 2.0 | 3.0 | 0.0 | 3.0 | 5.998800 | 4.901579 | 8.413533 | 4.960117 | 7.482900 | 5.912175 | 3.986478 | 6.515762 | 4.575759 | 5.434175 | 5.998800 | 6.548433 | 4.576617 | 8.342183 | 4.878850 | 6.208425 | 7.483589 | 5.587387 | 7.301455 | 7.766762 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 743.0 | 743.0 | 743.0 | 743.0 | 743.0 | 743.0 | 743.0 | 743.0 | 746.0 | 743.0 | . 4 11883005 | home | Cobán Imperial | Iztapa | 2019-12-01 01:00:00 | Liga Nacional | 705 | False | 429958.0 | 426870.0 | 2019-11-27 18:00:00 | 2019-11-24 01:00:00 | 2019-11-10 02:00:00 | 2019-11-03 01:00:00 | 2019-10-27 20:30:00 | 2019-10-24 00:00:00 | 2019-10-20 18:00:00 | 2019-10-06 17:00:00 | 2019-10-02 21:30:00 | 2019-09-29 01:00:00 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 3.0 | 2.0 | 2.0 | 1.0 | 3.0 | 3.0 | 1.0 | 1.0 | 1.0 | 2.0 | 2.0 | 1.0 | 0.0 | 1.0 | 2.0 | 2.0 | 1.0 | 2.0 | 1.0 | 6.295743 | 7.625358 | 5.320906 | 7.425725 | 4.854167 | 10.857700 | 5.756838 | 7.079583 | 5.653375 | 9.926950 | 5.535514 | 4.848225 | 6.279472 | 4.178193 | 7.449917 | 3.002752 | 6.053250 | 4.540000 | 6.165925 | 3.876500 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 705.0 | 705.0 | 705.0 | 705.0 | 705.0 | 705.0 | 705.0 | 705.0 | 705.0 | 705.0 | 2019-11-27 19:00:00 | 2019-11-24 21:00:00 | 2019-11-10 19:30:00 | 2019-11-02 19:00:00 | 2019-10-26 21:00:00 | 2019-10-23 19:00:00 | 2019-10-20 17:30:00 | 2019-10-05 19:00:00 | 2019-10-02 19:00:00 | 2019-09-29 18:00:00 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 4.0 | 1.0 | 0.0 | 1.0 | 1.0 | 3.0 | 0.0 | 2.0 | 4.0 | 2.0 | 1.0 | 2.0 | 0.0 | 0.0 | 1.0 | 1.0 | 2.0 | 1.0 | 0.0 | 2.0 | 6.349390 | 5.894700 | 6.113000 | 7.766560 | 4.168200 | 7.231370 | 3.632279 | 6.414396 | 7.972750 | 4.290735 | 5.575180 | 5.901842 | 5.751275 | 4.163600 | 8.559950 | 4.059211 | 8.935007 | 5.888077 | 4.413683 | 7.031962 | 426870.0 | 426870.0 | 426870.0 | 426870.0 | 426870.0 | 426870.0 | 426870.0 | 37261558.0 | 37261558.0 | 37261558.0 | 705.0 | 705.0 | 705.0 | 705.0 | 705.0 | 705.0 | 705.0 | 705.0 | 705.0 | 705.0 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 110933 18030016 | draw | Zamora Fútbol Club | Hermanos Colmenares | 2021-04-30 23:00:00 | Primera Division | 800 | False | 7708122.0 | 37564088.0 | 2021-04-23 23:00:00 | 2021-04-18 23:00:00 | 2020-12-10 21:00:00 | 2020-12-09 00:00:00 | 2020-12-03 21:00:00 | 2020-11-30 00:00:00 | 2020-11-26 21:00:00 | 2020-11-23 01:00:00 | 2020-11-20 21:00:00 | 2020-11-15 21:00:00 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 4.0 | 0.0 | 1.0 | 1.0 | 0.0 | 4.0 | 3.0 | 1.0 | 1.0 | 2.0 | 0.0 | 0.0 | 3.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 3.0 | 0.0 | 8.399605 | 7.089190 | 4.675287 | 6.718459 | 8.415071 | 7.993363 | 4.642833 | 5.924607 | 5.088036 | 5.807075 | 4.085210 | 3.991885 | 5.693388 | 4.217531 | 3.893529 | 3.449633 | 6.642439 | 5.208821 | 4.851727 | 4.834250 | 7708122.0 | 7708122.0 | 232533.0 | 232533.0 | 232533.0 | 232533.0 | 232533.0 | 232533.0 | 232533.0 | 232533.0 | 800.0 | 800.0 | 800.0 | 800.0 | 800.0 | 800.0 | 800.0 | 800.0 | 800.0 | 800.0 | 2021-04-22 22:15:00 | 2021-04-15 22:00:00 | 2021-02-28 20:00:00 | 2021-02-25 20:00:00 | 2020-12-10 19:00:00 | 2020-12-08 13:00:00 | 2020-12-04 19:30:00 | 2020-11-29 16:00:00 | 2020-11-27 19:30:00 | 2020-11-24 19:30:00 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 4.0 | 1.0 | 2.0 | 2.0 | 0.0 | 2.0 | 1.0 | 1.0 | 2.0 | 2.0 | 2.0 | 2.0 | 2.0 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 3.0 | 1.0 | 5.008125 | 3.272463 | 3.717115 | 5.238575 | 5.311650 | 3.935375 | 5.538133 | 6.713300 | 7.004975 | 7.872750 | 7.239339 | 9.332287 | 7.058742 | 6.961725 | 5.757350 | 7.712525 | 5.875017 | 6.233200 | 5.785250 | 3.224300 | 37564088.0 | 37564088.0 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | 800.0 | 800.0 | 1101.0 | 1101.0 | 803.0 | 803.0 | 803.0 | 803.0 | 803.0 | 803.0 | . 110934 18030096 | away | Royal Pari | Oriente Petrolero | 2021-04-30 23:00:00 | Liga De Futbol Prof | 1098 | False | 465833.0 | 16488543.0 | 2021-04-23 23:30:00 | 2021-04-09 19:00:00 | 2021-04-03 00:00:00 | 2021-03-15 19:00:00 | 2021-03-11 19:00:00 | 2021-03-04 00:30:00 | 2021-02-25 00:30:00 | 2020-12-31 19:00:00 | 2020-12-29 19:00:00 | 2020-12-27 19:00:00 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 3.0 | 3.0 | 4.0 | 8.0 | 1.0 | 1.0 | 3.0 | 1.0 | 1.0 | 2.0 | 2.0 | 0.0 | 2.0 | 0.0 | 1.0 | 4.0 | 0.0 | 2.0 | 1.0 | 6.040300 | 10.020550 | 12.860092 | 11.139392 | 7.818325 | 2.744600 | 4.725100 | 7.664328 | 3.824074 | 14.587612 | 7.571322 | 4.299200 | 4.442021 | 4.668812 | 5.952370 | 9.885500 | 5.943867 | 6.106442 | 16.265222 | 4.490291 | 465833.0 | 465833.0 | 465833.0 | 465833.0 | 465833.0 | 465833.0 | 465833.0 | 15083408.0 | 15083408.0 | 15083408.0 | 1098.0 | 1098.0 | 1098.0 | 1098.0 | 1098.0 | 1122.0 | 1122.0 | 1098.0 | 1098.0 | 1098.0 | 2021-04-24 20:00:00 | 2021-04-10 21:15:00 | 2021-04-04 19:00:00 | 2021-03-20 22:00:00 | 2021-03-14 21:15:00 | 2020-12-31 19:00:00 | 2020-12-29 19:00:00 | 2020-12-27 19:00:00 | 2020-12-24 16:00:00 | 2020-12-22 21:15:00 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 4.0 | 0.0 | 2.0 | 1.0 | 0.0 | 1.0 | 2.0 | 2.0 | 0.0 | 2.0 | 2.0 | 1.0 | 5.0 | 4.0 | 1.0 | 0.0 | 2.0 | 0.0 | 6.171106 | 5.009241 | 6.848221 | 5.794154 | 3.647533 | 3.127178 | 10.115545 | 10.518444 | 4.145661 | 6.377816 | 7.421600 | 8.467391 | 6.183761 | 6.553486 | 15.376050 | 15.843563 | 4.510164 | 3.885800 | 12.142436 | 8.047688 | 16488543.0 | 16488543.0 | 16488543.0 | 16488543.0 | 16488543.0 | 471810.0 | 471810.0 | 471810.0 | 471810.0 | 471810.0 | 1098.0 | 1098.0 | 1098.0 | 1098.0 | 1098.0 | 1098.0 | 1098.0 | 1098.0 | 1098.0 | 1098.0 | . 110935 17715497 | draw | São Bernardo | Água Santa | 2021-04-30 23:00:00 | Paulista A2 | 1314 | False | 8416491.0 | 528562.0 | 2021-04-28 23:00:00 | 2021-04-25 01:00:00 | 2021-04-22 23:00:00 | 2021-04-21 01:00:00 | 2021-03-14 18:00:00 | 2021-03-10 18:00:00 | 2021-03-06 18:00:00 | 2021-02-28 18:00:00 | 2020-12-16 22:00:00 | 2020-12-12 18:00:00 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 2.0 | 1.0 | 1.0 | 0.0 | 1.0 | 2.0 | 0.0 | 1.0 | 1.0 | 2.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 2.0 | 3.0 | 1.0 | 6.000775 | 4.526330 | 7.443283 | 4.315928 | 6.756878 | 4.644605 | 7.546083 | 7.061783 | 4.466550 | 5.604375 | 3.981619 | 6.126650 | 3.033975 | 5.529961 | 3.184456 | 5.475955 | 4.388908 | 4.097217 | 6.262675 | 4.821825 | 8416491.0 | 8416491.0 | 8416491.0 | 8416491.0 | 8416491.0 | 8416491.0 | 8416491.0 | 8416491.0 | 883181.0 | 883181.0 | 1314.0 | 1314.0 | 1314.0 | 1314.0 | 1314.0 | 1314.0 | 1314.0 | 1314.0 | 1746.0 | 1746.0 | 2021-04-28 23:00:00 | 2021-04-24 23:00:00 | 2021-04-22 23:00:00 | 2021-04-21 01:00:00 | 2021-03-14 18:00:00 | 2021-03-10 22:00:00 | 2021-03-06 18:00:00 | 2021-02-27 19:00:00 | 2020-12-09 18:00:00 | 2020-12-06 18:00:00 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 2.0 | 0.0 | 1.0 | 3.0 | 1.0 | 2.0 | 2.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 6.921617 | 8.577671 | 8.155264 | 4.232500 | 8.495162 | 4.670143 | 8.135642 | 6.617900 | 3.881263 | 5.310150 | 3.081836 | 3.070258 | 2.536957 | 5.304985 | 3.004767 | 4.952157 | 3.257969 | 4.472350 | 7.371638 | 6.301017 | 528562.0 | 528562.0 | 528562.0 | 528562.0 | 528562.0 | 528562.0 | 528562.0 | 528562.0 | 896682.0 | 896682.0 | 1314.0 | 1314.0 | 1314.0 | 1314.0 | 1314.0 | 1314.0 | 1314.0 | 1314.0 | 1746.0 | 1746.0 | . 110936 17944153 | away | Everton | La Serena | 2021-05-01 00:00:00 | Primera Division | 663 | False | 6973085.0 | 471757.0 | 2021-04-24 00:00:00 | 2021-04-18 19:00:00 | 2021-04-12 19:00:00 | 2021-04-02 19:00:00 | 2021-03-27 19:00:00 | 2021-02-14 13:30:00 | 2021-02-11 21:30:00 | 2021-02-06 20:00:00 | 2021-01-19 22:15:00 | 2021-01-14 20:00:00 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 2.0 | 1.0 | 1.0 | 0.0 | 1.0 | 1.0 | 2.0 | 1.0 | 2.0 | 1.0 | 1.0 | 1.0 | 0.0 | 3.0 | 3.0 | 1.0 | 1.0 | 6.067230 | 5.688200 | 4.704490 | 5.210350 | 6.451883 | 6.283628 | 6.234132 | 5.700200 | 3.996717 | 7.312802 | 5.382177 | 5.205100 | 5.619340 | 6.392000 | 4.846800 | 4.756911 | 5.177539 | 5.952450 | 8.246471 | 4.479139 | 6973085.0 | 6973085.0 | 6973085.0 | 6973085.0 | 6973085.0 | 6973085.0 | 6973085.0 | 6973085.0 | 896760.0 | 896760.0 | 663.0 | 663.0 | 663.0 | 663.0 | 663.0 | 663.0 | 663.0 | 663.0 | 663.0 | 663.0 | 2021-04-24 19:30:00 | 2021-04-17 22:00:00 | 2021-04-11 19:00:00 | 2021-04-04 21:00:00 | 2021-03-30 23:00:00 | 2021-02-14 21:00:00 | 2021-02-10 21:30:00 | 2021-02-05 20:00:00 | 2021-01-24 20:00:00 | 2021-01-18 20:00:00 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 2.0 | 1.0 | 0.0 | 1.0 | 1.0 | 2.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 2.0 | 2.0 | 1.0 | 2.0 | 0.0 | 0.0 | 5.166822 | 4.803368 | 4.574750 | 4.851700 | 5.065750 | 6.052547 | 4.467189 | 4.663733 | 6.091328 | 4.953404 | 5.888744 | 6.347747 | 5.557890 | 4.190300 | 6.666050 | 5.035318 | 6.378186 | 6.726760 | 5.217356 | 7.172523 | 471757.0 | 471757.0 | 471757.0 | 471757.0 | 471757.0 | 471757.0 | 471757.0 | 471757.0 | 471757.0 | 470515.0 | 663.0 | 663.0 | 663.0 | 663.0 | 663.0 | 663.0 | 663.0 | 663.0 | 663.0 | 663.0 | . 110937 17786297 | home | Colón | Arsenal de Sarandi | 2021-05-01 00:00:00 | Superliga | 636 | False | 213970.0 | 470859.0 | 2021-04-25 18:45:00 | 2021-04-19 00:00:00 | 2021-04-12 00:00:00 | 2021-04-04 19:15:00 | 2021-03-27 17:00:00 | 2021-03-21 19:15:00 | 2021-03-17 20:15:00 | 2021-03-14 00:30:00 | 2021-03-06 22:20:00 | 2021-02-27 20:10:00 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 2.0 | 2.0 | 0.0 | 3.0 | 0.0 | 0.0 | 2.0 | 2.0 | 3.0 | 2.0 | 2.0 | 3.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 5.673139 | 7.972250 | 4.034900 | 7.055806 | 6.790717 | 6.033171 | 6.282770 | 4.652362 | 7.283950 | 4.716803 | 5.496961 | 4.248540 | 7.558162 | 4.943567 | 5.195333 | 4.771779 | 4.497200 | 6.008047 | 5.281133 | 6.420675 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 636.0 | 636.0 | 636.0 | 636.0 | 636.0 | 636.0 | 642.0 | 636.0 | 636.0 | 636.0 | 2021-04-28 00:30:00 | 2021-04-25 16:30:00 | 2021-04-22 22:15:00 | 2021-04-18 16:30:00 | 2021-04-11 14:00:00 | 2021-04-04 00:00:00 | 2021-03-27 21:30:00 | 2021-03-22 22:00:00 | 2021-03-15 22:15:00 | 2021-03-07 20:10:00 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 2.0 | 3.0 | 0.0 | 2.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 2.0 | 1.0 | 2.0 | 0.0 | 3.0 | 0.0 | 2.0 | 5.0 | 5.580400 | 4.627278 | 4.094762 | 4.880070 | 5.694806 | 4.488244 | 4.937108 | 6.074100 | 4.634711 | 4.933917 | 5.332983 | 6.780128 | 8.455300 | 6.430750 | 5.676700 | 9.973094 | 6.216542 | 5.783800 | 6.112818 | 5.445117 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 1116.0 | 636.0 | 1116.0 | 636.0 | 636.0 | 636.0 | 636.0 | 636.0 | 636.0 | 636.0 | . 110938 rows × 190 columns . . Recordemos entonces los valores faltantes del dataset . fffmp.check_NaNs(FMP) . home_team_name Nulls: 1 / 110938 - 0.0% away_team_name Nulls: 1 / 110938 - 0.0% league_name Nulls: 1 / 110938 - 0.0% is_cup Nulls: 1 / 110938 - 0.0% home_team_coach_id Nulls: 21721 / 110938 - 19.58% away_team_coach_id Nulls: 21815 / 110938 - 19.66% home_team_history_match_date_1 Nulls: 1159 / 110938 - 1.04% home_team_history_match_date_2 Nulls: 2451 / 110938 - 2.21% home_team_history_match_date_3 Nulls: 3773 / 110938 - 3.4% home_team_history_match_date_4 Nulls: 5101 / 110938 - 4.6% home_team_history_match_date_5 Nulls: 6477 / 110938 - 5.84% home_team_history_match_date_6 Nulls: 7896 / 110938 - 7.12% home_team_history_match_date_7 Nulls: 9295 / 110938 - 8.38% home_team_history_match_date_8 Nulls: 10719 / 110938 - 9.66% home_team_history_match_date_9 Nulls: 12136 / 110938 - 10.94% home_team_history_match_date_10 Nulls: 13559 / 110938 - 12.22% home_team_history_is_play_home_1 Nulls: 1159 / 110938 - 1.04% home_team_history_is_play_home_2 Nulls: 2451 / 110938 - 2.21% home_team_history_is_play_home_3 Nulls: 3773 / 110938 - 3.4% home_team_history_is_play_home_4 Nulls: 5101 / 110938 - 4.6% home_team_history_is_play_home_5 Nulls: 6477 / 110938 - 5.84% home_team_history_is_play_home_6 Nulls: 7896 / 110938 - 7.12% home_team_history_is_play_home_7 Nulls: 9295 / 110938 - 8.38% home_team_history_is_play_home_8 Nulls: 10719 / 110938 - 9.66% home_team_history_is_play_home_9 Nulls: 12136 / 110938 - 10.94% home_team_history_is_play_home_10 Nulls: 13559 / 110938 - 12.22% home_team_history_is_cup_1 Nulls: 1213 / 110938 - 1.09% home_team_history_is_cup_2 Nulls: 2557 / 110938 - 2.3% home_team_history_is_cup_3 Nulls: 3913 / 110938 - 3.53% home_team_history_is_cup_4 Nulls: 5299 / 110938 - 4.78% home_team_history_is_cup_5 Nulls: 6748 / 110938 - 6.08% home_team_history_is_cup_6 Nulls: 8231 / 110938 - 7.42% home_team_history_is_cup_7 Nulls: 9720 / 110938 - 8.76% home_team_history_is_cup_8 Nulls: 11263 / 110938 - 10.15% home_team_history_is_cup_9 Nulls: 12730 / 110938 - 11.47% home_team_history_is_cup_10 Nulls: 14186 / 110938 - 12.79% home_team_history_goal_1 Nulls: 1159 / 110938 - 1.04% home_team_history_goal_2 Nulls: 2451 / 110938 - 2.21% home_team_history_goal_3 Nulls: 3773 / 110938 - 3.4% home_team_history_goal_4 Nulls: 5101 / 110938 - 4.6% home_team_history_goal_5 Nulls: 6477 / 110938 - 5.84% home_team_history_goal_6 Nulls: 7896 / 110938 - 7.12% home_team_history_goal_7 Nulls: 9295 / 110938 - 8.38% home_team_history_goal_8 Nulls: 10719 / 110938 - 9.66% home_team_history_goal_9 Nulls: 12136 / 110938 - 10.94% home_team_history_goal_10 Nulls: 13559 / 110938 - 12.22% home_team_history_opponent_goal_1 Nulls: 1159 / 110938 - 1.04% home_team_history_opponent_goal_2 Nulls: 2451 / 110938 - 2.21% home_team_history_opponent_goal_3 Nulls: 3773 / 110938 - 3.4% home_team_history_opponent_goal_4 Nulls: 5101 / 110938 - 4.6% home_team_history_opponent_goal_5 Nulls: 6477 / 110938 - 5.84% home_team_history_opponent_goal_6 Nulls: 7896 / 110938 - 7.12% home_team_history_opponent_goal_7 Nulls: 9295 / 110938 - 8.38% home_team_history_opponent_goal_8 Nulls: 10719 / 110938 - 9.66% home_team_history_opponent_goal_9 Nulls: 12136 / 110938 - 10.94% home_team_history_opponent_goal_10 Nulls: 13559 / 110938 - 12.22% home_team_history_rating_1 Nulls: 1171 / 110938 - 1.06% home_team_history_rating_2 Nulls: 2466 / 110938 - 2.22% home_team_history_rating_3 Nulls: 3785 / 110938 - 3.41% home_team_history_rating_4 Nulls: 5117 / 110938 - 4.61% home_team_history_rating_5 Nulls: 6485 / 110938 - 5.85% home_team_history_rating_6 Nulls: 7909 / 110938 - 7.13% home_team_history_rating_7 Nulls: 9308 / 110938 - 8.39% home_team_history_rating_8 Nulls: 10729 / 110938 - 9.67% home_team_history_rating_9 Nulls: 12141 / 110938 - 10.94% home_team_history_rating_10 Nulls: 13566 / 110938 - 12.23% home_team_history_opponent_rating_1 Nulls: 1171 / 110938 - 1.06% home_team_history_opponent_rating_2 Nulls: 2466 / 110938 - 2.22% home_team_history_opponent_rating_3 Nulls: 3785 / 110938 - 3.41% home_team_history_opponent_rating_4 Nulls: 5117 / 110938 - 4.61% home_team_history_opponent_rating_5 Nulls: 6485 / 110938 - 5.85% home_team_history_opponent_rating_6 Nulls: 7909 / 110938 - 7.13% home_team_history_opponent_rating_7 Nulls: 9308 / 110938 - 8.39% home_team_history_opponent_rating_8 Nulls: 10729 / 110938 - 9.67% home_team_history_opponent_rating_9 Nulls: 12141 / 110938 - 10.94% home_team_history_opponent_rating_10 Nulls: 13566 / 110938 - 12.23% home_team_history_coach_1 Nulls: 21523 / 110938 - 19.4% home_team_history_coach_2 Nulls: 21571 / 110938 - 19.44% home_team_history_coach_3 Nulls: 21733 / 110938 - 19.59% home_team_history_coach_4 Nulls: 22118 / 110938 - 19.94% home_team_history_coach_5 Nulls: 22602 / 110938 - 20.37% home_team_history_coach_6 Nulls: 23258 / 110938 - 20.96% home_team_history_coach_7 Nulls: 23980 / 110938 - 21.62% home_team_history_coach_8 Nulls: 24869 / 110938 - 22.42% home_team_history_coach_9 Nulls: 25733 / 110938 - 23.2% home_team_history_coach_10 Nulls: 26653 / 110938 - 24.03% home_team_history_league_id_1 Nulls: 1159 / 110938 - 1.04% home_team_history_league_id_2 Nulls: 2451 / 110938 - 2.21% home_team_history_league_id_3 Nulls: 3773 / 110938 - 3.4% home_team_history_league_id_4 Nulls: 5101 / 110938 - 4.6% home_team_history_league_id_5 Nulls: 6477 / 110938 - 5.84% home_team_history_league_id_6 Nulls: 7896 / 110938 - 7.12% home_team_history_league_id_7 Nulls: 9295 / 110938 - 8.38% home_team_history_league_id_8 Nulls: 10719 / 110938 - 9.66% home_team_history_league_id_9 Nulls: 12136 / 110938 - 10.94% home_team_history_league_id_10 Nulls: 13559 / 110938 - 12.22% away_team_history_match_date_1 Nulls: 1226 / 110938 - 1.11% away_team_history_match_date_2 Nulls: 2593 / 110938 - 2.34% away_team_history_match_date_3 Nulls: 4034 / 110938 - 3.64% away_team_history_match_date_4 Nulls: 5516 / 110938 - 4.97% away_team_history_match_date_5 Nulls: 7000 / 110938 - 6.31% away_team_history_match_date_6 Nulls: 8426 / 110938 - 7.6% away_team_history_match_date_7 Nulls: 9867 / 110938 - 8.89% away_team_history_match_date_8 Nulls: 11295 / 110938 - 10.18% away_team_history_match_date_9 Nulls: 12762 / 110938 - 11.5% away_team_history_match_date_10 Nulls: 14216 / 110938 - 12.81% away_team_history_is_play_home_1 Nulls: 1226 / 110938 - 1.11% away_team_history_is_play_home_2 Nulls: 2593 / 110938 - 2.34% away_team_history_is_play_home_3 Nulls: 4034 / 110938 - 3.64% away_team_history_is_play_home_4 Nulls: 5516 / 110938 - 4.97% away_team_history_is_play_home_5 Nulls: 7000 / 110938 - 6.31% away_team_history_is_play_home_6 Nulls: 8426 / 110938 - 7.6% away_team_history_is_play_home_7 Nulls: 9867 / 110938 - 8.89% away_team_history_is_play_home_8 Nulls: 11295 / 110938 - 10.18% away_team_history_is_play_home_9 Nulls: 12762 / 110938 - 11.5% away_team_history_is_play_home_10 Nulls: 14216 / 110938 - 12.81% away_team_history_is_cup_1 Nulls: 1274 / 110938 - 1.15% away_team_history_is_cup_2 Nulls: 2681 / 110938 - 2.42% away_team_history_is_cup_3 Nulls: 4172 / 110938 - 3.76% away_team_history_is_cup_4 Nulls: 5721 / 110938 - 5.16% away_team_history_is_cup_5 Nulls: 7255 / 110938 - 6.54% away_team_history_is_cup_6 Nulls: 8747 / 110938 - 7.88% away_team_history_is_cup_7 Nulls: 10283 / 110938 - 9.27% away_team_history_is_cup_8 Nulls: 11779 / 110938 - 10.62% away_team_history_is_cup_9 Nulls: 13305 / 110938 - 11.99% away_team_history_is_cup_10 Nulls: 14819 / 110938 - 13.36% away_team_history_goal_1 Nulls: 1226 / 110938 - 1.11% away_team_history_goal_2 Nulls: 2593 / 110938 - 2.34% away_team_history_goal_3 Nulls: 4034 / 110938 - 3.64% away_team_history_goal_4 Nulls: 5516 / 110938 - 4.97% away_team_history_goal_5 Nulls: 7000 / 110938 - 6.31% away_team_history_goal_6 Nulls: 8426 / 110938 - 7.6% away_team_history_goal_7 Nulls: 9867 / 110938 - 8.89% away_team_history_goal_8 Nulls: 11295 / 110938 - 10.18% away_team_history_goal_9 Nulls: 12762 / 110938 - 11.5% away_team_history_goal_10 Nulls: 14216 / 110938 - 12.81% away_team_history_opponent_goal_1 Nulls: 1226 / 110938 - 1.11% away_team_history_opponent_goal_2 Nulls: 2593 / 110938 - 2.34% away_team_history_opponent_goal_3 Nulls: 4034 / 110938 - 3.64% away_team_history_opponent_goal_4 Nulls: 5516 / 110938 - 4.97% away_team_history_opponent_goal_5 Nulls: 7000 / 110938 - 6.31% away_team_history_opponent_goal_6 Nulls: 8426 / 110938 - 7.6% away_team_history_opponent_goal_7 Nulls: 9867 / 110938 - 8.89% away_team_history_opponent_goal_8 Nulls: 11295 / 110938 - 10.18% away_team_history_opponent_goal_9 Nulls: 12762 / 110938 - 11.5% away_team_history_opponent_goal_10 Nulls: 14216 / 110938 - 12.81% away_team_history_rating_1 Nulls: 1239 / 110938 - 1.12% away_team_history_rating_2 Nulls: 2603 / 110938 - 2.35% away_team_history_rating_3 Nulls: 4047 / 110938 - 3.65% away_team_history_rating_4 Nulls: 5525 / 110938 - 4.98% away_team_history_rating_5 Nulls: 7016 / 110938 - 6.32% away_team_history_rating_6 Nulls: 8437 / 110938 - 7.61% away_team_history_rating_7 Nulls: 9878 / 110938 - 8.9% away_team_history_rating_8 Nulls: 11303 / 110938 - 10.19% away_team_history_rating_9 Nulls: 12772 / 110938 - 11.51% away_team_history_rating_10 Nulls: 14223 / 110938 - 12.82% away_team_history_opponent_rating_1 Nulls: 1239 / 110938 - 1.12% away_team_history_opponent_rating_2 Nulls: 2603 / 110938 - 2.35% away_team_history_opponent_rating_3 Nulls: 4047 / 110938 - 3.65% away_team_history_opponent_rating_4 Nulls: 5525 / 110938 - 4.98% away_team_history_opponent_rating_5 Nulls: 7016 / 110938 - 6.32% away_team_history_opponent_rating_6 Nulls: 8437 / 110938 - 7.61% away_team_history_opponent_rating_7 Nulls: 9878 / 110938 - 8.9% away_team_history_opponent_rating_8 Nulls: 11303 / 110938 - 10.19% away_team_history_opponent_rating_9 Nulls: 12772 / 110938 - 11.51% away_team_history_opponent_rating_10 Nulls: 14223 / 110938 - 12.82% away_team_history_coach_1 Nulls: 21641 / 110938 - 19.51% away_team_history_coach_2 Nulls: 21696 / 110938 - 19.56% away_team_history_coach_3 Nulls: 21949 / 110938 - 19.78% away_team_history_coach_4 Nulls: 22294 / 110938 - 20.1% away_team_history_coach_5 Nulls: 22855 / 110938 - 20.6% away_team_history_coach_6 Nulls: 23525 / 110938 - 21.21% away_team_history_coach_7 Nulls: 24377 / 110938 - 21.97% away_team_history_coach_8 Nulls: 25219 / 110938 - 22.73% away_team_history_coach_9 Nulls: 26150 / 110938 - 23.57% away_team_history_coach_10 Nulls: 27129 / 110938 - 24.45% away_team_history_league_id_1 Nulls: 1226 / 110938 - 1.11% away_team_history_league_id_2 Nulls: 2593 / 110938 - 2.34% away_team_history_league_id_3 Nulls: 4034 / 110938 - 3.64% away_team_history_league_id_4 Nulls: 5516 / 110938 - 4.97% away_team_history_league_id_5 Nulls: 7000 / 110938 - 6.31% away_team_history_league_id_6 Nulls: 8426 / 110938 - 7.6% away_team_history_league_id_7 Nulls: 9867 / 110938 - 8.89% away_team_history_league_id_8 Nulls: 11295 / 110938 - 10.18% away_team_history_league_id_9 Nulls: 12762 / 110938 - 11.5% away_team_history_league_id_10 Nulls: 14216 / 110938 - 12.81% total missing values: 1717256 . . Nota: Vemos que el procentaje de valores faltantes es aproximadamente el mismo en función de i . IMPUTACI&#211;N DE VALORES FALTANTES . Del analisis hecho en la parte I del proyecto, no se observaron claros valores erroneos o outliers. Luego, la parte de limpieza del dataset consiste principalmente en reemplazar los valores faltantes (NaNs). . NOTA: A lo largo de este notebook muy frequentemente utilizaré el valor $-123456789$ como sustituto de los NaNs. Esto es una estrategia que utilizo para poder tratar los datos. Muchas veces realizo una operación sobre los valores solo si se cumple una condicion logica: . $if ,(condicion) ; ; ; ; ; ; ; ; ;=&gt; ; ;Valor_A$ | $if ,(not ,(condicion)) ; ;=&gt; ; ;Valor_B$ | . Codificando el resultado de la operación lógica como $0$ o $1$, podemos escribirlo como: . $(if ,(condicion)) ;x ;Valor_A ;+ ;if ,(not ,(condicion)) ;x ,Valor_B$ | . Esto es igual a $Valor_A$ si se cumple la condición o $Valor_B$ en caso contrario. . Trabajar de esta forma permite operar sobre el dataset de manera más rápida. El problema es que NaN x 0 = NaN. Es por ello que uso un &quot;NaN&quot; numérico ($-123456789$) que sé que no aparece en el dataset . 0) Generacion de un clasificador de competiciones en: liga y copa . Muchas veces será de interes saber si un &quot;league_id&quot; corresponde a una competición de copa o liga. Para ello, utilizando los partidos para los cuales tenemos la informacion sobre el tipo de competición (&quot;is_cup&quot;) , generamos una suerte de identificador a través de un diccionario, donde el key es el &quot;id&quot; y el valor $1$ o $0$ si es una copa o liga, respectivamente. . Patra ello utilizaremos tanto los datos históricos como los de los partidos a modelar. . ID=FMP[&#39;league_id&#39;].to_numpy() TIPO=FMP[&#39;is_cup&#39;].to_numpy()*1.0 ID_fil=FMP[&#39;league_id&#39;].isna().to_numpy() TIPO_fil=FMP[&#39;is_cup&#39;].isna().to_numpy() for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(1,11): l1=t+&#39;_team_history_league_id_{}&#39;.format(i) l2=t+&#39;_team_history_is_cup_{}&#39;.format(i) ID=np.concatenate((ID,FMP[l1].to_numpy()),axis=0) TIPO=np.concatenate((TIPO,FMP[l2].to_numpy()),axis=0) ID_fil=np.concatenate((ID_fil,FMP[l1].isna().to_numpy()),axis=0) TIPO_fil=np.concatenate((TIPO_fil,FMP[l2].isna().to_numpy()),axis=0) ID=ID[~TIPO_fil] ID_fil=ID_fil[~TIPO_fil] TIPO=TIPO[~TIPO_fil] ID=ID[~ID_fil] TIPO=TIPO[~ID_fil] COMPETICIONES=defaultdict(lambda: _nan,zip(ID,TIPO)) . . 1) Eliminaci&#243;n de filas con demasiados valores faltantes . El dataset presenta varias filas para las cuales la mayoria de los valores &quot;históricos&quot; no están definidos. Si bien esos valores pueden ser imputados, eso genera un mayor ruido en el dataset, que perjudica el entrenamiento de los modelos. Es por ello que decidí eliminar las filas con mayor número de valores faltantes. . En total tengo $110938$ muestras con $190$ columnas. Algunas de esas columnas como home_team_name, away_team_name, league_name, id y target, no participan en el training, y casualmente tienen un porcentaje de valores faltantes muy reducido. Es por ello, que efectivamente podemos contar con $185$ columnas a la hora de revisar las filas con mayor grado de falta de información. . Empezamos entonces por descartar las filas con mas de $180$ valores faltantes: . FMP = FMP[pd.isna(FMP).sum(axis=1)&lt;=180] print(&#39;Muestras eliminadas hasta ahora: &#39;, 110938-len(FMP) ) . . Muestras eliminadas hasta ahora: 303 . Luego nos concentramos en dos variables de mayor interés como son los goles anotados y el rating. Eliminamos las columnas que presenten al menos un $60 %$ de valores faltantes: . for t in [&#39;home&#39;,&#39;away&#39;]: for e in [&#39;&#39;,&#39;_opponent&#39;]: Columnas=[] for i in range(1,11): c_team=t+&#39;_team_history&#39;+e+&#39;_goal_{}&#39;.format(i) Columnas.append(c_team) FMP = FMP[pd.isna(FMP[Columnas]).sum(axis=1)&lt;=6] print(&#39;Muestras eliminadas hasta ahora: &#39;, 110938-len(FMP) ) . . Muestras eliminadas hasta ahora: 8024 . for t in [&#39;home&#39;,&#39;away&#39;]: for e in [&#39;&#39;,&#39;_opponent&#39;]: Columnas=[] for i in range(1,11): c_team=t+&#39;_team_history&#39;+e+&#39;_rating_{}&#39;.format(i) Columnas.append(c_team) FMP = FMP[pd.isna(FMP[Columnas]).sum(axis=1)&lt;=6] print(&#39;Muestras eliminadas hasta ahora: &#39;, 110938-len(FMP) ) . . Muestras eliminadas hasta ahora: 8026 . Finalmente, verificamos el porcentage del dataset que hemos descartado: . print(round(100*(110938-len(FMP))/110938,2),&#39;%&#39;) . . 7.23 % . El valor final está debajo del $10 %$, y creo que es un costo asumible para mejorar el modelado del problema . 2) Nombre de la competici&#243;n . El nombre de la competición es algo que finalmente no se usará, pero solo por completitud, decidí imputar los valores faltantes con &quot;Unknown&quot;. . FMP.league_name.fillna(&quot;Unknown&quot;, inplace = True) . . 3) Identificador de competici&#243;n . Para reemplazar los valores faltantes en la columna del identificador de la competición (&quot;league_id&quot;), lo que hicimos fue completarlo considerando el valor más probable. . Para hacer ello, primero hay que recordar que que para cada equipo tenemos $10$ partidos de historial. Luego podemos buscar cual es la competición con más ocurencias en esa muestra de diez partidos y reemplazar los valores faltantes con ese &quot;id&quot;. Como precaución, se require tener una muestra igual o mayor a $4$ y tener un único valor con más ocurrencias. . En los casos de los equipos para los cuales no se cumplan las condiciones, se completarán los &quot;id&quot; con $-1$. . for t in [&#39;home&#39;,&#39;away&#39;]: L=[] for i in range(1,11): l=t+&#39;_team_history_league_id_{}&#39;.format(i) L.append(l) league_id=FMP[L] FMP[t+&#39;_league_id_nans&#39;]=np.isnan(league_id).sum(axis=1) FMP[t+&#39;_most_common&#39;]=league_id.mode(axis=1)[0] FMP[t+&#39;_most_common_n&#39;]=np.isnan(league_id.mode(axis=1)).sum(axis=1) FMP[t+&#39;_most_common&#39;].fillna(-1, inplace = True) FMP[t+&#39;_most_common&#39;]=FMP[t+&#39;_most_common&#39;]*(FMP[t+&#39;_most_common_n&#39;]==1).astype(&#39;int&#39;) + (-1)*(FMP[t+&#39;_most_common_n&#39;]&gt;1).astype(&#39;int&#39;) . . maximo_de_nans=6 for t in [&#39;home&#39;,&#39;away&#39;]: nans=t+&#39;_league_id_nans&#39; most_common=t+&#39;_most_common&#39; for i in range(1,11): c=t+&#39;_team_history_league_id_{}&#39;.format(i) FMP[c].fillna(_nan, inplace = True) FMP[c]=((FMP[c]==_nan) &amp; (FMP[nans]&lt;=maximo_de_nans)).astype(&#39;int&#39;)*FMP[most_common]+( (FMP[c]!=_nan) | (FMP[nans]&gt;maximo_de_nans)).astype(&#39;int&#39;)*FMP[c] FMP[c]=FMP[c].replace(to_replace=_nan, value=np.nan) . . for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(1,11): c=t+&#39;_team_history_league_id_{}&#39;.format(i) FMP[c].fillna(-1, inplace = True) FMP[c]=FMP[c].astype(&#39;int&#39;) . . En este caso, no hay identificadores faltantes para los partidos a modelar. Sin embargo, he pensado como se haría en dicho caso. La mejor opción sería fijarse si tienen alguna competición en comun. Para ello habría que tener una lista de las competiciones para el equipo local y visitante, lo que sería un tanto complejo. Como opción B, se podría al menos comparar la competición con más correncias de cada uno, y, si coincide, tomar ese valor. Esto es lo que muestro abajo. . c=&#39;league_id&#39; most_common_home=&#39;home_most_common&#39; most_common_away=&#39;away_most_common&#39; FMP[c].fillna(_nan, inplace = True) FMP[c]=( (FMP[c]==_nan) &amp; (FMP[most_common_home]==FMP[most_common_away])).astype(&#39;int&#39;)*FMP[most_common_home]+( (FMP[c]!=_nan) | (FMP[most_common_home]!=FMP[most_common_away])).astype(&#39;int&#39;)*FMP[c] FMP[c]=FMP[c].replace(to_replace=_nan, value=np.nan) FMP.league_id.fillna(-1, inplace = True) . . Como último paso, se eliminaron las columnas auxiliares creadas. . for t in [&#39;home&#39;,&#39;away&#39;]: nans=t+&#39;_league_id_nans&#39; most_common=t+&#39;_most_common&#39; most_common_n=t+&#39;_most_common_n&#39; FMP=FMP.drop(columns=[nans,most_common,most_common_n]) . . 4) Nombre del equipo local y visitante . Este es un dato que a fin de cuentas no será de utilidad para el modelado del problema. Luego, se optó por simplemente reemplazar los valores faltantes por &quot;Unknown&quot;. . FMP.home_team_name.fillna(&quot;Unknown&quot;, inplace = True) FMP.away_team_name.fillna(&quot;Unknown&quot;, inplace = True) . . 5) Identificador del tipo de competici&#243;n . Para corregir estos valores, utilizamos el diccionario creado en el paso 0). Así, en los casos donde donde sabíamos de que tipo de competición se trataba, lo completamos correspondientemente. . for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(1,11): l=t+&#39;_team_history_is_cup_{}&#39;.format(i) liga=t+&#39;_team_history_league_id_{}&#39;.format(i) FMP[l].fillna(_nan, inplace = True) FMP[l]=(FMP[l]==_nan).astype(&#39;int&#39;)*FMP[liga].map(COMPETICIONES) + (FMP[l]!=_nan).astype(&#39;int&#39;)*FMP[l] FMP[l]=FMP[l].replace(to_replace=_nan, value=np.nan) l=&#39;is_cup&#39; liga=&#39;league_id&#39; FMP[l].fillna(_nan, inplace = True) FMP[l]=(FMP[l]==_nan).astype(&#39;int&#39;)*FMP[liga].map(COMPETICIONES) + (FMP[l]!=_nan).astype(&#39;int&#39;)*FMP[l] FMP[l]=FMP[l].replace(to_replace=_nan, value=np.nan) . . Claro está, era muy posible que no tuvieramos informacion sobre todas las competiciones, o que en algunos casos no tuvieramos información sobre la competición ($-1$). Para esos casos se hizo una imputacion aleatoria. Se asignó $1$ o $0$ con una probabilidad dada por las observaciones de copa y liga (respectivamente) vistas en el dataset. . Para ello calculamos la proporcion de partidos de copa tanto para los partidos a modelar como en total (considerando también los datos del historial). De ello se obtuvo que alrededor de $6$ de cada $100$ partidos corresponden a una competición de copa. Esto podría ser una cuestion relativa al sampleo del dataset, pero suena coherente. . D={True:0,False:0} v=FMP.is_cup.value_counts() for i in range(2): D[v.index[i]]=D[v.index[i]]+v.values[i] print(&#39;Partidos a predecir:&#39;, D) proporcion=D[True]/(D[True]+D[False]) ratio=D[True]/D[False] print(&#39;Proporcion de partidos de copa:&#39;, proporcion) print(&#39;Ratio:&#39;, ratio) C=[] for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(1,11): C.append(t+&#39;_team_history_is_cup_{}&#39;.format(i)) v,f=np.unique(FMP[C],return_counts=True) for i in range(2): D[v[i]]=D[v[i]]+f[i] print(&#39;Total:&#39;, D) proporcion=D[True]/(D[True]+D[False]) ratio=D[True]/D[False] print(&#39;Proporcion de partidos de copa:&#39;, proporcion) print(&#39;Ratio:&#39;, ratio) . . Partidos a predecir: {True: 8125, False: 94787} Proporcion de partidos de copa: 0.07895094838308457 Ratio: 0.08571850570225875 Total: {True: 176863, False: 1933662} Proporcion de partidos de copa: 0.08380047618483552 Ratio: 0.09146531296576134 . En función de ello, se sortearon y completaron los valores faltantes. . for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(1,11): l=t+&#39;_team_history_is_cup_{}&#39;.format(i) FMP[l]=FMP[l].fillna(pd.Series((np.random.rand(len(FMP))&lt;proporcion).astype(&#39;int&#39;),index=FMP.index)) FMP.is_cup.fillna(pd.Series((np.random.rand(len(FMP))&lt;proporcion).astype(&#39;int&#39;),index=FMP.index), inplace = True) FMP.is_cup=FMP.is_cup.astype(&#39;int&#39;) . . 6) Identificador del entrenador . Como marco general, se debe notar que esta variable la utilizaremos solamente para registrar los partidos donde se produzca un cambio de entrenador. Esto se debe a que dicho evento podría generar un efecto anímico en los equipos que repercuta en sus resultados. . Luego, comenzando por el partido $i=9$ hasta llegar al partido a modelar, la estrategia de imputación utilizada fue la siguiente: . i) Para los casos en los que sabía el id del siguente partido y del anterior: . Si son iguales: Reemplazaré por ese id | Si son distintos: reemplazaré por el anterior (no puedo saber si cambio en ese partido o el siguiente) | . ii) Para los casos donde tenía solo el valor anterior y no el siguiente, utilizaré el anterior (no hay razón para presuponer un cambio de tecnico) . iii) Finalmente, en los casos donde no tenía ningún valor contiguo, reemplacé por $-1$ (dado que los id son enteros positivos). . En resumen, reemplacé por el valor anterior, siempre que exista. Caso contrario, imputé con un $-1$. . Finalmente, para el partido $i=10$, en función de la estrategia adoptada, la unica opción fue imputar con $-1$. . for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(9,0,-1): c=t+&#39;_team_history_coach_{}&#39;.format(i) a=t+&#39;_team_history_coach_{}&#39;.format(i+1) FMP[c].fillna(_nan, inplace = True) FMP[a].fillna(_nan, inplace = True) FMP[c]=( (FMP[c]==_nan) &amp; (FMP[a]!=_nan) ).astype(&#39;int&#39;)*FMP[a]+( (FMP[c]!=_nan) | (FMP[a]==_nan) ).astype(&#39;int&#39;)*FMP[c] FMP[c]=FMP[c].replace(to_replace=_nan, value=np.nan) FMP[a]=FMP[a].replace(to_replace=_nan, value=np.nan) for t in [&#39;home&#39;,&#39;away&#39;]: c=t+&#39;_team_coach_id&#39; a=t+&#39;_team_history_coach_{}&#39;.format(1) FMP[c].fillna(_nan, inplace = True) FMP[a].fillna(_nan, inplace = True) FMP[c]=( (FMP[c]==_nan) &amp; (FMP[a]!=_nan) ).astype(&#39;int&#39;)*FMP[a]+( (FMP[c]!=_nan) | (FMP[a]==_nan) ).astype(&#39;int&#39;)*FMP[c] FMP[c]=FMP[c].replace(to_replace=_nan, value=np.nan) FMP[a]=FMP[a].replace(to_replace=_nan, value=np.nan) . . for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(10,0,-1): c=t+&#39;_team_history_coach_{}&#39;.format(i) FMP[c].fillna(-1, inplace = True) c=t+&#39;_team_coach_id&#39; FMP[c].fillna(-1, inplace = True) . . 7) D&#237;a de los partidos . Para corregir los valores faltantes referentes a las fechas de los partidos (datos que serán de utilidad en el cálculo de la acumulación de partidos o la antiguedad de los partidos usados como input), se probaron distintas estrategias. . En primer lugar, tratamos de imputar las fechas correspondientes a partidos para los cuales conocíamos la fecha del partido inmediatamente anterior y posterior. En estos casos la idea fue tomar la fecha justo en el medio. . Si bien parecía una buena idea, encontramos que no había casos que cumplieran esa condición, como queda graficado en la tabla. . for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(1,11): c=t+&#39;_team_history_match_date_{}&#39;.format(i) FMP[c]=pd.to_datetime(FMP[c]) c=&#39;match_date&#39; FMP[c]=pd.to_datetime(FMP[c]) . . T=[] I=[] A=[] D=[] for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(2,10): c=t+&#39;_team_history_match_date_{}&#39;.format(i) a=t+&#39;_team_history_match_date_{}&#39;.format(i+1) p=t+&#39;_team_history_match_date_{}&#39;.format(i-1) antes=FMP[c].isna().sum() FMP[c] = FMP.apply(lambda row: row[a]+((row[p]-row[a])/2) if (pd.isna(row[c]) &amp; ((~(pd.isna(row[p]))) &amp; (~(pd.isna(row[a])))) ) else row[c],axis=1) despues=FMP[c].isna().sum() T.append(t) I.append(i) A.append(antes) D.append(despues) for t in [&#39;home&#39;,&#39;away&#39;]: c=t+&#39;_team_history_match_date_{}&#39;.format(1) a=t+&#39;_team_history_match_date_{}&#39;.format(2) p=&#39;match_date&#39; antes=FMP[c].isna().sum() FMP[c] = FMP.apply(lambda row: row[a]+((row[p]-row[a])/2) if (pd.isna(row[c]) &amp; ((~(pd.isna(row[p]))) &amp; (~(pd.isna(row[a])))) ) else row[c],axis=1) despues=FMP[c].isna().sum() T.append(t) I.append(1) A.append(antes) D.append(despues) print(&#39;Datos erroneos&#39;) display(pd.DataFrame({&#39;Team&#39;:T,&#39;Partido&#39;:I,&#39;Antes&#39;:A,&#39;Despues&#39;:D,&#39;Resueltos&#39;:np.array(A)-np.array(D)})) . . Datos erroneos . Team Partido Antes Despues Resueltos . 0 home | 2 | 0 | 0 | 0 | . 1 home | 3 | 0 | 0 | 0 | . 2 home | 4 | 0 | 0 | 0 | . 3 home | 5 | 991 | 991 | 0 | . 4 home | 6 | 2155 | 2155 | 0 | . 5 home | 7 | 3377 | 3377 | 0 | . 6 home | 8 | 4636 | 4636 | 0 | . 7 home | 9 | 5924 | 5924 | 0 | . 8 away | 2 | 0 | 0 | 0 | . 9 away | 3 | 0 | 0 | 0 | . 10 away | 4 | 0 | 0 | 0 | . 11 away | 5 | 1164 | 1164 | 0 | . 12 away | 6 | 2377 | 2377 | 0 | . 13 away | 7 | 3668 | 3668 | 0 | . 14 away | 8 | 4982 | 4982 | 0 | . 15 away | 9 | 6345 | 6345 | 0 | . 16 home | 1 | 0 | 0 | 0 | . 17 away | 1 | 0 | 0 | 0 | . Dado que en este caso no podía imputar simplemente mirando a la columna y sacando una mediana o media, ya que el dataset contiene grupos de diez partidos de 2019 a 2021, tomé una estrategia diferente. . Empecé por calcular un tiempo &quot;medio&quot; de los tiempos entre los partidos. Para ello, primero obtube las medianas de los tiempo entre los partidos, comenzando por $i_{partido ,a ,modelar} - i_1$ hasta $i_9 - i_{10}$. Luego, tomé una media de esos valores pesada por la cantidad de datos utilizados en cada caso. . M=[] N=[] for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(1,10): c=t+&#39;_team_history_match_date_{}&#39;.format(i) a=t+&#39;_team_history_match_date_{}&#39;.format(i+1) D=FMP[[c,a]] D.dropna(inplace=True) D=D[c]-D[a] m=D.median()#.days M.append(m) n=len(D) N.append(n) for t in [&#39;home&#39;,&#39;away&#39;]: c=&#39;match_date&#39; a=t+&#39;_team_history_match_date_{}&#39;.format(1) D=FMP[[c,a]] D.dropna(inplace=True) D=D[c]-D[a] m=D.median()#.days M.append(m) n=len(D) N.append(n) M=np.array(M) N=np.array(N) Tiempo_entre_partidos=np.sum(M*(N/np.sum(N))) print(&#39;Tiempo entre partidos: &#39;,Tiempo_entre_partidos) . . Tiempo entre partidos: 6 days 22:31:34.018008028 . De mi analisis de los valores faltantes, sabía que teníamos todas las fechas correspondientes a los partidos a modelar. Luego, comezando por $i=1$ hasta $i=10$, proseguí a imputar todos los valores faltantes, por la fecha del partido siguiente menos el valor calculado. Como se puede ver en la tabla al final, esta estrategia me sirvió para corregir todos los valores necesarios. . T=[] I=[] A=[] D=[] for t in [&#39;home&#39;,&#39;away&#39;]: p=&#39;match_date&#39; c=t+&#39;_team_history_match_date_{}&#39;.format(1) antes=FMP[c].isna().sum() FMP[c] = FMP.apply(lambda row: row[p]-Tiempo_entre_partidos if (pd.isna(row[c]) &amp; (~(pd.isna(row[p])))) else row[c],axis=1) despues=FMP[c].isna().sum() T.append(t) I.append(1) A.append(antes) D.append(despues) for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(2,11): p=t+&#39;_team_history_match_date_{}&#39;.format(i-1) c=t+&#39;_team_history_match_date_{}&#39;.format(i) antes=FMP[c].isna().sum() FMP[c] = FMP.apply(lambda row: row[p]-Tiempo_entre_partidos if (pd.isna(row[c]) &amp; (~(pd.isna(row[p])))) else row[c],axis=1) despues=FMP[c].isna().sum() T.append(t) I.append(i) A.append(antes) D.append(despues) print(&#39;Datos erroneos&#39;) display(pd.DataFrame({&#39;Team&#39;:T,&#39;Partido&#39;:I,&#39;Antes&#39;:A,&#39;Despues&#39;:D,&#39;Resueltos&#39;:np.array(A)-np.array(D)})) . . Datos erroneos . Team Partido Antes Despues Resueltos . 0 home | 1 | 0 | 0 | 0 | . 1 away | 1 | 0 | 0 | 0 | . 2 home | 2 | 0 | 0 | 0 | . 3 home | 3 | 0 | 0 | 0 | . 4 home | 4 | 0 | 0 | 0 | . 5 home | 5 | 991 | 0 | 991 | . 6 home | 6 | 2155 | 0 | 2155 | . 7 home | 7 | 3377 | 0 | 3377 | . 8 home | 8 | 4636 | 0 | 4636 | . 9 home | 9 | 5924 | 0 | 5924 | . 10 home | 10 | 7246 | 0 | 7246 | . 11 away | 2 | 0 | 0 | 0 | . 12 away | 3 | 0 | 0 | 0 | . 13 away | 4 | 0 | 0 | 0 | . 14 away | 5 | 1164 | 0 | 1164 | . 15 away | 6 | 2377 | 0 | 2377 | . 16 away | 7 | 3668 | 0 | 3668 | . 17 away | 8 | 4982 | 0 | 4982 | . 18 away | 9 | 6345 | 0 | 6345 | . 19 away | 10 | 7716 | 0 | 7716 | . 8) Local&#237;a . Para imputar los datos de localía en los partidos históricos no había muchos datos para usar, realmente. Asique partí de la de la premisa que los equipos en promedio deberían juegar igual cantidad de partidos de local que de visitante. . A partir de ello, primero pensé que podríamos fijarnos si los equipos han jugado más partidos de vistitante o de local, y reemplazar los valores faltantes por el opuesto para balancear. El problema era que la muestra es muy pequeña (10 partidos), y si en algunos casos faltan 4 de ellos, terminaremos por desbalancear nosotros mismos el dataset. . Es por ello que me decanté por una opción no muy elegante que consitió en reemplazar por valores aleatorios de 1 (True) or 0 (False). . for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(1,11): l=t+&#39;_team_history_is_play_home_{}&#39;.format(i) FMP[l]=FMP[l].fillna(pd.Series(np.random.randint(0,2,len(FMP)),index=FMP.index)) . . 9) Goles . En este caso tenemos los goles que marco cada equipo (away y home) y sus oponentes, para cada uno de los $10$ partidos. . Para corregir estos valores, teniendo en cuenta el análisis hecho en el bloque exploratorio 1), procedí de la siguiente manera: . Para el &quot;team (away/home)&quot;, si tenía 6 o más partidos con datos de los goles marcados, sortee un valor con distribución de Poison con $ lambda$ igual a su media de goles en esos partidos. . | Caso contrario y para los oponentes, haciendo uso de lo que vimos al explorar las variables, generamos valores de los goles considerando una distribución de poisson con: . $ lambda=1.52$ para los locales | $ lambda=1.24$ para los visitantes | . | . for t in [&#39;home&#39;,&#39;away&#39;]: L=[] for i in range(1,11): l=t+&#39;_team_history_goal_{}&#39;.format(i) L.append(l) m=np.nanmean(FMP[L],axis=1) n=np.isnan(FMP[L]).sum(axis=1) c=t+&#39;_team_mean_goal&#39; FMP[c]=m FMP[c].fillna(_nan, inplace = True) c=t+&#39;_nans_for_goal&#39; FMP[c]=n . . maximo_de_nans=4 for t in [&#39;home&#39;,&#39;away&#39;]: r=t+&#39;_team_mean_goal&#39; n=t+&#39;_nans_for_goal&#39; for i in range(1,11): l=t+&#39;_team_history_goal_{}&#39;.format(i) FMP[l].fillna(_nan, inplace = True) Rdm_Poisson_goals_local=pd.Series(np.random.poisson(FMP[&#39;home_team_mean_goal&#39;],size=len(FMP)),index=FMP.index) FMP[l]=( (FMP[n]&lt;=maximo_de_nans) &amp; (FMP[l]==_nan) ).astype(&#39;int&#39;)* Rdm_Poisson_goals_local + ( (FMP[n]&gt;maximo_de_nans) | (FMP[l]!=_nan) ).astype(&#39;int&#39;)*FMP[l] FMP[l]=FMP[l].replace(to_replace=_nan, value=np.nan) . . for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(1,11): c_team=t+&#39;_team_history_goal_{}&#39;.format(i) c_opponent=t+&#39;_team_history_opponent_goal_{}&#39;.format(i) l=t+&#39;_team_history_is_play_home_{}&#39;.format(i) Rdm_goals_local = pd.Series(np.random.poisson(lam=1.52,size=len(FMP)),index=FMP.index) Rdm_goals_visitor = pd.Series(np.random.poisson(lam=1.24,size=len(FMP)),index=FMP.index) FMP[c_team].fillna(_nan, inplace = True) FMP[c_team]=( (FMP[c_team]==_nan) &amp; (FMP[l]==1) ).astype(&#39;int&#39;)*Rdm_goals_local+( (FMP[c_team]==_nan) &amp; (FMP[l]==0) ).astype(&#39;int&#39;)*Rdm_goals_visitor+(FMP[c_team]!=_nan).astype(&#39;int&#39;)*FMP[c_team] FMP[c_team]=FMP[c_team].replace(to_replace=_nan, value=np.nan) FMP[c_opponent].fillna(_nan, inplace = True) FMP[c_opponent]=( (FMP[c_opponent]==_nan) &amp; (FMP[l]==0) ).astype(&#39;int&#39;)*Rdm_goals_local+( (FMP[c_opponent]==_nan) &amp; (FMP[l]==1) ).astype(&#39;int&#39;)*Rdm_goals_visitor+(FMP[c_opponent]!=_nan).astype(&#39;int&#39;)*FMP[c_opponent] FMP[c_opponent]=FMP[c_opponent].replace(to_replace=_nan, value=np.nan) . . for t in [&#39;home&#39;,&#39;away&#39;]: n=t+&#39;_nans_for_goal&#39; r=t+&#39;_team_mean_goal&#39; FMP=FMP.drop(columns=[n,r]) . . 10) Rating de los Equipos . El panorama aquí es bastantesimilar a lo que teníamos para los goles. Nuevamente, tenemos el rating de cada equipo (away y home) y sus oponentes, para cada uno de los $10$ partidos. . Para corregir estos valores procedí de la siguiente manera: . Para el &quot;team (away/home)&quot; utilicé la media, siempre que tuviéramos más de 5 partidos | Caso contrario y para los oponentes, generé un rating basandome en la distribución log-norm encontrada en el análisis exploratorio, distinguiendo nuevamente entre locales y visitantes. | . for t in [&#39;home&#39;,&#39;away&#39;]: L=[] for i in range(1,11): l=t+&#39;_team_history_rating_{}&#39;.format(i) L.append(l) m=np.nanmedian(FMP[L],axis=1) n=np.isnan(FMP[L]).sum(axis=1) c=t+&#39;_team_median_rating&#39; FMP[c]=m FMP[c].fillna(_nan, inplace = True) c=t+&#39;_nans_for_rating&#39; FMP[c]=n . . maximo_de_nans=5 for t in [&#39;home&#39;,&#39;away&#39;]: r=t+&#39;_team_median_rating&#39; n=t+&#39;_nans_for_rating&#39; for i in range(1,11): l=t+&#39;_team_history_rating_{}&#39;.format(i) FMP[l].fillna(_nan, inplace = True) FMP[l]=( (FMP[n]&lt;maximo_de_nans) &amp; (FMP[l]==_nan) ).astype(&#39;int&#39;)*FMP[r] + ( (FMP[n]&gt;=maximo_de_nans) | (FMP[l]!=_nan) ).astype(&#39;int&#39;)*FMP[l] FMP[l]=FMP[l].replace(to_replace=_nan, value=np.nan) . . m_home=7.14 std_home=2.68 m_l_home=np.math.log(m_home**2/(np.math.sqrt(m_home**2+std_home*2))) std_l_home=np.math.sqrt(np.math.log(1+((std_home**2)/(m_home**2)))) m_visitor=5.87 std_visitor=2.41 m_l_visitor=np.math.log(m_visitor**2/(np.math.sqrt(m_visitor**2+std_visitor*2))) std_l_visitor=np.math.sqrt(np.math.log(1+((std_visitor**2)/(m_visitor**2)))) lengh=len(FMP) . . for t in [&#39;home&#39;,&#39;away&#39;]: for i in range(1,11): c_team=t+&#39;_team_history_rating_{}&#39;.format(i) c_opponent=t+&#39;_team_history_opponent_rating_{}&#39;.format(i) l=t+&#39;_team_history_is_play_home_{}&#39;.format(i) Rdm_rating_local = pd.Series(np.random.lognormal(m_l_home, std_l_home, lengh),index=FMP.index) Rdm_rating_visitor = pd.Series(np.random.lognormal(m_l_visitor, std_l_visitor, lengh),index=FMP.index) FMP[c_team].fillna(_nan, inplace = True) FMP[c_team]=( (FMP[c_team]==_nan) &amp; (FMP[l]==1) ).astype(&#39;int&#39;)*Rdm_rating_local+( (FMP[c_team]==_nan) &amp; (FMP[l]==0) ).astype(&#39;int&#39;)*Rdm_rating_visitor+(FMP[c_team]!=_nan).astype(&#39;int&#39;)*FMP[c_team] FMP[c_team]=FMP[c_team].replace(to_replace=_nan, value=np.nan) FMP[c_opponent].fillna(_nan, inplace = True) FMP[c_opponent]=( (FMP[c_opponent]==_nan) &amp; (FMP[l]==0) ).astype(&#39;int&#39;)*Rdm_rating_local+( (FMP[c_opponent]==_nan) &amp; (FMP[l]==1) ).astype(&#39;int&#39;)*Rdm_rating_visitor+(FMP[c_opponent]!=_nan).astype(&#39;int&#39;)*FMP[c_opponent] FMP[c_opponent]=FMP[c_opponent].replace(to_replace=_nan, value=np.nan) . . r=&#39;home_team_median_rating&#39; FMP[r]=FMP[r].replace(to_replace=_nan, value=np.nan) Rdm_rating_local = pd.Series(np.random.lognormal(m_l_home, std_l_home, lengh),index=FMP.index) FMP[r].fillna(Rdm_rating_local, inplace = True) r=&#39;away_team_median_rating&#39; FMP[r]=FMP[r].replace(to_replace=_nan, value=np.nan) Rdm_rating_visitor = pd.Series(np.random.lognormal(m_l_visitor, std_l_visitor, lengh),index=FMP.index) FMP[r].fillna(Rdm_rating_visitor, inplace = True) for t in [&#39;home&#39;,&#39;away&#39;]: n=t+&#39;_nans_for_rating&#39; FMP=FMP.drop(columns=[n]) . . Nota: Como consecuencia de este paso, generamos una variable llamada &quot;home_team_median_rating&quot; y &quot;away_team_median_rating&quot; que nos la quedaremos como una feature adicional. . VERIFICACI&#211;N Y GUARDADO DEL DATASET . Una vez terminado el proceso, verificamos el resultado y si efectivamente corregimos todos los valores faltantes. . display(FMP) . id target home_team_name away_team_name match_date league_name league_id is_cup home_team_coach_id away_team_coach_id home_team_history_match_date_1 home_team_history_match_date_2 home_team_history_match_date_3 home_team_history_match_date_4 home_team_history_match_date_5 home_team_history_match_date_6 home_team_history_match_date_7 home_team_history_match_date_8 home_team_history_match_date_9 home_team_history_match_date_10 home_team_history_is_play_home_1 home_team_history_is_play_home_2 home_team_history_is_play_home_3 home_team_history_is_play_home_4 home_team_history_is_play_home_5 home_team_history_is_play_home_6 home_team_history_is_play_home_7 home_team_history_is_play_home_8 home_team_history_is_play_home_9 home_team_history_is_play_home_10 home_team_history_is_cup_1 home_team_history_is_cup_2 home_team_history_is_cup_3 home_team_history_is_cup_4 home_team_history_is_cup_5 home_team_history_is_cup_6 home_team_history_is_cup_7 home_team_history_is_cup_8 home_team_history_is_cup_9 home_team_history_is_cup_10 home_team_history_goal_1 home_team_history_goal_2 home_team_history_goal_3 home_team_history_goal_4 home_team_history_goal_5 home_team_history_goal_6 home_team_history_goal_7 home_team_history_goal_8 home_team_history_goal_9 home_team_history_goal_10 home_team_history_opponent_goal_1 home_team_history_opponent_goal_2 home_team_history_opponent_goal_3 home_team_history_opponent_goal_4 home_team_history_opponent_goal_5 home_team_history_opponent_goal_6 home_team_history_opponent_goal_7 home_team_history_opponent_goal_8 home_team_history_opponent_goal_9 home_team_history_opponent_goal_10 home_team_history_rating_1 home_team_history_rating_2 home_team_history_rating_3 home_team_history_rating_4 home_team_history_rating_5 home_team_history_rating_6 home_team_history_rating_7 home_team_history_rating_8 home_team_history_rating_9 home_team_history_rating_10 home_team_history_opponent_rating_1 home_team_history_opponent_rating_2 home_team_history_opponent_rating_3 home_team_history_opponent_rating_4 home_team_history_opponent_rating_5 home_team_history_opponent_rating_6 home_team_history_opponent_rating_7 home_team_history_opponent_rating_8 home_team_history_opponent_rating_9 home_team_history_opponent_rating_10 home_team_history_coach_1 home_team_history_coach_2 home_team_history_coach_3 home_team_history_coach_4 home_team_history_coach_5 home_team_history_coach_6 home_team_history_coach_7 home_team_history_coach_8 home_team_history_coach_9 home_team_history_coach_10 home_team_history_league_id_1 home_team_history_league_id_2 home_team_history_league_id_3 home_team_history_league_id_4 home_team_history_league_id_5 home_team_history_league_id_6 home_team_history_league_id_7 home_team_history_league_id_8 home_team_history_league_id_9 home_team_history_league_id_10 away_team_history_match_date_1 away_team_history_match_date_2 away_team_history_match_date_3 away_team_history_match_date_4 away_team_history_match_date_5 away_team_history_match_date_6 away_team_history_match_date_7 away_team_history_match_date_8 away_team_history_match_date_9 away_team_history_match_date_10 away_team_history_is_play_home_1 away_team_history_is_play_home_2 away_team_history_is_play_home_3 away_team_history_is_play_home_4 away_team_history_is_play_home_5 away_team_history_is_play_home_6 away_team_history_is_play_home_7 away_team_history_is_play_home_8 away_team_history_is_play_home_9 away_team_history_is_play_home_10 away_team_history_is_cup_1 away_team_history_is_cup_2 away_team_history_is_cup_3 away_team_history_is_cup_4 away_team_history_is_cup_5 away_team_history_is_cup_6 away_team_history_is_cup_7 away_team_history_is_cup_8 away_team_history_is_cup_9 away_team_history_is_cup_10 away_team_history_goal_1 away_team_history_goal_2 away_team_history_goal_3 away_team_history_goal_4 away_team_history_goal_5 away_team_history_goal_6 away_team_history_goal_7 away_team_history_goal_8 away_team_history_goal_9 away_team_history_goal_10 away_team_history_opponent_goal_1 away_team_history_opponent_goal_2 away_team_history_opponent_goal_3 away_team_history_opponent_goal_4 away_team_history_opponent_goal_5 away_team_history_opponent_goal_6 away_team_history_opponent_goal_7 away_team_history_opponent_goal_8 away_team_history_opponent_goal_9 away_team_history_opponent_goal_10 away_team_history_rating_1 away_team_history_rating_2 away_team_history_rating_3 away_team_history_rating_4 away_team_history_rating_5 away_team_history_rating_6 away_team_history_rating_7 away_team_history_rating_8 away_team_history_rating_9 away_team_history_rating_10 away_team_history_opponent_rating_1 away_team_history_opponent_rating_2 away_team_history_opponent_rating_3 away_team_history_opponent_rating_4 away_team_history_opponent_rating_5 away_team_history_opponent_rating_6 away_team_history_opponent_rating_7 away_team_history_opponent_rating_8 away_team_history_opponent_rating_9 away_team_history_opponent_rating_10 away_team_history_coach_1 away_team_history_coach_2 away_team_history_coach_3 away_team_history_coach_4 away_team_history_coach_5 away_team_history_coach_6 away_team_history_coach_7 away_team_history_coach_8 away_team_history_coach_9 away_team_history_coach_10 away_team_history_league_id_1 away_team_history_league_id_2 away_team_history_league_id_3 away_team_history_league_id_4 away_team_history_league_id_5 away_team_history_league_id_6 away_team_history_league_id_7 away_team_history_league_id_8 away_team_history_league_id_9 away_team_history_league_id_10 home_team_median_rating away_team_median_rating . 0 11906497 | away | Newell&#39;s Old Boys | River Plate | 2019-12-01 00:45:00 | Superliga | 636.0 | 0 | 468196.0 | 468200.0 | 2019-11-26 00:10:00 | 2019-11-10 18:30:00 | 2019-11-03 18:30:00 | 2019-10-29 22:10:00 | 2019-10-19 20:45:00 | 2019-10-04 22:00:00 | 2019-09-28 23:00:00 | 2019-09-22 14:00:00 | 2019-09-15 18:30:00 | 2019-09-01 16:15:00 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 2.0 | 0.0 | 0.0 | 3.0 | 0.0 | 1.0 | 2.0 | 1.0 | 4.0 | 1.0 | 0.0 | 1.0 | 4.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 3.856860 | 5.724370 | 4.335091 | 6.678853 | 5.478300 | 5.858534 | 3.641945 | 7.957243 | 4.326252 | 7.106259 | 5.199840 | 3.694033 | 5.131156 | 3.193161 | 4.080169 | 3.898775 | 7.672377 | 2.864026 | 4.814193 | 3.454310 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 636 | 636 | 636 | 636 | 636 | 636 | 636 | 636 | 636 | 636 | 2019-11-23 20:00:00 | 2019-11-15 00:10:00 | 2019-11-10 14:00:00 | 2019-11-02 23:00:00 | 2019-10-30 00:20:00 | 2019-10-23 00:30:00 | 2019-10-18 22:00:00 | 2019-10-11 23:30:00 | 2019-10-06 20:45:00 | 2019-10-02 00:30:00 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 2.0 | 0.0 | 2.0 | 2.0 | 0.0 | 3.0 | 2.0 | 2.0 | 2.0 | 2.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 3.0 | 0.0 | 0.0 | 0.0 | 4.598000 | 11.825567 | 9.374867 | 8.265660 | 10.769583 | 4.680350 | 6.429871 | 12.773025 | 10.970814 | 5.924407 | 5.253225 | 2.819962 | 3.114820 | 3.283603 | 2.574183 | 5.887331 | 4.570225 | 2.843268 | 3.057739 | 4.684664 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 1122 | 642 | 636 | 636 | 636 | 1122 | 636 | 642 | 636 | 1122 | 5.601335 | 8.820263 | . 1 11984383 | home | Real Estelí | Deportivo Las Sabanas | 2019-12-01 01:00:00 | Primera Division | 752.0 | 0 | 516788.0 | 22169161.0 | 2019-11-27 21:00:00 | 2019-11-24 01:00:00 | 2019-11-10 01:00:00 | 2019-11-02 21:30:00 | 2019-10-27 01:00:00 | 2019-10-24 01:00:00 | 2019-10-21 00:00:00 | 2019-10-18 01:00:00 | 2019-10-06 01:00:00 | 2019-09-29 21:00:00 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 4.0 | 0.0 | 0.0 | 2.0 | 0.0 | 2.0 | 1.0 | 0.0 | 2.0 | 2.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 2.0 | 0.0 | 13.668800 | 5.967622 | 9.130611 | 5.732981 | 7.804064 | 6.743764 | 6.237028 | 12.616250 | 8.334650 | 8.172615 | 3.671610 | 6.121228 | 3.320450 | 5.766069 | 4.118071 | 4.223164 | 5.260700 | 3.102806 | 5.627457 | 4.256165 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 752 | 752 | 752 | 752 | 752 | 752 | 752 | 752 | 752 | 752 | 2019-11-27 21:00:00 | 2019-11-23 23:00:00 | 2019-11-09 22:00:00 | 2019-11-02 21:00:00 | 2019-10-28 00:00:00 | 2019-10-21 00:00:00 | 2019-10-16 21:00:00 | 2019-09-29 01:00:00 | 2019-09-20 21:30:00 | 2019-09-15 01:00:00 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 4.0 | 0.0 | 2.0 | 4.0 | 1.0 | 1.0 | 0.0 | 4.0 | 0.0 | 1.0 | 1.0 | 6.000588 | 4.692008 | 4.461575 | 5.301500 | 8.290211 | 5.260700 | 4.928100 | 5.708921 | 4.125842 | 4.103719 | 6.881762 | 6.840558 | 8.700363 | 5.156150 | 3.864878 | 6.237028 | 6.871904 | 5.716200 | 7.960465 | 9.994456 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 752 | 752 | 752 | 752 | 752 | 752 | 752 | 752 | 752 | 752 | 7.988340 | 5.094400 | . 2 11983301 | draw | UPNFM | Marathón | 2019-12-01 01:00:00 | Liga Nacional | 734.0 | 0 | 2510608.0 | 456313.0 | 2019-11-28 01:15:00 | 2019-11-21 01:30:00 | 2019-11-03 21:30:00 | 2019-10-27 01:00:00 | 2019-10-20 22:00:00 | 2019-10-17 01:00:00 | 2019-10-05 21:00:00 | 2019-09-29 01:00:00 | 2019-09-22 22:00:00 | 2019-09-19 01:00:00 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 3.0 | 2.0 | 2.0 | 1.0 | 0.0 | 2.0 | 4.0 | 3.0 | 1.0 | 1.0 | 1.0 | 0.0 | 3.0 | 0.0 | 1.0 | 2.0 | 4.0 | 2.0 | 3.0 | 1.0 | 5.736719 | 9.745283 | 5.685920 | 6.975000 | 3.864360 | 7.930120 | 4.650054 | 12.803284 | 5.094975 | 5.961407 | 6.825194 | 4.053167 | 5.293940 | 4.725164 | 7.776850 | 4.167290 | 7.289893 | 3.691168 | 7.223050 | 4.429055 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 734 | 734 | 734 | 734 | 734 | 734 | 734 | 734 | 734 | 734 | 2019-11-21 01:30:00 | 2019-11-10 22:00:00 | 2019-10-26 21:00:00 | 2019-10-20 23:00:00 | 2019-10-16 21:30:00 | 2019-10-12 21:00:00 | 2019-10-05 21:00:00 | 2019-09-28 22:00:00 | 2019-09-22 22:00:00 | 2019-09-18 21:30:00 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 3.0 | 0.0 | 0.0 | 4.0 | 1.0 | 3.0 | 4.0 | 2.0 | 4.0 | 0.0 | 1.0 | 1.0 | 0.0 | 2.0 | 0.0 | 2.0 | 4.0 | 1.0 | 0.0 | 0.0 | 8.379419 | 4.850100 | 8.676865 | 6.987061 | 7.966967 | 7.972809 | 7.289893 | 7.604720 | 6.451019 | 10.021854 | 5.487338 | 7.697712 | 4.186315 | 5.183071 | 6.176583 | 4.054209 | 4.650054 | 5.284983 | 5.299259 | 3.862791 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 734 | 734 | 734 | 734 | 734 | 734 | 734 | 734 | 734 | 734 | 5.849063 | 7.785843 | . 3 11983471 | away | León | Morelia | 2019-12-01 01:00:00 | Liga MX | 743.0 | 0 | 1552508.0 | 465797.0 | 2019-11-28 01:00:00 | 2019-11-23 03:10:00 | 2019-11-10 03:00:00 | 2019-11-04 02:00:00 | 2019-11-01 03:00:00 | 2019-10-27 01:00:00 | 2019-10-20 17:00:00 | 2019-10-05 22:00:00 | 2019-09-28 00:00:00 | 2019-09-25 02:00:00 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 3.0 | 2.0 | 4.0 | 1.0 | 0.0 | 3.0 | 2.0 | 1.0 | 1.0 | 1.0 | 3.0 | 1.0 | 0.0 | 1.0 | 1.0 | 2.0 | 1.0 | 1.0 | 2.0 | 1.0 | 5.998800 | 5.860496 | 8.256900 | 8.342183 | 6.163600 | 8.097475 | 5.796913 | 10.739525 | 7.261250 | 7.982087 | 5.998800 | 6.024042 | 4.508125 | 4.960117 | 5.867100 | 4.351000 | 5.823181 | 2.280050 | 5.544414 | 4.473325 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 743 | 743 | 743 | 743 | 743 | 743 | 743 | 743 | 743 | 743 | 2019-11-28 01:00:00 | 2019-11-23 23:00:00 | 2019-11-09 01:00:00 | 2019-11-04 02:00:00 | 2019-11-01 01:00:00 | 2019-10-26 00:00:00 | 2019-10-19 22:00:00 | 2019-10-05 02:00:00 | 2019-10-02 02:00:00 | 2019-09-26 02:06:00 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 3.0 | 1.0 | 3.0 | 1.0 | 6.0 | 2.0 | 3.0 | 2.0 | 1.0 | 2.0 | 3.0 | 3.0 | 2.0 | 1.0 | 1.0 | 2.0 | 2.0 | 3.0 | 0.0 | 3.0 | 5.998800 | 4.901579 | 8.413533 | 4.960117 | 7.482900 | 5.912175 | 3.986478 | 6.515762 | 4.575759 | 5.434175 | 5.998800 | 6.548433 | 4.576617 | 8.342183 | 4.878850 | 6.208425 | 7.483589 | 5.587387 | 7.301455 | 7.766762 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 743 | 743 | 743 | 743 | 743 | 743 | 743 | 743 | 746 | 743 | 7.621669 | 5.673175 | . 4 11883005 | home | Cobán Imperial | Iztapa | 2019-12-01 01:00:00 | Liga Nacional | 705.0 | 0 | 429958.0 | 426870.0 | 2019-11-27 18:00:00 | 2019-11-24 01:00:00 | 2019-11-10 02:00:00 | 2019-11-03 01:00:00 | 2019-10-27 20:30:00 | 2019-10-24 00:00:00 | 2019-10-20 18:00:00 | 2019-10-06 17:00:00 | 2019-10-02 21:30:00 | 2019-09-29 01:00:00 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 3.0 | 2.0 | 2.0 | 1.0 | 3.0 | 3.0 | 1.0 | 1.0 | 1.0 | 2.0 | 2.0 | 1.0 | 0.0 | 1.0 | 2.0 | 2.0 | 1.0 | 2.0 | 1.0 | 6.295743 | 7.625358 | 5.320906 | 7.425725 | 4.854167 | 10.857700 | 5.756838 | 7.079583 | 5.653375 | 9.926950 | 5.535514 | 4.848225 | 6.279472 | 4.178193 | 7.449917 | 3.002752 | 6.053250 | 4.540000 | 6.165925 | 3.876500 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 705 | 705 | 705 | 705 | 705 | 705 | 705 | 705 | 705 | 705 | 2019-11-27 19:00:00 | 2019-11-24 21:00:00 | 2019-11-10 19:30:00 | 2019-11-02 19:00:00 | 2019-10-26 21:00:00 | 2019-10-23 19:00:00 | 2019-10-20 17:30:00 | 2019-10-05 19:00:00 | 2019-10-02 19:00:00 | 2019-09-29 18:00:00 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 4.0 | 1.0 | 0.0 | 1.0 | 1.0 | 3.0 | 0.0 | 2.0 | 4.0 | 2.0 | 1.0 | 2.0 | 0.0 | 0.0 | 1.0 | 1.0 | 2.0 | 1.0 | 0.0 | 2.0 | 6.349390 | 5.894700 | 6.113000 | 7.766560 | 4.168200 | 7.231370 | 3.632279 | 6.414396 | 7.972750 | 4.290735 | 5.575180 | 5.901842 | 5.751275 | 4.163600 | 8.559950 | 4.059211 | 8.935007 | 5.888077 | 4.413683 | 7.031962 | 426870.0 | 426870.0 | 426870.0 | 426870.0 | 426870.0 | 426870.0 | 426870.0 | 37261558.0 | 37261558.0 | 37261558.0 | 705 | 705 | 705 | 705 | 705 | 705 | 705 | 705 | 705 | 705 | 6.687663 | 6.231195 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 110933 18030016 | draw | Zamora Fútbol Club | Hermanos Colmenares | 2021-04-30 23:00:00 | Primera Division | 800.0 | 0 | 7708122.0 | 37564088.0 | 2021-04-23 23:00:00 | 2021-04-18 23:00:00 | 2020-12-10 21:00:00 | 2020-12-09 00:00:00 | 2020-12-03 21:00:00 | 2020-11-30 00:00:00 | 2020-11-26 21:00:00 | 2020-11-23 01:00:00 | 2020-11-20 21:00:00 | 2020-11-15 21:00:00 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 4.0 | 0.0 | 1.0 | 1.0 | 0.0 | 4.0 | 3.0 | 1.0 | 1.0 | 2.0 | 0.0 | 0.0 | 3.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 3.0 | 0.0 | 8.399605 | 7.089190 | 4.675287 | 6.718459 | 8.415071 | 7.993363 | 4.642833 | 5.924607 | 5.088036 | 5.807075 | 4.085210 | 3.991885 | 5.693388 | 4.217531 | 3.893529 | 3.449633 | 6.642439 | 5.208821 | 4.851727 | 4.834250 | 7708122.0 | 7708122.0 | 232533.0 | 232533.0 | 232533.0 | 232533.0 | 232533.0 | 232533.0 | 232533.0 | 232533.0 | 800 | 800 | 800 | 800 | 800 | 800 | 800 | 800 | 800 | 800 | 2021-04-22 22:15:00 | 2021-04-15 22:00:00 | 2021-02-28 20:00:00 | 2021-02-25 20:00:00 | 2020-12-10 19:00:00 | 2020-12-08 13:00:00 | 2020-12-04 19:30:00 | 2020-11-29 16:00:00 | 2020-11-27 19:30:00 | 2020-11-24 19:30:00 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 4.0 | 1.0 | 2.0 | 2.0 | 0.0 | 2.0 | 1.0 | 1.0 | 2.0 | 2.0 | 2.0 | 2.0 | 2.0 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 3.0 | 1.0 | 5.008125 | 3.272463 | 3.717115 | 5.238575 | 5.311650 | 3.935375 | 5.538133 | 6.713300 | 7.004975 | 7.872750 | 7.239339 | 9.332287 | 7.058742 | 6.961725 | 5.757350 | 7.712525 | 5.875017 | 6.233200 | 5.785250 | 3.224300 | 37564088.0 | 37564088.0 | -1.0 | -1.0 | -1.0 | -1.0 | -1.0 | -1.0 | -1.0 | -1.0 | 800 | 800 | 1101 | 1101 | 803 | 803 | 803 | 803 | 803 | 803 | 6.321533 | 5.275113 | . 110934 18030096 | away | Royal Pari | Oriente Petrolero | 2021-04-30 23:00:00 | Liga De Futbol Prof | 1098.0 | 0 | 465833.0 | 16488543.0 | 2021-04-23 23:30:00 | 2021-04-09 19:00:00 | 2021-04-03 00:00:00 | 2021-03-15 19:00:00 | 2021-03-11 19:00:00 | 2021-03-04 00:30:00 | 2021-02-25 00:30:00 | 2020-12-31 19:00:00 | 2020-12-29 19:00:00 | 2020-12-27 19:00:00 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 3.0 | 3.0 | 4.0 | 8.0 | 1.0 | 1.0 | 3.0 | 1.0 | 1.0 | 2.0 | 2.0 | 0.0 | 2.0 | 0.0 | 1.0 | 4.0 | 0.0 | 2.0 | 1.0 | 6.040300 | 10.020550 | 12.860092 | 11.139392 | 7.818325 | 2.744600 | 4.725100 | 7.664328 | 3.824074 | 14.587612 | 7.571322 | 4.299200 | 4.442021 | 4.668812 | 5.952370 | 9.885500 | 5.943867 | 6.106442 | 16.265222 | 4.490291 | 465833.0 | 465833.0 | 465833.0 | 465833.0 | 465833.0 | 465833.0 | 465833.0 | 15083408.0 | 15083408.0 | 15083408.0 | 1098 | 1098 | 1098 | 1098 | 1098 | 1122 | 1122 | 1098 | 1098 | 1098 | 2021-04-24 20:00:00 | 2021-04-10 21:15:00 | 2021-04-04 19:00:00 | 2021-03-20 22:00:00 | 2021-03-14 21:15:00 | 2020-12-31 19:00:00 | 2020-12-29 19:00:00 | 2020-12-27 19:00:00 | 2020-12-24 16:00:00 | 2020-12-22 21:15:00 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 4.0 | 0.0 | 2.0 | 1.0 | 0.0 | 1.0 | 2.0 | 2.0 | 0.0 | 2.0 | 2.0 | 1.0 | 5.0 | 4.0 | 1.0 | 0.0 | 2.0 | 0.0 | 6.171106 | 5.009241 | 6.848221 | 5.794154 | 3.647533 | 3.127178 | 10.115545 | 10.518444 | 4.145661 | 6.377816 | 7.421600 | 8.467391 | 6.183761 | 6.553486 | 15.376050 | 15.843563 | 4.510164 | 3.885800 | 12.142436 | 8.047688 | 16488543.0 | 16488543.0 | 16488543.0 | 16488543.0 | 16488543.0 | 471810.0 | 471810.0 | 471810.0 | 471810.0 | 471810.0 | 1098 | 1098 | 1098 | 1098 | 1098 | 1098 | 1098 | 1098 | 1098 | 1098 | 7.741326 | 5.982630 | . 110935 17715497 | draw | São Bernardo | Água Santa | 2021-04-30 23:00:00 | Paulista A2 | 1314.0 | 0 | 8416491.0 | 528562.0 | 2021-04-28 23:00:00 | 2021-04-25 01:00:00 | 2021-04-22 23:00:00 | 2021-04-21 01:00:00 | 2021-03-14 18:00:00 | 2021-03-10 18:00:00 | 2021-03-06 18:00:00 | 2021-02-28 18:00:00 | 2020-12-16 22:00:00 | 2020-12-12 18:00:00 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 2.0 | 1.0 | 1.0 | 0.0 | 1.0 | 2.0 | 0.0 | 1.0 | 1.0 | 2.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 2.0 | 3.0 | 1.0 | 6.000775 | 4.526330 | 7.443283 | 4.315928 | 6.756878 | 4.644605 | 7.546083 | 7.061783 | 4.466550 | 5.604375 | 3.981619 | 6.126650 | 3.033975 | 5.529961 | 3.184456 | 5.475955 | 4.388908 | 4.097217 | 6.262675 | 4.821825 | 8416491.0 | 8416491.0 | 8416491.0 | 8416491.0 | 8416491.0 | 8416491.0 | 8416491.0 | 8416491.0 | 883181.0 | 883181.0 | 1314 | 1314 | 1314 | 1314 | 1314 | 1314 | 1314 | 1314 | 1746 | 1746 | 2021-04-28 23:00:00 | 2021-04-24 23:00:00 | 2021-04-22 23:00:00 | 2021-04-21 01:00:00 | 2021-03-14 18:00:00 | 2021-03-10 22:00:00 | 2021-03-06 18:00:00 | 2021-02-27 19:00:00 | 2020-12-09 18:00:00 | 2020-12-06 18:00:00 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 2.0 | 0.0 | 1.0 | 3.0 | 1.0 | 2.0 | 2.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 6.921617 | 8.577671 | 8.155264 | 4.232500 | 8.495162 | 4.670143 | 8.135642 | 6.617900 | 3.881263 | 5.310150 | 3.081836 | 3.070258 | 2.536957 | 5.304985 | 3.004767 | 4.952157 | 3.257969 | 4.472350 | 7.371638 | 6.301017 | 528562.0 | 528562.0 | 528562.0 | 528562.0 | 528562.0 | 528562.0 | 528562.0 | 528562.0 | 896682.0 | 896682.0 | 1314 | 1314 | 1314 | 1314 | 1314 | 1314 | 1314 | 1314 | 1746 | 1746 | 5.802575 | 6.769758 | . 110936 17944153 | away | Everton | La Serena | 2021-05-01 00:00:00 | Primera Division | 663.0 | 0 | 6973085.0 | 471757.0 | 2021-04-24 00:00:00 | 2021-04-18 19:00:00 | 2021-04-12 19:00:00 | 2021-04-02 19:00:00 | 2021-03-27 19:00:00 | 2021-02-14 13:30:00 | 2021-02-11 21:30:00 | 2021-02-06 20:00:00 | 2021-01-19 22:15:00 | 2021-01-14 20:00:00 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 2.0 | 1.0 | 1.0 | 0.0 | 1.0 | 1.0 | 2.0 | 1.0 | 2.0 | 1.0 | 1.0 | 1.0 | 0.0 | 3.0 | 3.0 | 1.0 | 1.0 | 6.067230 | 5.688200 | 4.704490 | 5.210350 | 6.451883 | 6.283628 | 6.234132 | 5.700200 | 3.996717 | 7.312802 | 5.382177 | 5.205100 | 5.619340 | 6.392000 | 4.846800 | 4.756911 | 5.177539 | 5.952450 | 8.246471 | 4.479139 | 6973085.0 | 6973085.0 | 6973085.0 | 6973085.0 | 6973085.0 | 6973085.0 | 6973085.0 | 6973085.0 | 896760.0 | 896760.0 | 663 | 663 | 663 | 663 | 663 | 663 | 663 | 663 | 663 | 663 | 2021-04-24 19:30:00 | 2021-04-17 22:00:00 | 2021-04-11 19:00:00 | 2021-04-04 21:00:00 | 2021-03-30 23:00:00 | 2021-02-14 21:00:00 | 2021-02-10 21:30:00 | 2021-02-05 20:00:00 | 2021-01-24 20:00:00 | 2021-01-18 20:00:00 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 2.0 | 1.0 | 0.0 | 1.0 | 1.0 | 2.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 2.0 | 2.0 | 1.0 | 2.0 | 0.0 | 0.0 | 5.166822 | 4.803368 | 4.574750 | 4.851700 | 5.065750 | 6.052547 | 4.467189 | 4.663733 | 6.091328 | 4.953404 | 5.888744 | 6.347747 | 5.557890 | 4.190300 | 6.666050 | 5.035318 | 6.378186 | 6.726760 | 5.217356 | 7.172523 | 471757.0 | 471757.0 | 471757.0 | 471757.0 | 471757.0 | 471757.0 | 471757.0 | 471757.0 | 471757.0 | 470515.0 | 663 | 663 | 663 | 663 | 663 | 663 | 663 | 663 | 663 | 663 | 5.883715 | 4.902552 | . 110937 17786297 | home | Colón | Arsenal de Sarandi | 2021-05-01 00:00:00 | Superliga | 636.0 | 0 | 213970.0 | 470859.0 | 2021-04-25 18:45:00 | 2021-04-19 00:00:00 | 2021-04-12 00:00:00 | 2021-04-04 19:15:00 | 2021-03-27 17:00:00 | 2021-03-21 19:15:00 | 2021-03-17 20:15:00 | 2021-03-14 00:30:00 | 2021-03-06 22:20:00 | 2021-02-27 20:10:00 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 2.0 | 2.0 | 0.0 | 3.0 | 0.0 | 0.0 | 2.0 | 2.0 | 3.0 | 2.0 | 2.0 | 3.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 5.673139 | 7.972250 | 4.034900 | 7.055806 | 6.790717 | 6.033171 | 6.282770 | 4.652362 | 7.283950 | 4.716803 | 5.496961 | 4.248540 | 7.558162 | 4.943567 | 5.195333 | 4.771779 | 4.497200 | 6.008047 | 5.281133 | 6.420675 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 636 | 636 | 636 | 636 | 636 | 636 | 642 | 636 | 636 | 636 | 2021-04-28 00:30:00 | 2021-04-25 16:30:00 | 2021-04-22 22:15:00 | 2021-04-18 16:30:00 | 2021-04-11 14:00:00 | 2021-04-04 00:00:00 | 2021-03-27 21:30:00 | 2021-03-22 22:00:00 | 2021-03-15 22:15:00 | 2021-03-07 20:10:00 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 2.0 | 3.0 | 0.0 | 2.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 2.0 | 1.0 | 2.0 | 0.0 | 3.0 | 0.0 | 2.0 | 5.0 | 5.580400 | 4.627278 | 4.094762 | 4.880070 | 5.694806 | 4.488244 | 4.937108 | 6.074100 | 4.634711 | 4.933917 | 5.332983 | 6.780128 | 8.455300 | 6.430750 | 5.676700 | 9.973094 | 6.216542 | 5.783800 | 6.112818 | 5.445117 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 1116 | 636 | 1116 | 636 | 636 | 636 | 636 | 636 | 636 | 636 | 6.157970 | 4.906993 | . 102912 rows × 192 columns . . fffmp.check_NaNs(FMP) . No hay missing values en el dataset :) . Y, finalmente, procedemos a guardar el dataset resultante para poder cargarlo en otros notebooks. . data_clean=&#39;FMP_clean&#39; FMP.to_pickle(data_clean) .",
            "url": "https://faegru.github.io/FMP_UB_final_project_2022/2022/06/28/2_Correccion_del_dataset.html",
            "relUrl": "/2022/06/28/2_Correccion_del_dataset.html",
            "date": " • Jun 28, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "1) EXPLORACIÓN DE LOS DATOS ORIGINALES",
            "content": "La mayoria de las funciones utilizadas en este projecto están en el modulo: . import Functions_for_FMP as fffmp . CARGA DE DATOS ORIGINALES . Los datos fueron tomados de un desafío Kaggle: Football match probability prediction y pertenecen a Octosport and Sportmonks. . La estructura que siguen es la siguiente: . . FMP = pd.read_csv(&#39;Dataset/train.csv&#39;,index_col=False) . display(FMP) . id target home_team_name away_team_name match_date league_name league_id is_cup home_team_coach_id away_team_coach_id home_team_history_match_date_1 home_team_history_match_date_2 home_team_history_match_date_3 home_team_history_match_date_4 home_team_history_match_date_5 home_team_history_match_date_6 home_team_history_match_date_7 home_team_history_match_date_8 home_team_history_match_date_9 home_team_history_match_date_10 home_team_history_is_play_home_1 home_team_history_is_play_home_2 home_team_history_is_play_home_3 home_team_history_is_play_home_4 home_team_history_is_play_home_5 home_team_history_is_play_home_6 home_team_history_is_play_home_7 home_team_history_is_play_home_8 home_team_history_is_play_home_9 home_team_history_is_play_home_10 home_team_history_is_cup_1 home_team_history_is_cup_2 home_team_history_is_cup_3 home_team_history_is_cup_4 home_team_history_is_cup_5 home_team_history_is_cup_6 home_team_history_is_cup_7 home_team_history_is_cup_8 home_team_history_is_cup_9 home_team_history_is_cup_10 home_team_history_goal_1 home_team_history_goal_2 home_team_history_goal_3 home_team_history_goal_4 home_team_history_goal_5 home_team_history_goal_6 home_team_history_goal_7 home_team_history_goal_8 home_team_history_goal_9 home_team_history_goal_10 home_team_history_opponent_goal_1 home_team_history_opponent_goal_2 home_team_history_opponent_goal_3 home_team_history_opponent_goal_4 home_team_history_opponent_goal_5 home_team_history_opponent_goal_6 home_team_history_opponent_goal_7 home_team_history_opponent_goal_8 home_team_history_opponent_goal_9 home_team_history_opponent_goal_10 home_team_history_rating_1 home_team_history_rating_2 home_team_history_rating_3 home_team_history_rating_4 home_team_history_rating_5 home_team_history_rating_6 home_team_history_rating_7 home_team_history_rating_8 home_team_history_rating_9 home_team_history_rating_10 home_team_history_opponent_rating_1 home_team_history_opponent_rating_2 home_team_history_opponent_rating_3 home_team_history_opponent_rating_4 home_team_history_opponent_rating_5 home_team_history_opponent_rating_6 home_team_history_opponent_rating_7 home_team_history_opponent_rating_8 home_team_history_opponent_rating_9 home_team_history_opponent_rating_10 home_team_history_coach_1 home_team_history_coach_2 home_team_history_coach_3 home_team_history_coach_4 home_team_history_coach_5 home_team_history_coach_6 home_team_history_coach_7 home_team_history_coach_8 home_team_history_coach_9 home_team_history_coach_10 home_team_history_league_id_1 home_team_history_league_id_2 home_team_history_league_id_3 home_team_history_league_id_4 home_team_history_league_id_5 home_team_history_league_id_6 home_team_history_league_id_7 home_team_history_league_id_8 home_team_history_league_id_9 home_team_history_league_id_10 away_team_history_match_date_1 away_team_history_match_date_2 away_team_history_match_date_3 away_team_history_match_date_4 away_team_history_match_date_5 away_team_history_match_date_6 away_team_history_match_date_7 away_team_history_match_date_8 away_team_history_match_date_9 away_team_history_match_date_10 away_team_history_is_play_home_1 away_team_history_is_play_home_2 away_team_history_is_play_home_3 away_team_history_is_play_home_4 away_team_history_is_play_home_5 away_team_history_is_play_home_6 away_team_history_is_play_home_7 away_team_history_is_play_home_8 away_team_history_is_play_home_9 away_team_history_is_play_home_10 away_team_history_is_cup_1 away_team_history_is_cup_2 away_team_history_is_cup_3 away_team_history_is_cup_4 away_team_history_is_cup_5 away_team_history_is_cup_6 away_team_history_is_cup_7 away_team_history_is_cup_8 away_team_history_is_cup_9 away_team_history_is_cup_10 away_team_history_goal_1 away_team_history_goal_2 away_team_history_goal_3 away_team_history_goal_4 away_team_history_goal_5 away_team_history_goal_6 away_team_history_goal_7 away_team_history_goal_8 away_team_history_goal_9 away_team_history_goal_10 away_team_history_opponent_goal_1 away_team_history_opponent_goal_2 away_team_history_opponent_goal_3 away_team_history_opponent_goal_4 away_team_history_opponent_goal_5 away_team_history_opponent_goal_6 away_team_history_opponent_goal_7 away_team_history_opponent_goal_8 away_team_history_opponent_goal_9 away_team_history_opponent_goal_10 away_team_history_rating_1 away_team_history_rating_2 away_team_history_rating_3 away_team_history_rating_4 away_team_history_rating_5 away_team_history_rating_6 away_team_history_rating_7 away_team_history_rating_8 away_team_history_rating_9 away_team_history_rating_10 away_team_history_opponent_rating_1 away_team_history_opponent_rating_2 away_team_history_opponent_rating_3 away_team_history_opponent_rating_4 away_team_history_opponent_rating_5 away_team_history_opponent_rating_6 away_team_history_opponent_rating_7 away_team_history_opponent_rating_8 away_team_history_opponent_rating_9 away_team_history_opponent_rating_10 away_team_history_coach_1 away_team_history_coach_2 away_team_history_coach_3 away_team_history_coach_4 away_team_history_coach_5 away_team_history_coach_6 away_team_history_coach_7 away_team_history_coach_8 away_team_history_coach_9 away_team_history_coach_10 away_team_history_league_id_1 away_team_history_league_id_2 away_team_history_league_id_3 away_team_history_league_id_4 away_team_history_league_id_5 away_team_history_league_id_6 away_team_history_league_id_7 away_team_history_league_id_8 away_team_history_league_id_9 away_team_history_league_id_10 . 0 11906497 | away | Newell&#39;s Old Boys | River Plate | 2019-12-01 00:45:00 | Superliga | 636 | False | 468196.0 | 468200.0 | 2019-11-26 00:10:00 | 2019-11-10 18:30:00 | 2019-11-03 18:30:00 | 2019-10-29 22:10:00 | 2019-10-19 20:45:00 | 2019-10-04 22:00:00 | 2019-09-28 23:00:00 | 2019-09-22 14:00:00 | 2019-09-15 18:30:00 | 2019-09-01 16:15:00 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 2.0 | 0.0 | 0.0 | 3.0 | 0.0 | 1.0 | 2.0 | 1.0 | 4.0 | 1.0 | 0.0 | 1.0 | 4.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 3.856860 | 5.724370 | 4.335091 | 6.678853 | 5.478300 | 5.858534 | 3.641945 | 7.957243 | 4.326252 | 7.106259 | 5.199840 | 3.694033 | 5.131156 | 3.193161 | 4.080169 | 3.898775 | 7.672377 | 2.864026 | 4.814193 | 3.454310 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 468196.0 | 636.0 | 636.0 | 636.0 | 636.0 | 636.0 | 636.0 | 636.0 | 636.0 | 636.0 | 636.0 | 2019-11-23 20:00:00 | 2019-11-15 00:10:00 | 2019-11-10 14:00:00 | 2019-11-02 23:00:00 | 2019-10-30 00:20:00 | 2019-10-23 00:30:00 | 2019-10-18 22:00:00 | 2019-10-11 23:30:00 | 2019-10-06 20:45:00 | 2019-10-02 00:30:00 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 2.0 | 0.0 | 2.0 | 2.0 | 0.0 | 3.0 | 2.0 | 2.0 | 2.0 | 2.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 3.0 | 0.0 | 0.0 | 0.0 | 4.598000 | 11.825567 | 9.374867 | 8.265660 | 10.769583 | 4.680350 | 6.429871 | 12.773025 | 10.970814 | 5.924407 | 5.253225 | 2.819962 | 3.114820 | 3.283603 | 2.574183 | 5.887331 | 4.570225 | 2.843268 | 3.057739 | 4.684664 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 468200.0 | 1122.0 | 642.0 | 636.0 | 636.0 | 636.0 | 1122.0 | 636.0 | 642.0 | 636.0 | 1122.0 | . 1 11984383 | home | Real Estelí | Deportivo Las Sabanas | 2019-12-01 01:00:00 | Primera Division | 752 | False | 516788.0 | 22169161.0 | 2019-11-27 21:00:00 | 2019-11-24 01:00:00 | 2019-11-10 01:00:00 | 2019-11-02 21:30:00 | 2019-10-27 01:00:00 | 2019-10-24 01:00:00 | 2019-10-21 00:00:00 | 2019-10-18 01:00:00 | 2019-10-06 01:00:00 | 2019-09-29 21:00:00 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 4.0 | 0.0 | 0.0 | 2.0 | 0.0 | 2.0 | 1.0 | 0.0 | 2.0 | 2.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 2.0 | 0.0 | 13.668800 | 5.967622 | 9.130611 | 5.732981 | 7.804064 | 6.743764 | 6.237028 | 12.616250 | 8.334650 | 8.172615 | 3.671610 | 6.121228 | 3.320450 | 5.766069 | 4.118071 | 4.223164 | 5.260700 | 3.102806 | 5.627457 | 4.256165 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 516788.0 | 752.0 | 752.0 | 752.0 | 752.0 | 752.0 | 752.0 | 752.0 | 752.0 | 752.0 | 752.0 | 2019-11-27 21:00:00 | 2019-11-23 23:00:00 | 2019-11-09 22:00:00 | 2019-11-02 21:00:00 | 2019-10-28 00:00:00 | 2019-10-21 00:00:00 | 2019-10-16 21:00:00 | 2019-09-29 01:00:00 | 2019-09-20 21:30:00 | 2019-09-15 01:00:00 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 4.0 | 0.0 | 2.0 | 4.0 | 1.0 | 1.0 | 0.0 | 4.0 | 0.0 | 1.0 | 1.0 | 6.000588 | 4.692008 | 4.461575 | 5.301500 | 8.290211 | 5.260700 | 4.928100 | 5.708921 | 4.125842 | 4.103719 | 6.881762 | 6.840558 | 8.700363 | 5.156150 | 3.864878 | 6.237028 | 6.871904 | 5.716200 | 7.960465 | 9.994456 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 22169161.0 | 752.0 | 752.0 | 752.0 | 752.0 | 752.0 | 752.0 | 752.0 | 752.0 | 752.0 | 752.0 | . 2 11983301 | draw | UPNFM | Marathón | 2019-12-01 01:00:00 | Liga Nacional | 734 | False | 2510608.0 | 456313.0 | 2019-11-28 01:15:00 | 2019-11-21 01:30:00 | 2019-11-03 21:30:00 | 2019-10-27 01:00:00 | 2019-10-20 22:00:00 | 2019-10-17 01:00:00 | 2019-10-05 21:00:00 | 2019-09-29 01:00:00 | 2019-09-22 22:00:00 | 2019-09-19 01:00:00 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 3.0 | 2.0 | 2.0 | 1.0 | 0.0 | 2.0 | 4.0 | 3.0 | 1.0 | 1.0 | 1.0 | 0.0 | 3.0 | 0.0 | 1.0 | 2.0 | 4.0 | 2.0 | 3.0 | 1.0 | 5.736719 | 9.745283 | 5.685920 | 6.975000 | 3.864360 | 7.930120 | 4.650054 | 12.803284 | 5.094975 | 5.961407 | 6.825194 | 4.053167 | 5.293940 | 4.725164 | 7.776850 | 4.167290 | 7.289893 | 3.691168 | 7.223050 | 4.429055 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 2510608.0 | 734.0 | 734.0 | 734.0 | 734.0 | 734.0 | 734.0 | 734.0 | 734.0 | 734.0 | 734.0 | 2019-11-21 01:30:00 | 2019-11-10 22:00:00 | 2019-10-26 21:00:00 | 2019-10-20 23:00:00 | 2019-10-16 21:30:00 | 2019-10-12 21:00:00 | 2019-10-05 21:00:00 | 2019-09-28 22:00:00 | 2019-09-22 22:00:00 | 2019-09-18 21:30:00 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 3.0 | 0.0 | 0.0 | 4.0 | 1.0 | 3.0 | 4.0 | 2.0 | 4.0 | 0.0 | 1.0 | 1.0 | 0.0 | 2.0 | 0.0 | 2.0 | 4.0 | 1.0 | 0.0 | 0.0 | 8.379419 | 4.850100 | 8.676865 | 6.987061 | 7.966967 | 7.972809 | 7.289893 | 7.604720 | 6.451019 | 10.021854 | 5.487338 | 7.697712 | 4.186315 | 5.183071 | 6.176583 | 4.054209 | 4.650054 | 5.284983 | 5.299259 | 3.862791 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 456313.0 | 734.0 | 734.0 | 734.0 | 734.0 | 734.0 | 734.0 | 734.0 | 734.0 | 734.0 | 734.0 | . 3 11983471 | away | León | Morelia | 2019-12-01 01:00:00 | Liga MX | 743 | False | 1552508.0 | 465797.0 | 2019-11-28 01:00:00 | 2019-11-23 03:10:00 | 2019-11-10 03:00:00 | 2019-11-04 02:00:00 | 2019-11-01 03:00:00 | 2019-10-27 01:00:00 | 2019-10-20 17:00:00 | 2019-10-05 22:00:00 | 2019-09-28 00:00:00 | 2019-09-25 02:00:00 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 3.0 | 2.0 | 4.0 | 1.0 | 0.0 | 3.0 | 2.0 | 1.0 | 1.0 | 1.0 | 3.0 | 1.0 | 0.0 | 1.0 | 1.0 | 2.0 | 1.0 | 1.0 | 2.0 | 1.0 | 5.998800 | 5.860496 | 8.256900 | 8.342183 | 6.163600 | 8.097475 | 5.796913 | 10.739525 | 7.261250 | 7.982087 | 5.998800 | 6.024042 | 4.508125 | 4.960117 | 5.867100 | 4.351000 | 5.823181 | 2.280050 | 5.544414 | 4.473325 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 1552508.0 | 743.0 | 743.0 | 743.0 | 743.0 | 743.0 | 743.0 | 743.0 | 743.0 | 743.0 | 743.0 | 2019-11-28 01:00:00 | 2019-11-23 23:00:00 | 2019-11-09 01:00:00 | 2019-11-04 02:00:00 | 2019-11-01 01:00:00 | 2019-10-26 00:00:00 | 2019-10-19 22:00:00 | 2019-10-05 02:00:00 | 2019-10-02 02:00:00 | 2019-09-26 02:06:00 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 3.0 | 1.0 | 3.0 | 1.0 | 6.0 | 2.0 | 3.0 | 2.0 | 1.0 | 2.0 | 3.0 | 3.0 | 2.0 | 1.0 | 1.0 | 2.0 | 2.0 | 3.0 | 0.0 | 3.0 | 5.998800 | 4.901579 | 8.413533 | 4.960117 | 7.482900 | 5.912175 | 3.986478 | 6.515762 | 4.575759 | 5.434175 | 5.998800 | 6.548433 | 4.576617 | 8.342183 | 4.878850 | 6.208425 | 7.483589 | 5.587387 | 7.301455 | 7.766762 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 465797.0 | 743.0 | 743.0 | 743.0 | 743.0 | 743.0 | 743.0 | 743.0 | 743.0 | 746.0 | 743.0 | . 4 11883005 | home | Cobán Imperial | Iztapa | 2019-12-01 01:00:00 | Liga Nacional | 705 | False | 429958.0 | 426870.0 | 2019-11-27 18:00:00 | 2019-11-24 01:00:00 | 2019-11-10 02:00:00 | 2019-11-03 01:00:00 | 2019-10-27 20:30:00 | 2019-10-24 00:00:00 | 2019-10-20 18:00:00 | 2019-10-06 17:00:00 | 2019-10-02 21:30:00 | 2019-09-29 01:00:00 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 3.0 | 2.0 | 2.0 | 1.0 | 3.0 | 3.0 | 1.0 | 1.0 | 1.0 | 2.0 | 2.0 | 1.0 | 0.0 | 1.0 | 2.0 | 2.0 | 1.0 | 2.0 | 1.0 | 6.295743 | 7.625358 | 5.320906 | 7.425725 | 4.854167 | 10.857700 | 5.756838 | 7.079583 | 5.653375 | 9.926950 | 5.535514 | 4.848225 | 6.279472 | 4.178193 | 7.449917 | 3.002752 | 6.053250 | 4.540000 | 6.165925 | 3.876500 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 429958.0 | 705.0 | 705.0 | 705.0 | 705.0 | 705.0 | 705.0 | 705.0 | 705.0 | 705.0 | 705.0 | 2019-11-27 19:00:00 | 2019-11-24 21:00:00 | 2019-11-10 19:30:00 | 2019-11-02 19:00:00 | 2019-10-26 21:00:00 | 2019-10-23 19:00:00 | 2019-10-20 17:30:00 | 2019-10-05 19:00:00 | 2019-10-02 19:00:00 | 2019-09-29 18:00:00 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 4.0 | 1.0 | 0.0 | 1.0 | 1.0 | 3.0 | 0.0 | 2.0 | 4.0 | 2.0 | 1.0 | 2.0 | 0.0 | 0.0 | 1.0 | 1.0 | 2.0 | 1.0 | 0.0 | 2.0 | 6.349390 | 5.894700 | 6.113000 | 7.766560 | 4.168200 | 7.231370 | 3.632279 | 6.414396 | 7.972750 | 4.290735 | 5.575180 | 5.901842 | 5.751275 | 4.163600 | 8.559950 | 4.059211 | 8.935007 | 5.888077 | 4.413683 | 7.031962 | 426870.0 | 426870.0 | 426870.0 | 426870.0 | 426870.0 | 426870.0 | 426870.0 | 37261558.0 | 37261558.0 | 37261558.0 | 705.0 | 705.0 | 705.0 | 705.0 | 705.0 | 705.0 | 705.0 | 705.0 | 705.0 | 705.0 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 110933 18030016 | draw | Zamora Fútbol Club | Hermanos Colmenares | 2021-04-30 23:00:00 | Primera Division | 800 | False | 7708122.0 | 37564088.0 | 2021-04-23 23:00:00 | 2021-04-18 23:00:00 | 2020-12-10 21:00:00 | 2020-12-09 00:00:00 | 2020-12-03 21:00:00 | 2020-11-30 00:00:00 | 2020-11-26 21:00:00 | 2020-11-23 01:00:00 | 2020-11-20 21:00:00 | 2020-11-15 21:00:00 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 4.0 | 0.0 | 1.0 | 1.0 | 0.0 | 4.0 | 3.0 | 1.0 | 1.0 | 2.0 | 0.0 | 0.0 | 3.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 3.0 | 0.0 | 8.399605 | 7.089190 | 4.675287 | 6.718459 | 8.415071 | 7.993363 | 4.642833 | 5.924607 | 5.088036 | 5.807075 | 4.085210 | 3.991885 | 5.693388 | 4.217531 | 3.893529 | 3.449633 | 6.642439 | 5.208821 | 4.851727 | 4.834250 | 7708122.0 | 7708122.0 | 232533.0 | 232533.0 | 232533.0 | 232533.0 | 232533.0 | 232533.0 | 232533.0 | 232533.0 | 800.0 | 800.0 | 800.0 | 800.0 | 800.0 | 800.0 | 800.0 | 800.0 | 800.0 | 800.0 | 2021-04-22 22:15:00 | 2021-04-15 22:00:00 | 2021-02-28 20:00:00 | 2021-02-25 20:00:00 | 2020-12-10 19:00:00 | 2020-12-08 13:00:00 | 2020-12-04 19:30:00 | 2020-11-29 16:00:00 | 2020-11-27 19:30:00 | 2020-11-24 19:30:00 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 4.0 | 1.0 | 2.0 | 2.0 | 0.0 | 2.0 | 1.0 | 1.0 | 2.0 | 2.0 | 2.0 | 2.0 | 2.0 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 3.0 | 1.0 | 5.008125 | 3.272463 | 3.717115 | 5.238575 | 5.311650 | 3.935375 | 5.538133 | 6.713300 | 7.004975 | 7.872750 | 7.239339 | 9.332287 | 7.058742 | 6.961725 | 5.757350 | 7.712525 | 5.875017 | 6.233200 | 5.785250 | 3.224300 | 37564088.0 | 37564088.0 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | 800.0 | 800.0 | 1101.0 | 1101.0 | 803.0 | 803.0 | 803.0 | 803.0 | 803.0 | 803.0 | . 110934 18030096 | away | Royal Pari | Oriente Petrolero | 2021-04-30 23:00:00 | Liga De Futbol Prof | 1098 | False | 465833.0 | 16488543.0 | 2021-04-23 23:30:00 | 2021-04-09 19:00:00 | 2021-04-03 00:00:00 | 2021-03-15 19:00:00 | 2021-03-11 19:00:00 | 2021-03-04 00:30:00 | 2021-02-25 00:30:00 | 2020-12-31 19:00:00 | 2020-12-29 19:00:00 | 2020-12-27 19:00:00 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 3.0 | 3.0 | 4.0 | 8.0 | 1.0 | 1.0 | 3.0 | 1.0 | 1.0 | 2.0 | 2.0 | 0.0 | 2.0 | 0.0 | 1.0 | 4.0 | 0.0 | 2.0 | 1.0 | 6.040300 | 10.020550 | 12.860092 | 11.139392 | 7.818325 | 2.744600 | 4.725100 | 7.664328 | 3.824074 | 14.587612 | 7.571322 | 4.299200 | 4.442021 | 4.668812 | 5.952370 | 9.885500 | 5.943867 | 6.106442 | 16.265222 | 4.490291 | 465833.0 | 465833.0 | 465833.0 | 465833.0 | 465833.0 | 465833.0 | 465833.0 | 15083408.0 | 15083408.0 | 15083408.0 | 1098.0 | 1098.0 | 1098.0 | 1098.0 | 1098.0 | 1122.0 | 1122.0 | 1098.0 | 1098.0 | 1098.0 | 2021-04-24 20:00:00 | 2021-04-10 21:15:00 | 2021-04-04 19:00:00 | 2021-03-20 22:00:00 | 2021-03-14 21:15:00 | 2020-12-31 19:00:00 | 2020-12-29 19:00:00 | 2020-12-27 19:00:00 | 2020-12-24 16:00:00 | 2020-12-22 21:15:00 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 4.0 | 0.0 | 2.0 | 1.0 | 0.0 | 1.0 | 2.0 | 2.0 | 0.0 | 2.0 | 2.0 | 1.0 | 5.0 | 4.0 | 1.0 | 0.0 | 2.0 | 0.0 | 6.171106 | 5.009241 | 6.848221 | 5.794154 | 3.647533 | 3.127178 | 10.115545 | 10.518444 | 4.145661 | 6.377816 | 7.421600 | 8.467391 | 6.183761 | 6.553486 | 15.376050 | 15.843563 | 4.510164 | 3.885800 | 12.142436 | 8.047688 | 16488543.0 | 16488543.0 | 16488543.0 | 16488543.0 | 16488543.0 | 471810.0 | 471810.0 | 471810.0 | 471810.0 | 471810.0 | 1098.0 | 1098.0 | 1098.0 | 1098.0 | 1098.0 | 1098.0 | 1098.0 | 1098.0 | 1098.0 | 1098.0 | . 110935 17715497 | draw | São Bernardo | Água Santa | 2021-04-30 23:00:00 | Paulista A2 | 1314 | False | 8416491.0 | 528562.0 | 2021-04-28 23:00:00 | 2021-04-25 01:00:00 | 2021-04-22 23:00:00 | 2021-04-21 01:00:00 | 2021-03-14 18:00:00 | 2021-03-10 18:00:00 | 2021-03-06 18:00:00 | 2021-02-28 18:00:00 | 2020-12-16 22:00:00 | 2020-12-12 18:00:00 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 2.0 | 1.0 | 1.0 | 0.0 | 1.0 | 2.0 | 0.0 | 1.0 | 1.0 | 2.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 2.0 | 3.0 | 1.0 | 6.000775 | 4.526330 | 7.443283 | 4.315928 | 6.756878 | 4.644605 | 7.546083 | 7.061783 | 4.466550 | 5.604375 | 3.981619 | 6.126650 | 3.033975 | 5.529961 | 3.184456 | 5.475955 | 4.388908 | 4.097217 | 6.262675 | 4.821825 | 8416491.0 | 8416491.0 | 8416491.0 | 8416491.0 | 8416491.0 | 8416491.0 | 8416491.0 | 8416491.0 | 883181.0 | 883181.0 | 1314.0 | 1314.0 | 1314.0 | 1314.0 | 1314.0 | 1314.0 | 1314.0 | 1314.0 | 1746.0 | 1746.0 | 2021-04-28 23:00:00 | 2021-04-24 23:00:00 | 2021-04-22 23:00:00 | 2021-04-21 01:00:00 | 2021-03-14 18:00:00 | 2021-03-10 22:00:00 | 2021-03-06 18:00:00 | 2021-02-27 19:00:00 | 2020-12-09 18:00:00 | 2020-12-06 18:00:00 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 2.0 | 0.0 | 1.0 | 3.0 | 1.0 | 2.0 | 2.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 6.921617 | 8.577671 | 8.155264 | 4.232500 | 8.495162 | 4.670143 | 8.135642 | 6.617900 | 3.881263 | 5.310150 | 3.081836 | 3.070258 | 2.536957 | 5.304985 | 3.004767 | 4.952157 | 3.257969 | 4.472350 | 7.371638 | 6.301017 | 528562.0 | 528562.0 | 528562.0 | 528562.0 | 528562.0 | 528562.0 | 528562.0 | 528562.0 | 896682.0 | 896682.0 | 1314.0 | 1314.0 | 1314.0 | 1314.0 | 1314.0 | 1314.0 | 1314.0 | 1314.0 | 1746.0 | 1746.0 | . 110936 17944153 | away | Everton | La Serena | 2021-05-01 00:00:00 | Primera Division | 663 | False | 6973085.0 | 471757.0 | 2021-04-24 00:00:00 | 2021-04-18 19:00:00 | 2021-04-12 19:00:00 | 2021-04-02 19:00:00 | 2021-03-27 19:00:00 | 2021-02-14 13:30:00 | 2021-02-11 21:30:00 | 2021-02-06 20:00:00 | 2021-01-19 22:15:00 | 2021-01-14 20:00:00 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 2.0 | 1.0 | 1.0 | 0.0 | 1.0 | 1.0 | 2.0 | 1.0 | 2.0 | 1.0 | 1.0 | 1.0 | 0.0 | 3.0 | 3.0 | 1.0 | 1.0 | 6.067230 | 5.688200 | 4.704490 | 5.210350 | 6.451883 | 6.283628 | 6.234132 | 5.700200 | 3.996717 | 7.312802 | 5.382177 | 5.205100 | 5.619340 | 6.392000 | 4.846800 | 4.756911 | 5.177539 | 5.952450 | 8.246471 | 4.479139 | 6973085.0 | 6973085.0 | 6973085.0 | 6973085.0 | 6973085.0 | 6973085.0 | 6973085.0 | 6973085.0 | 896760.0 | 896760.0 | 663.0 | 663.0 | 663.0 | 663.0 | 663.0 | 663.0 | 663.0 | 663.0 | 663.0 | 663.0 | 2021-04-24 19:30:00 | 2021-04-17 22:00:00 | 2021-04-11 19:00:00 | 2021-04-04 21:00:00 | 2021-03-30 23:00:00 | 2021-02-14 21:00:00 | 2021-02-10 21:30:00 | 2021-02-05 20:00:00 | 2021-01-24 20:00:00 | 2021-01-18 20:00:00 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 2.0 | 1.0 | 0.0 | 1.0 | 1.0 | 2.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 2.0 | 2.0 | 1.0 | 2.0 | 0.0 | 0.0 | 5.166822 | 4.803368 | 4.574750 | 4.851700 | 5.065750 | 6.052547 | 4.467189 | 4.663733 | 6.091328 | 4.953404 | 5.888744 | 6.347747 | 5.557890 | 4.190300 | 6.666050 | 5.035318 | 6.378186 | 6.726760 | 5.217356 | 7.172523 | 471757.0 | 471757.0 | 471757.0 | 471757.0 | 471757.0 | 471757.0 | 471757.0 | 471757.0 | 471757.0 | 470515.0 | 663.0 | 663.0 | 663.0 | 663.0 | 663.0 | 663.0 | 663.0 | 663.0 | 663.0 | 663.0 | . 110937 17786297 | home | Colón | Arsenal de Sarandi | 2021-05-01 00:00:00 | Superliga | 636 | False | 213970.0 | 470859.0 | 2021-04-25 18:45:00 | 2021-04-19 00:00:00 | 2021-04-12 00:00:00 | 2021-04-04 19:15:00 | 2021-03-27 17:00:00 | 2021-03-21 19:15:00 | 2021-03-17 20:15:00 | 2021-03-14 00:30:00 | 2021-03-06 22:20:00 | 2021-02-27 20:10:00 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 2.0 | 2.0 | 0.0 | 3.0 | 0.0 | 0.0 | 2.0 | 2.0 | 3.0 | 2.0 | 2.0 | 3.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 5.673139 | 7.972250 | 4.034900 | 7.055806 | 6.790717 | 6.033171 | 6.282770 | 4.652362 | 7.283950 | 4.716803 | 5.496961 | 4.248540 | 7.558162 | 4.943567 | 5.195333 | 4.771779 | 4.497200 | 6.008047 | 5.281133 | 6.420675 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 213970.0 | 636.0 | 636.0 | 636.0 | 636.0 | 636.0 | 636.0 | 642.0 | 636.0 | 636.0 | 636.0 | 2021-04-28 00:30:00 | 2021-04-25 16:30:00 | 2021-04-22 22:15:00 | 2021-04-18 16:30:00 | 2021-04-11 14:00:00 | 2021-04-04 00:00:00 | 2021-03-27 21:30:00 | 2021-03-22 22:00:00 | 2021-03-15 22:15:00 | 2021-03-07 20:10:00 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 2.0 | 3.0 | 0.0 | 2.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 2.0 | 1.0 | 2.0 | 0.0 | 3.0 | 0.0 | 2.0 | 5.0 | 5.580400 | 4.627278 | 4.094762 | 4.880070 | 5.694806 | 4.488244 | 4.937108 | 6.074100 | 4.634711 | 4.933917 | 5.332983 | 6.780128 | 8.455300 | 6.430750 | 5.676700 | 9.973094 | 6.216542 | 5.783800 | 6.112818 | 5.445117 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 470859.0 | 1116.0 | 636.0 | 1116.0 | 636.0 | 636.0 | 636.0 | 636.0 | 636.0 | 636.0 | 636.0 | . 110938 rows × 190 columns . . FMP.describe() . id league_id home_team_coach_id away_team_coach_id home_team_history_is_play_home_1 home_team_history_is_play_home_2 home_team_history_is_play_home_3 home_team_history_is_play_home_4 home_team_history_is_play_home_5 home_team_history_is_play_home_6 home_team_history_is_play_home_7 home_team_history_is_play_home_8 home_team_history_is_play_home_9 home_team_history_is_play_home_10 home_team_history_is_cup_1 home_team_history_is_cup_2 home_team_history_is_cup_3 home_team_history_is_cup_4 home_team_history_is_cup_5 home_team_history_is_cup_6 home_team_history_is_cup_7 home_team_history_is_cup_8 home_team_history_is_cup_9 home_team_history_is_cup_10 home_team_history_goal_1 home_team_history_goal_2 home_team_history_goal_3 home_team_history_goal_4 home_team_history_goal_5 home_team_history_goal_6 home_team_history_goal_7 home_team_history_goal_8 home_team_history_goal_9 home_team_history_goal_10 home_team_history_opponent_goal_1 home_team_history_opponent_goal_2 home_team_history_opponent_goal_3 home_team_history_opponent_goal_4 home_team_history_opponent_goal_5 home_team_history_opponent_goal_6 home_team_history_opponent_goal_7 home_team_history_opponent_goal_8 home_team_history_opponent_goal_9 home_team_history_opponent_goal_10 home_team_history_rating_1 home_team_history_rating_2 home_team_history_rating_3 home_team_history_rating_4 home_team_history_rating_5 home_team_history_rating_6 home_team_history_rating_7 home_team_history_rating_8 home_team_history_rating_9 home_team_history_rating_10 home_team_history_opponent_rating_1 home_team_history_opponent_rating_2 home_team_history_opponent_rating_3 home_team_history_opponent_rating_4 home_team_history_opponent_rating_5 home_team_history_opponent_rating_6 home_team_history_opponent_rating_7 home_team_history_opponent_rating_8 home_team_history_opponent_rating_9 home_team_history_opponent_rating_10 home_team_history_coach_1 home_team_history_coach_2 home_team_history_coach_3 home_team_history_coach_4 home_team_history_coach_5 home_team_history_coach_6 home_team_history_coach_7 home_team_history_coach_8 home_team_history_coach_9 home_team_history_coach_10 home_team_history_league_id_1 home_team_history_league_id_2 home_team_history_league_id_3 home_team_history_league_id_4 home_team_history_league_id_5 home_team_history_league_id_6 home_team_history_league_id_7 home_team_history_league_id_8 home_team_history_league_id_9 home_team_history_league_id_10 away_team_history_is_play_home_1 away_team_history_is_play_home_2 away_team_history_is_play_home_3 away_team_history_is_play_home_4 away_team_history_is_play_home_5 away_team_history_is_play_home_6 away_team_history_is_play_home_7 away_team_history_is_play_home_8 away_team_history_is_play_home_9 away_team_history_is_play_home_10 away_team_history_is_cup_1 away_team_history_is_cup_2 away_team_history_is_cup_3 away_team_history_is_cup_4 away_team_history_is_cup_5 away_team_history_is_cup_6 away_team_history_is_cup_7 away_team_history_is_cup_8 away_team_history_is_cup_9 away_team_history_is_cup_10 away_team_history_goal_1 away_team_history_goal_2 away_team_history_goal_3 away_team_history_goal_4 away_team_history_goal_5 away_team_history_goal_6 away_team_history_goal_7 away_team_history_goal_8 away_team_history_goal_9 away_team_history_goal_10 away_team_history_opponent_goal_1 away_team_history_opponent_goal_2 away_team_history_opponent_goal_3 away_team_history_opponent_goal_4 away_team_history_opponent_goal_5 away_team_history_opponent_goal_6 away_team_history_opponent_goal_7 away_team_history_opponent_goal_8 away_team_history_opponent_goal_9 away_team_history_opponent_goal_10 away_team_history_rating_1 away_team_history_rating_2 away_team_history_rating_3 away_team_history_rating_4 away_team_history_rating_5 away_team_history_rating_6 away_team_history_rating_7 away_team_history_rating_8 away_team_history_rating_9 away_team_history_rating_10 away_team_history_opponent_rating_1 away_team_history_opponent_rating_2 away_team_history_opponent_rating_3 away_team_history_opponent_rating_4 away_team_history_opponent_rating_5 away_team_history_opponent_rating_6 away_team_history_opponent_rating_7 away_team_history_opponent_rating_8 away_team_history_opponent_rating_9 away_team_history_opponent_rating_10 away_team_history_coach_1 away_team_history_coach_2 away_team_history_coach_3 away_team_history_coach_4 away_team_history_coach_5 away_team_history_coach_6 away_team_history_coach_7 away_team_history_coach_8 away_team_history_coach_9 away_team_history_coach_10 away_team_history_league_id_1 away_team_history_league_id_2 away_team_history_league_id_3 away_team_history_league_id_4 away_team_history_league_id_5 away_team_history_league_id_6 away_team_history_league_id_7 away_team_history_league_id_8 away_team_history_league_id_9 away_team_history_league_id_10 . count 1.109380e+05 | 110938.000000 | 8.921700e+04 | 8.912300e+04 | 109779.000000 | 108487.000000 | 107165.000000 | 105837.000000 | 104461.000000 | 103042.000000 | 101643.000000 | 100219.000000 | 98802.000000 | 97379.000000 | 109725.000000 | 108381.000000 | 107025.000000 | 105639.000000 | 104190.000000 | 102707.000000 | 101218.000000 | 99675.000000 | 98208.000000 | 96752.000000 | 109779.000000 | 108487.000000 | 107165.000000 | 105837.000000 | 104461.000000 | 103042.000000 | 101643.000000 | 100219.000000 | 98802.000000 | 97379.000000 | 109779.000000 | 108487.000000 | 107165.000000 | 105837.000000 | 104461.000000 | 103042.000000 | 101643.000000 | 100219.000000 | 98802.000000 | 97379.000000 | 109767.000000 | 108472.000000 | 107153.000000 | 105821.000000 | 104453.000000 | 103029.000000 | 101630.000000 | 100209.000000 | 98797.000000 | 97372.000000 | 109767.000000 | 108472.000000 | 107153.000000 | 105821.000000 | 104453.000000 | 103029.000000 | 101630.000000 | 100209.000000 | 98797.000000 | 97372.000000 | 8.941500e+04 | 8.936700e+04 | 8.920500e+04 | 8.882000e+04 | 8.833600e+04 | 8.768000e+04 | 8.695800e+04 | 8.606900e+04 | 8.520500e+04 | 8.428500e+04 | 109779.000000 | 108487.000000 | 107165.000000 | 105837.000000 | 104461.000000 | 103042.000000 | 101643.000000 | 100219.000000 | 98802.000000 | 97379.000000 | 109712.000000 | 108345.000000 | 106904.000000 | 105422.000000 | 103938.000000 | 102512.000000 | 101071.000000 | 99643.000000 | 98176.000000 | 96722.000000 | 109664.000000 | 108257.000000 | 106766.000000 | 105217.000000 | 103683.000000 | 102191.000000 | 100655.000000 | 99159.000000 | 97633.000000 | 96119.000000 | 109712.000000 | 108345.000000 | 106904.000000 | 105422.000000 | 103938.000000 | 102512.000000 | 101071.000000 | 99643.000000 | 98176.000000 | 96722.000000 | 109712.000000 | 108345.000000 | 106904.000000 | 105422.000000 | 103938.000000 | 102512.000000 | 101071.000000 | 99643.000000 | 98176.000000 | 96722.000000 | 109699.000000 | 108335.000000 | 106891.000000 | 105413.000000 | 103922.000000 | 102501.000000 | 101060.000000 | 99635.000000 | 98166.000000 | 96715.000000 | 109699.000000 | 108335.000000 | 106891.000000 | 105413.000000 | 103922.000000 | 102501.000000 | 101060.000000 | 99635.000000 | 98166.000000 | 96715.000000 | 8.929700e+04 | 8.924200e+04 | 8.898900e+04 | 8.864400e+04 | 8.808300e+04 | 8.741300e+04 | 8.656100e+04 | 8.571900e+04 | 8.478800e+04 | 8.380900e+04 | 109712.000000 | 108345.000000 | 106904.000000 | 105422.000000 | 103938.000000 | 102512.000000 | 101071.000000 | 99643.000000 | 98176.000000 | 96722.000000 | . mean 1.519875e+07 | 910.457012 | 1.287134e+07 | 1.291552e+07 | 0.306944 | 0.567801 | 0.466141 | 0.519469 | 0.487857 | 0.507288 | 0.497624 | 0.502060 | 0.500962 | 0.498958 | 0.083199 | 0.083742 | 0.083205 | 0.084240 | 0.084883 | 0.084512 | 0.085202 | 0.083421 | 0.085869 | 0.085900 | 1.343299 | 1.409966 | 1.383353 | 1.401013 | 1.398139 | 1.398556 | 1.398906 | 1.401840 | 1.404972 | 1.402643 | 1.423569 | 1.346908 | 1.376224 | 1.356501 | 1.367209 | 1.359057 | 1.358736 | 1.356399 | 1.348252 | 1.357284 | 6.325486 | 6.651585 | 6.526625 | 6.597575 | 6.548819 | 6.582106 | 6.556376 | 6.559520 | 6.550602 | 6.544828 | 6.749435 | 6.404746 | 6.532907 | 6.443774 | 6.474777 | 6.431073 | 6.433476 | 6.413614 | 6.391937 | 6.384797 | 1.298823e+07 | 1.302403e+07 | 1.305650e+07 | 1.301894e+07 | 1.295235e+07 | 1.286114e+07 | 1.274301e+07 | 1.257226e+07 | 1.242330e+07 | 1.223862e+07 | 904.081746 | 896.089209 | 887.990874 | 880.099899 | 872.432525 | 863.575018 | 856.173499 | 848.476377 | 839.472561 | 831.877448 | 0.695029 | 0.433827 | 0.536182 | 0.482262 | 0.514528 | 0.494840 | 0.504833 | 0.500878 | 0.501131 | 0.503205 | 0.082926 | 0.083459 | 0.083735 | 0.083789 | 0.084103 | 0.084479 | 0.083672 | 0.086064 | 0.084459 | 0.085092 | 1.432141 | 1.367631 | 1.397328 | 1.382909 | 1.390945 | 1.393291 | 1.395455 | 1.393997 | 1.393222 | 1.400922 | 1.323237 | 1.393964 | 1.358219 | 1.374713 | 1.359628 | 1.364933 | 1.362636 | 1.359343 | 1.361636 | 1.351709 | 6.786555 | 6.460632 | 6.590450 | 6.520199 | 6.573126 | 6.536206 | 6.549392 | 6.535049 | 6.530659 | 6.528311 | 6.281844 | 6.604754 | 6.452470 | 6.512163 | 6.451090 | 6.462982 | 6.430701 | 6.418890 | 6.408248 | 6.380908 | 1.300525e+07 | 1.306729e+07 | 1.305275e+07 | 1.303644e+07 | 1.296347e+07 | 1.285662e+07 | 1.270277e+07 | 1.255002e+07 | 1.236828e+07 | 1.221457e+07 | 901.986200 | 894.389137 | 886.368012 | 878.243611 | 869.450297 | 861.901455 | 853.435338 | 844.673223 | 837.678200 | 829.177374 | . std 2.536393e+06 | 549.120985 | 1.578479e+07 | 1.580344e+07 | 0.461228 | 0.495384 | 0.498855 | 0.499623 | 0.499855 | 0.499949 | 0.499997 | 0.499998 | 0.500002 | 0.500001 | 0.276184 | 0.277001 | 0.276193 | 0.277748 | 0.278709 | 0.278156 | 0.279184 | 0.276519 | 0.280172 | 0.280218 | 1.327137 | 1.350371 | 1.337314 | 1.350112 | 1.341917 | 1.345225 | 1.335962 | 1.335964 | 1.331830 | 1.332815 | 1.350132 | 1.312391 | 1.319784 | 1.309317 | 1.309581 | 1.306324 | 1.293488 | 1.293242 | 1.288998 | 1.287046 | 2.670843 | 2.693074 | 2.730215 | 2.700185 | 2.696488 | 2.709772 | 2.704181 | 2.674349 | 2.668547 | 2.671623 | 2.650877 | 2.604681 | 2.602075 | 2.583789 | 2.572332 | 2.551319 | 2.524668 | 2.526982 | 2.472765 | 2.480182 | 1.582446e+07 | 1.583347e+07 | 1.583570e+07 | 1.581433e+07 | 1.577529e+07 | 1.572797e+07 | 1.566074e+07 | 1.557705e+07 | 1.549315e+07 | 1.539497e+07 | 545.788338 | 542.543882 | 538.971036 | 535.442108 | 531.725593 | 528.438542 | 524.879235 | 521.631141 | 518.859376 | 515.500618 | 0.460397 | 0.495604 | 0.498691 | 0.499688 | 0.499791 | 0.499976 | 0.499979 | 0.500002 | 0.500001 | 0.499992 | 0.275772 | 0.276576 | 0.276991 | 0.277072 | 0.277543 | 0.278106 | 0.276897 | 0.280460 | 0.278077 | 0.279021 | 1.356085 | 1.332697 | 1.343389 | 1.329140 | 1.335394 | 1.330796 | 1.334020 | 1.329594 | 1.327558 | 1.326946 | 1.303125 | 1.334214 | 1.318217 | 1.318581 | 1.306161 | 1.300361 | 1.305879 | 1.295392 | 1.289737 | 1.286534 | 2.715384 | 2.702187 | 2.660433 | 2.692106 | 2.700905 | 2.680887 | 2.655272 | 2.667063 | 2.654461 | 2.641528 | 2.624620 | 2.652138 | 2.631438 | 2.607657 | 2.577700 | 2.556643 | 2.541374 | 2.495846 | 2.506014 | 2.469931 | 1.583318e+07 | 1.584513e+07 | 1.583002e+07 | 1.580935e+07 | 1.576986e+07 | 1.571185e+07 | 1.563747e+07 | 1.555401e+07 | 1.546249e+07 | 1.537849e+07 | 545.826707 | 542.247411 | 538.497274 | 534.864981 | 531.170701 | 527.338931 | 524.217968 | 520.954647 | 517.647869 | 514.900676 | . min 1.142829e+07 | 2.000000 | 2.000000e+00 | 2.000000e+00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.217600 | 0.255600 | 0.217600 | 0.255600 | 0.217600 | 0.471950 | 0.255600 | 0.255600 | 0.241800 | 0.241800 | 0.407900 | 0.217600 | 0.255600 | 0.413900 | 1.012131 | 0.255600 | 0.413900 | 0.255600 | 0.255600 | 0.335450 | 2.000000e+00 | 2.000000e+00 | 2.000000e+00 | 2.000000e+00 | 2.000000e+00 | 2.000000e+00 | 2.000000e+00 | 2.000000e+00 | 2.000000e+00 | 2.000000e+00 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.255600 | 0.217600 | 0.255600 | 0.217600 | 0.255600 | 0.255600 | 0.982050 | 0.982050 | 0.954650 | 0.954650 | 0.217600 | 0.255600 | 0.742050 | 0.255600 | 0.255600 | 0.413900 | 0.255600 | 0.471950 | 0.756467 | 0.255600 | 2.000000e+00 | 2.000000e+00 | 2.000000e+00 | 2.000000e+00 | 2.000000e+00 | 2.000000e+00 | 2.000000e+00 | 2.000000e+00 | 2.000000e+00 | 2.000000e+00 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | . 25% 1.200038e+07 | 444.000000 | 4.596120e+05 | 4.595650e+05 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 4.616889 | 4.913283 | 4.776545 | 4.866850 | 4.815040 | 4.848234 | 4.837451 | 4.845200 | 4.845097 | 4.840749 | 5.032736 | 4.714728 | 4.848763 | 4.769321 | 4.818757 | 4.776147 | 4.800514 | 4.784083 | 4.782675 | 4.783347 | 4.598320e+05 | 4.598780e+05 | 4.600550e+05 | 4.600650e+05 | 4.600850e+05 | 4.600240e+05 | 4.599610e+05 | 4.596750e+05 | 4.596440e+05 | 4.595530e+05 | 438.000000 | 435.000000 | 432.000000 | 423.000000 | 420.000000 | 414.000000 | 405.000000 | 396.000000 | 387.000000 | 387.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 5.039111 | 4.724497 | 4.874557 | 4.792164 | 4.850633 | 4.824687 | 4.840679 | 4.834144 | 4.836074 | 4.839377 | 4.604933 | 4.896103 | 4.757223 | 4.833211 | 4.778520 | 4.816033 | 4.789097 | 4.797617 | 4.790166 | 4.776239 | 4.596590e+05 | 4.599610e+05 | 4.600540e+05 | 4.600650e+05 | 4.600550e+05 | 4.600540e+05 | 4.598530e+05 | 4.596705e+05 | 4.596010e+05 | 4.595390e+05 | 438.000000 | 432.000000 | 426.000000 | 420.000000 | 417.000000 | 408.000000 | 399.000000 | 391.500000 | 387.000000 | 387.000000 | . 50% 1.675988e+07 | 947.000000 | 1.552728e+06 | 1.552806e+06 | 0.000000 | 1.000000 | 0.000000 | 1.000000 | 0.000000 | 1.000000 | 0.000000 | 1.000000 | 1.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 5.690300 | 6.046611 | 5.895133 | 5.980830 | 5.938521 | 5.964398 | 5.951981 | 5.960538 | 5.953668 | 5.948483 | 6.169300 | 5.816384 | 5.962970 | 5.865100 | 5.912700 | 5.873517 | 5.891164 | 5.866475 | 5.857250 | 5.857781 | 1.552821e+06 | 1.552879e+06 | 1.552892e+06 | 1.552861e+06 | 1.552817e+06 | 1.552748e+06 | 1.552691e+06 | 1.552560e+06 | 1.552500e+06 | 1.552407e+06 | 944.000000 | 938.000000 | 920.000000 | 899.000000 | 890.000000 | 881.000000 | 860.000000 | 848.000000 | 830.000000 | 812.000000 | 1.000000 | 0.000000 | 1.000000 | 0.000000 | 1.000000 | 0.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 6.181637 | 5.833994 | 5.993775 | 5.912461 | 5.961500 | 5.936913 | 5.951021 | 5.938479 | 5.943847 | 5.947825 | 5.664550 | 6.020931 | 5.858835 | 5.938967 | 5.878337 | 5.905033 | 5.873732 | 5.883183 | 5.877150 | 5.858191 | 1.552879e+06 | 1.552909e+06 | 1.552911e+06 | 1.552918e+06 | 1.552883e+06 | 1.552812e+06 | 1.552702e+06 | 1.552613e+06 | 1.552502e+06 | 1.552430e+06 | 944.000000 | 935.000000 | 906.500000 | 899.000000 | 884.000000 | 881.000000 | 860.000000 | 830.000000 | 821.000000 | 806.000000 | . 75% 1.724230e+07 | 1293.000000 | 3.243116e+07 | 3.279539e+07 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 7.290464 | 7.665168 | 7.526083 | 7.592956 | 7.534800 | 7.574117 | 7.530079 | 7.538590 | 7.528285 | 7.521593 | 7.766535 | 7.392300 | 7.530750 | 7.425833 | 7.456875 | 7.402642 | 7.400830 | 7.378025 | 7.366488 | 7.348414 | 3.281899e+07 | 3.317645e+07 | 3.317717e+07 | 3.281869e+07 | 3.251980e+07 | 3.243113e+07 | 3.200280e+07 | 3.122622e+07 | 3.045799e+07 | 2.931376e+07 | 1286.000000 | 1283.000000 | 1278.000000 | 1274.000000 | 1271.000000 | 1268.000000 | 1265.000000 | 1264.000000 | 1262.000000 | 1258.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 2.000000 | 7.798296 | 7.441469 | 7.579160 | 7.505009 | 7.559384 | 7.508500 | 7.529883 | 7.504280 | 7.493647 | 7.485292 | 7.225683 | 7.615028 | 7.442103 | 7.503983 | 7.432458 | 7.442754 | 7.402632 | 7.388115 | 7.367375 | 7.353536 | 3.317717e+07 | 3.320365e+07 | 3.317718e+07 | 3.281869e+07 | 3.243116e+07 | 3.240538e+07 | 3.162754e+07 | 3.085093e+07 | 2.972031e+07 | 2.931203e+07 | 1286.000000 | 1283.000000 | 1279.000000 | 1274.000000 | 1270.000000 | 1267.000000 | 1265.000000 | 1263.000000 | 1261.000000 | 1255.000000 | . max 1.805384e+07 | 2039.000000 | 3.756849e+07 | 3.756847e+07 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 18.000000 | 18.000000 | 18.000000 | 21.000000 | 18.000000 | 21.000000 | 15.000000 | 18.000000 | 21.000000 | 18.000000 | 18.000000 | 18.000000 | 14.000000 | 18.000000 | 18.000000 | 18.000000 | 15.000000 | 18.000000 | 14.000000 | 14.000000 | 57.861050 | 49.969875 | 57.861050 | 45.849650 | 49.969875 | 55.699900 | 55.699900 | 55.699900 | 55.699900 | 53.630950 | 45.849650 | 45.234850 | 57.861050 | 57.861050 | 49.969875 | 49.969875 | 53.630950 | 53.630950 | 42.722750 | 53.630950 | 3.756779e+07 | 3.756724e+07 | 3.756690e+07 | 3.756626e+07 | 3.756626e+07 | 3.756410e+07 | 3.756404e+07 | 3.756399e+07 | 3.756356e+07 | 3.756356e+07 | 2039.000000 | 2039.000000 | 2039.000000 | 2039.000000 | 2039.000000 | 2039.000000 | 2039.000000 | 2037.000000 | 2028.000000 | 2028.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 1.000000 | 17.000000 | 15.000000 | 18.000000 | 18.000000 | 21.000000 | 15.000000 | 21.000000 | 21.000000 | 18.000000 | 21.000000 | 14.000000 | 14.000000 | 18.000000 | 18.000000 | 18.000000 | 13.000000 | 18.000000 | 14.000000 | 18.000000 | 18.000000 | 49.969875 | 57.861050 | 42.722750 | 57.861050 | 57.861050 | 49.969875 | 45.234850 | 53.983950 | 53.630950 | 55.699900 | 57.861050 | 57.861050 | 49.969875 | 55.699900 | 45.849650 | 47.317600 | 47.317600 | 47.317600 | 53.630950 | 45.362150 | 3.756729e+07 | 3.756729e+07 | 3.756693e+07 | 3.756690e+07 | 3.756531e+07 | 3.756498e+07 | 3.756410e+07 | 3.756404e+07 | 3.756356e+07 | 3.755941e+07 | 2039.000000 | 2039.000000 | 2039.000000 | 2039.000000 | 2039.000000 | 2039.000000 | 2039.000000 | 2039.000000 | 2028.000000 | 2025.000000 | . . Respecto a valores faltantes, tenemos lo siguiente: . fffmp.check_NaNs(FMP) . home_team_name Nulls: 1 / 110938 - 0.0% away_team_name Nulls: 1 / 110938 - 0.0% league_name Nulls: 1 / 110938 - 0.0% is_cup Nulls: 1 / 110938 - 0.0% home_team_coach_id Nulls: 21721 / 110938 - 19.58% away_team_coach_id Nulls: 21815 / 110938 - 19.66% home_team_history_match_date_1 Nulls: 1159 / 110938 - 1.04% home_team_history_match_date_2 Nulls: 2451 / 110938 - 2.21% home_team_history_match_date_3 Nulls: 3773 / 110938 - 3.4% home_team_history_match_date_4 Nulls: 5101 / 110938 - 4.6% home_team_history_match_date_5 Nulls: 6477 / 110938 - 5.84% home_team_history_match_date_6 Nulls: 7896 / 110938 - 7.12% home_team_history_match_date_7 Nulls: 9295 / 110938 - 8.38% home_team_history_match_date_8 Nulls: 10719 / 110938 - 9.66% home_team_history_match_date_9 Nulls: 12136 / 110938 - 10.94% home_team_history_match_date_10 Nulls: 13559 / 110938 - 12.22% home_team_history_is_play_home_1 Nulls: 1159 / 110938 - 1.04% home_team_history_is_play_home_2 Nulls: 2451 / 110938 - 2.21% home_team_history_is_play_home_3 Nulls: 3773 / 110938 - 3.4% home_team_history_is_play_home_4 Nulls: 5101 / 110938 - 4.6% home_team_history_is_play_home_5 Nulls: 6477 / 110938 - 5.84% home_team_history_is_play_home_6 Nulls: 7896 / 110938 - 7.12% home_team_history_is_play_home_7 Nulls: 9295 / 110938 - 8.38% home_team_history_is_play_home_8 Nulls: 10719 / 110938 - 9.66% home_team_history_is_play_home_9 Nulls: 12136 / 110938 - 10.94% home_team_history_is_play_home_10 Nulls: 13559 / 110938 - 12.22% home_team_history_is_cup_1 Nulls: 1213 / 110938 - 1.09% home_team_history_is_cup_2 Nulls: 2557 / 110938 - 2.3% home_team_history_is_cup_3 Nulls: 3913 / 110938 - 3.53% home_team_history_is_cup_4 Nulls: 5299 / 110938 - 4.78% home_team_history_is_cup_5 Nulls: 6748 / 110938 - 6.08% home_team_history_is_cup_6 Nulls: 8231 / 110938 - 7.42% home_team_history_is_cup_7 Nulls: 9720 / 110938 - 8.76% home_team_history_is_cup_8 Nulls: 11263 / 110938 - 10.15% home_team_history_is_cup_9 Nulls: 12730 / 110938 - 11.47% home_team_history_is_cup_10 Nulls: 14186 / 110938 - 12.79% home_team_history_goal_1 Nulls: 1159 / 110938 - 1.04% home_team_history_goal_2 Nulls: 2451 / 110938 - 2.21% home_team_history_goal_3 Nulls: 3773 / 110938 - 3.4% home_team_history_goal_4 Nulls: 5101 / 110938 - 4.6% home_team_history_goal_5 Nulls: 6477 / 110938 - 5.84% home_team_history_goal_6 Nulls: 7896 / 110938 - 7.12% home_team_history_goal_7 Nulls: 9295 / 110938 - 8.38% home_team_history_goal_8 Nulls: 10719 / 110938 - 9.66% home_team_history_goal_9 Nulls: 12136 / 110938 - 10.94% home_team_history_goal_10 Nulls: 13559 / 110938 - 12.22% home_team_history_opponent_goal_1 Nulls: 1159 / 110938 - 1.04% home_team_history_opponent_goal_2 Nulls: 2451 / 110938 - 2.21% home_team_history_opponent_goal_3 Nulls: 3773 / 110938 - 3.4% home_team_history_opponent_goal_4 Nulls: 5101 / 110938 - 4.6% home_team_history_opponent_goal_5 Nulls: 6477 / 110938 - 5.84% home_team_history_opponent_goal_6 Nulls: 7896 / 110938 - 7.12% home_team_history_opponent_goal_7 Nulls: 9295 / 110938 - 8.38% home_team_history_opponent_goal_8 Nulls: 10719 / 110938 - 9.66% home_team_history_opponent_goal_9 Nulls: 12136 / 110938 - 10.94% home_team_history_opponent_goal_10 Nulls: 13559 / 110938 - 12.22% home_team_history_rating_1 Nulls: 1171 / 110938 - 1.06% home_team_history_rating_2 Nulls: 2466 / 110938 - 2.22% home_team_history_rating_3 Nulls: 3785 / 110938 - 3.41% home_team_history_rating_4 Nulls: 5117 / 110938 - 4.61% home_team_history_rating_5 Nulls: 6485 / 110938 - 5.85% home_team_history_rating_6 Nulls: 7909 / 110938 - 7.13% home_team_history_rating_7 Nulls: 9308 / 110938 - 8.39% home_team_history_rating_8 Nulls: 10729 / 110938 - 9.67% home_team_history_rating_9 Nulls: 12141 / 110938 - 10.94% home_team_history_rating_10 Nulls: 13566 / 110938 - 12.23% home_team_history_opponent_rating_1 Nulls: 1171 / 110938 - 1.06% home_team_history_opponent_rating_2 Nulls: 2466 / 110938 - 2.22% home_team_history_opponent_rating_3 Nulls: 3785 / 110938 - 3.41% home_team_history_opponent_rating_4 Nulls: 5117 / 110938 - 4.61% home_team_history_opponent_rating_5 Nulls: 6485 / 110938 - 5.85% home_team_history_opponent_rating_6 Nulls: 7909 / 110938 - 7.13% home_team_history_opponent_rating_7 Nulls: 9308 / 110938 - 8.39% home_team_history_opponent_rating_8 Nulls: 10729 / 110938 - 9.67% home_team_history_opponent_rating_9 Nulls: 12141 / 110938 - 10.94% home_team_history_opponent_rating_10 Nulls: 13566 / 110938 - 12.23% home_team_history_coach_1 Nulls: 21523 / 110938 - 19.4% home_team_history_coach_2 Nulls: 21571 / 110938 - 19.44% home_team_history_coach_3 Nulls: 21733 / 110938 - 19.59% home_team_history_coach_4 Nulls: 22118 / 110938 - 19.94% home_team_history_coach_5 Nulls: 22602 / 110938 - 20.37% home_team_history_coach_6 Nulls: 23258 / 110938 - 20.96% home_team_history_coach_7 Nulls: 23980 / 110938 - 21.62% home_team_history_coach_8 Nulls: 24869 / 110938 - 22.42% home_team_history_coach_9 Nulls: 25733 / 110938 - 23.2% home_team_history_coach_10 Nulls: 26653 / 110938 - 24.03% home_team_history_league_id_1 Nulls: 1159 / 110938 - 1.04% home_team_history_league_id_2 Nulls: 2451 / 110938 - 2.21% home_team_history_league_id_3 Nulls: 3773 / 110938 - 3.4% home_team_history_league_id_4 Nulls: 5101 / 110938 - 4.6% home_team_history_league_id_5 Nulls: 6477 / 110938 - 5.84% home_team_history_league_id_6 Nulls: 7896 / 110938 - 7.12% home_team_history_league_id_7 Nulls: 9295 / 110938 - 8.38% home_team_history_league_id_8 Nulls: 10719 / 110938 - 9.66% home_team_history_league_id_9 Nulls: 12136 / 110938 - 10.94% home_team_history_league_id_10 Nulls: 13559 / 110938 - 12.22% away_team_history_match_date_1 Nulls: 1226 / 110938 - 1.11% away_team_history_match_date_2 Nulls: 2593 / 110938 - 2.34% away_team_history_match_date_3 Nulls: 4034 / 110938 - 3.64% away_team_history_match_date_4 Nulls: 5516 / 110938 - 4.97% away_team_history_match_date_5 Nulls: 7000 / 110938 - 6.31% away_team_history_match_date_6 Nulls: 8426 / 110938 - 7.6% away_team_history_match_date_7 Nulls: 9867 / 110938 - 8.89% away_team_history_match_date_8 Nulls: 11295 / 110938 - 10.18% away_team_history_match_date_9 Nulls: 12762 / 110938 - 11.5% away_team_history_match_date_10 Nulls: 14216 / 110938 - 12.81% away_team_history_is_play_home_1 Nulls: 1226 / 110938 - 1.11% away_team_history_is_play_home_2 Nulls: 2593 / 110938 - 2.34% away_team_history_is_play_home_3 Nulls: 4034 / 110938 - 3.64% away_team_history_is_play_home_4 Nulls: 5516 / 110938 - 4.97% away_team_history_is_play_home_5 Nulls: 7000 / 110938 - 6.31% away_team_history_is_play_home_6 Nulls: 8426 / 110938 - 7.6% away_team_history_is_play_home_7 Nulls: 9867 / 110938 - 8.89% away_team_history_is_play_home_8 Nulls: 11295 / 110938 - 10.18% away_team_history_is_play_home_9 Nulls: 12762 / 110938 - 11.5% away_team_history_is_play_home_10 Nulls: 14216 / 110938 - 12.81% away_team_history_is_cup_1 Nulls: 1274 / 110938 - 1.15% away_team_history_is_cup_2 Nulls: 2681 / 110938 - 2.42% away_team_history_is_cup_3 Nulls: 4172 / 110938 - 3.76% away_team_history_is_cup_4 Nulls: 5721 / 110938 - 5.16% away_team_history_is_cup_5 Nulls: 7255 / 110938 - 6.54% away_team_history_is_cup_6 Nulls: 8747 / 110938 - 7.88% away_team_history_is_cup_7 Nulls: 10283 / 110938 - 9.27% away_team_history_is_cup_8 Nulls: 11779 / 110938 - 10.62% away_team_history_is_cup_9 Nulls: 13305 / 110938 - 11.99% away_team_history_is_cup_10 Nulls: 14819 / 110938 - 13.36% away_team_history_goal_1 Nulls: 1226 / 110938 - 1.11% away_team_history_goal_2 Nulls: 2593 / 110938 - 2.34% away_team_history_goal_3 Nulls: 4034 / 110938 - 3.64% away_team_history_goal_4 Nulls: 5516 / 110938 - 4.97% away_team_history_goal_5 Nulls: 7000 / 110938 - 6.31% away_team_history_goal_6 Nulls: 8426 / 110938 - 7.6% away_team_history_goal_7 Nulls: 9867 / 110938 - 8.89% away_team_history_goal_8 Nulls: 11295 / 110938 - 10.18% away_team_history_goal_9 Nulls: 12762 / 110938 - 11.5% away_team_history_goal_10 Nulls: 14216 / 110938 - 12.81% away_team_history_opponent_goal_1 Nulls: 1226 / 110938 - 1.11% away_team_history_opponent_goal_2 Nulls: 2593 / 110938 - 2.34% away_team_history_opponent_goal_3 Nulls: 4034 / 110938 - 3.64% away_team_history_opponent_goal_4 Nulls: 5516 / 110938 - 4.97% away_team_history_opponent_goal_5 Nulls: 7000 / 110938 - 6.31% away_team_history_opponent_goal_6 Nulls: 8426 / 110938 - 7.6% away_team_history_opponent_goal_7 Nulls: 9867 / 110938 - 8.89% away_team_history_opponent_goal_8 Nulls: 11295 / 110938 - 10.18% away_team_history_opponent_goal_9 Nulls: 12762 / 110938 - 11.5% away_team_history_opponent_goal_10 Nulls: 14216 / 110938 - 12.81% away_team_history_rating_1 Nulls: 1239 / 110938 - 1.12% away_team_history_rating_2 Nulls: 2603 / 110938 - 2.35% away_team_history_rating_3 Nulls: 4047 / 110938 - 3.65% away_team_history_rating_4 Nulls: 5525 / 110938 - 4.98% away_team_history_rating_5 Nulls: 7016 / 110938 - 6.32% away_team_history_rating_6 Nulls: 8437 / 110938 - 7.61% away_team_history_rating_7 Nulls: 9878 / 110938 - 8.9% away_team_history_rating_8 Nulls: 11303 / 110938 - 10.19% away_team_history_rating_9 Nulls: 12772 / 110938 - 11.51% away_team_history_rating_10 Nulls: 14223 / 110938 - 12.82% away_team_history_opponent_rating_1 Nulls: 1239 / 110938 - 1.12% away_team_history_opponent_rating_2 Nulls: 2603 / 110938 - 2.35% away_team_history_opponent_rating_3 Nulls: 4047 / 110938 - 3.65% away_team_history_opponent_rating_4 Nulls: 5525 / 110938 - 4.98% away_team_history_opponent_rating_5 Nulls: 7016 / 110938 - 6.32% away_team_history_opponent_rating_6 Nulls: 8437 / 110938 - 7.61% away_team_history_opponent_rating_7 Nulls: 9878 / 110938 - 8.9% away_team_history_opponent_rating_8 Nulls: 11303 / 110938 - 10.19% away_team_history_opponent_rating_9 Nulls: 12772 / 110938 - 11.51% away_team_history_opponent_rating_10 Nulls: 14223 / 110938 - 12.82% away_team_history_coach_1 Nulls: 21641 / 110938 - 19.51% away_team_history_coach_2 Nulls: 21696 / 110938 - 19.56% away_team_history_coach_3 Nulls: 21949 / 110938 - 19.78% away_team_history_coach_4 Nulls: 22294 / 110938 - 20.1% away_team_history_coach_5 Nulls: 22855 / 110938 - 20.6% away_team_history_coach_6 Nulls: 23525 / 110938 - 21.21% away_team_history_coach_7 Nulls: 24377 / 110938 - 21.97% away_team_history_coach_8 Nulls: 25219 / 110938 - 22.73% away_team_history_coach_9 Nulls: 26150 / 110938 - 23.57% away_team_history_coach_10 Nulls: 27129 / 110938 - 24.45% away_team_history_league_id_1 Nulls: 1226 / 110938 - 1.11% away_team_history_league_id_2 Nulls: 2593 / 110938 - 2.34% away_team_history_league_id_3 Nulls: 4034 / 110938 - 3.64% away_team_history_league_id_4 Nulls: 5516 / 110938 - 4.97% away_team_history_league_id_5 Nulls: 7000 / 110938 - 6.31% away_team_history_league_id_6 Nulls: 8426 / 110938 - 7.6% away_team_history_league_id_7 Nulls: 9867 / 110938 - 8.89% away_team_history_league_id_8 Nulls: 11295 / 110938 - 10.18% away_team_history_league_id_9 Nulls: 12762 / 110938 - 11.5% away_team_history_league_id_10 Nulls: 14216 / 110938 - 12.81% total missing values: 1717256 . . Nota: Vemos que el procentaje de valores faltantes es aproximadamente el mismo en función de i . EXPLORACION DATOS ORIGINALES . NOTA: Haremos este análisis antes de reemplazar missing values para evitar distorsionar la estadística del dataset. . Lo primero que me propuse fue investigar los datos originales. En primer lugar, buscaba entender el problema en desde una perspectiva general, asi como la naturaleza de las variables implicadas. Esto fue usado luego a la hora de imputar los valores faltantes. . Los datos correspondientes al historial de partidos, seran tratados en conunto, confeccionando set de datos que agrupen los $10$ partidos. Por ejemplo, al estudiar los goles anotados, miraremos a los goles anotados en los $10$ en conjunto. También, en muchos casos, se fusionarán los datos del local (home) y visitante (away). . Por otro lado, las distribuciones mostradas corresponden a las esperadas para los valores estadísticos extraidos del dataset. . 1) Goles anotados . columns=2 rows=1 Features=[&#39;team_history_goal&#39;,&#39;team_history_opponent_goal&#39;] Type=[&#39;historic&#39;,&#39;historic&#39;] n_bin=[np.arange(0,21+2)-0.5,np.arange(0,18+2)-0.5] Dist=[&#39;Poisson&#39;,&#39;Poisson&#39;] y_label=[&#39;Probabilidad&#39;,&#39;Probabilidad&#39;] x_label=[&#39;Goles&#39;,&#39;Goles oponente&#39;] alignment=[&#39;mid&#39;,&#39;mid&#39;] fffmp.Plot_distributions(FMP,columns,rows,Features,Type,n_bin,Dist,x_label,y_label,alignment) . . Las distribucion de goles anotados por los equipos y sus oponentes se asemejan bastante, como era de esperar. En ambos casos tenemos una media de aproximadamente $1.4 ,goles/partido$. La naturaleza del fenómeno, asi como la semejanza entre el valor de la desviación estándar y la media, sugieren que la cantidad de goles anotados sigue una distribución de Poisson, tal como se puede apreciar en el grafico (allí se usa como parámetro $ lambda= mu$). . Dado que se trata estadísticamente del mismo &quot;fenómeno&quot; podemos juntar ambos conjuntos de datos. Describiéndolos nuevamente con una distribución de Poisson. . Features=[&#39;team_history_goal&#39;,&#39;team_history_opponent_goal&#39;] Type=[&#39;historic&#39;,&#39;historic&#39;] n_bin=np.arange(0,21+2)-0.5 Dist=&#39;Poisson&#39; y_label=&#39;Probabilidad&#39; x_label=&#39;Goles&#39; alignment=&#39;mid&#39; fffmp.Plot_one_distribution(FMP,Features,Type,n_bin,Dist,x_label,y_label,alignment) . . 2) Rating . El rating es una suerte de fortaleza relativa determinada antes de cada partido y calculada por OctoSport. Mirando a la diferencia entre los valores para un equipo y su rival, podemos tener información de quien es el &quot;favorito&quot; a ganar. . Lo que tratamos de hacer es mirar la distribución de valores. . columns=2 rows=1 Features=[&#39;team_history_rating&#39;,&#39;team_history_opponent_rating&#39;] Type=[&#39;historic&#39;,&#39;historic&#39;] n_bin=[120,120] Dist=[&#39;Log-norm&#39;,&#39;Log-norm&#39;] y_label=[&#39;Densidad de Probabilidad&#39;,&#39;Densidad de Probabilidad&#39;] x_label=[&#39;Rating&#39;,&#39;Rating oponente&#39;] alignment=[&#39;mid&#39;,&#39;mid&#39;] fffmp.Plot_distributions(FMP,columns,rows,Features,Type,n_bin,Dist,x_label,y_label,alignment) . . Aquí podemos ver nuevamente que no hay una diferencia entre los equipos y sus oponentes (al menos viendo todo el conjunto). Los equipos tienen un rating medio de 6.45, y como se puede ver la distribución de ratings es asimétrica. No tengo información clara al respecto, pero parecería tomar solo valores mayores a cero. . La naturaleza de la distribución es más dificil de anticipar. uno podría eperar que haya menos casos de equipos &quot;muy buenos&quot;, como se ve. Esto, más el hecho de estar definida en el dominio de los reales positivos, anima a pensar en una distribución log-normal. Sin embargo, si bien dicha distribución tiene algunas similiude con el histograma de los datos, muestra algunas diferencias principalmente en la amplitud. . A cotinuación hacemos un proceso similar para el conjunto completo . Features=[&#39;team_history_rating&#39;,&#39;team_history_opponent_rating&#39;] Type=[&#39;historic&#39;,&#39;historic&#39;] n_bin=120 Dist=&#39;Log-norm&#39; y_label=&#39;Densidad de Probabilidad&#39; x_label=&#39;Rating&#39; alignment=&#39;mid&#39; fffmp.Plot_one_distribution(FMP,Features,Type,n_bin,Dist,x_label,y_label,alignment) . . Dado que el rating se calcula para cada partido en particular, un mismo equipo puede tener distintos ratings dependiendo del rival. Pese a ello, parece lógico pensar que un promedio de los ratings de un equipo nos den una valoración relativamente buena del mismo de forma general. . Miremos los equipos con mayor valor medio para los partidos en el dataset: . Numero_de_equipos=10 fffmp.Best_rating_teams(FMP,Numero_de_equipos) . . Todas las Ligas del Dataset . Rating . Equipo . Myanmar W 45.495250 | . Haiti U21 25.943576 | . Mexico U20 W 25.750481 | . FC Deccan 25.524542 | . Dinamo-BGU W 24.441718 | . Nicaragua U20 21.783200 | . La Massana 20.978900 | . United States U20 20.592331 | . Sundby W 20.587300 | . O. Ljubljana W 19.293962 | . Como vemos, un valor medio de ese rating no tiene sentido al mirar todas las ligas juntas, ya que los equipos enfrentan diferentes rivales. La cosa cambia cuando miramos a una sola liga en particular. . Elegí entonces mirar a la liga Argentina y Española. . Numero_de_equipos=10 league_id=[636,&#39;Superliga_Argentina&#39;] fffmp.Best_rating_teams(FMP,Numero_de_equipos,league_id) . . Liga: Superliga_Argentina . Rating . Equipo . River Plate 8.454110 | . Boca Juniors 7.428697 | . Vélez Sarsfield 6.266595 | . Racing Club 6.148498 | . Independiente 6.011084 | . Lanús 5.871077 | . Defensa y Justicia 5.778136 | . San Lorenzo 5.574948 | . Banfield 5.509771 | . Rosario Central 5.504958 | . Numero_de_equipos=10 league_id=[564,&#39;La Liga Española&#39;] fffmp.Best_rating_teams(FMP,Numero_de_equipos,league_id) . . Liga: La Liga Española . Rating . Equipo . Barcelona 10.424925 | . Real Madrid 9.436574 | . Sevilla 7.614321 | . Atlético Madrid 7.359869 | . Villarreal 7.262762 | . Real Sociedad 6.810394 | . Real Betis 5.990964 | . Celta de Vigo 5.976304 | . Valencia 5.927463 | . Getafe 5.817197 | . Estos resultados parecen ser más consistentes. . 3) Correlacion goles anotados y rating . Uno podría esperar cierta correlacion entre el rating determinado a priori y el número de goles anotados. Un equipo relativamente mejor debería anotar más goles. Eso se puede ver a continuación: . Y_feature=[&#39;team_history_rating&#39;,&#39;team_history_opponent_rating&#39;] X_feature=[&#39;team_history_goal&#39;,&#39;team_history_opponent_goal&#39;] Plot_labels=[&#39;Rating&#39;,&#39;Goles&#39;] fffmp.Correlacion_X_vs_Y_his(FMP,X_feature,Y_feature,Plot_labels) . . Si bien no es muy claro en el grafico, efectivamente hay una correlación. Equipos más &quot;favoritos&quot; tienden a marcar más goles. . 4) Influencia de la local&#237;a . Veamos ahora la influencia de la localía en el resultado. Para analizar esto, nos quedamos con los partidos a modelar, separandolos en tres grupos: General, Liga, Copa. La razón detrás de ello es que los partidos de copa pueden ser a veces en territorio neutral. Por otro lado, los incentivos para ir a por la victoria o el empate pueden ser diferentes en partidos de eliminación. . fffmp.Plot_Outcome_para_copa_y_liga(FMP) . . Aqui podemos observar diferentes cosas (al menos para este dataset): . 1) La localia representa una clara ventaja | 2) Es mucho más probable ver un ganador (away/home) que un empate. | 3) En los partidos de copa se registran menos empates, y la brecha entre el local y el visitante es menor. | . 4) Ventaja de la local&#237;a y goles anotados . Si efectivamente esta ventaja es real, deberíamos ver una distribución distinta para los goles anotados de visitante y de local. Eso es lo que quisimos explorar a continuación: . Features_Team=&#39;team_history_goal&#39; Features_Opponent=&#39;team_history_opponent_goal&#39; Condition=&#39;team_history_is_play_home&#39; n_bin_local=np.arange(0,21+2)-0.5 n_bin_visitante=np.arange(0,15+2)-0.5 n_bin=[n_bin_local,n_bin_visitante] Dist=&#39;Poisson&#39; y_label=&#39;Probabilidad&#39; x_label=&#39;Goles&#39; alignment=&#39;mid&#39; Cond_Labels=[&#39;Local&#39;,&#39;Visitante&#39;] fffmp.Plot_distribution_por_Condicion_team_and_opp(FMP,Features_Team,Features_Opponent,Condition,Cond_Labels,n_bin,Dist,x_label,y_label,alignment) . . ¿Y como se ve el rating en ese sentido? . Features_Team=&#39;team_history_rating&#39; Features_Opponent=&#39;team_history_opponent_rating&#39; Condition=&#39;team_history_is_play_home&#39; n_bin_local=100 n_bin_visitante=120 n_bin=[n_bin_local,n_bin_visitante] Dist=&#39;Log-norm&#39; y_label=&#39;Densidad de Probabilidad&#39; x_label=&#39;Rating&#39; alignment=&#39;left&#39; Cond_Labels=[&#39;Local&#39;,&#39;Visitante&#39;] fffmp.Plot_distribution_por_Condicion_team_and_opp(FMP,Features_Team,Features_Opponent,Condition,Cond_Labels,n_bin,Dist,x_label,y_label,alignment) . . La diferencia entre la distribución de goles anotados en condición de local y visitante refueza la teoría de que la localía tiene un impacto sensible en el resultado. Sin embargo, el hecho de que esa diferencia se vea también en el rating es algo para tomar con pinzas. Si se considera la localía a la hora de calcular el rating, entonces no es llamativo. Sin embargo, de forma contraria, si no se lo considera lo que vimos en la diferencia de goles puede estar relacionado a un imbalance entre la &quot;calidad&quot; de los equipos que jugan de local y visitante en el datset. Dado que el rating se calcula para cada partido, creo que es muy probable que se tenga en cuenta la localía. . 6) Goles anotados por tipo de competici&#243;n . Cómo última pregunta, me pregunté si habría una diferencia entre el número de goles anotados dependiendo del tipo de competición. A priori no lo esperaba, pero valía la pena dar una mirada a ello. . Features_Team=&#39;team_history_goal&#39; Features_Opponent=&#39;team_history_opponent_goal&#39; Condition=&#39;team_history_is_cup&#39; n_bin_copa=np.arange(0,21+2)-0.5 n_bin_liga=np.arange(0,18+2)-0.5 n_bin=[n_bin_copa,n_bin_liga] Dist=&#39;Poisson&#39; y_label=&#39;Probabilidad&#39; x_label=&#39;Goles&#39; alignment=&#39;mid&#39; Cond_Labels=[&#39;Copa&#39;,&#39;Liga&#39;] fffmp.Plot_distribution_por_Condicion_team_and_opp(FMP,Features_Team,Features_Opponent,Condition,Cond_Labels,n_bin,Dist,x_label,y_label,alignment) . . Podemos decir que, en la practica, no afecta a la cantidad de goles el hecho que sea un partido de copa o de liga . 7) Ventana de tiempo del dataset . Para terminar, decidí ver la distribución temporal de los partidos en el dataset. . fffmp.Match_dates_histograms(FMP) . .",
            "url": "https://faegru.github.io/FMP_UB_final_project_2022/2022/06/27/1_Exploracion_Inicial.html",
            "relUrl": "/2022/06/27/1_Exploracion_Inicial.html",
            "date": " • Jun 27, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Soy Iván, físico aficionado a la ciencia de datos . .",
          "url": "https://faegru.github.io/FMP_UB_final_project_2022/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  
  

  
  

  
  

  
      ,"page9": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://faegru.github.io/FMP_UB_final_project_2022/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}